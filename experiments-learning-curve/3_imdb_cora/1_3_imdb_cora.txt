Starting experiment #1 for 3_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.141851064900489;  // std dev = 0.000, 686.000 (wgt'ed) examples reached here.  /* #neg=686 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.12544463852839238;  // std dev = 0.000, 697.000 (wgt'ed) examples reached here.  /* #neg=697 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360658;  // std dev = 0.000, 703.000 (wgt'ed) examples reached here.  /* #neg=703 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783626;  // std dev = 2.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783506;  // std dev = 4.70e-07, 747.000 (wgt'ed) examples reached here.  /* #neg=747 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926201;  // std dev = 0.000, 716.000 (wgt'ed) examples reached here.  /* #neg=716 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4.42e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.08518475138839675;  // std dev = 1.30e-07, 709.000 (wgt'ed) examples reached here.  /* #neg=709 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2.53e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07877675473109273;  // std dev = 0.000, 686.000 (wgt'ed) examples reached here.  /* #neg=686 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2.60e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333654;  // std dev = 2.34e-07, 686.000 (wgt'ed) examples reached here.  /* #neg=686 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1.97e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06842697784420256;  // std dev = 1.85e-07, 704.000 (wgt'ed) examples reached here.  /* #neg=704 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.0641918400820253;  // std dev = 2.52e-07, 702.000 (wgt'ed) examples reached here.  /* #neg=702 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.20059388574491363;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.23e-07, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.17438031568809656;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.32e-07, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.1485700448450331;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.12429081401180372;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.10235108047912814;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.08318410408878014;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.06689217772569281;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.05334052236366052;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.16e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.04225574745094284;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.03330459996060251;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 3.092 seconds
Total inference time: 1.241 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.573724
   AUC PR    = 0.535156
   CLL	      = -0.61528
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147448
   F1        = 0.257002


Total scoring time: 1.73 seconds
Parameter learned model CLL: -0.61528


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.32e-07, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.16e-08, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 78], 'false': [17.221, 866, 451]}]]
[{'': [-1.002047447866808e-15, 0.22517640642285613]}, {'': [6.376665577334232e-16, 0.2251764064228649]}, {'': [1.4119759492668657e-15, 0.22517640642287287]}, {'': [-2.2773805633336544e-17, 0.22517640642288073]}, {'': [-3.8715469576672126e-16, 0.2251764064228737]}, {'': [-1.1386902816668272e-17, 0.2251764064228632]}, {'': [-9.678867394168032e-17, 0.22517640642288225]}, {'': [1.708035422500241e-17, 0.22517640642287906]}, {'': [8.540177112501205e-17, 0.22517640642286432]}, {'': [3.700743415417188e-17, 0.22517640642287404]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22388967584024824;  // std dev = 15.828, 1,080.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=395 */
%   | | | else return 0.07766113022146359;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.08167834686421822;  // std dev = 3.841, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | | | else return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.04569721874664157;  // std dev = 2.126, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.23e-07, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1943936801680273;  // std dev = 15.828, 1,080.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=395 */
%   | | | else return 0.06794204742591953;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.33095332360970464;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.3788520179768205;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.07144194010214808;  // std dev = 3.841, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | | | else return 0.13778665478297905;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.04080142294712515;  // std dev = 2.125, 53.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | | | else return -0.13325481442797937;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.32e-07, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16500730003580533;  // std dev = 15.828, 1,080.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=395 */
%   | | | else return 0.05899660355809804;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.27367588493199535;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.31037521490846526;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.08989646369562124;  // std dev = 3.549, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0.04359709378966929;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11866228559510819;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.03450828357917438;  // std dev = 2.124, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1372246774420016;  // std dev = 15.828, 1,080.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=395 */
%   | | | else return 0.05088671520939661;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21861833752124882;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.24467760512178605;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.05245779230799488;  // std dev = 3.840, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | | | else return 0.10442250598869456;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03128363726041796;  // std dev = 2.123, 53.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | | | else return -0.112801075777444;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11213718961310372;  // std dev = 15.828, 1,080.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=395 */
%   | | | else return 0.04363209330060675;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17030788157668167;  // std dev = 2.219, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.18934443016262306;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.48943804112061345;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07780983331864093;  // std dev = 1.712, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.029783807618405652;  // std dev = 3.848, 88.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=19 */
%   | | | else return -0.03381429544751766;  // std dev = 2.129, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09033121882649982;  // std dev = 15.828, 1,080.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=395 */
%   | | | else return 0.03721809373694246;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12763137113126052;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.14656915920865446;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.059417847228617385;  // std dev = 3.528, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0.021281416479394508;  // std dev = 2.507, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.024540915808597543;  // std dev = 2.124, 53.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | | | else return -0.10049271975619904;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22308271440710462;  // std dev = 2.144, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.2937964648752472;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1023994448969101;  // std dev = 2.874, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.06902008874602522;  // std dev = 15.857, 1,094.000 (wgt'ed) examples reached here.  /* #neg=697 #pos=397 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.3999982055864711;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06015759396850517;  // std dev = 1.705, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.018136858087093203;  // std dev = 3.848, 88.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=19 */
%   | | | else return -0.027129396176114786;  // std dev = 2.128, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.174385744493486;  // std dev = 2.143, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.23670811219837892;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08061366173340447;  // std dev = 2.873, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.05457199476917302;  // std dev = 15.856, 1,094.000 (wgt'ed) examples reached here.  /* #neg=697 #pos=397 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.1658185398591868;  // std dev = 1.691, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.06635082521317777;  // std dev = 0.808, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.08156473278699748;  // std dev = 0.934, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.009459749637630847;  // std dev = 4.289, 130.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.16e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.45067872850959906;  // std dev = 9.630, 527.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=405 */
%   | | | else return -0.28907770027038365;  // std dev = 4.027, 641.000 (wgt'ed) examples reached here.  /* #neg=625 #pos=16 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.12784780368191637;  // std dev = 1.155, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.0032425590876178664;  // std dev = 3.391, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.07370546748389133;  // std dev = 0.489, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.08647794189733653;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.01887852429866399;  // std dev = 2.124, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3463970911263709;  // std dev = 9.622, 526.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=404 */
%   | | | else return -0.24019756798190825;  // std dev = 3.099, 629.000 (wgt'ed) examples reached here.  /* #neg=620 #pos=9 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.10784407059431829;  // std dev = 2.459, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.02451137966650261;  // std dev = 3.331, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.05533311602471914;  // std dev = 0.489, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.017366230760086383;  // std dev = 2.123, 53.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
%   | | | else return -0.08589495818895825;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.85003
   AUC PR    = 0.783922
   CLL	      = -0.44314
   Precision = 0.713287 at threshold = 0.5
   Recall    = 0.831522
   F1        = 0.76788


Total learning time: 778.056 seconds
Total inference time: 2.662 seconds
AUC ROC: 0.85003


Results scoring model
   AUC ROC   = 0.909979
   AUC PR    = 0.849199
   CLL	      = -0.435241
   Precision = 0.804422 at threshold = 0.5
   Recall    = 0.89414
   F1        = 0.846911


Total scoring time: 12.374 seconds
Refined model CLL: -0.435241


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.85003
   AUC PR    = 0.783922
   CLL	      = -0.44314
   Precision = 0.713287 at threshold = 0.5
   Recall    = 0.831522
   F1        = 0.76788


Total learning time: 795.2520000000001 seconds
Total inference time: 2.662 seconds
AUC ROC: 0.85003
Total revision time: 795.2520000000001
Best scored revision CLL: -0.435241


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:20
{'AUC ROC': 0.85003, 'AUC PR': 0.783922, 'CLL': -0.44314, 'Precision': [0.713287, 0.5], 'Recall': 0.831522, 'F1': 0.76788, 'Learning time': 795.2520000000001, 'Inference time': 2.662, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555755, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 3.092, 'Inference time': 1.241}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.09e-06, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.19644599504605173;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.17081158033003138;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.72e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.14562531762868783;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 4.00e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.1219558898642683;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.86e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.10056632954391573;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.08186471459767135;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2.81e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.06594666626281429;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.05268332990850638;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.04181364630513487;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.03301855133762316;  // std dev = 24.213, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=886 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555235
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.485 seconds
Total inference time: 1.114 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.581681
   AUC PR    = 0.548101
   CLL	      = -0.609566
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.163362
   F1        = 0.280844


Total scoring time: 1.98 seconds
Parameter learned model CLL: -0.609566


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.09e-06, 0, 173], 'false': [24.213, 1, 886]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 173], 'false': [24.213, 1, 886]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.72e-07, 0, 173], 'false': [24.213, 1, 886]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4e-07, 0, 173], 'false': [24.213, 1, 886]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 173], 'false': [24.213, 1, 886]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 173], 'false': [24.213, 1, 886]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.81e-07, 0, 173], 'false': [24.213, 1, 886]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 173], 'false': [24.213, 1, 886]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 173], 'false': [24.213, 1, 886]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.66e-08, 0, 173], 'false': [24.213, 1, 886]}]]
[{'': [6.8179245165420015e-15, 0.2238521591780936]}, {'': [-3.121459417212001e-15, 0.22385215917806586]}, {'': [1.8893043841020003e-15, 0.22385215917807164]}, {'': [9.241162748325002e-16, 0.22385215917804765]}, {'': [8.625085231770002e-16, 0.22385215917804757]}, {'': [-2.875028410590001e-16, 0.2238521591780566]}, {'': [4.569241581116251e-16, 0.22385215917805548]}, {'': [-3.2857467549600007e-16, 0.22385215917806128]}, {'': [-2.566989652312501e-16, 0.22385215917807313]}, {'': [5.390678269856251e-17, 0.22385215917806228]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.09e-06, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21779396078843768;  // std dev = 22.205, 2,141.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=770 */
%   | | | else return 0.1207751977257741;  // std dev = 4.379, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4797705567211331;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.39386322081379804;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02208336132901982;  // std dev = 5.008, 183.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=30 */
%   | | | else return 0.17064893509951234;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.011416282291792016;  // std dev = 3.230, 92.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18916174575428568;  // std dev = 22.205, 2,141.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=770 */
%   | | | else return 0.10542811749655413;  // std dev = 4.379, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4108414989934923;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.3388701828709532;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01937384854042741;  // std dev = 5.008, 183.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=30 */
%   | | | else return 0.1485807217799291;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.010032259705423964;  // std dev = 3.230, 92.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.72e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1607228282424062;  // std dev = 22.205, 2,141.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=770 */
%   | | | else return 0.09095044493570228;  // std dev = 4.379, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.33449652251717626;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.2797910362935905;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01696148723418928;  // std dev = 5.008, 183.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=30 */
%   | | | else return 0.12718890828850182;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.008825367568025816;  // std dev = 3.230, 92.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 4.00e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386965237255;  // std dev = 22.205, 2,141.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=770 */
%   | | | else return 0.0776283661814844;  // std dev = 4.379, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2615126990046287;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.22300331322646302;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014822235187830705;  // std dev = 5.008, 183.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=30 */
%   | | | else return 0.10721453219719909;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.007770863374260704;  // std dev = 3.230, 92.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.86e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10961493526447029;  // std dev = 22.205, 2,141.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=770 */
%   | | | else return 0.06563684356287744;  // std dev = 4.379, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1765926948042458;  // std dev = 3.191, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.20769116615048389;  // std dev = 2.341, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012931826106177708;  // std dev = 5.008, 183.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=30 */
%   | | | else return 0.08917032108682044;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.12613484252699678;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.008150608176046724;  // std dev = 3.229, 95.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0885031483758527;  // std dev = 22.205, 2,141.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=770 */
%   | | | else return 0.055047296176182495;  // std dev = 4.379, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13420060888790739;  // std dev = 3.191, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.15655262912759152;  // std dev = 2.340, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011266462595169722;  // std dev = 5.008, 183.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=30 */
%   | | | else return 0.07332294596280331;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005451587444504119;  // std dev = 3.229, 92.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | | else return -0.09066613695207494;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2.81e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07066310493908272;  // std dev = 22.205, 2,141.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=770 */
%   | | | else return 0.0458467925559519;  // std dev = 4.379, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11432426266986959;  // std dev = 2.944, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.0978538586490992;  // std dev = 2.644, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009803317743929174;  // std dev = 5.008, 183.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=30 */
%   | | | else return 0.05972633272667686;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.11082084033762143;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.006144627891834705;  // std dev = 3.228, 95.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.055930306241264646;  // std dev = 22.205, 2,141.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=770 */
%   | | | else return 0.03796163733854239;  // std dev = 4.379, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07542032437709525;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.08936090242252714;  // std dev = 2.338, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08172919229571458;  // std dev = 1.958, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.008688683966975395;  // std dev = 5.039, 201.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03282174286528883;  // std dev = 3.604, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | | else return -0.08199611208167941;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.044065123458536616;  // std dev = 22.139, 2,135.000 (wgt'ed) examples reached here.  /* #neg=1,370 #pos=765 */
%   | | | else return 0.030162144264975786;  // std dev = 4.700, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06507241557103091;  // std dev = 2.943, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.05460201112966848;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07933223065696555;  // std dev = 1.743, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.0066349358810551965;  // std dev = 5.369, 198.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=36 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002938448166841947;  // std dev = 3.228, 92.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | | else return -0.07603402433855698;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03449778046030795;  // std dev = 22.139, 2,135.000 (wgt'ed) examples reached here.  /* #neg=1,370 #pos=765 */
%   | | | else return 0.02429729519106692;  // std dev = 4.701, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.042117638173153074;  // std dev = 3.194, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.05150410501595781;  // std dev = 2.337, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.016607928989432866;  // std dev = 4.500, 146.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=26 */
%   | | | else return -0.03533739295257269;  // std dev = 2.990, 76.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02721736672205883;  // std dev = 3.603, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | | else return -0.07086344539348885;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.678145
   AUC PR    = 0.622894
   CLL	      = -0.544595
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 549.594 seconds
Total inference time: 2.912 seconds
AUC ROC: 0.678145


Results scoring model
   AUC ROC   = 0.637809
   AUC PR    = 0.587372
   CLL	      = -0.595381
   Precision = 0.886555 at threshold = 0.5
   Recall    = 0.199245
   F1        = 0.325366


Total scoring time: 17.35 seconds
Refined model CLL: -0.595381


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678145
   AUC PR    = 0.622894
   CLL	      = -0.544595
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 573.4090000000001 seconds
Total inference time: 2.912 seconds
AUC ROC: 0.678145
Total revision time: 573.4090000000001
Best scored revision CLL: -0.595381


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:22:58
{'AUC ROC': 0.678145, 'AUC PR': 0.622894, 'CLL': -0.544595, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 573.4090000000001, 'Inference time': 2.912, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555235, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.485, 'Inference time': 1.114}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.19741195924181976;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.17164281291868094;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.30e-07, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.1463115746319423;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831097;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.12250051850097632;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 1.79e-07, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.10098312458154922;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948795;  // std dev = 3.21e-07, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.08217327653030916;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.89e-07, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.06616815488421042;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.052837564983537914;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.04191762238831185;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801112;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else return 0.033085997096762576;  // std dev = 29.700, 3,935.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,335 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555351
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 6.151 seconds
Total inference time: 1.13 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.579924
   AUC PR    = 0.545315
   CLL	      = -0.610859
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159849
   F1        = 0.275638


Total scoring time: 2.405 seconds
Parameter learned model CLL: -0.610859


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 254], 'false': [29.7, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 254], 'false': [29.7, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.3e-07, 0, 254], 'false': [29.7, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 254], 'false': [29.7, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.79e-07, 0, 254], 'false': [29.7, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.21e-07, 0, 254], 'false': [29.7, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 254], 'false': [29.7, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 254], 'false': [29.7, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 254], 'false': [29.7, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 254], 'false': [29.7, 2, 1]}]]
[{'': [4.587756246640017e-15, 0.22416362459213485]}, {'': [-4.363963258999041e-15, 0.22416362459214387]}, {'': [7.273272098331734e-16, 0.2241636245920929]}, {'': [-3.3568948146146465e-16, 0.22416362459208916]}, {'': [1.2588355554804924e-16, 0.22416362459215355]}, {'': [4.056247900992698e-16, 0.22416362459213368]}, {'': [3.2869595059768415e-16, 0.22416362459214495]}, {'': [-1.3987061727561027e-17, 0.22416362459212388]}, {'': [-1.6784474073073233e-16, 0.22416362459213682]}, {'': [-1.3987061727561027e-17, 0.2241636245921448]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21631601739377154;  // std dev = 27.156, 3,208.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,149 */
%   | | | else return 0.1514822684328453;  // std dev = 5.576, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3914822684328445;  // std dev = 3.864, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | | | else return 0.5052077586289233;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.038421043943049696;  // std dev = 6.591, 294.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02821696231039621;  // std dev = 4.555, 147.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18789270946197745;  // std dev = 27.156, 3,208.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,149 */
%   | | | else return 0.1320239502982344;  // std dev = 5.576, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.33686537905126696;  // std dev = 3.864, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | | | else return 0.4320160447055319;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1764295502114536;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.03367941186748546;  // std dev = 6.591, 294.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0247472963008577;  // std dev = 4.555, 147.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=25 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.30e-07, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15968225997746155;  // std dev = 27.156, 3,208.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,149 */
%   | | | else return 0.11335492500707697;  // std dev = 5.576, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.27824435389960744;  // std dev = 3.864, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | | | else return 0.3502991783942836;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.15025909497878384;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.029415660546735715;  // std dev = 6.591, 294.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021646559343451686;  // std dev = 4.555, 147.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=25 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831097;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1330530878704113;  // std dev = 27.156, 3,208.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,149 */
%   | | | else return 0.09601483857223024;  // std dev = 5.576, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.40697479538032155;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23276683508882426;  // std dev = 4.685, 90.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12562764670518756;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.025608726500762433;  // std dev = 6.591, 294.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01888972265478937;  // std dev = 4.555, 147.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=25 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 1.79e-07, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10899933823183801;  // std dev = 27.156, 3,208.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,149 */
%   | | | else return 0.08036483536301063;  // std dev = 5.576, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.31088744477061736;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17940062768223172;  // std dev = 4.684, 90.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10337042176767383;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.02223088672054869;  // std dev = 6.591, 294.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016449723797227218;  // std dev = 4.555, 147.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=25 */
%   | | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948795;  // std dev = 3.21e-07, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08815827197058573;  // std dev = 27.128, 3,205.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,146 */
%   | | | else return 0.06485259550041109;  // std dev = 5.711, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3078375606296768;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.132976305134446;  // std dev = 4.675, 90.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01753724336010344;  // std dev = 6.444, 275.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=52 */
%   | | | else return 0.06814477306694174;  // std dev = 2.912, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.014298727689491282;  // std dev = 4.555, 147.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=25 */
%   | | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.89e-07, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07046077041890199;  // std dev = 27.128, 3,205.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,146 */
%   | | | else return 0.05277645098066367;  // std dev = 5.712, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09037545670457672;  // std dev = 3.863, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | | | else return 0.1332157385583474;  // std dev = 2.765, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08053962538597467;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.015718100550673346;  // std dev = 6.589, 294.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.012409101629782463;  // std dev = 4.555, 147.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=25 */
%   | | | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05582807755085648;  // std dev = 27.128, 3,205.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,146 */
%   | | | else return 0.042661649284631495;  // std dev = 5.712, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.16356669997244538;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07588575131697387;  // std dev = 4.680, 90.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.24930287593886188;  // std dev = 1.262, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -8.828909595025719E-4;  // std dev = 2.190, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005738842155753935;  // std dev = 6.630, 303.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=54 */
%   | | | else return 0.022300091226657288;  // std dev = 4.485, 136.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=25 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2549802378164183;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | | else return -0.10637456123895499;  // std dev = 2.816, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05942574005810886;  // std dev = 5.020, 108.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=41 */
%   | | | else return 0.04277694211438835;  // std dev = 27.278, 3,250.000 (wgt'ed) examples reached here.  /* #neg=2,081 #pos=1,169 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.009047290175742108;  // std dev = 6.431, 275.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=52 */
%   | | | else return 0.055659303629910444;  // std dev = 2.912, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.009295495756073597;  // std dev = 4.551, 147.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=25 */
%   | | | else return -0.07453013316573091;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801112;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #pos=254 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03433768382947382;  // std dev = 27.133, 3,208.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,149 */
%   | | | else return 0.025513898615979365;  // std dev = 5.577, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.038719251179053664;  // std dev = 3.862, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | | | else return 0.06958929457846871;  // std dev = 2.763, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.026314312538771117;  // std dev = 5.862, 215.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=43 */
%   | | | else return -0.011603388973342023;  // std dev = 3.929, 108.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=20 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008037582609622373;  // std dev = 4.551, 147.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=25 */
%   | | | else return -0.0695496489460175;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.678114
   AUC PR    = 0.621145
   CLL	      = -0.545795
   Precision = 0.878261 at threshold = 0.5
   Recall    = 0.274457
   F1        = 0.418219


Total learning time: 805.497 seconds
Total inference time: 2.326 seconds
AUC ROC: 0.678114


Results scoring model
   AUC ROC   = 0.637283
   AUC PR    = 0.58876
   CLL	      = -0.598393
   Precision = 0.952218 at threshold = 0.5
   Recall    = 0.175582
   F1        = 0.296493


Total scoring time: 20.438 seconds
Refined model CLL: -0.598393


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678114
   AUC PR    = 0.621145
   CLL	      = -0.545795
   Precision = 0.878261 at threshold = 0.5
   Recall    = 0.274457
   F1        = 0.418219


Total learning time: 834.491 seconds
Total inference time: 2.326 seconds
AUC ROC: 0.678114
Total revision time: 834.491
Best scored revision CLL: -0.598393


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:36:57
{'AUC ROC': 0.678114, 'AUC PR': 0.621145, 'CLL': -0.545795, 'Precision': [0.878261, 0.5], 'Recall': 0.274457, 'F1': 0.418219, 'Learning time': 834.491, 'Inference time': 2.326, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555351, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 6.151, 'Inference time': 1.13}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.20014931467817484;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.17399789489242137;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.14825468948838594;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.1240410222767253;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.10216041158981197;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.08304338697104172;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.06679152951615772;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.05327071666507184;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.042208904583552406;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.033274381610710606;  // std dev = 34.434, 5,269.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,802 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555696
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 8.025 seconds
Total inference time: 1.162 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.574799
   AUC PR    = 0.537026
   CLL	      = -0.614573
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149599
   F1        = 0.260263


Total scoring time: 2.405 seconds
Parameter learned model CLL: -0.614573


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 317], 'false': [34.434, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [34.434, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [34.434, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [34.434, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [34.434, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 317], 'false': [34.434, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 317], 'false': [34.434, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 317], 'false': [34.434, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [34.434, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [34.434, 3, 1]}]]
[{'': [3.4070187960736666e-15, 0.22503611994665776]}, {'': [-5.0208698047401405e-15, 0.2250361199467259]}, {'': [-3.5863355748143857e-16, 0.2250361199466586]}, {'': [-8.965838937035964e-16, 0.22503611994672362]}, {'': [-4.707065441943882e-16, 0.22503611994672634]}, {'': [4.482919468517982e-16, 0.225036119946751]}, {'': [1.961277267476617e-16, 0.2250361199467354]}, {'': [2.1854232409025163e-16, 0.22503611994674835]}, {'': [-2.2134414875807538e-16, 0.2250361199467079]}, {'': [-1.8492042807636678e-16, 0.2250361199467433]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2174842685866985;  // std dev = 31.583, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,776 #pos=1,557 */
%   | | | else return 0.15814893509951364;  // std dev = 6.481, 200.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.39981560176618003;  // std dev = 5.458, 120.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.20814893509951235;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.04431914786547033;  // std dev = 7.548, 376.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=70 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03847680395197044;  // std dev = 5.201, 183.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=33 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18905444595641138;  // std dev = 31.571, 4,330.000 (wgt'ed) examples reached here.  /* #neg=2,774 #pos=1,556 */
%   | | | else return 0.1351590045171385;  // std dev = 6.536, 203.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3393231025311459;  // std dev = 4.400, 78.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=42 */
%   | | | else return 0.36666660062322265;  // std dev = 3.358, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.18087637556697483;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.05293897461691552;  // std dev = 1.345, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.030418023871234736;  // std dev = 7.368, 372.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=66 */
%   | | | else return 0.05052673839056479;  // std dev = 5.295, 178.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=35 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.160656259486679;  // std dev = 31.571, 4,330.000 (wgt'ed) examples reached here.  /* #neg=2,774 #pos=1,556 */
%   | | | else return 0.11565717749185526;  // std dev = 6.537, 203.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.27971056968520047;  // std dev = 4.400, 78.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=42 */
%   | | | else return 0.30189598701802933;  // std dev = 3.357, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1539196322132755;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.033925059847651415;  // std dev = 7.545, 376.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=70 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.030729678024005492;  // std dev = 5.200, 183.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=33 */
%   | | | else return -0.12847603883687553;  // std dev = 0.017, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13394324359491472;  // std dev = 31.580, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,776 #pos=1,557 */
%   | | | else return 0.0947455864461564;  // std dev = 6.490, 200.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.47217233464303243;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21858947013734262;  // std dev = 5.436, 119.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=64 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.128518735713897;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.04809311841415462;  // std dev = 1.343, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02235396538188322;  // std dev = 7.368, 372.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=66 */
%   | | | else return 0.04067898500951395;  // std dev = 5.289, 178.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=35 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10970337861492774;  // std dev = 31.579, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,776 #pos=1,557 */
%   | | | else return 0.07886475511679004;  // std dev = 6.490, 200.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3614369690691383;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16935222564173563;  // std dev = 5.435, 119.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=64 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11384046018073787;  // std dev = 2.776, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.06662879304755528;  // std dev = 1.352, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04876081921015445;  // std dev = 3.153, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.021889052308570127;  // std dev = 8.577, 497.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=90 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08869874413136501;  // std dev = 31.568, 4,330.000 (wgt'ed) examples reached here.  /* #neg=2,774 #pos=1,556 */
%   | | | else return 0.0631527438664639;  // std dev = 6.546, 203.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.27164534432588916;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.12915903570864382;  // std dev = 5.435, 119.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=64 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.023802989762386192;  // std dev = 7.477, 358.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=71 */
%   | | | else return 0.061789852361094896;  // std dev = 3.179, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.02106799509984909;  // std dev = 5.199, 183.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=33 */
%   | | | else return -0.11845070834566426;  // std dev = 0.026, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07083889661665582;  // std dev = 31.567, 4,330.000 (wgt'ed) examples reached here.  /* #neg=2,774 #pos=1,556 */
%   | | | else return 0.0515412863967824;  // std dev = 6.546, 203.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.22506424810068318;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09785742440386086;  // std dev = 5.442, 120.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.22628376327207542;  // std dev = 1.508, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.006258037590840504;  // std dev = 2.675, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03766671607733825;  // std dev = 3.148, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.015451638048574072;  // std dev = 8.573, 497.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=90 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05613454673282466;  // std dev = 31.577, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,776 #pos=1,557 */
%   | | | else return 0.04046637025712462;  // std dev = 6.497, 200.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.170453909698046;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0736571054399753;  // std dev = 5.442, 120.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.030749319265187265;  // std dev = 6.784, 283.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=58 */
%   | | | else return 0.003510345645521077;  // std dev = 4.452, 133.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015093089005141882;  // std dev = 5.198, 183.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=33 */
%   | | | else return -0.10843885990454781;  // std dev = 0.021, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04414658443718617;  // std dev = 31.577, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,776 #pos=1,557 */
%   | | | else return 0.032621901761053805;  // std dev = 6.498, 200.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15521898418622876;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05365565601908064;  // std dev = 5.434, 119.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=64 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013704217836529201;  // std dev = 7.464, 358.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=71 */
%   | | | else return 0.05051173046612685;  // std dev = 3.178, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.013001613591440206;  // std dev = 5.198, 183.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=33 */
%   | | | else return -0.09839482076812935;  // std dev = 0.020, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034584223793826266;  // std dev = 31.566, 4,330.000 (wgt'ed) examples reached here.  /* #neg=2,774 #pos=1,556 */
%   | | | else return 0.025405727904665977;  // std dev = 6.551, 203.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.12075922215062082;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04026273413151379;  // std dev = 5.434, 119.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=64 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.2841557964852181;  // std dev = 1.423, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0061363247500874135;  // std dev = 2.909, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004042477835787454;  // std dev = 7.356, 372.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=66 */
%   | | | else return 0.023044842309550614;  // std dev = 5.270, 178.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=35 */


Results
   AUC ROC   = 0.678171
   AUC PR    = 0.622734
   CLL	      = -0.544923
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1058.369 seconds
Total inference time: 2.63 seconds
AUC ROC: 0.678171


Results scoring model
   AUC ROC   = 0.622198
   AUC PR    = 0.569985
   CLL	      = -0.604474
   Precision = 0.873016 at threshold = 0.5
   Recall    = 0.181689
   F1        = 0.300781


Total scoring time: 35.962 seconds
Refined model CLL: -0.604474


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678171
   AUC PR    = 0.622734
   CLL	      = -0.544923
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1104.761 seconds
Total inference time: 2.63 seconds
AUC ROC: 0.678171
Total revision time: 1104.761
Best scored revision CLL: -0.604474


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:55:26
{'AUC ROC': 0.678171, 'AUC PR': 0.622734, 'CLL': -0.544923, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1104.761, 'Inference time': 2.63, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555696, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 8.025, 'Inference time': 1.162}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 10.494 seconds
Total inference time: 1.146 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 2.563 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.46529179224236833;  // std dev = 3.655, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027532;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.13188754443331555;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.36835820981240885;  // std dev = 4.790, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4039091967828142;  // std dev = 3.657, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04368829719016257;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690137;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1605192001234706;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.11289879459957758;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5851523863201784;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2991351048345855;  // std dev = 5.912, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13750710216629658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0778676402742305;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05269459002265982;  // std dev = 3.529, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.030722231617226342;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359515;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.09262066068403077;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5029310963355803;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.23347616558266707;  // std dev = 5.900, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11690579829576977;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02855972137839385;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02642287557000348;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11362258592065524;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10964998699963206;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.07715451667816071;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.382154401870546;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.17934515718954783;  // std dev = 5.899, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09946177550991535;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02472350304508822;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07367640983563097;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.025386749738102152;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809333;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.0614077426388994;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3208179471808185;  // std dev = 0.897, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13421155013760921;  // std dev = 5.894, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1106353375486815;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07586808699688263;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02521642320827635;  // std dev = 3.499, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.019793112281181406;  // std dev = 9.640, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367405;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.05017947789451447;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09389634153089885;  // std dev = 4.739, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1307202647881698;  // std dev = 3.629, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07968719556523467;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01780699822429803;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10098766266956775;  // std dev = 0.949, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.018304870808730188;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05614201621630097;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.039471451616439036;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06572839271550225;  // std dev = 4.734, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.106349258133581;  // std dev = 3.632, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.030821708911744395;  // std dev = 7.623, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -5.556626650262277E-4;  // std dev = 5.006, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.12462319645091996;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0180467023664006;  // std dev = 5.841, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04415728299393082;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03185889646502929;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04846730180385078;  // std dev = 4.733, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.08149761620352226;  // std dev = 3.633, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09265841382123757;  // std dev = 3.335, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06812846543555841;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010345380608096488;  // std dev = 8.466, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.01440804094495321;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034601599067735245;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.02464033529771525;  // std dev = 7.480, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.19162235805483974;  // std dev = 0.896, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.038606648835451673;  // std dev = 5.888, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07753876797929081;  // std dev = 3.333, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06017893708944705;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008830787571528942;  // std dev = 8.466, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.012382013879770002;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */


Results
   AUC ROC   = 0.677993
   AUC PR    = 0.622347
   CLL	      = -0.546137
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1543.332 seconds
Total inference time: 2.433 seconds
AUC ROC: 0.677993


Results scoring model
   AUC ROC   = 0.625252
   AUC PR    = 0.573673
   CLL	      = -0.603273
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 37.341 seconds
Refined model CLL: -0.603273


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677993
   AUC PR    = 0.622347
   CLL	      = -0.546137
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1593.73 seconds
Total inference time: 2.433 seconds
AUC ROC: 0.677993
Total revision time: 1593.73
Best scored revision CLL: -0.603273


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 01:22:04
{'AUC ROC': 0.677993, 'AUC PR': 0.622347, 'CLL': -0.546137, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1593.73, 'Inference time': 2.433, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 10.494, 'Inference time': 1.146}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.15231297295439702;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.13274223829111725;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.26e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.11395690630434883;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.09650464164308689;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.08075257606553808;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.06688344853400136;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.05492340352781447;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.04478443442558101;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.036307535212635196;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.029298638587716263;  // std dev = 16.226, 1,268.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=373 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.804456
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 3.293 seconds
Total inference time: 1.22 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.584633
   AUC PR    = 0.514603
   CLL	      = -0.58006
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169265
   F1        = 0.289524


Total scoring time: 1.546 seconds
Parameter learned model CLL: -0.58006


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [16.226, 895, 373]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 76], 'false': [16.226, 895, 373]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 76], 'false': [16.226, 895, 373]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [16.226, 895, 373]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [16.226, 895, 373]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [16.226, 895, 373]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [16.226, 895, 373]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 76], 'false': [16.226, 895, 373]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 76], 'false': [16.226, 895, 373]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 76], 'false': [16.226, 895, 373]}]]
[{'': [-1.3088945132422897e-15, 0.20763155668777833]}, {'': [5.609547913895527e-16, 0.20763155668777702]}, {'': [1.402386978473882e-15, 0.20763155668779]}, {'': [-9.349246523159212e-17, 0.20763155668779182]}, {'': [-3.8565641908031755e-16, 0.2076315566878024]}, {'': [-1.1686558153949016e-17, 0.20763155668780114]}, {'': [-9.933574430856664e-17, 0.20763155668779254]}, {'': [1.1686558153949016e-17, 0.20763155668779826]}, {'': [7.596262800066861e-17, 0.20763155668778926]}, {'': [3.7981314000334304e-17, 0.20763155668780342]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17232138306779296;  // std dev = 14.745, 1,009.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=317 */
%   | | | else return 0.0826387310178797;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.5052077586289241;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.025346210531555634;  // std dev = 3.256, 103.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=12 */
%   | | | else return 0.05814893509951237;  // std dev = 3.098, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15002383232292202;  // std dev = 14.745, 1,009.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=317 */
%   | | | else return 0.07227843473319008;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.43201604470553195;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.11418623766746651;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3087411357856348;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.1432476935670361;  // std dev = 1.693, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.008361658801597383;  // std dev = 4.153, 149.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.26e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12839053638649894;  // std dev = 14.745, 1,009.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=317 */
%   | | | else return 0.06271516941561257;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.38452478462505246;  // std dev = 1.675, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.1358764534127708;  // std dev = 1.803, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.030701699064538273;  // std dev = 3.496, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | | else return 0.11722051653319922;  // std dev = 2.534, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.039560327287308295;  // std dev = 2.331, 60.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | | | else return -0.1798761233236014;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10818176372508065;  // std dev = 14.745, 1,009.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=317 */
%   | | | else return 0.05402937165676877;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3011399784730834;  // std dev = 1.941, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.051209278360304665;  // std dev = 1.447, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.2309207723273932;  // std dev = 1.835, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.021265154586829923;  // std dev = 3.846, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.03488416172828572;  // std dev = 2.330, 60.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | | | else return -0.15515636378003886;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0899248281253439;  // std dev = 14.745, 1,009.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=317 */
%   | | | else return 0.04625285248734699;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2724508811301746;  // std dev = 1.634, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.056106599591443436;  // std dev = 1.759, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.18783427735343755;  // std dev = 1.823, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.018508376299984138;  // std dev = 3.846, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.030870992180122445;  // std dev = 2.330, 60.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | | | else return -0.13610117499680782;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.07367665236040052;  // std dev = 14.746, 1,010.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=317 */
%   | | | else return 0.05693006430313649;  // std dev = 4.266, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.06801132053141175;  // std dev = 3.271, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return -0.09471797810063583;  // std dev = 1.311, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.02303783896105233;  // std dev = 2.428, 57.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=7 */
%   | | | else return 0.05680887667179302;  // std dev = 1.161, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.17312413302994328;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.634601285882594;  // std dev = 0.943, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.2539830091878787;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.13799577900594642;  // std dev = 1.029, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04279413414516988;  // std dev = 2.680, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.05705468043915478;  // std dev = 0.461, 1,047.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=326 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.05974355750145783;  // std dev = 1.775, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.01212480843807931;  // std dev = 4.139, 149.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4834719825196351;  // std dev = 8.913, 427.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=319 */
%   | | | else return -0.23374465586042734;  // std dev = 3.895, 675.000 (wgt'ed) examples reached here.  /* #neg=660 #pos=15 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.09772562253913653;  // std dev = 3.919, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return -0.08279683508422646;  // std dev = 1.314, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.021025384782868792;  // std dev = 2.428, 57.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=7 */
%   | | | else return 0.052823436457035765;  // std dev = 1.148, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.1558967694050753;  // std dev = 0.128, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.38070539001418835;  // std dev = 8.905, 427.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=319 */
%   | | | else return -0.1920267194248776;  // std dev = 3.876, 675.000 (wgt'ed) examples reached here.  /* #neg=660 #pos=15 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.07989739330566477;  // std dev = 3.910, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return -0.06871891137228876;  // std dev = 1.310, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.018524647999246212;  // std dev = 2.428, 57.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=7 */
%   | | | else return 0.04625668224848737;  // std dev = 1.145, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.13677146678860613;  // std dev = 0.114, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.33065263922345667;  // std dev = 0.661, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.04804117699205293;  // std dev = 1.954, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.10266220043576152;  // std dev = 0.783, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11225173247891207;  // std dev = 0.751, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.015256421786866908;  // std dev = 0.375, 1,047.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=326 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.038572242193820515;  // std dev = 1.701, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.020335982956006676;  // std dev = 3.846, 149.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=20 */


Results
   AUC ROC   = 0.775784
   AUC PR    = 0.811207
   CLL	      = -0.589199
   Precision = 0.95935 at threshold = 0.5
   Recall    = 0.153048
   F1        = 0.263982


Total learning time: 645.435 seconds
Total inference time: 4.344 seconds
AUC ROC: 0.775784


Results scoring model
   AUC ROC   = 0.917851
   AUC PR    = 0.855167
   CLL	      = -0.414682
   Precision = 0.989474 at threshold = 0.5
   Recall    = 0.209354
   F1        = 0.345588


Total scoring time: 13.499 seconds
Refined model CLL: -0.414682


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.775784
   AUC PR    = 0.811207
   CLL	      = -0.589199
   Precision = 0.95935 at threshold = 0.5
   Recall    = 0.153048
   F1        = 0.263982


Total learning time: 663.773 seconds
Total inference time: 4.344 seconds
AUC ROC: 0.775784
Total revision time: 663.773
Best scored revision CLL: -0.414682


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:33:14
{'AUC ROC': 0.775784, 'AUC PR': 0.811207, 'CLL': -0.589199, 'Precision': [0.95935, 0.5], 'Recall': 0.153048, 'F1': 0.263982, 'Learning time': 663.773, 'Inference time': 4.344, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.804456, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 3.293, 'Inference time': 1.22}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.46e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.15191865118783532;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.1324012866863967;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.33e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.11367118278662218;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.62e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.09627218995428077;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.89e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.08056859137793979;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.06674147575581356;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.49e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.05481642245303642;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.04470565304452481;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.03625086320352778;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.99e-08, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.02925889852629707;  // std dev = 22.938, 2,536.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=745 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.804937
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.544 seconds
Total inference time: 1.208 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.585189
   AUC PR    = 0.515423
   CLL	      = -0.579564
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170379
   F1        = 0.291151


Total scoring time: 2.013 seconds
Parameter learned model CLL: -0.579564


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.46e-07, 0, 153], 'false': [22.938, 1, 745]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 153], 'false': [22.938, 1, 745]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.33e-07, 0, 153], 'false': [22.938, 1, 745]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.62e-07, 0, 153], 'false': [22.938, 1, 745]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 153], 'false': [22.938, 1, 745]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 153], 'false': [22.938, 1, 745]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 153], 'false': [22.938, 1, 745]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 153], 'false': [22.938, 1, 745]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 153], 'false': [22.938, 1, 745]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.99e-08, 0, 153], 'false': [22.938, 1, 745]}]]
[{'': [5.851528412142001e-15, 0.20746906999773612]}, {'': [-2.507797890918001e-15, 0.20746906999770587]}, {'': [1.8576280673466673e-15, 0.20746906999772877]}, {'': [1.3932210505100003e-15, 0.2074690699976989]}, {'': [5.456782447830835e-16, 0.20746906999770973]}, {'': [-1.8576280673466672e-16, 0.20746906999770967]}, {'': [4.0635613973208343e-16, 0.207469069997706]}, {'': [-3.0766964865429174e-16, 0.20746906999771042]}, {'': [-3.773307011797918e-17, 0.2074690699977201]}, {'': [3.192798240752084e-17, 0.20746906999771958]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.46e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1732854115263063;  // std dev = 20.854, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=635 */
%   | | | else return 0.09814893509951172;  // std dev = 4.271, 100.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.5248156017661783;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | | else return 0.221785298735876;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06403128804068885;  // std dev = 2.358, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.00807180068644147;  // std dev = 5.886, 299.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=40 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15085554953947777;  // std dev = 20.854, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=635 */
%   | | | else return 0.08577634002911495;  // std dev = 4.271, 100.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.800557974752785;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.30055797475278523;  // std dev = 3.485, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.21629702856625074;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.015077669043279868;  // std dev = 4.850, 213.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=27 */
%   | | | else return 0.024974520953650957;  // std dev = 4.084, 120.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.33e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12908277451048808;  // std dev = 20.854, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=635 */
%   | | | else return 0.07425307474542268;  // std dev = 4.271, 100.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3827471206042311;  // std dev = 2.673, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | | else return 0.13688011087865934;  // std dev = 2.205, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1828470621062258;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05631076322695277;  // std dev = 2.361, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.007050550298021766;  // std dev = 5.883, 299.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=40 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.62e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10873856355624893;  // std dev = 20.854, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=635 */
%   | | | else return 0.06372938352050798;  // std dev = 4.271, 100.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.29947720922337223;  // std dev = 2.670, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | | else return 0.11210463407767636;  // std dev = 2.202, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15107136695343662;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.013283045171386024;  // std dev = 4.845, 213.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=27 */
%   | | | else return 0.022015015572707342;  // std dev = 4.086, 120.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.89e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09035873944088532;  // std dev = 20.854, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=635 */
%   | | | else return 0.0542842559074632;  // std dev = 4.271, 100.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.38520110534842783;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1469936421927515;  // std dev = 3.333, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12242805103141116;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.006592192936758279;  // std dev = 5.202, 213.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01339586573458783;  // std dev = 3.625, 123.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=15 */
%   | | | else return -0.12302465287919151;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20184816923265786;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return -0.11807434903730098;  // std dev = 1.077, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07503269568885071;  // std dev = 3.599, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.0723660345899897;  // std dev = 20.927, 2,043.000 (wgt'ed) examples reached here.  /* #neg=1,401 #pos=642 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.09769187383593811;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.005779952975939653;  // std dev = 5.202, 213.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=32 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.011836651806694545;  // std dev = 3.625, 123.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=15 */
%   | | | else return -0.11042880400012245;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.49e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16238066291610992;  // std dev = 3.468, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return -0.09664018405586147;  // std dev = 1.080, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06066761459436539;  // std dev = 3.597, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.05890527541002214;  // std dev = 20.927, 2,043.000 (wgt'ed) examples reached here.  /* #neg=1,401 #pos=642 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.15467802635561148;  // std dev = 2.240, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.09855774625323094;  // std dev = 0.982, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.014808821150713775;  // std dev = 4.794, 210.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=28 */
%   | | | else return 0.011745373149824228;  // std dev = 4.019, 118.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048636680018791664;  // std dev = 20.838, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=635 */
%   | | | else return 0.024156581348019016;  // std dev = 4.273, 100.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15402025747433512;  // std dev = 2.566, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | | else return 0.028554440634142753;  // std dev = 2.264, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13258175931413838;  // std dev = 2.234, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.0848971540563138;  // std dev = 0.981, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01298359211530983;  // std dev = 4.795, 210.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=28 */
%   | | | else return 0.010261341314007412;  // std dev = 4.019, 118.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.04935184035459979;  // std dev = 3.607, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.3841732036034259;  // std dev = 0.172, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.03797317127413515;  // std dev = 0.463, 2,105.000 (wgt'ed) examples reached here.  /* #neg=1,442 #pos=663 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11190808463495307;  // std dev = 2.228, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.07382458826086367;  // std dev = 0.979, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.011398520201727588;  // std dev = 4.795, 210.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=28 */
%   | | | else return 0.008954966140155576;  // std dev = 4.019, 118.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.99e-08, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03130427089300465;  // std dev = 20.837, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=635 */
%   | | | else return 0.013434005096471182;  // std dev = 4.274, 100.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11176357624924721;  // std dev = 2.633, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | | else return -0.01774283999380309;  // std dev = 2.110, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07601856020881664;  // std dev = 2.295, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -2.1462145850552683E-5;  // std dev = 5.171, 213.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005832275709097924;  // std dev = 3.624, 123.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=15 */
%   | | | else return -0.10290194595534986;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.583507
   AUC PR    = 0.715391
   CLL	      = -0.789361
   Precision = 0.959016 at threshold = 0.5
   Recall    = 0.151751
   F1        = 0.262038


Total learning time: 428.769 seconds
Total inference time: 3.06 seconds
AUC ROC: 0.583507


Results scoring model
   AUC ROC   = 0.647978
   AUC PR    = 0.563659
   CLL	      = -0.563361
   Precision = 0.941489 at threshold = 0.5
   Recall    = 0.197105
   F1        = 0.325967


Total scoring time: 11.491 seconds
Refined model CLL: -0.563361


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.583507
   AUC PR    = 0.715391
   CLL	      = -0.789361
   Precision = 0.959016 at threshold = 0.5
   Recall    = 0.151751
   F1        = 0.262038


Total learning time: 446.817 seconds
Total inference time: 3.06 seconds
AUC ROC: 0.583507
Total revision time: 446.817
Best scored revision CLL: -0.563361


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:40:46
{'AUC ROC': 0.583507, 'AUC PR': 0.715391, 'CLL': -0.789361, 'Precision': [0.959016, 0.5], 'Recall': 0.151751, 'F1': 0.262038, 'Learning time': 446.817, 'Inference time': 3.06, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.804937, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.544, 'Inference time': 1.208}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.07e-06, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.1526065132450286;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.13299603960912315;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.72e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.11416957228527173;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.0966776245129794;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014955;  // std dev = 3.37e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.08088945616044714;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.06698903892571187;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.05500293900364193;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527758;  // std dev = 5.16e-08, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.044842978785976866;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.03634962782545211;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 1.46e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else return 0.029328137044341757;  // std dev = 28.123, 3,807.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,121 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.804098
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 6.216 seconds
Total inference time: 1.262 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.58389
   AUC PR    = 0.513282
   CLL	      = -0.580549
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16778
   F1        = 0.287349


Total scoring time: 2.265 seconds
Parameter learned model CLL: -0.580549


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 226], 'false': [28.123, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 226], 'false': [28.123, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.72e-07, 0, 226], 'false': [28.123, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 226], 'false': [28.123, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 226], 'false': [28.123, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 226], 'false': [28.123, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 226], 'false': [28.123, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 226], 'false': [28.123, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 226], 'false': [28.123, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 226], 'false': [28.123, 2, 1]}]]
[{'': [5.030391049629028e-15, 0.20775231281822154]}, {'': [-4.087192727823585e-15, 0.2077523128182133]}, {'': [1.4462374267683456e-15, 0.20775231281818018]}, {'': [-3.1439944060181424e-17, 0.20775231281817885]}, {'': [5.030391049629028e-16, 0.20775231281818018]}, {'': [3.5369937067704103e-16, 0.20775231281818773]}, {'': [4.0085928676731314e-16, 0.2077523128181865]}, {'': [1.1789979022568034e-17, 0.20775231281822507]}, {'': [-1.5326972729338443e-16, 0.20775231281820206]}, {'': [9.431983218054427e-17, 0.20775231281815726]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.07e-06, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17460463130203888;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.09029179224236827;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4322230091735853;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.29404637099694825;  // std dev = 3.097, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.221785298735876;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.004937925925200161;  // std dev = 6.400, 327.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=48 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005487428536851644;  // std dev = 4.553, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15199356984045023;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.07894129075367202;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3710948296250062;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.25435819639990415;  // std dev = 3.097, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1925878911553829;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.1380834813310026;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04280245631033402;  // std dev = 2.854, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | | else return -0.0018338087855257045;  // std dev = 7.301, 443.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=62 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.72e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13002958834477843;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.06841752877579263;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.44469146634749096;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2517968729205441;  // std dev = 4.616, 86.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1635295340842941;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.12246031330609561;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004324387760143128;  // std dev = 6.156, 319.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=44 */
%   | | | else return 0.015115965889257357;  // std dev = 4.856, 178.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10949964946030805;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.05883307359919907;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2509946813405974;  // std dev = 3.697, 55.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   | | | else return 0.15832064489337536;  // std dev = 3.001, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11800906534451501;  // std dev = 2.794, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.10235721885130741;  // std dev = 0.986, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.002933711592604037;  // std dev = 6.126, 312.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=45 */
%   | | | else return 0.011678198189878052;  // std dev = 4.779, 173.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=27 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014955;  // std dev = 3.37e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09095134043207849;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.05024119365749105;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2011330429104161;  // std dev = 3.629, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.11888896337846717;  // std dev = 3.075, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13597209685532574;  // std dev = 2.750, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.11101493631617314;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.030251773684097844;  // std dev = 2.838, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | | else return -0.002275045659034753;  // std dev = 7.299, 443.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=62 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07467127102727006;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.042644823747074546;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5996537268403711;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10092429762317107;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11119106297357009;  // std dev = 2.750, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.10052673725157675;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005526758137975065;  // std dev = 6.145, 319.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=44 */
%   | | | else return 0.012897463977013498;  // std dev = 4.854, 178.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06071965839553073;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.036008196161794466;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1276124454160207;  // std dev = 3.652, 55.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   | | | else return 0.052893817144014685;  // std dev = 2.952, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09734099031921277;  // std dev = 2.769, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.09851028079937776;  // std dev = 0.995, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004936485853029067;  // std dev = 6.094, 312.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=45 */
%   | | | else return 0.008435232139952306;  // std dev = 4.787, 173.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527758;  // std dev = 5.16e-08, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04899224138797588;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.03026875430651194;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4248893135836823;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.053588409567210185;  // std dev = 4.633, 88.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09002584774721506;  // std dev = 2.736, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -7.659631225328384E-4;  // std dev = 6.373, 327.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=48 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -1.6945587994577756E-4;  // std dev = 4.544, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | | else return -0.11283805251144885;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.039284699084727044;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.025347793325370013;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3263501339319361;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0404735977499659;  // std dev = 4.632, 88.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0823331771286117;  // std dev = 2.757, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.0879918650515271;  // std dev = 0.999, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005731628807985497;  // std dev = 6.085, 312.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=45 */
%   | | | else return 0.007535987745999624;  // std dev = 4.789, 173.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 1.46e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03134564254344101;  // std dev = 25.483, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,052 #pos=950 */
%   | | | else return 0.021159066091200204;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.25939552219911544;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03051969737683302;  // std dev = 4.632, 88.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07234964778603144;  // std dev = 2.725, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.0019196913862214247;  // std dev = 6.366, 327.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=48 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 5.478621307849191E-4;  // std dev = 4.544, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | | else return -0.10276616623195282;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.566873
   AUC PR    = 0.701327
   CLL	      = -0.788245
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 745.977 seconds
Total inference time: 3.766 seconds
AUC ROC: 0.566873


Results scoring model
   AUC ROC   = 0.641435
   AUC PR    = 0.554337
   CLL	      = -0.566794
   Precision = 0.953125 at threshold = 0.5
   Recall    = 0.181143
   F1        = 0.304429


Total scoring time: 21.119 seconds
Refined model CLL: -0.566794


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566873
   AUC PR    = 0.701327
   CLL	      = -0.788245
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 775.577 seconds
Total inference time: 3.766 seconds
AUC ROC: 0.566873
Total revision time: 775.577
Best scored revision CLL: -0.566794


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:53:48
{'AUC ROC': 0.566873, 'AUC PR': 0.701327, 'CLL': -0.788245, 'Precision': [1.0, 0.5], 'Recall': 0.136187, 'F1': 0.239726, 'Learning time': 775.577, 'Inference time': 3.766, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.804098, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 6.216, 'Inference time': 1.262}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.15010386690421165;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.1308319438252513;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.112355568173066;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.095201219494958;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.07972022119403777;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.06608615136458157;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.05432200947660098;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.04434104572053787;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.03598814416907843;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else return 0.029074308390099415;  // std dev = 32.339, 5,059.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,477 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.807166
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 7.639 seconds
Total inference time: 1.321 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.588808
   AUC PR    = 0.521436
   CLL	      = -0.57689
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.177617
   F1        = 0.301655


Total scoring time: 2.498 seconds
Parameter learned model CLL: -0.57689


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 319], 'false': [32.339, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 319], 'false': [32.339, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 319], 'false': [32.339, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 319], 'false': [32.339, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 319], 'false': [32.339, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 319], 'false': [32.339, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 319], 'false': [32.339, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 319], 'false': [32.339, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 319], 'false': [32.339, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 319], 'false': [32.339, 3, 1]}]]
[{'': [3.3856581766625463e-15, 0.20671724959955892]}, {'': [-4.9893909971869104e-15, 0.2067172495995612]}, {'': [-3.5638507122763644e-16, 0.2067172495995744]}, {'': [-8.90962678069091e-16, 0.20671724959958906]}, {'': [-4.900294729380001e-16, 0.2067172495996162]}, {'': [4.454813390345455e-16, 0.20671724959961793]}, {'': [1.948980858276137e-16, 0.20671724959962062]}, {'': [2.2274066951727276e-16, 0.20671724959958898]}, {'': [-2.2274066951727276e-16, 0.20671724959960394]}, {'': [-1.9211382745864777e-16, 0.20671724959960838]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1708517052517408;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.12298911774791496;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4490580260086027;  // std dev = 3.994, 66.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.31467067422994655;  // std dev = 3.378, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14703782398840126;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.08921948595311938;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004501667310126138;  // std dev = 7.012, 415.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=57 */
%   | | | else return 0.0027770342730652656;  // std dev = 5.472, 242.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=35 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1487557004400142;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.10734849948736816;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3851926776601655;  // std dev = 3.994, 66.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.2718979338779211;  // std dev = 3.378, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1281798840811021;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.07870190981914453;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003954565316874191;  // std dev = 7.012, 415.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=57 */
%   | | | else return 0.00243865138765078;  // std dev = 5.472, 242.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=35 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12733464258658272;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.09257565558192211;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5809218149522937;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.26205696284802954;  // std dev = 5.119, 106.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11013050708837398;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.06998074573501518;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.037808258511890104;  // std dev = 3.140, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return -0.005859897658522095;  // std dev = 8.315, 590.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=80 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10733188638814396;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.0789723273897878;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.45738092645848566;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20912458854183147;  // std dev = 5.117, 106.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11841786723416158;  // std dev = 3.065, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return -0.10774548999478557;  // std dev = 0.984, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004710919287708556;  // std dev = 7.023, 416.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=58 */
%   | | | else return 0.0035656073382158756;  // std dev = 5.394, 233.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0892619160371384;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.06672468443013733;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3461034312966313;  // std dev = 0.882, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1628908223565071;  // std dev = 5.116, 106.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09378788948975668;  // std dev = 3.029, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.06308181391866635;  // std dev = 0.974, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.026698146414374804;  // std dev = 3.117, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return -0.004961467705960522;  // std dev = 8.315, 590.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=80 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07339240893909112;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.05591059973928544;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1646523805702338;  // std dev = 3.949, 66.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.0854703524256177;  // std dev = 3.358, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09903018898540322;  // std dev = 3.057, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return -0.005347823859029433;  // std dev = 7.017, 418.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=58 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.16580929866503424;  // std dev = 0.167, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0033641809599221995;  // std dev = 5.470, 242.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=35 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.059777611572596714;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.04651942192745895;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.22973249762766737;  // std dev = 1.163, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.09146273726171394;  // std dev = 5.049, 105.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08256079916252472;  // std dev = 3.004, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.05302221501480977;  // std dev = 0.972, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.013472005922266475;  // std dev = 3.106, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return -0.004120706408739529;  // std dev = 8.314, 590.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=80 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048316529116437995;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.03847662711940147;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.20396175240120604;  // std dev = 0.871, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06840413890280438;  // std dev = 5.104, 106.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08248371073772667;  // std dev = 3.048, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return -0.005316948575447675;  // std dev = 7.010, 418.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=58 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003413122816013973;  // std dev = 5.476, 240.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=35 */
%   | | | else return -0.13010999678038876;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0388132965913392;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.03166763181728809;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08243486892020338;  // std dev = 4.001, 65.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=36 */
%   | | | else return 0.022422227855185144;  // std dev = 3.282, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0698677451755851;  // std dev = 3.046, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return -0.09817781704808141;  // std dev = 0.982, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02139242839241509;  // std dev = 3.004, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return -0.003154435507776619;  // std dev = 8.312, 590.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=80 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #pos=319 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031026983932055545;  // std dev = 29.346, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,253 */
%   | | | else return 0.02595758918608764;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06761651076046991;  // std dev = 3.950, 66.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | | else return 0.008197278795446345;  // std dev = 3.338, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06529219477147369;  // std dev = 2.988, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.048950965089045145;  // std dev = 0.972, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006876895119280228;  // std dev = 6.980, 415.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=57 */
%   | | | else return 0.004816737985233413;  // std dev = 5.463, 242.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=35 */


Results
   AUC ROC   = 0.566706
   AUC PR    = 0.701286
   CLL	      = -0.79128
   Precision = 0.959016 at threshold = 0.5
   Recall    = 0.151751
   F1        = 0.262038


Total learning time: 977.293 seconds
Total inference time: 3.357 seconds
AUC ROC: 0.566706


Results scoring model
   AUC ROC   = 0.643442
   AUC PR    = 0.560096
   CLL	      = -0.563907
   Precision = 0.927835 at threshold = 0.5
   Recall    = 0.200445
   F1        = 0.32967


Total scoring time: 25.25 seconds
Refined model CLL: -0.563907


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566706
   AUC PR    = 0.701286
   CLL	      = -0.79128
   Precision = 0.959016 at threshold = 0.5
   Recall    = 0.151751
   F1        = 0.262038


Total learning time: 1012.6800000000001 seconds
Total inference time: 3.357 seconds
AUC ROC: 0.566706
Total revision time: 1012.6800000000001
Best scored revision CLL: -0.563907


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 02:10:46
{'AUC ROC': 0.566706, 'AUC PR': 0.701286, 'CLL': -0.79128, 'Precision': [0.959016, 0.5], 'Recall': 0.151751, 'F1': 0.262038, 'Learning time': 1012.6800000000001, 'Inference time': 3.357, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.807166, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 7.639, 'Inference time': 1.321}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 9.733 seconds
Total inference time: 1.136 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 2.509 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2967454263275814;  // std dev = 3.746, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1491187042259332;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.1169706002890261;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3422910176153732;  // std dev = 4.499, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.24599049277102006;  // std dev = 3.723, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12730486140002475;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0701388309589216;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248207;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020235307543291768;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1276485314069232;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117948;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.284710485610663;  // std dev = 4.501, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.20429123278087824;  // std dev = 3.719, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10452395462165895;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0673615539274821;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05579913829327811;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017764187555889376;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10767405144022586;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.08395534636649284;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.48253948197874164;  // std dev = 1.249, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.18283650856333813;  // std dev = 5.647, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10393830642907596;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06910422568159189;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 7.349502124910555E-4;  // std dev = 7.971, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006134553650242456;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117443;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.07049037196827353;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4223388944082612;  // std dev = 1.229, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1404619377897808;  // std dev = 5.630, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08940462897160491;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061411036843604654;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04032845036391582;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019004316574408192;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07369162312032769;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.057450284655832816;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32393242668289746;  // std dev = 1.226, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.10849864890481818;  // std dev = 5.628, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.20015641323677483;  // std dev = 1.590, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.014000377825314816;  // std dev = 3.407, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.034663627274267694;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001668509801914935;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06002025943316851;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.04741904647039121;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12302491607404668;  // std dev = 4.462, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.051686464336662935;  // std dev = 3.647, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07775675838750176;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07128567371431627;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.027912776261645608;  // std dev = 3.618, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0014651507273169078;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048549832200982655;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03818605419664085;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2596815975349128;  // std dev = 1.213, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.057894285402088776;  // std dev = 5.612, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06655161021346429;  // std dev = 3.495, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0015957951556443439;  // std dev = 8.016, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007753763158182192;  // std dev = 6.178, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13851934195833;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03899906934798499;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.031153486904014628;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1960450056182472;  // std dev = 1.214, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04387054258769425;  // std dev = 5.612, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06502182106425188;  // std dev = 3.488, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06195790463544063;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0025647262130783738;  // std dev = 8.004, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006000302571488154;  // std dev = 6.049, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031204273276859772;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.02475672970229029;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06316213448526614;  // std dev = 4.451, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.008926185777767255;  // std dev = 3.630, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.18808801364107677;  // std dev = 1.584, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0016775548773601476;  // std dev = 3.376, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.01655115854806272;  // std dev = 3.611, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013752699505233835;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */


Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791207
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1270.21 seconds
Total inference time: 3.771 seconds
AUC ROC: 0.566386


Results scoring model
   AUC ROC   = 0.63889
   AUC PR    = 0.55387
   CLL	      = -0.566879
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 30.301 seconds
Refined model CLL: -0.566879


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791207
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1312.753 seconds
Total inference time: 3.771 seconds
AUC ROC: 0.566386
Total revision time: 1312.753
Best scored revision CLL: -0.566879


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 02:32:44
{'AUC ROC': 0.566386, 'AUC PR': 0.701208, 'CLL': -0.791207, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1312.753, 'Inference time': 3.771, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 9.733, 'Inference time': 1.136}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.2814239093528546;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.2436036812478897;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.26e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.20486772832443176;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.16789179701697263;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.13467901286638115;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.10626215352336507;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.08282097855296555;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.06398581782334359;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.04912754582476254;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.037554557914413735;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.562273
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.076 seconds
Total inference time: 1.713 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.578029
   AUC PR    = 0.613203
   CLL	      = -0.642662
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156057
   F1        = 0.269982


Total scoring time: 1.73 seconds
Parameter learned model CLL: -0.642662


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 76], 'false': [15.396, 560, 411]}]]
[{'': [-1.3088945132422897e-15, 0.2441132704241624]}, {'': [5.609547913895527e-16, 0.2441132704241856]}, {'': [1.402386978473882e-15, 0.24411327042418296]}, {'': [-9.349246523159212e-17, 0.24411327042418285]}, {'': [-3.8565641908031755e-16, 0.24411327042418146]}, {'': [-1.1686558153949016e-17, 0.24411327042418202]}, {'': [-9.933574430856664e-17, 0.24411327042418102]}, {'': [1.1686558153949016e-17, 0.2441132704241781]}, {'': [7.596262800066861e-17, 0.2441132704241749]}, {'': [3.7981314000334304e-17, 0.24411327042416972]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3006163135099465;  // std dev = 0.497, 843.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=373 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.10139217834275562;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0010060779566551492;  // std dev = 2.070, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25994991563882525;  // std dev = 0.497, 843.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=373 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.40207411659007225;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.1665388245648817;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2337836550996701;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.08859606418774053;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.02176788419240575;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 8.835646163368453E-4;  // std dev = 2.070, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.26e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2179328169221694;  // std dev = 0.497, 843.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=373 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.32791564552282043;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.14209424281556463;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19697678246055136;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.07665626203138412;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.01904987294481035;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 7.758973011973766E-4;  // std dev = 2.070, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17773224237541316;  // std dev = 0.497, 843.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=373 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.24963038735121587;  // std dev = 2.231, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.09749149918402981;  // std dev = 1.616, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.45269723845729604;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0724967328865389;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0707166441536276;  // std dev = 3.066, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.006646044658202882;  // std dev = 2.258, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1417257344507701;  // std dev = 0.497, 843.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=373 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2161680771429613;  // std dev = 2.061, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.07978236092017262;  // std dev = 1.811, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.3685840604890674;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06166398514138649;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.05924123114477472;  // std dev = 3.065, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.00582800299197641;  // std dev = 2.258, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4434942690138548;  // std dev = 9.255, 488.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=376 */
%   | | | else return -0.2991566261673945;  // std dev = 3.162, 406.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=10 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.6686405707509285;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16193362448182658;  // std dev = 2.129, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.05263654222637861;  // std dev = 2.643, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return -0.33371219041320677;  // std dev = 0.233, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.20638270740658995;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3399866081353265;  // std dev = 9.253, 488.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=376 */
%   | | | else return -0.23760889123188672;  // std dev = 3.149, 406.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=10 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return 0.33720870056742935;  // std dev = 1.033, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.12944278835524575;  // std dev = 1.930, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.04492976138588013;  // std dev = 2.640, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return -0.26883416682168043;  // std dev = 0.198, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.17500894129558514;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.054222784362124764;  // std dev = 0.398, 843.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=373 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.13496129024736142;  // std dev = 1.892, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.03273187281161943;  // std dev = 1.435, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.014157183130240489;  // std dev = 2.371, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.07203809580991138;  // std dev = 1.677, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.009963412817820738;  // std dev = 0.354, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.3485280664895175;  // std dev = 0.831, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.10989074279700942;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.14602175377145868;  // std dev = 0.358, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.04022383981394651;  // std dev = 11.380, 824.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=362 */
%   | | | else return 0.05818897071471876;  // std dev = 2.360, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.014348503393312456;  // std dev = 2.635, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.0293460499199431;  // std dev = 2.195, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.26889570960612413;  // std dev = 0.796, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.08544378423455856;  // std dev = 1.255, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.12288136115290689;  // std dev = 0.354, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.031446765634767226;  // std dev = 11.358, 824.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=362 */
%   | | | else return 0.045358499448766305;  // std dev = 2.355, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.012096179858949141;  // std dev = 2.635, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.02463502911528399;  // std dev = 2.190, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */


Results
   AUC ROC   = 0.855123
   AUC PR    = 0.594939
   CLL	      = -0.413542
   Precision = 0.573678 at threshold = 0.5
   Recall    = 0.877797
   F1        = 0.693878


Total learning time: 569.488 seconds
Total inference time: 4.193 seconds
AUC ROC: 0.855123


Results scoring model
   AUC ROC   = 0.90013
   AUC PR    = 0.870948
   CLL	      = -0.462044
   Precision = 0.81149 at threshold = 0.5
   Recall    = 0.928131
   F1        = 0.8659


Total scoring time: 5.884 seconds
Refined model CLL: -0.462044


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.855123
   AUC PR    = 0.594939
   CLL	      = -0.413542
   Precision = 0.573678 at threshold = 0.5
   Recall    = 0.877797
   F1        = 0.693878


Total learning time: 580.1780000000001 seconds
Total inference time: 4.193 seconds
AUC ROC: 0.855123
Total revision time: 580.1780000000001
Best scored revision CLL: -0.462044


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:42:31
{'AUC ROC': 0.855123, 'AUC PR': 0.594939, 'CLL': -0.413542, 'Precision': [0.573678, 0.5], 'Recall': 0.877797, 'F1': 0.693878, 'Learning time': 580.1780000000001, 'Inference time': 4.193, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.562273, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.076, 'Inference time': 1.713}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.90e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.27933756559046335;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.2418246372053612;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.46e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.20344050934552055;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.54e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.1668106054970063;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.10e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.13389949769910117;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.10572258311154055;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.60e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.08245990790481503;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.06375138934001329;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.04897998572470589;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else return 0.03746509106104607;  // std dev = 21.719, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=815 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560502
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.674 seconds
Total inference time: 1.649 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581622
   AUC PR    = 0.618271
   CLL	      = -0.640195
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.163244
   F1        = 0.280671


Total scoring time: 2.013 seconds
Parameter learned model CLL: -0.640195


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.9e-07, 0, 159], 'false': [21.719, 1, 815]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 159], 'false': [21.719, 1, 815]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.46e-07, 0, 159], 'false': [21.719, 1, 815]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.54e-07, 0, 159], 'false': [21.719, 1, 815]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 159], 'false': [21.719, 1, 815]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 159], 'false': [21.719, 1, 815]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 159], 'false': [21.719, 1, 815]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 159], 'false': [21.719, 1, 815]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 159], 'false': [21.719, 1, 815]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 159], 'false': [21.719, 1, 815]}]]
[{'': [6.166974687729172e-15, 0.24378876803613284]}, {'': [-2.7706697872406424e-15, 0.24378876803612456]}, {'': [1.876905339743661e-15, 0.2437887680360886]}, {'': [1.2959584488706229e-15, 0.24378876803612304]}, {'': [6.032910020604624e-16, 0.24378876803610142]}, {'': [-2.2344111187424534e-16, 0.24378876803612604]}, {'': [4.2453811256106615e-16, 0.24378876803612187]}, {'': [-3.1281755662394346e-16, 0.2437887680361118]}, {'': [-2.3740618136638567e-16, 0.2437887680361066]}, {'': [5.306726407013327e-17, 0.24378876803612184]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.90e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29624989663796886;  // std dev = 0.496, 1,664.000 (wgt'ed) examples reached here.  /* #neg=935 #pos=729 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.47579599392304095;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.3109791237787565;  // std dev = 3.624, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return 0.0803711573217346;  // std dev = 3.528, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026980103930681208;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2562340863733392;  // std dev = 0.496, 1,664.000 (wgt'ed) examples reached here.  /* #neg=935 #pos=729 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.40752735208725743;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26876145465683904;  // std dev = 3.624, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return 0.07030324498182283;  // std dev = 3.528, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023663991585890606;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.46e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21497053720016576;  // std dev = 0.496, 1,664.000 (wgt'ed) examples reached here.  /* #neg=935 #pos=729 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.33201152621099134;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.20848477447886868;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2249393882604222;  // std dev = 3.624, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return 0.020702713113433347;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.06102210441531259;  // std dev = 3.528, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.54e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17551005402750192;  // std dev = 0.496, 1,664.000 (wgt'ed) examples reached here.  /* #neg=935 #pos=729 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2597872030873148;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.17062637354018492;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.182967635628389;  // std dev = 3.624, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return 0.05259950478597591;  // std dev = 3.528, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018071236418078448;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.10e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14014185946507765;  // std dev = 0.496, 1,664.000 (wgt'ed) examples reached here.  /* #neg=935 #pos=729 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.19420289797362938;  // std dev = 3.122, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.1299825444746429;  // std dev = 2.267, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.25772495140980034;  // std dev = 1.467, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.07283080749416182;  // std dev = 4.839, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0157429200610258;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.46635058298011745;  // std dev = 1.991, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.19474407391177317;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10761490044718633;  // std dev = 19.988, 1,625.000 (wgt'ed) examples reached here.  /* #neg=917 #pos=708 */
%   | | | else return 0.12447187710008692;  // std dev = 3.841, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.1257890902219697;  // std dev = 3.605, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return 0.03211991039813997;  // std dev = 3.529, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013690649367091853;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.60e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3564921500321937;  // std dev = 1.991, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.15333150900158016;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08346854614706045;  // std dev = 19.988, 1,625.000 (wgt'ed) examples reached here.  /* #neg=917 #pos=708 */
%   | | | else return 0.09478544954513117;  // std dev = 3.840, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.19108923883700824;  // std dev = 1.435, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.04532395416365815;  // std dev = 4.831, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011887705243024375;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( title(G, E), venue(G, B) )
%   | | | then return 0.06400370943787154;  // std dev = 20.080, 1,651.000 (wgt'ed) examples reached here.  /* #neg=930 #pos=721 */
%   | | | else return 0.09891403048133629;  // std dev = 4.489, 82.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=41 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.06320574273067528;  // std dev = 4.228, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return -0.321156795143193;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05509174686754419;  // std dev = 3.800, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | | else return -0.3323064798233444;  // std dev = 0.348, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.36892986471295464;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0502930750210108;  // std dev = 0.494, 1,664.000 (wgt'ed) examples reached here.  /* #neg=935 #pos=729 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0866469722068319;  // std dev = 2.790, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.05563051276040117;  // std dev = 2.508, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.060489487165216904;  // std dev = 3.589, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return 0.009511208274616125;  // std dev = 3.522, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.12012832781113911;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.008104691637129296;  // std dev = 3.172, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.23909956200924676;  // std dev = 1.990, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.1454162907660687;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03707582307461803;  // std dev = 19.987, 1,625.000 (wgt'ed) examples reached here.  /* #neg=917 #pos=708 */
%   | | | else return 0.051145423339251435;  // std dev = 3.744, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1374028863834135;  // std dev = 1.372, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.01421332944203624;  // std dev = 4.828, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004491818958890553;  // std dev = 3.280, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.06913798631569912;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.647821
   AUC PR    = 0.448827
   CLL	      = -0.541178
   Precision = 0.95283 at threshold = 0.5
   Recall    = 0.173838
   F1        = 0.294032


Total learning time: 380.396 seconds
Total inference time: 3.369 seconds
AUC ROC: 0.647821


Results scoring model
   AUC ROC   = 0.638206
   AUC PR    = 0.661476
   CLL	      = -0.623549
   Precision = 0.922727 at threshold = 0.5
   Recall    = 0.208419
   F1        = 0.340034


Total scoring time: 8.951 seconds
Refined model CLL: -0.623549


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.647821
   AUC PR    = 0.448827
   CLL	      = -0.541178
   Precision = 0.95283 at threshold = 0.5
   Recall    = 0.173838
   F1        = 0.294032


Total learning time: 395.03400000000005 seconds
Total inference time: 3.369 seconds
AUC ROC: 0.647821
Total revision time: 395.03400000000005
Best scored revision CLL: -0.623549


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 02:49:12
{'AUC ROC': 0.647821, 'AUC PR': 0.448827, 'CLL': -0.541178, 'Precision': [0.95283, 0.5], 'Recall': 0.173838, 'F1': 0.294032, 'Learning time': 395.03400000000005, 'Inference time': 3.369, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560502, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.674, 'Inference time': 1.649}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.07e-06, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.28082934747064126;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.2430967348663829;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.46e-07, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.20446114165959273;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.1675839125913126;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.15e-07, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.13445714349606547;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.89e-07, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.10610865324380613;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.08271830112183837;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527753;  // std dev = 7.88e-08, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.06391917123874469;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.04908559736869363;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else return 0.03752911705169624;  // std dev = 26.648, 2,910.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,230 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.561767
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 5.188 seconds
Total inference time: 1.653 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.579055
   AUC PR    = 0.614657
   CLL	      = -0.641959
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158111
   F1        = 0.27305


Total scoring time: 2.143 seconds
Parameter learned model CLL: -0.641959


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 231], 'false': [26.648, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 231], 'false': [26.648, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.46e-07, 0, 231], 'false': [26.648, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 231], 'false': [26.648, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.15e-07, 0, 231], 'false': [26.648, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 231], 'false': [26.648, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 231], 'false': [26.648, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.88e-08, 0, 231], 'false': [26.648, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 231], 'false': [26.648, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 231], 'false': [26.648, 1, 1]}]]
[{'': [4.921508126476884e-15, 0.2440216813689274]}, {'': [-4.183281907505352e-15, 0.2440216813689136]}, {'': [1.2918958832001822e-15, 0.2440216813689201]}, {'': [-6.151885158096106e-17, 0.24402168136888877]}, {'': [4.306319610667274e-16, 0.2440216813689274]}, {'': [3.614232530381462e-16, 0.24402168136887545]}, {'': [3.6911310948576635e-16, 0.24402168136889235]}, {'': [2.6914497566670462e-17, 0.2440216813688856]}, {'': [-1.5764205717621271e-16, 0.24402168136892272]}, {'': [4.229421046191072e-17, 0.24402168136888408]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.07e-06, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3000094002157863;  // std dev = 0.497, 2,494.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=1,102 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.451369274082562;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return 0.37243464938522663;  // std dev = 2.957, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26991364098186393;  // std dev = 4.537, 85.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=35 */
%   | | | else return 0.043989643064113904;  // std dev = 4.135, 113.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02481560176617902;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25943353929687696;  // std dev = 0.497, 2,494.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=1,102 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3871260174676034;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return 0.32080740000829727;  // std dev = 2.957, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2337836550996695;  // std dev = 4.537, 85.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=35 */
%   | | | else return 0.03854998909181326;  // std dev = 4.135, 113.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021767884192405756;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.46e-07, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21752142894125492;  // std dev = 0.497, 2,494.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=1,102 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.32370477545178644;  // std dev = 3.597, 53.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=31 */
%   | | | else return 0.2641207122844266;  // std dev = 3.165, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.09035336007792996;  // std dev = 5.795, 177.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=47 */
%   | | | else return 0.2167639503789862;  // std dev = 2.257, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01904987294481075;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.47573383076101666;  // std dev = 2.767, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   | | | else return -0.15917336033733825;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.17531758012859283;  // std dev = 24.518, 2,440.000 (wgt'ed) examples reached here.  /* #neg=1,367 #pos=1,073 */
%   | | | else return 0.23462575575228803;  // std dev = 4.668, 89.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.17589326851826978;  // std dev = 4.534, 85.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=35 */
%   | | | else return 0.02145352089694449;  // std dev = 4.136, 113.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.016636776392289738;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.15e-07, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14151149389697465;  // std dev = 0.496, 2,494.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=1,102 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.198680425637736;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=31 */
%   | | | else return 0.15377637707012037;  // std dev = 3.152, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.2535631816166431;  // std dev = 2.218, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return -0.012619196099702518;  // std dev = 1.295, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.05608480647999885;  // std dev = 5.641, 170.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=45 */
%   | | | else return 0.004410606006087613;  // std dev = 3.890, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.89e-07, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11097662800848633;  // std dev = 0.496, 2,494.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=1,102 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.15432069283973332;  // std dev = 3.785, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return 0.10514299066131903;  // std dev = 2.931, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03956912718889834;  // std dev = 5.534, 177.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=43 */
%   | | | else return 0.22591034784024536;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011468598968006444;  // std dev = 4.136, 113.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=21 */
%   | | | else return -0.09277738823037332;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0859748109740234;  // std dev = 0.496, 2,494.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=1,102 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1193404771753097;  // std dev = 3.615, 53.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=31 */
%   | | | else return 0.08070224028591164;  // std dev = 3.138, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1957831058013429;  // std dev = 2.217, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return -0.011530983904193411;  // std dev = 1.294, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03752630937312637;  // std dev = 5.610, 170.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=45 */
%   | | | else return -4.73814131463723E-4;  // std dev = 3.888, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527753;  // std dev = 7.88e-08, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06604179507844536;  // std dev = 0.496, 2,494.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=1,102 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.09208754139599154;  // std dev = 3.790, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return 0.05163315442221109;  // std dev = 2.921, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026483635952508872;  // std dev = 5.509, 177.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=43 */
%   | | | else return 0.1705192786727275;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004972875303645408;  // std dev = 4.136, 113.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=21 */
%   | | | else return -0.08505123603223966;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3652042067111651;  // std dev = 16.560, 1,497.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=1,128 */
%   | | | else return -0.3491013459928348;  // std dev = 6.013, 1,177.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=35 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.04967486932595479;  // std dev = 4.026, 68.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=29 */
%   | | | else return -0.26992203900961603;  // std dev = 0.894, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04160302248032976;  // std dev = 4.731, 139.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=37 */
%   | | | else return -0.338919215520232;  // std dev = 0.290, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.4460219941883971;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07866215303234694;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 231.000 (wgt'ed) examples reached here.  /* #pos=231 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.27644458738689565;  // std dev = 16.559, 1,497.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=1,128 */
%   | | | else return -0.27182987480043597;  // std dev = 5.951, 1,177.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=35 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.03840761571821832;  // std dev = 4.026, 68.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=29 */
%   | | | else return -0.21593586867837486;  // std dev = 0.884, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.034957942720328816;  // std dev = 4.727, 139.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=37 */
%   | | | else return -0.27339155487297384;  // std dev = 0.253, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.3401156884332474;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07314684663780877;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.917685
   AUC PR    = 0.801872
   CLL	      = -0.393108
   Precision = 0.805118 at threshold = 0.5
   Recall    = 0.703959
   F1        = 0.751148


Total learning time: 1477.64 seconds
Total inference time: 3.952 seconds
AUC ROC: 0.917685


Results scoring model
   AUC ROC   = 0.887275
   AUC PR    = 0.855197
   CLL	      = -0.475095
   Precision = 0.790941 at threshold = 0.5
   Recall    = 0.932238
   F1        = 0.855796


Total scoring time: 16.338 seconds
Refined model CLL: -0.475095


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.917685
   AUC PR    = 0.801872
   CLL	      = -0.393108
   Precision = 0.805118 at threshold = 0.5
   Recall    = 0.703959
   F1        = 0.751148


Total learning time: 1501.309 seconds
Total inference time: 3.952 seconds
AUC ROC: 0.917685
Total revision time: 1501.309
Best scored revision CLL: -0.475095


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 03:14:20
{'AUC ROC': 0.917685, 'AUC PR': 0.801872, 'CLL': -0.393108, 'Precision': [0.805118, 0.5], 'Recall': 0.703959, 'F1': 0.751148, 'Learning time': 1501.309, 'Inference time': 3.952, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.561767, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 5.188, 'Inference time': 1.653}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.2794870906148779;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.24195215220478833;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.20354284137866627;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.16688816837731107;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.1339554543348596;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.10576134014511941;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.08248585729819585;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.0637682431261872;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.04899059502630547;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.037471521306735645;  // std dev = 30.721, 3,871.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,631 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560629
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 6.406 seconds
Total inference time: 1.626 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581366
   AUC PR    = 0.617911
   CLL	      = -0.640372
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162731
   F1        = 0.279912


Total scoring time: 2.138 seconds
Parameter learned model CLL: -0.640372


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 317], 'false': [30.721, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [30.721, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [30.721, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [30.721, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [30.721, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 317], 'false': [30.721, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 317], 'false': [30.721, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 317], 'false': [30.721, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [30.721, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [30.721, 2, 1]}]]
[{'': [3.4070187960736666e-15, 0.24381231422222913]}, {'': [-5.0208698047401405e-15, 0.24381231422232102]}, {'': [-3.5863355748143857e-16, 0.2438123142223061]}, {'': [-8.965838937035964e-16, 0.24381231422225713]}, {'': [-4.707065441943882e-16, 0.24381231422228325]}, {'': [4.482919468517982e-16, 0.24381231422228214]}, {'': [1.961277267476617e-16, 0.2438123142222639]}, {'': [2.1854232409025163e-16, 0.24381231422227814]}, {'': [-2.2134414875807538e-16, 0.24381231422230032]}, {'': [-1.8492042807636678e-16, 0.243812314222302]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2981972588687612;  // std dev = 0.496, 3,311.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,457 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4107805140468817;  // std dev = 5.309, 114.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=63 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2599346493852269;  // std dev = 5.188, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.052954129904706285;  // std dev = 4.915, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04950695979086947;  // std dev = 5.007, 162.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=31 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25789151849126357;  // std dev = 0.496, 3,311.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,457 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.39498900141894894;  // std dev = 4.156, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | | | else return 0.319275320054686;  // std dev = 3.448, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.22525993936200103;  // std dev = 5.188, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.046385007126108456;  // std dev = 4.915, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04337300264876769;  // std dev = 5.007, 162.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=31 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21629240910773226;  // std dev = 0.496, 3,311.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,457 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3284224395469171;  // std dev = 4.071, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return 0.2604828371424863;  // std dev = 3.540, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19010187835392767;  // std dev = 5.188, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.04042622251519738;  // std dev = 4.915, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03782039133457672;  // std dev = 5.007, 162.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=31 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17650231657821233;  // std dev = 0.496, 3,311.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,457 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.43718213174468806;  // std dev = 0.923, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.22653896324092707;  // std dev = 5.298, 114.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=63 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1566458451543355;  // std dev = 5.188, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.03507469303603379;  // std dev = 4.915, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03284044816909366;  // std dev = 5.007, 162.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=31 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.38141915254512865;  // std dev = 3.536, 58.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | | | else return -0.11828668505710095;  // std dev = 2.068, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.13950099113254025;  // std dev = 28.202, 3,230.000 (wgt'ed) examples reached here.  /* #neg=1,813 #pos=1,417 */
%   | | | else return 0.17171183537069637;  // std dev = 5.236, 112.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=62 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.21275504230381165;  // std dev = 2.574, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.05412064575302231;  // std dev = 6.665, 238.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=62 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.028410588600376947;  // std dev = 5.007, 162.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=31 */
%   | | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2951185512623256;  // std dev = 3.537, 58.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | | | else return -0.09374437818077377;  // std dev = 2.072, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10945771962454143;  // std dev = 28.202, 3,230.000 (wgt'ed) examples reached here.  /* #neg=1,813 #pos=1,417 */
%   | | | else return 0.13056296909898754;  // std dev = 5.235, 112.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=62 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0373657338450714;  // std dev = 6.646, 246.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=61 */
%   | | | else return 0.24951941295795274;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.021810157352459416;  // std dev = 4.916, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08543737455843885;  // std dev = 0.495, 3,311.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,457 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12871633434588667;  // std dev = 4.164, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | | | else return 0.07417114201893156;  // std dev = 3.427, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.031231555297176156;  // std dev = 6.645, 246.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=61 */
%   | | | else return 0.19596633395141191;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.018668010225429115;  // std dev = 4.916, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0656720830321499;  // std dev = 0.495, 3,311.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,457 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.27039122620213224;  // std dev = 0.986, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.07037669234988293;  // std dev = 5.285, 114.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=63 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1579031134229171;  // std dev = 2.564, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.02631957306846265;  // std dev = 6.602, 238.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=62 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014742973876174837;  // std dev = 5.007, 162.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=31 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.050185409149566644;  // std dev = 0.495, 3,311.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,457 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08200482056924559;  // std dev = 4.089, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return 0.031477141776351594;  // std dev = 3.499, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.019965936969871638;  // std dev = 6.627, 246.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=61 */
%   | | | else return 0.144481145756184;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.05441019402764932;  // std dev = 1.322, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.012694889450673524;  // std dev = 4.736, 148.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3497083073094848;  // std dev = 19.256, 1,995.000 (wgt'ed) examples reached here.  /* #neg=503 #pos=1,492 */
%   | | | else return -0.35902002581444536;  // std dev = 6.919, 1,555.000 (wgt'ed) examples reached here.  /* #neg=1,509 #pos=46 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.11870732765532092;  // std dev = 2.580, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return -0.06322321079284472;  // std dev = 3.821, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.037930891809656295;  // std dev = 5.820, 196.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=55 */
%   | | | else return -0.20357010859420718;  // std dev = 0.683, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.4738681857476581;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06819024458541174;  // std dev = 0.006, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.895451
   AUC PR    = 0.772884
   CLL	      = -0.448924
   Precision = 0.919643 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.297258


Total learning time: 1296.668 seconds
Total inference time: 3.281 seconds
AUC ROC: 0.895451


Results scoring model
   AUC ROC   = 0.868336
   AUC PR    = 0.841255
   CLL	      = -0.532565
   Precision = 0.925373 at threshold = 0.5
   Recall    = 0.222793
   F1        = 0.359123


Total scoring time: 12.418 seconds
Refined model CLL: -0.532565


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.895451
   AUC PR    = 0.772884
   CLL	      = -0.448924
   Precision = 0.919643 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.297258


Total learning time: 1317.6299999999999 seconds
Total inference time: 3.281 seconds
AUC ROC: 0.895451
Total revision time: 1317.6299999999999
Best scored revision CLL: -0.532565


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 03:36:23
{'AUC ROC': 0.895451, 'AUC PR': 0.772884, 'CLL': -0.448924, 'Precision': [0.919643, 0.5], 'Recall': 0.177281, 'F1': 0.297258, 'Learning time': 1317.6299999999999, 'Inference time': 3.281, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560629, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 6.406, 'Inference time': 1.626}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 6.983 seconds
Total inference time: 1.739 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 2.319 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5735974409821941;  // std dev = 1.250, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.36267475619938194;  // std dev = 5.924, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.497180622652156;  // std dev = 1.234, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2955229765557766;  // std dev = 5.919, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.38742485377256514;  // std dev = 1.236, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23342237797384244;  // std dev = 5.917, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3220331757402446;  // std dev = 1.221, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1779031286672011;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598835;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150812;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11049163082472004;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.24211742601171526;  // std dev = 1.221, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.13497175814230208;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041621302877510945;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777657;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09335578437677157;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08563819689605111;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.20178185200866772;  // std dev = 1.220, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.10047825928633881;  // std dev = 5.911, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034718743328304345;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0758329499393164;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.019204361885541282;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2513575896334156;  // std dev = 4.039, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.2027103417968596;  // std dev = 2.194, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06520486116477162;  // std dev = 31.519, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.0754405965265567;  // std dev = 5.912, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02661441193730452;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17192093335745545;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.0677562717892908;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014257170344382052;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.23524399388127243;  // std dev = 4.024, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.21277971686616953;  // std dev = 2.219, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.049621780220907;  // std dev = 31.487, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.05468119489538171;  // std dev = 5.911, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1368204982310098;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021575227007179707;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06927269119883;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012849843349586157;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3507820167351539;  // std dev = 21.440, 2,481.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=1,857 */
%   | | | else return -0.35784139108123303;  // std dev = 7.790, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,898 #pos=58 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.13881562908524536;  // std dev = 2.848, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return -0.02437486454790787;  // std dev = 4.724, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04410369165839603;  // std dev = 6.300, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | | else return -0.18786475862831375;  // std dev = 0.933, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.5126525564107228;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08522731604003997;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.896973
   AUC PR    = 0.772982
   CLL	      = -0.449524
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 1509.912 seconds
Total inference time: 3.552 seconds
AUC ROC: 0.896973


Results scoring model
   AUC ROC   = 0.875694
   AUC PR    = 0.849763
   CLL	      = -0.531972
   Precision = 0.93823 at threshold = 0.5
   Recall    = 0.230706
   F1        = 0.370346


Total scoring time: 14.827 seconds
Refined model CLL: -0.531972


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.896973
   AUC PR    = 0.772982
   CLL	      = -0.449524
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 1534.041 seconds
Total inference time: 3.552 seconds
AUC ROC: 0.896973
Total revision time: 1534.041
Best scored revision CLL: -0.531972


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:02:03
{'AUC ROC': 0.896973, 'AUC PR': 0.772982, 'CLL': -0.449524, 'Precision': [0.896552, 0.5], 'Recall': 0.179002, 'F1': 0.298422, 'Learning time': 1534.041, 'Inference time': 3.552, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 6.983, 'Inference time': 1.739}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.18235766050583765;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2.06e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.15867844831509775;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.21e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.13558287889635307;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.11395239428428304;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.09440655937727047;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.07727291783898009;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.06262419325407872;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.05034855453178066;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.04022305365990118;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.03197362090564601;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637513
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.266 seconds
Total inference time: 1.387 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582599
   AUC PR    = 0.537509
   CLL	      = -0.601086
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165198
   F1        = 0.283554


Total scoring time: 1.69 seconds
Parameter learned model CLL: -0.601086


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.21e-07, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 75], 'false': [16.004, 790, 379]}]]
[{'': [-1.4210854715202005e-15, 0.2190974277767158]}, {'': [5.684341886080802e-16, 0.219097427776724]}, {'': [1.3737159558028603e-15, 0.21909742777674132]}, {'': [-1.1842378929335003e-16, 0.21909742777673213]}, {'': [-3.789561257387201e-16, 0.21909742777673064]}, {'': [-1.1842378929335004e-17, 0.21909742777672966]}, {'': [-1.0066022089934752e-16, 0.21909742777673413]}, {'': [5.921189464667502e-18, 0.21909742777672717]}, {'': [7.697546304067752e-17, 0.21909742777674002]}, {'': [3.552713678800501e-17, 0.21909742777673513]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5248156017661789;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.32873717039363;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.20578842007804832;  // std dev = 14.538, 932.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=324 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return -0.10411521584388395;  // std dev = 1.387, 53.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | | else return 0.03056272820296064;  // std dev = 2.877, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.08621911053810886;  // std dev = 3.168, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2.06e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18540832991110634;  // std dev = 0.478, 996.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=354 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.09190757266201634;  // std dev = 1.387, 53.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | | else return 0.026801469463012102;  // std dev = 2.877, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.14722809559761782;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07730704514114833;  // std dev = 3.160, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.21e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.3150707799768117;  // std dev = 2.809, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return -0.22357633470196497;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.15437302981815143;  // std dev = 0.477, 959.000 (wgt'ed) examples reached here.  /* #neg=622 #pos=337 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.08188528749921266;  // std dev = 1.387, 53.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | | else return 0.023435345074299035;  // std dev = 2.877, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1297009537101174;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.06714376511728688;  // std dev = 3.160, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1313469423815943;  // std dev = 0.477, 996.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=354 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.17550187761154604;  // std dev = 1.815, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.13925721694081125;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.056862850254652146;  // std dev = 2.527, 95.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=7 */
%   | | | else return 0.057873634982044675;  // std dev = 3.160, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.35968242369321235;  // std dev = 1.971, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return -0.049168267757173895;  // std dev = 1.295, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.18073911178457358;  // std dev = 2.851, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.10219966982230921;  // std dev = 14.538, 932.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=324 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return -0.06938972141598941;  // std dev = 1.390, 53.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | | else return 0.022755559271934508;  // std dev = 2.841, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.05138986819512637;  // std dev = 3.153, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return -0.14244512650754798;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08686594626883963;  // std dev = 0.476, 996.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=354 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.06293325507627903;  // std dev = 1.390, 53.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | | else return 0.019840004690694357;  // std dev = 2.840, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04380268192816738;  // std dev = 3.153, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return -0.1259380234201774;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0695083146506338;  // std dev = 0.476, 996.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=354 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.15229222537687084;  // std dev = 1.798, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.13019863134960855;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.04685012818617807;  // std dev = 2.524, 95.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=7 */
%   | | | else return 0.03821681728116082;  // std dev = 3.149, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05514607123169749;  // std dev = 0.476, 996.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=354 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13090515065378944;  // std dev = 1.792, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.11616623679848086;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.04200641410635843;  // std dev = 2.524, 95.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=7 */
%   | | | else return 0.032284254015895894;  // std dev = 3.149, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2274101405484326;  // std dev = 1.965, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return -0.07789801318838414;  // std dev = 1.295, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.04154417568825662;  // std dev = 0.477, 966.000 (wgt'ed) examples reached here.  /* #neg=626 #pos=340 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.05232566598702842;  // std dev = 1.396, 53.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | | else return 0.019249914337880994;  // std dev = 2.781, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13714357976255975;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.027164539783330218;  // std dev = 3.148, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0339305286614941;  // std dev = 0.476, 996.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=354 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.048138399661687245;  // std dev = 1.396, 53.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | | else return 0.0167601409172278;  // std dev = 2.780, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.022936533978355714;  // std dev = 3.149, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return -0.12373908645074065;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.603303
   AUC PR    = 0.586967
   CLL	      = -0.629886
   Precision = 0.946565 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28246


Total learning time: 91.47200000000001 seconds
Total inference time: 2.38 seconds
AUC ROC: 0.603303


Results scoring model
   AUC ROC   = 0.65588
   AUC PR    = 0.592757
   CLL	      = -0.577678
   Precision = 0.945652 at threshold = 0.5
   Recall    = 0.19163
   F1        = 0.318681


Total scoring time: 2.901 seconds
Refined model CLL: -0.577678


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.603303
   AUC PR    = 0.586967
   CLL	      = -0.629886
   Precision = 0.946565 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28246


Total learning time: 99.32900000000001 seconds
Total inference time: 2.38 seconds
AUC ROC: 0.603303
Total revision time: 99.32900000000001
Best scored revision CLL: -0.577678


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:03:47
{'AUC ROC': 0.603303, 'AUC PR': 0.586967, 'CLL': -0.629886, 'Precision': [0.946565, 0.5], 'Recall': 0.165997, 'F1': 0.28246, 'Learning time': 99.32900000000001, 'Inference time': 2.38, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637513, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.266, 'Inference time': 1.387}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.18794969813469167;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.16349661235013743;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.13957650862759338;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.11714271393221544;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.53e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.09686975966129259;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 5.96e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.07911621805314059;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.06396391008133714;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527814;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.05129478717003842;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367141;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.040871453014122025;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 5.58e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else return 0.03240256696081612;  // std dev = 22.835, 2,359.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=778 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.635851
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 4.176 seconds
Total inference time: 1.396 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.571586
   AUC PR    = 0.519177
   CLL	      = -0.608995
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.143172
   F1        = 0.250482


Total scoring time: 2.03 seconds
Parameter learned model CLL: -0.608995


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.63e-07, 0, 130], 'false': [22.835, 1, 778]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 130], 'false': [22.835, 1, 778]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.77e-07, 0, 130], 'false': [22.835, 1, 778]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 130], 'false': [22.835, 1, 778]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 130], 'false': [22.835, 1, 778]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 130], 'false': [22.835, 1, 778]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-07, 0, 130], 'false': [22.835, 1, 778]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 130], 'false': [22.835, 1, 778]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 130], 'false': [22.835, 1, 778]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.58e-08, 0, 130], 'false': [22.835, 1, 778]}]]
[{'': [4.481884948640632e-15, 0.22103221973661924]}, {'': [-1.7490282726402467e-15, 0.22103221973658063]}, {'': [1.7490282726402467e-15, 0.22103221973659426]}, {'': [1.147799803920162e-15, 0.2210322197365817]}, {'': [4.919142016800694e-16, 0.22103221973658202]}, {'': [2.7328566760003855e-17, 0.2210322197365773]}, {'': [3.416070845000482e-16, 0.22103221973658607]}, {'': [-2.7328566760003855e-16, 0.22103221973660087]}, {'': [-4.099285014000578e-17, 0.2210322197365762]}, {'': [2.3912495915003373e-17, 0.22103221973660336]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2151499281481667;  // std dev = 0.479, 2,014.000 (wgt'ed) examples reached here.  /* #neg=1,295 #pos=719 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.05447242412378864;  // std dev = 2.866, 103.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=9 */
%   | | | else return 0.04564893509951213;  // std dev = 4.131, 112.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=21 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.10184641409110795;  // std dev = 4.683, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.44100142120862473;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | | else return 0.08795482622654566;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.2815032133233205;  // std dev = 3.919, 62.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=28 */
%   | | | else return 0.18055344007100965;  // std dev = 20.717, 1,885.000 (wgt'ed) examples reached here.  /* #neg=1,224 #pos=661 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return -0.04796999706428244;  // std dev = 2.866, 103.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=9 */
%   | | | else return 0.04000075842466828;  // std dev = 4.131, 112.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=21 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.08899090773164976;  // std dev = 4.683, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15878309450235817;  // std dev = 0.479, 2,014.000 (wgt'ed) examples reached here.  /* #neg=1,295 #pos=719 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.04245364937365401;  // std dev = 2.866, 103.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=9 */
%   | | | else return 0.03489968798418147;  // std dev = 4.131, 112.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=21 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.07699258183760539;  // std dev = 4.683, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13234463618560602;  // std dev = 0.479, 2,014.000 (wgt'ed) examples reached here.  /* #neg=1,295 #pos=719 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.01915671779782469;  // std dev = 4.639, 156.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=26 */
%   | | | else return -0.05894437766805578;  // std dev = 1.935, 59.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14918646530314428;  // std dev = 2.454, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.02511498183784748;  // std dev = 3.982, 102.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.53e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10846437324405538;  // std dev = 0.479, 2,014.000 (wgt'ed) examples reached here.  /* #neg=1,295 #pos=719 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.03526498453646329;  // std dev = 2.864, 103.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=9 */
%   | | | else return 0.028050816968339578;  // std dev = 4.129, 112.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=21 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.05813680346421367;  // std dev = 4.673, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
%   | | | else return -0.10611782827218033;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 5.96e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08766706975797715;  // std dev = 0.478, 2,014.000 (wgt'ed) examples reached here.  /* #neg=1,295 #pos=719 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1931433445588081;  // std dev = 2.245, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.07570006689599834;  // std dev = 0.958, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.02340514833593292;  // std dev = 4.391, 189.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=22 */
%   | | | else return 0.042582575274531465;  // std dev = 4.600, 121.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07007651737282275;  // std dev = 0.478, 2,014.000 (wgt'ed) examples reached here.  /* #neg=1,295 #pos=719 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1674519774597652;  // std dev = 2.339, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.09974082102892337;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.1089070034531824;  // std dev = 2.484, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return -0.011758579369336475;  // std dev = 5.793, 279.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=40 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527814;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2834366047632039;  // std dev = 2.789, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | | else return -0.015860097161140937;  // std dev = 2.779, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else return 0.052987655250711765;  // std dev = 0.478, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,257 #pos=688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.14038491252856747;  // std dev = 2.333, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.08365179146890155;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.09294157054136129;  // std dev = 2.480, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return -0.01023720809048107;  // std dev = 5.794, 279.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=40 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367141;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.06158705254583381;  // std dev = 3.861, 65.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
%   | | | else return 0.6918708523669902;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04173156263604705;  // std dev = 0.478, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,257 #pos=688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11569580838207917;  // std dev = 2.328, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.07088821605951552;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004519559985139524;  // std dev = 4.898, 194.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=29 */
%   | | | else return 0.0076723999242556545;  // std dev = 3.990, 117.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 5.58e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22891879387565003;  // std dev = 2.905, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | | else return -0.048221393800836385;  // std dev = 2.404, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else return 0.03188070046327256;  // std dev = 0.477, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,258 #pos=689 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1338951048131395;  // std dev = 2.233, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.10235587418049269;  // std dev = 0.970, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07865805388090141;  // std dev = 2.490, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.008865955864871405;  // std dev = 5.794, 279.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=40 */


Results
   AUC ROC   = 0.603276
   AUC PR    = 0.586968
   CLL	      = -0.628492
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 139.504 seconds
Total inference time: 1.995 seconds
AUC ROC: 0.603276


Results scoring model
   AUC ROC   = 0.632002
   AUC PR    = 0.564513
   CLL	      = -0.592049
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.143172
   F1        = 0.250482


Total scoring time: 3.515 seconds
Refined model CLL: -0.592049


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.603276
   AUC PR    = 0.586968
   CLL	      = -0.628492
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 149.22499999999997 seconds
Total inference time: 1.995 seconds
AUC ROC: 0.603276
Total revision time: 149.22499999999997
Best scored revision CLL: -0.592049


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:06:21
{'AUC ROC': 0.603276, 'AUC PR': 0.586968, 'CLL': -0.628492, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 149.22499999999997, 'Inference time': 1.995, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.635851, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 4.176, 'Inference time': 1.396}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995091;  // std dev = 1.08e-06, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.18524113368106748;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109571;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.16116324310484456;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 6.42e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.13764338575502313;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 2.23e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.115599674606751;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.86e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.09567969511419015;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948834;  // std dev = 2.56e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.07822683454647927;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253495;  // std dev = 3.01e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.06331850391617157;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452778;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.050839750003451915;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.04056028351410159;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 8.94e-08, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else return 0.03219722533051162;  // std dev = 27.854, 3,525.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,153 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.636639
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 5.629 seconds
Total inference time: 1.403 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.576725
   AUC PR    = 0.527721
   CLL	      = -0.605255
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153451
   F1        = 0.266073


Total scoring time: 2.149 seconds
Parameter learned model CLL: -0.605255


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 209], 'false': [27.854, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 209], 'false': [27.854, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.42e-07, 0, 209], 'false': [27.854, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 209], 'false': [27.854, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 209], 'false': [27.854, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.56e-07, 0, 209], 'false': [27.854, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 209], 'false': [27.854, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 209], 'false': [27.854, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 209], 'false': [27.854, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.94e-08, 0, 209], 'false': [27.854, 2, 1]}]]
[{'': [5.575550653811312e-15, 0.22010289220866722]}, {'': [-3.807693129432116e-15, 0.22010289220867216]}, {'': [1.9718410848844886e-15, 0.22010289220863458]}, {'': [2.3798082058950725e-16, 0.22010289220862367]}, {'': [7.139424617685217e-16, 0.2201028922086523]}, {'': [3.144746557789917e-16, 0.22010289220866947]}, {'': [4.334650660737453e-16, 0.22010289220864412]}, {'': [-5.099589012632298e-17, 0.2201028922086729]}, {'': [-1.3173938282633436e-16, 0.22010289220867793]}, {'': [3.824691759474224e-17, 0.220102892208618]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995091;  // std dev = 1.08e-06, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2107194160281971;  // std dev = 0.478, 3,015.000 (wgt'ed) examples reached here.  /* #neg=1,952 #pos=1,063 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.20950028645086372;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.08302753548872309;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.11814893509951237;  // std dev = 3.102, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.013321348892616063;  // std dev = 7.295, 406.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=63 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109571;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.42625954304743424;  // std dev = 3.364, 47.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | | | else return 0.0754128213800446;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else return 0.18097734934954635;  // std dev = 0.477, 2,919.000 (wgt'ed) examples reached here.  /* #neg=1,896 #pos=1,023 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.18203774899683453;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.07321798203220185;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.10314948706469831;  // std dev = 3.102, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.011692000309282203;  // std dev = 7.295, 406.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=63 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 6.42e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3512021341604177;  // std dev = 3.541, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.05313872279326209;  // std dev = 3.130, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else return 0.15408898948224892;  // std dev = 0.477, 2,912.000 (wgt'ed) examples reached here.  /* #neg=1,890 #pos=1,022 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.005170286927982947;  // std dev = 5.823, 277.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=40 */
%   | | | else return 0.09455559101681799;  // std dev = 3.022, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.07037791677705897;  // std dev = 5.381, 170.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=38 */
%   | | | else return -0.15562918956487298;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 2.23e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12986472858629144;  // std dev = 0.477, 3,015.000 (wgt'ed) examples reached here.  /* #neg=1,952 #pos=1,063 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.14737768795487857;  // std dev = 2.891, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.06861376905503747;  // std dev = 0.966, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.0893611445581585;  // std dev = 3.100, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.00670694337483184;  // std dev = 7.280, 406.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=63 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.86e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10658759596054328;  // std dev = 0.477, 3,015.000 (wgt'ed) examples reached here.  /* #neg=1,952 #pos=1,063 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0075214001042907775;  // std dev = 5.813, 277.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=40 */
%   | | | else return 0.0812573772901844;  // std dev = 3.023, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0561674293375053;  // std dev = 5.361, 170.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=38 */
%   | | | else return -0.1417934739407454;  // std dev = 0.107, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948834;  // std dev = 2.56e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08629631774389103;  // std dev = 0.477, 3,015.000 (wgt'ed) examples reached here.  /* #neg=1,952 #pos=1,063 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3085811289140141;  // std dev = 1.384, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.026723014393588762;  // std dev = 2.815, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.009107375465877794;  // std dev = 5.841, 285.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=40 */
%   | | | else return 0.04203992366803467;  // std dev = 5.238, 169.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253495;  // std dev = 3.01e-07, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06910767108324885;  // std dev = 0.477, 3,015.000 (wgt'ed) examples reached here.  /* #neg=1,952 #pos=1,063 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11778210112042097;  // std dev = 2.838, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.08527079312835992;  // std dev = 1.288, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.007954997090120427;  // std dev = 5.841, 285.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=40 */
%   | | | else return 0.036049082964199904;  // std dev = 5.236, 169.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452778;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.24429956723553378;  // std dev = 3.346, 47.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | | | else return -0.029627450217035115;  // std dev = 3.014, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09569204623251143;  // std dev = 4.679, 94.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=38 */
%   | | | else return 0.05182562471042753;  // std dev = 25.329, 2,825.000 (wgt'ed) examples reached here.  /* #neg=1,840 #pos=985 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.25304871307881815;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.012902141201277487;  // std dev = 2.786, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.006954437089885265;  // std dev = 5.841, 285.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=40 */
%   | | | else return 0.030782767475948176;  // std dev = 5.235, 169.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04318340877913008;  // std dev = 0.477, 3,015.000 (wgt'ed) examples reached here.  /* #neg=1,952 #pos=1,063 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09756232946809083;  // std dev = 2.839, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.07899120235761697;  // std dev = 0.971, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.04967100836181443;  // std dev = 3.049, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 2.2834219506530218E-4;  // std dev = 7.262, 406.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=63 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 8.94e-08, 209.000 (wgt'ed) examples reached here.  /* #pos=209 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2438714908403643;  // std dev = 2.442, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return -0.009257556255569956;  // std dev = 3.746, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06545363910728678;  // std dev = 4.676, 94.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=38 */
%   | | | else return 0.03161969474744743;  // std dev = 25.329, 2,825.000 (wgt'ed) examples reached here.  /* #neg=1,840 #pos=985 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.07876570252476878;  // std dev = 2.837, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.06992695724400534;  // std dev = 0.971, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.04137283456358929;  // std dev = 3.048, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 1.9850749725708192E-4;  // std dev = 7.262, 406.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=63 */


Results
   AUC ROC   = 0.602182
   AUC PR    = 0.58583
   CLL	      = -0.628855
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 146.361 seconds
Total inference time: 1.966 seconds
AUC ROC: 0.602182


Results scoring model
   AUC ROC   = 0.632922
   AUC PR    = 0.568059
   CLL	      = -0.591422
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153451
   F1        = 0.266073


Total scoring time: 2.978 seconds
Refined model CLL: -0.591422


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602182
   AUC PR    = 0.58583
   CLL	      = -0.628855
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 157.117 seconds
Total inference time: 1.966 seconds
AUC ROC: 0.602182
Total revision time: 157.117
Best scored revision CLL: -0.591422


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:09:02
{'AUC ROC': 0.602182, 'AUC PR': 0.58583, 'CLL': -0.628855, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 157.117, 'Inference time': 1.966, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.636639, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 5.629, 'Inference time': 1.403}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.07e-06, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.18301553061711656;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.1592454268286877;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.13605321915986;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831136;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.11432864238624428;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601507;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.09469759418525693;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.53e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.07749120359995412;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253479;  // std dev = 2.83e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.06278326259823629;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527694;  // std dev = 1.63e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.05046124308957786;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.04030054229598155;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801156;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.03202509857847541;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.63731
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 7.19 seconds
Total inference time: 1.413 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.580947
   AUC PR    = 0.534634
   CLL	      = -0.602169
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161894
   F1        = 0.278673


Total scoring time: 2.309 seconds
Parameter learned model CLL: -0.602169


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.53e-07, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.63e-07, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}]]
[{'': [3.866899242231838e-15, 0.2193282906343538]}, {'': [-4.736951571734001e-15, 0.21932829063448392]}, {'': [0.0, 0.2193282906344751]}, {'': [-7.008754876545206e-16, 0.2193282906344106]}, {'': [-2.416812026394899e-16, 0.21932829063441325]}, {'': [4.2294210461910723e-16, 0.21932829063442985]}, {'': [2.718913529694261e-16, 0.21932829063442966]}, {'': [9.06304509898087e-17, 0.21932829063439507]}, {'': [-2.0240800721057276e-16, 0.21932829063440962]}, {'': [-1.3292466145171942e-16, 0.21932829063443937]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.07e-06, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20848483955335143;  // std dev = 0.477, 4,019.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,408 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1642713840791042;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.09423201728144018;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.0702701472207245;  // std dev = 3.321, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.016639501137248023;  // std dev = 8.408, 530.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=84 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.181165073203904;  // std dev = 0.477, 4,019.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,408 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -4.411731900013475E-4;  // std dev = 6.661, 359.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=52 */
%   | | | else return 0.1059132806514044;  // std dev = 3.572, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.059037778263692976;  // std dev = 5.959, 219.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=45 */
%   | | | else return -0.14551898702928662;  // std dev = 0.038, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3819461557106436;  // std dev = 3.951, 64.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=37 */
%   | | | else return 0.022999237902424433;  // std dev = 3.535, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | else return 0.15286803876065838;  // std dev = 0.477, 3,882.000 (wgt'ed) examples reached here.  /* #neg=2,527 #pos=1,355 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13765388740883552;  // std dev = 3.219, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.08579636794538816;  // std dev = 0.972, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06163975272785369;  // std dev = 3.319, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.011024328423348419;  // std dev = 8.391, 530.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=84 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831136;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1286515681317137;  // std dev = 0.477, 4,019.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,408 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1269442915625852;  // std dev = 3.143, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return -0.07617865256788679;  // std dev = 1.356, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -1.329738109737275E-6;  // std dev = 6.831, 371.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=55 */
%   | | | else return 0.037874281803852335;  // std dev = 5.841, 222.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601507;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10566771989930607;  // std dev = 0.477, 4,019.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,408 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11298805226378311;  // std dev = 3.205, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.08070348115357671;  // std dev = 0.973, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.04461243521667767;  // std dev = 3.300, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.008053327312961564;  // std dev = 8.389, 530.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=84 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.53e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08562214664124508;  // std dev = 0.477, 4,019.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,408 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10279171967958844;  // std dev = 3.134, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return -0.07325118055435613;  // std dev = 1.359, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.0012969096091721179;  // std dev = 6.832, 371.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=55 */
%   | | | else return 0.029664925161467313;  // std dev = 5.827, 222.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253479;  // std dev = 2.83e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0686287204390949;  // std dev = 0.477, 4,019.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,408 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09100565058921273;  // std dev = 3.191, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.07544028685155685;  // std dev = 0.973, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.005153200112538124;  // std dev = 7.076, 369.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=60 */
%   | | | else return 0.014141627772793305;  // std dev = 5.578, 227.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=38 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527694;  // std dev = 1.63e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.29391255308680553;  // std dev = 3.823, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | | | else return -0.08195128569013413;  // std dev = 3.446, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else return 0.05327634017664786;  // std dev = 0.476, 3,887.000 (wgt'ed) examples reached here.  /* #neg=2,530 #pos=1,357 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08481893237593739;  // std dev = 3.124, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return -0.06693809774861306;  // std dev = 1.361, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0025247167436102543;  // std dev = 6.832, 371.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=55 */
%   | | | else return 0.022966879853301477;  // std dev = 5.817, 222.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2193956792934434;  // std dev = 3.935, 64.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=37 */
%   | | | else return -0.05911187776825003;  // std dev = 3.544, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07726983658550346;  // std dev = 5.173, 119.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=47 */
%   | | | else return 0.04090410859876166;  // std dev = 29.212, 3,763.000 (wgt'ed) examples reached here.  /* #neg=2,455 #pos=1,308 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.07219774244162755;  // std dev = 3.179, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.07021597512326554;  // std dev = 0.974, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.021594078910913084;  // std dev = 3.275, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.004035165693244124;  // std dev = 8.387, 530.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=84 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801156;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21772759117703666;  // std dev = 3.169, 48.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | | | else return -0.035821601324727184;  // std dev = 4.191, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | | else return 0.03300555013990875;  // std dev = 0.476, 3,882.000 (wgt'ed) examples reached here.  /* #neg=2,527 #pos=1,355 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.18419299538807843;  // std dev = 1.547, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.003609866617639626;  // std dev = 3.019, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0029159296255490902;  // std dev = 6.833, 371.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=55 */
%   | | | else return 0.01762272615788458;  // std dev = 5.809, 222.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=43 */


Results
   AUC ROC   = 0.602875
   AUC PR    = 0.586534
   CLL	      = -0.629095
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 179.122 seconds
Total inference time: 1.929 seconds
AUC ROC: 0.602875


Results scoring model
   AUC ROC   = 0.640309
   AUC PR    = 0.577435
   CLL	      = -0.588738
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161894
   F1        = 0.278673


Total scoring time: 3.578 seconds
Refined model CLL: -0.588738


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602875
   AUC PR    = 0.586534
   CLL	      = -0.629095
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 192.199 seconds
Total inference time: 1.929 seconds
AUC ROC: 0.602875
Total revision time: 192.199
Best scored revision CLL: -0.588738


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:12:18
{'AUC ROC': 0.602875, 'AUC PR': 0.586534, 'CLL': -0.629095, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 192.199, 'Inference time': 1.929, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.63731, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 7.19, 'Inference time': 1.413}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 8.693 seconds
Total inference time: 1.378 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.489 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.41979277071595067;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.06245001036832955;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.2054740379801656;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.04548402744779789;  // std dev = 7.596, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.015090501520205963;  // std dev = 3.965, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.050876207826785;  // std dev = 6.541, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17892917685378304;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1284259102691069;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07299927426723861;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.015135770661961978;  // std dev = 7.772, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03585908628673712;  // std dev = 6.447, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3303958995066458;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.0304564347773823;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.15197230591875235;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12337168144360361;  // std dev = 3.498, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07886588053340036;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0527064803900193;  // std dev = 3.642, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.015553459590196557;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.314173484419299;  // std dev = 3.528, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return 0.03388302108359444;  // std dev = 4.477, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | else return 0.12697451353508726;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1068879425605099;  // std dev = 3.497, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06907451544507559;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04570144870311812;  // std dev = 3.640, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.013575954079852908;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10444732685224858;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09146962755895859;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06094217830615227;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0074511279841729516;  // std dev = 7.771, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026991693204737436;  // std dev = 6.428, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.29835597370615874;  // std dev = 4.218, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.05546247187785529;  // std dev = 3.900, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.08419922202633894;  // std dev = 0.475, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09543811029007317;  // std dev = 3.480, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08213825224339641;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006742216306578741;  // std dev = 7.774, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.021805019745495875;  // std dev = 6.410, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21992870068971523;  // std dev = 3.545, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.005947802457068756;  // std dev = 4.394, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else return 0.06786377842951627;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08101534962908442;  // std dev = 3.478, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07177104755851542;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.029214221398426325;  // std dev = 3.611, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.008506925791705276;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.22248772971145844;  // std dev = 4.214, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.057450379581199314;  // std dev = 3.897, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.05358697843760671;  // std dev = 0.475, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.19978730811261505;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005609929563290821;  // std dev = 3.387, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.003171103560446337;  // std dev = 7.772, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01865095754046355;  // std dev = 6.407, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04259077321079867;  // std dev = 0.474, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06670121484152132;  // std dev = 3.471, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06708839367633838;  // std dev = 1.336, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0027508051456871896;  // std dev = 7.772, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.016084899305796627;  // std dev = 6.407, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03350733363386696;  // std dev = 0.474, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.005504311828351178;  // std dev = 7.657, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07946900854913772;  // std dev = 3.729, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.02215324292881242;  // std dev = 6.480, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1424846329046897;  // std dev = 0.117, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.602778
   AUC PR    = 0.586439
   CLL	      = -0.629276
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 316.684 seconds
Total inference time: 1.981 seconds
AUC ROC: 0.602778


Results scoring model
   AUC ROC   = 0.640099
   AUC PR    = 0.578712
   CLL	      = -0.587221
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 4.328 seconds
Refined model CLL: -0.587221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602778
   AUC PR    = 0.586439
   CLL	      = -0.629276
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 332.194 seconds
Total inference time: 1.981 seconds
AUC ROC: 0.602778
Total revision time: 332.194
Best scored revision CLL: -0.587221


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 04:17:55
{'AUC ROC': 0.602778, 'AUC PR': 0.586439, 'CLL': -0.629276, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 332.194, 'Inference time': 1.981, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 8.693, 'Inference time': 1.378}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.1758847841561112;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.69e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.15309773577158037;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.15e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.1309478377875883;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.11023724291193439;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.09152508795018865;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.07510457286203133;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06103796597757267;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 2.11e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.0492198348589414;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.03944289201242138;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.031452103791215436;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.72238
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.062 seconds
Total inference time: 1.18 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.573022
   AUC PR    = 0.511266
   CLL	      = -0.60088
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.146045
   F1        = 0.254867


Total scoring time: 1.587 seconds
Parameter learned model CLL: -0.60088


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.15e-07, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.83e-08, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.94e-08, 0, 72], 'false': [16.948, 904, 421]}]]
[{'': [-1.282924384011292e-15, 0.21677977928086614]}, {'': [3.9474596431116675e-16, 0.2167797792808697]}, {'': [6.41462192005646e-16, 0.21677977928086653]}, {'': [-9.868649107779169e-17, 0.21677977928089034]}, {'': [-3.4540271877227093e-16, 0.21677977928089495]}, {'': [-1.2335811384723961e-17, 0.2167797792808878]}, {'': [-8.635067969306773e-17, 0.21677977928087094]}, {'': [6.1679056923619804e-18, 0.2167797792808844]}, {'': [6.47630097698008e-17, 0.21677977928088565]}, {'': [3.39234813079909e-17, 0.21677977928088832]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1911764580352873;  // std dev = 15.560, 1,090.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=363 */
%   | | | else return 0.2217852987358757;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.032391359341936224;  // std dev = 4.358, 132.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=23 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.69e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1662755095617802;  // std dev = 15.560, 1,090.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=363 */
%   | | | else return 0.19258789115538286;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856348;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2616318086752123;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.028402454283694163;  // std dev = 4.358, 132.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.15e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1440888410921196;  // std dev = 15.638, 1,097.000 (wgt'ed) examples reached here.  /* #neg=729 #pos=368 */
%   | | | else return 0.11612473224570481;  // std dev = 3.205, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2564123687585864;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2192721473492705;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.027593004606615124;  // std dev = 3.509, 86.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=15 */
%   | | | else return 0.004432362162785754;  // std dev = 2.602, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1186888163396868;  // std dev = 15.559, 1,090.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=363 */
%   | | | else return 0.14192478865153685;  // std dev = 3.569, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20243745064779356;  // std dev = 2.300, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.16836106024214584;  // std dev = 1.629, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0018115872559979925;  // std dev = 3.045, 77.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | | else return 0.07212086350353061;  // std dev = 1.758, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.01769664427257032;  // std dev = 2.579, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return -0.14997797330699544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6220493712035055;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.06490651406064818;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09624461483429655;  // std dev = 15.743, 1,118.000 (wgt'ed) examples reached here.  /* #neg=747 #pos=371 */
%   | | | else return 0.15094263425677903;  // std dev = 2.819, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.10230426284981516;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11491262763386297;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.021217271887900423;  // std dev = 4.352, 132.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08163823886787494;  // std dev = 15.615, 1,097.000 (wgt'ed) examples reached here.  /* #neg=729 #pos=368 */
%   | | | else return 0.05602109086799396;  // std dev = 3.201, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1324523990783241;  // std dev = 1.875, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.10567342318694387;  // std dev = 2.103, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.09328410571691595;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02057529276741485;  // std dev = 3.503, 86.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=15 */
%   | | | else return 8.312367239665952E-4;  // std dev = 2.596, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0640238913559048;  // std dev = 15.534, 1,090.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=363 */
%   | | | else return 0.08452012676685641;  // std dev = 3.570, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10080368453188379;  // std dev = 2.305, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.06986054934140139;  // std dev = 1.620, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08568796001304402;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017882062021993092;  // std dev = 3.503, 86.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=15 */
%   | | | else return 7.235072729916681E-4;  // std dev = 2.596, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 2.11e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4587243123431181;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.024960357192953763;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04995911332919221;  // std dev = 15.742, 1,118.000 (wgt'ed) examples reached here.  /* #neg=747 #pos=371 */
%   | | | else return 0.06877320273829765;  // std dev = 2.818, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0050683960632616435;  // std dev = 3.035, 77.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | | else return 0.05622247797963066;  // std dev = 1.755, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.013024339207025318;  // std dev = 2.578, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return -0.1344724591296321;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04220071750609731;  // std dev = 15.597, 1,097.000 (wgt'ed) examples reached here.  /* #neg=729 #pos=368 */
%   | | | else return 0.019790151024451186;  // std dev = 3.198, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06034000787999744;  // std dev = 2.305, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.036610489017100095;  // std dev = 1.619, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07945550564440415;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014440418214001889;  // std dev = 3.501, 86.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=15 */
%   | | | else return 5.115612193919428E-4;  // std dev = 2.592, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3349409272222588;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.01136867746773825;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.031137729184276198;  // std dev = 15.742, 1,118.000 (wgt'ed) examples reached here.  /* #neg=747 #pos=371 */
%   | | | else return 0.03946499068494675;  // std dev = 2.818, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.019170746599662728;  // std dev = 2.989, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return -0.027825435081917795;  // std dev = 1.826, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011377353024523527;  // std dev = 2.578, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return -0.1196297838783404;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.6634
   AUC PR    = 0.698568
   CLL	      = -0.720818
   Precision = 0.818182 at threshold = 0.5
   Recall    = 0.18
   F1        = 0.295082


Total learning time: 255.835 seconds
Total inference time: 2.479 seconds
AUC ROC: 0.6634


Results scoring model
   AUC ROC   = 0.626123
   AUC PR    = 0.552415
   CLL	      = -0.587926
   Precision = 0.987342 at threshold = 0.5
   Recall    = 0.158215
   F1        = 0.272727


Total scoring time: 7.32 seconds
Refined model CLL: -0.587926


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.6634
   AUC PR    = 0.698568
   CLL	      = -0.720818
   Precision = 0.818182 at threshold = 0.5
   Recall    = 0.18
   F1        = 0.295082


Total learning time: 267.804 seconds
Total inference time: 2.479 seconds
AUC ROC: 0.6634
Total revision time: 267.804
Best scored revision CLL: -0.587926


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 04:22:27
{'AUC ROC': 0.6634, 'AUC PR': 0.698568, 'CLL': -0.720818, 'Precision': [0.818182, 0.5], 'Recall': 0.18, 'F1': 0.295082, 'Learning time': 267.804, 'Inference time': 2.479, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.72238, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 3.062, 'Inference time': 1.18}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.17095775303945404;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.14884721190613562;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.12741085573221364;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.10739325264565866;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.08930980683802438;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.07342872273268869;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.05980441455669402;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.048335798517006194;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.0388267755560896;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.031036124671879918;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726402
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.602 seconds
Total inference time: 1.21 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.582657
   AUC PR    = 0.527387
   CLL	      = -0.593866
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165314
   F1        = 0.283725


Total scoring time: 1.989 seconds
Parameter learned model CLL: -0.593866


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.02e-06, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.53e-07, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.38e-07, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.65e-07, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 163], 'false': [23.781, 1, 823]}]]
[{'': [6.3643705166242106e-15, 0.21495946135898503]}, {'': [-2.7898610483832155e-15, 0.21495946135894697]}, {'': [1.8744378918824727e-15, 0.214959461358933]}, {'': [1.176972629786669e-15, 0.21495946135893965]}, {'': [8.064442092982732e-16, 0.2149594613589722]}, {'': [-2.3975368384543257e-16, 0.21495946135897828]}, {'': [4.3046684144975393e-16, 0.21495946135897198]}, {'': [-3.1603894688716113e-16, 0.21495946135895924]}, {'': [-2.424781575254943e-16, 0.21495946135895314]}, {'': [5.4489473601234677e-17, 0.21495946135894933]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.193028341407485;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.14133477580747553;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951196;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0023161811795577797;  // std dev = 4.544, 172.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=24 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.024204006076958263;  // std dev = 3.254, 102.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16786992273479026;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.12324458461187153;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3119041706409404;  // std dev = 3.086, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.2765004872204979;  // std dev = 2.727, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.027127343439757395;  // std dev = 3.995, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
%   | | | else return 0.059502869898915546;  // std dev = 2.363, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.02165359688130385;  // std dev = 3.111, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14319491785615263;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.10598387530929496;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2597137890938937;  // std dev = 3.166, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.22800720930062818;  // std dev = 2.632, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0712928557064753;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.005276635760308975;  // std dev = 4.552, 181.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=24 */
%   | | | else return -0.024758305355909446;  // std dev = 3.119, 98.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12002470757565668;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.08999938265454702;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2128018103372688;  // std dev = 3.091, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.1814975618336747;  // std dev = 2.719, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.007352520510694329;  // std dev = 4.019, 131.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=19 */
%   | | | else return -0.04449841196773932;  // std dev = 2.127, 55.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01750903634044168;  // std dev = 3.254, 102.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=12 */
%   | | | else return -0.10987153172857027;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09908599493000675;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.07558324453547577;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.16758396203057213;  // std dev = 3.172, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.14106565995575204;  // std dev = 2.624, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.11955689039488292;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0020739442314292988;  // std dev = 4.535, 172.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=24 */
%   | | | else return -0.020147865888147237;  // std dev = 3.260, 108.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08076660556597529;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.06287470317330657;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1327307415665561;  // std dev = 3.097, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.10661513808845566;  // std dev = 2.711, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.017897915857277683;  // std dev = 3.992, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
%   | | | else return 0.05381278330115113;  // std dev = 2.357, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.016696429440070493;  // std dev = 3.109, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return -0.09778572814424367;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06515662340248522;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.05188481422790376;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10171190439136915;  // std dev = 3.177, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.07985254016364564;  // std dev = 2.616, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.10691571285769055;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06101447869483175;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.0014939914738345448;  // std dev = 5.495, 265.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=35 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05213174799334413;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.042531347391242966;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07985774622199225;  // std dev = 3.102, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.05841075560322646;  // std dev = 2.705, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0145388804165005;  // std dev = 3.989, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
%   | | | else return 0.04778449950358274;  // std dev = 2.355, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.014359367538901314;  // std dev = 3.109, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return -0.08936987680703547;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0414406924743137;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.034673684842552815;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06068061812977019;  // std dev = 3.181, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.04254922023933517;  // std dev = 2.610, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.012943897780648164;  // std dev = 3.989, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
%   | | | else return 0.04152069151151918;  // std dev = 2.355, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.01270301417936651;  // std dev = 3.109, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return -0.08235866017313322;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0327757606170005;  // std dev = 21.914, 2,156.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=722 */
%   | | | else return 0.028141937702478498;  // std dev = 4.789, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.047903291092460956;  // std dev = 3.105, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.03025109696325552;  // std dev = 2.700, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09644310628638983;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.003037234526355518;  // std dev = 4.627, 184.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=25 */
%   | | | else return -0.013570521164842508;  // std dev = 3.111, 96.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */


Results
   AUC ROC   = 0.681787
   AUC PR    = 0.722373
   CLL	      = -0.71394
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 594.86 seconds
Total inference time: 2.522 seconds
AUC ROC: 0.681787


Results scoring model
   AUC ROC   = 0.634616
   AUC PR    = 0.561205
   CLL	      = -0.580091
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165314
   F1        = 0.283725


Total scoring time: 17.51 seconds
Refined model CLL: -0.580091


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.681787
   AUC PR    = 0.722373
   CLL	      = -0.71394
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 618.961 seconds
Total inference time: 2.522 seconds
AUC ROC: 0.681787
Total revision time: 618.961
Best scored revision CLL: -0.580091


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 04:32:51
{'AUC ROC': 0.681787, 'AUC PR': 0.722373, 'CLL': -0.71394, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 618.961, 'Inference time': 2.522, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726402, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.602, 'Inference time': 1.21}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.17044297819202936;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.1484029892610855;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.12704087032161357;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.10709530948102827;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.08907725344070788;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.0732523527266349;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.05967420785384941;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.048242165152489795;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.03876125920697972;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 4.21e-08, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.030991678782524276;  // std dev = 29.108, 3,945.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,232 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.72683
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 5.953 seconds
Total inference time: 1.18 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583784
   AUC PR    = 0.529296
   CLL	      = -0.593082
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167568
   F1        = 0.287037


Total scoring time: 2.36 seconds
Parameter learned model CLL: -0.593082


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 248], 'false': [29.108, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 248], 'false': [29.108, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.77e-07, 0, 248], 'false': [29.108, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 248], 'false': [29.108, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 248], 'false': [29.108, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 248], 'false': [29.108, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 248], 'false': [29.108, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 248], 'false': [29.108, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 248], 'false': [29.108, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 248], 'false': [29.108, 2, 1]}]]
[{'': [4.6987503493813075e-15, 0.21476647374147415]}, {'': [-4.354939348207066e-15, 0.2147664737414583]}, {'': [9.168293364646454e-16, 0.21476647374146832]}, {'': [-3.1516008440972187e-16, 0.21476647374144908]}, {'': [2.2920733411616134e-16, 0.2147664737414659]}, {'': [3.867873763210223e-16, 0.21476647374145674]}, {'': [3.36648271983112e-16, 0.21476647374141927]}, {'': [-3.223228136008519e-17, 0.21476647374141836]}, {'': [-1.7906822977825104e-16, 0.21476647374147423]}, {'': [7.162729191130042e-18, 0.21476647374146607]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18549363668294205;  // std dev = 26.891, 3,284.000 (wgt'ed) examples reached here.  /* #neg=2,209 #pos=1,075 */
%   | | | else return 0.1384037121695756;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4241866709485678;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return 0.35814893509951196;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.08629550934493224;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.08921948595311938;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.021250539377587432;  // std dev = 7.145, 374.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=61 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16138079761774737;  // std dev = 26.891, 3,284.000 (wgt'ed) examples reached here.  /* #neg=2,209 #pos=1,075 */
%   | | | else return 0.1207069464108468;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3643554966369202;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return 0.3087411357856348;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07611187483440301;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022437563992928507;  // std dev = 5.844, 247.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=41 */
%   | | | else return -4.4222001881192614E-4;  // std dev = 4.239, 146.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=21 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1378394674927332;  // std dev = 26.956, 3,302.000 (wgt'ed) examples reached here.  /* #neg=2,222 #pos=1,080 */
%   | | | else return 0.09907448481377719;  // std dev = 5.303, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.29934308830333733;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return 0.2564123687585871;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -5.422089774311321E-4;  // std dev = 5.149, 218.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=31 */
%   | | | else return 0.08303448174594026;  // std dev = 2.908, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.004172273086416403;  // std dev = 4.221, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | | else return -0.14440297385459921;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11578204695732973;  // std dev = 26.956, 3,302.000 (wgt'ed) examples reached here.  /* #neg=2,222 #pos=1,080 */
%   | | | else return 0.08389382810271999;  // std dev = 5.303, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23690600830107555;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return 0.2061374073445401;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06868404599240988;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.017435741167624856;  // std dev = 5.843, 250.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=41 */
%   | | | else return -7.195394102208028E-5;  // std dev = 4.229, 143.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09598404477088349;  // std dev = 26.889, 3,284.000 (wgt'ed) examples reached here.  /* #neg=2,209 #pos=1,075 */
%   | | | else return 0.0702937050491399;  // std dev = 5.633, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.182653586872043;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return 0.16162857548414633;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.061402286821659186;  // std dev = 0.973, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.016484126480298296;  // std dev = 5.837, 247.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=41 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003533237816308199;  // std dev = 4.225, 140.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=21 */
%   | | | else return -0.12745324946319744;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.078443001971885;  // std dev = 26.955, 3,302.000 (wgt'ed) examples reached here.  /* #neg=2,222 #pos=1,080 */
%   | | | else return 0.05661058862980341;  // std dev = 5.306, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13865929615139097;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return 0.12455597792081943;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0025458812582708737;  // std dev = 5.147, 218.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=31 */
%   | | | else return 0.06866241588143666;  // std dev = 2.905, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0017927578726434884;  // std dev = 4.220, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | | else return -0.1139392747675131;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06359406753335768;  // std dev = 26.888, 3,284.000 (wgt'ed) examples reached here.  /* #neg=2,209 #pos=1,075 */
%   | | | else return 0.04664464755693963;  // std dev = 5.635, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10443594389316374;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return 0.09492800936730648;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.08445779101890312;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.01603182806406734;  // std dev = 5.827, 247.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=41 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0015649745059700853;  // std dev = 4.220, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | | else return -0.10293236553847902;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.051045177807751474;  // std dev = 26.954, 3,302.000 (wgt'ed) examples reached here.  /* #neg=2,222 #pos=1,080 */
%   | | | else return 0.03690836363533036;  // std dev = 5.309, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07840019300320357;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return 0.07186088850055886;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07476962102443317;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.013979888081440262;  // std dev = 5.827, 247.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=41 */
%   | | | else return -0.002572365268092222;  // std dev = 4.226, 145.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04078484030594477;  // std dev = 26.887, 3,284.000 (wgt'ed) examples reached here.  /* #neg=2,209 #pos=1,075 */
%   | | | else return 0.030114079954862077;  // std dev = 5.637, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05930849268126424;  // std dev = 3.667, 53.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | | | else return 0.053513520877148266;  // std dev = 3.094, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.058514068292055715;  // std dev = 0.974, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.012388086044472788;  // std dev = 5.825, 247.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=41 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -2.276643619731713E-4;  // std dev = 4.224, 140.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=21 */
%   | | | else return -0.09359036805366837;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 4.21e-08, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.29558256340954847;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return -0.10273629339294081;  // std dev = 2.857, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03216646642965093;  // std dev = 27.186, 3,369.000 (wgt'ed) examples reached here.  /* #neg=2,273 #pos=1,096 */
%   | | | else return 0.048812967686613924;  // std dev = 4.764, 92.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06785762128505453;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05273449627520668;  // std dev = 0.974, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.009108823311633296;  // std dev = 7.126, 374.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=61 */


Results
   AUC ROC   = 0.682935
   AUC PR    = 0.718627
   CLL	      = -0.713859
   Precision = 0.988636 at threshold = 0.5
   Recall    = 0.158182
   F1        = 0.272727


Total learning time: 795.742 seconds
Total inference time: 2.834 seconds
AUC ROC: 0.682935


Results scoring model
   AUC ROC   = 0.634428
   AUC PR    = 0.567092
   CLL	      = -0.582374
   Precision = 0.926667 at threshold = 0.5
   Recall    = 0.187838
   F1        = 0.31236


Total scoring time: 25.264 seconds
Refined model CLL: -0.582374


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682935
   AUC PR    = 0.718627
   CLL	      = -0.713859
   Precision = 0.988636 at threshold = 0.5
   Recall    = 0.158182
   F1        = 0.272727


Total learning time: 829.319 seconds
Total inference time: 2.834 seconds
AUC ROC: 0.682935
Total revision time: 829.319
Best scored revision CLL: -0.582374


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 04:46:45
{'AUC ROC': 0.682935, 'AUC PR': 0.718627, 'CLL': -0.713859, 'Precision': [0.988636, 0.5], 'Recall': 0.158182, 'F1': 0.272727, 'Learning time': 829.319, 'Inference time': 2.834, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.72683, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 5.953, 'Inference time': 1.18}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.05e-06, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.16945891225106846;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.14755372604264774;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.12633335722298122;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831175;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.10652532474007145;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601513;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.08863211261093434;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 4.00e-07, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.07291451967966243;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.05942459502094173;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527644;  // std dev = 2.92e-07, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.04806249496206886;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.038635402952280885;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080119;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else return 0.030906185283880894;  // std dev = 33.556, 5,252.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,635 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.72765
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 8.1 seconds
Total inference time: 1.159 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.585656
   AUC PR    = 0.532341
   CLL	      = -0.591693
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.171313
   F1        = 0.292514


Total scoring time: 2.48 seconds
Parameter learned model CLL: -0.591693


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 338], 'false': [33.556, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 338], 'false': [33.556, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 338], 'false': [33.556, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 338], 'false': [33.556, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 338], 'false': [33.556, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4e-07, 0, 338], 'false': [33.556, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 338], 'false': [33.556, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 338], 'false': [33.556, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 338], 'false': [33.556, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 338], 'false': [33.556, 3, 1]}]]
[{'': [3.2794280112004626e-15, 0.21439607527739868]}, {'': [-5.129361761108416e-15, 0.21439607527740856]}, {'': [-5.886152840616215e-16, 0.21439607527742513]}, {'': [-1.0300767471078375e-15, 0.2143960752773802]}, {'': [-7.988350283693434e-16, 0.21439607527740212]}, {'': [4.729944246923744e-16, 0.2143960752774426]}, {'': [1.7868678266156366e-16, 0.2143960752774503]}, {'': [2.5226369316926634e-16, 0.21439607527744467]}, {'': [-2.338694655423407e-16, 0.214396075277492]}, {'': [-2.286139719346476e-16, 0.2143960752774607]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.05e-06, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18335592681983837;  // std dev = 30.889, 4,348.000 (wgt'ed) examples reached here.  /* #neg=2,934 #pos=1,414 */
%   | | | else return 0.1366877478849016;  // std dev = 6.634, 219.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3933602027051451;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.35814893509951123;  // std dev = 3.606, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02319747878883258;  // std dev = 6.526, 309.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=51 */
%   | | | else return 0.11572469267526996;  // std dev = 3.553, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.012845067696196835;  // std dev = 4.865, 181.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15955590612631693;  // std dev = 30.945, 4,365.000 (wgt'ed) examples reached here.  /* #neg=2,946 #pos=1,419 */
%   | | | else return 0.11545774145023496;  // std dev = 6.366, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.33844667803884393;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.3087411357856347;  // std dev = 3.606, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.020350136530227974;  // std dev = 6.526, 309.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=51 */
%   | | | else return 0.10104558025696674;  // std dev = 3.553, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01127424117318466;  // std dev = 4.865, 181.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=28 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13641346035076232;  // std dev = 30.888, 4,348.000 (wgt'ed) examples reached here.  /* #neg=2,934 #pos=1,414 */
%   | | | else return 0.10033601150182288;  // std dev = 6.637, 219.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2794644128396347;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.2564123687585865;  // std dev = 3.606, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07728382982385773;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07031213361604766;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.032222581329197426;  // std dev = 8.662, 508.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=92 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831175;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11467218651687021;  // std dev = 30.944, 4,365.000 (wgt'ed) examples reached here.  /* #neg=2,946 #pos=1,419 */
%   | | | else return 0.08179252489167096;  // std dev = 6.370, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22276956164281106;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.20613740734453992;  // std dev = 3.606, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01584139686332534;  // std dev = 6.518, 309.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=51 */
%   | | | else return 0.08309695896420943;  // std dev = 3.550, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0059947320201621315;  // std dev = 4.864, 181.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=28 */
%   | | | else return -0.11556937042960062;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601513;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09498897841439537;  // std dev = 30.943, 4,365.000 (wgt'ed) examples reached here.  /* #neg=2,946 #pos=1,419 */
%   | | | else return 0.06861398203726345;  // std dev = 6.371, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17405531653161252;  // std dev = 4.162, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.16075586342660622;  // std dev = 3.652, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06360351824418639;  // std dev = 0.266, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07025766028923908;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.02536603628320681;  // std dev = 8.656, 508.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=92 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 4.00e-07, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07786141850699374;  // std dev = 30.885, 4,348.000 (wgt'ed) examples reached here.  /* #neg=2,934 #pos=1,414 */
%   | | | else return 0.056106968915784386;  // std dev = 6.645, 219.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13393295717583553;  // std dev = 4.204, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.12223817898866973;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012305518586927173;  // std dev = 6.512, 309.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=51 */
%   | | | else return 0.06732492927972836;  // std dev = 3.549, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0021032741377010906;  // std dev = 4.864, 181.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=28 */
%   | | | else return -0.10666424839840992;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06308354599339332;  // std dev = 30.885, 4,348.000 (wgt'ed) examples reached here.  /* #neg=2,934 #pos=1,414 */
%   | | | else return 0.04625668734969324;  // std dev = 6.645, 219.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1031343691130351;  // std dev = 4.165, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.09116250253133436;  // std dev = 3.648, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06382353230411965;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02459468629891082;  // std dev = 7.285, 349.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=66 */
%   | | | else return 3.615339438463519E-5;  // std dev = 4.866, 185.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527644;  // std dev = 2.92e-07, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05073077669814693;  // std dev = 30.942, 4,365.000 (wgt'ed) examples reached here.  /* #neg=2,946 #pos=1,419 */
%   | | | else return 0.03618976201499136;  // std dev = 6.377, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07786433913796921;  // std dev = 4.165, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.06873109047642995;  // std dev = 3.648, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05653689380648635;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06040917493161284;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.0176644121284994;  // std dev = 8.649, 508.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=92 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5006214445060784;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return -0.09404110105101532;  // std dev = 3.328, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03929704295833694;  // std dev = 31.234, 4,469.000 (wgt'ed) examples reached here.  /* #neg=3,029 #pos=1,440 */
%   | | | else return 0.05608174841945036;  // std dev = 5.491, 121.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=63 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.050364274687105574;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05340788923420191;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.01524054533278825;  // std dev = 8.649, 508.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=92 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080119;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #pos=338 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.37349733366822285;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return -0.04435887338487489;  // std dev = 3.540, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.030856350504112007;  // std dev = 31.204, 4,474.000 (wgt'ed) examples reached here.  /* #neg=3,033 #pos=1,441 */
%   | | | else return 0.04256643714595409;  // std dev = 5.489, 121.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=63 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04747296768351924;  // std dev = 0.266, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01836973502106092;  // std dev = 7.279, 349.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=66 */
%   | | | else return -0.005375533737020147;  // std dev = 4.868, 187.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=28 */


Results
   AUC ROC   = 0.682502
   AUC PR    = 0.715112
   CLL	      = -0.714828
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 1062.997 seconds
Total inference time: 2.595 seconds
AUC ROC: 0.682502


Results scoring model
   AUC ROC   = 0.638505
   AUC PR    = 0.574748
   CLL	      = -0.581515
   Precision = 0.964187 at threshold = 0.5
   Recall    = 0.177395
   F1        = 0.299658


Total scoring time: 27.042 seconds
Refined model CLL: -0.581515


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682502
   AUC PR    = 0.715112
   CLL	      = -0.714828
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 1100.619 seconds
Total inference time: 2.595 seconds
AUC ROC: 0.682502
Total revision time: 1100.619
Best scored revision CLL: -0.581515


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:05:10
{'AUC ROC': 0.682502, 'AUC PR': 0.715112, 'CLL': -0.714828, 'Precision': [1.0, 0.5], 'Recall': 0.152727, 'F1': 0.264984, 'Learning time': 1100.619, 'Inference time': 2.595, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.72765, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 8.1, 'Inference time': 1.159}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 10.21 seconds
Total inference time: 1.23 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 2.615 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16281165607612214;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.11705241862532775;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06323004872688665;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06261940488996087;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.025921138191458408;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13902683790466852;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.1005128805374948;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26507324162691553;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.055596679672389133;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.055084618573868996;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02269140971171115;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11683219078218114;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.0829882962972919;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611724;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.20308413151775798;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04916827147944293;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02797707555951965;  // std dev = 8.048, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004858141929855241;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09665825156236615;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068729;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16750919730103572;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566578;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05142188879915446;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02659759925639643;  // std dev = 8.044, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007038988836347634;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07907700488650458;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.05588637066419656;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12986669782561105;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224823;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04613759631090431;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02387509773157811;  // std dev = 8.042, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007336249131648576;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0639687050699186;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.04604740227441103;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180404;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.0916685149520168;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03856600993094224;  // std dev = 6.058, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.0033998804374362757;  // std dev = 5.536, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004988455897028461;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1287034020005375;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4363307661888433;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.0560222596714836;  // std dev = 4.015, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05007518751086468;  // std dev = 34.950, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.07261257093281712;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00598203695272904;  // std dev = 7.210, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05607986610633627;  // std dev = 3.916, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004340663828144412;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11494710974678714;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0410305921022743;  // std dev = 34.563, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.027527883231084495;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05850328953639904;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.05030428589983234;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05216086374238273;  // std dev = 0.272, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01832685790779697;  // std dev = 8.033, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006978226954084138;  // std dev = 5.538, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4176818384558336;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.07302891046509091;  // std dev = 4.006, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03142302053309652;  // std dev = 34.916, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.041474036459775626;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04722923883280133;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017073955781522758;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008098432944681754;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */


Results
   AUC ROC   = 0.682524
   AUC PR    = 0.714934
   CLL	      = -0.711823
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 1275.131 seconds
Total inference time: 2.887 seconds
AUC ROC: 0.682524


Results scoring model
   AUC ROC   = 0.639173
   AUC PR    = 0.572121
   CLL	      = -0.582242
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 33.419 seconds
Refined model CLL: -0.582242


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682524
   AUC PR    = 0.714934
   CLL	      = -0.711823
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 1321.3750000000002 seconds
Total inference time: 2.887 seconds
AUC ROC: 0.682524
Total revision time: 1321.3750000000002
Best scored revision CLL: -0.582242


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:27:16
{'AUC ROC': 0.682524, 'AUC PR': 0.714934, 'CLL': -0.711823, 'Precision': [1.0, 0.5], 'Recall': 0.152727, 'F1': 0.264984, 'Learning time': 1321.3750000000002, 'Inference time': 2.887, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 10.21, 'Inference time': 1.23}}


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.1965752147022576;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.17092278158641516;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.82e-07, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.1457171372068941;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1.52e-07, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.1220287769339256;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.10062212627768911;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.08190603774110519;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.06597634132371943;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.71e-08, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.052704004505898745;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.041827591745865256;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else return 0.033027603393209266;  // std dev = 17.119, 1,309.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=443 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555251
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 3.409 seconds
Total inference time: 1.219 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.581285
   AUC PR    = 0.5474
   CLL	      = -0.609809
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162571
   F1        = 0.279675


Total scoring time: 1.815 seconds
Parameter learned model CLL: -0.609809


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 86], 'false': [17.119, 866, 443]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 86], 'false': [17.119, 866, 443]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.82e-07, 0, 86], 'false': [17.119, 866, 443]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.52e-07, 0, 86], 'false': [17.119, 866, 443]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 86], 'false': [17.119, 866, 443]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 86], 'false': [17.119, 866, 443]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 86], 'false': [17.119, 866, 443]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.71e-08, 0, 86], 'false': [17.119, 866, 443]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 86], 'false': [17.119, 866, 443]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 86], 'false': [17.119, 866, 443]}]]
[{'': [-3.304849933767908e-16, 0.22389393287697568]}, {'': [9.088337317861747e-16, 0.2238939328769746]}, {'': [1.6937355910560528e-15, 0.22389393287699255]}, {'': [2.685190571186425e-16, 0.22389393287699355]}, {'': [-3.511403054628402e-16, 0.2238939328769949]}, {'': [-5.163828021512356e-17, 0.2238939328769788]}, {'': [-1.1360421647327184e-16, 0.2238939328769812]}, {'': [2.581914010756178e-17, 0.22389393287698223]}, {'': [-6.196593625814827e-17, 0.2238939328769977]}, {'': [3.872871016134267e-17, 0.22389393287699136]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21758289736365843;  // std dev = 15.622, 1,060.000 (wgt'ed) examples reached here.  /* #neg=679 #pos=381 */
%   | | | else return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.42064893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02481560176617905;  // std dev = 3.764, 102.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=17 */
%   | | | else return -0.008517731567154362;  // std dev = 2.280, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18898052857534542;  // std dev = 15.622, 1,060.000 (wgt'ed) examples reached here.  /* #neg=679 #pos=381 */
%   | | | else return 0.12992741117034426;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.361386758207022;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.4285227559352605;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0657192853573769;  // std dev = 4.046, 98.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=21 */
%   | | | else return -0.08934322691870539;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else return -0.014856571210362083;  // std dev = 0.330, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.82e-07, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16057426819502868;  // std dev = 15.622, 1,060.000 (wgt'ed) examples reached here.  /* #neg=679 #pos=381 */
%   | | | else return 0.11159692245093909;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.29707588146212427;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.34770087126293936;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.05722000246434179;  // std dev = 4.046, 98.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=21 */
%   | | | else return -0.07862063711837501;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else return -0.013079120977774882;  // std dev = 0.330, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1.52e-07, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13388782453757198;  // std dev = 15.578, 1,056.000 (wgt'ed) examples reached here.  /* #neg=677 #pos=379 */
%   | | | else return 0.09482767036348055;  // std dev = 3.568, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23530262435174626;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.2706524682508071;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.19218524553944244;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.1266999703728316;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01212621693433685;  // std dev = 3.747, 102.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=17 */
%   | | | else return -0.004137946735931861;  // std dev = 2.280, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10969339537498432;  // std dev = 15.620, 1,060.000 (wgt'ed) examples reached here.  /* #neg=679 #pos=381 */
%   | | | else return 0.07631265302299436;  // std dev = 3.376, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18242660936002972;  // std dev = 2.163, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.21342917906492817;  // std dev = 1.572, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1605466607701396;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.009221223471277684;  // std dev = 3.750, 103.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=17 */
%   | | else return -0.010259954409751791;  // std dev = 0.330, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08874376949208812;  // std dev = 15.575, 1,056.000 (wgt'ed) examples reached here.  /* #neg=677 #pos=379 */
%   | | | else return 0.061996976175146705;  // std dev = 3.578, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1334439285972035;  // std dev = 1.981, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.15971969887280796;  // std dev = 1.796, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13140531824366736;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.11284333790639986;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009320394369498905;  // std dev = 3.747, 102.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=17 */
%   | | | else return -0.0024396393638945867;  // std dev = 2.280, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07089682048596412;  // std dev = 15.574, 1,056.000 (wgt'ed) examples reached here.  /* #neg=677 #pos=379 */
%   | | | else return 0.0504331366103268;  // std dev = 3.580, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10019478860363736;  // std dev = 2.160, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.12813832023072136;  // std dev = 1.575, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.034712622617822625;  // std dev = 4.015, 98.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=21 */
%   | | | else return -0.07314688983638555;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.09800504059817305;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0021536296045066503;  // std dev = 2.280, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.71e-08, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.23049116808759718;  // std dev = 2.414, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return -0.17766973137778616;  // std dev = 0.690, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.053541414342419234;  // std dev = 15.760, 1,087.000 (wgt'ed) examples reached here.  /* #neg=702 #pos=385 */
%   | | | else return 0.05346798544491111;  // std dev = 2.607, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09872878476431406;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.09667881754426273;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005991487190508942;  // std dev = 3.542, 99.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=15 */
%   | | | else return -0.0024381721200686904;  // std dev = 2.580, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.044126946502610134;  // std dev = 15.603, 1,060.000 (wgt'ed) examples reached here.  /* #neg=679 #pos=381 */
%   | | | else return 0.028643419774183002;  // std dev = 3.389, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05546414878579472;  // std dev = 1.968, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.08530695330117921;  // std dev = 1.810, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07815455254233641;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.08857127131374248;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.005245578826904382;  // std dev = 3.742, 102.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=17 */
%   | | | else return -0.0025818525007435295;  // std dev = 2.280, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0345756851029782;  // std dev = 15.559, 1,056.000 (wgt'ed) examples reached here.  /* #neg=677 #pos=379 */
%   | | | else return 0.022956050928121058;  // std dev = 3.586, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04161656039296401;  // std dev = 1.968, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.06439852701643631;  // std dev = 1.810, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06129697413382477;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.08168698021887372;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005001957829919535;  // std dev = 3.542, 99.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=15 */
%   | | | else return -0.0028138788701296525;  // std dev = 2.580, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */


Results
   AUC ROC   = 0.679334
   AUC PR    = 0.62295
   CLL	      = -0.546606
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 266.117 seconds
Total inference time: 2.307 seconds
AUC ROC: 0.679334


Results scoring model
   AUC ROC   = 0.647859
   AUC PR    = 0.596788
   CLL	      = -0.594486
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.196597
   F1        = 0.322481


Total scoring time: 9.521 seconds
Refined model CLL: -0.594486


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.679334
   AUC PR    = 0.62295
   CLL	      = -0.546606
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 280.862 seconds
Total inference time: 2.307 seconds
AUC ROC: 0.679334
Total revision time: 280.862
Best scored revision CLL: -0.594486


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 05:32:02
{'AUC ROC': 0.679334, 'AUC PR': 0.62295, 'CLL': -0.546606, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 280.862, 'Inference time': 2.307, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555251, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 3.409, 'Inference time': 1.219}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.04e-06, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.1982098642693473;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.17232936177704028;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.59e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.14687821336877155;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4.30e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.12294999386033459;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.72e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.10132687306070527;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.08242755721566901;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.70e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.06635051251555868;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.05296441944279734;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.042003038675194414;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.03314132493151074;  // std dev = 24.276, 2,626.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=893 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555448
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.952 seconds
Total inference time: 1.129 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.578376
   AUC PR    = 0.5428
   CLL	      = -0.611967
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156752
   F1        = 0.27102


Total scoring time: 2.086 seconds
Parameter learned model CLL: -0.611967


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 166], 'false': [24.276, 1, 893]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 166], 'false': [24.276, 1, 893]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.59e-07, 0, 166], 'false': [24.276, 1, 893]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.3e-07, 0, 166], 'false': [24.276, 1, 893]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.72e-07, 0, 166], 'false': [24.276, 1, 893]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 166], 'false': [24.276, 1, 893]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.7e-07, 0, 166], 'false': [24.276, 1, 893]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 166], 'false': [24.276, 1, 893]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 166], 'false': [24.276, 1, 893]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 166], 'false': [24.276, 1, 893]}]]
[{'': [6.5061744479238086e-15, 0.22441949362201014]}, {'': [-2.9106569898606513e-15, 0.22441949362199576]}, {'': [1.8833662875568922e-15, 0.22441949362200492]}, {'': [1.1128982608290726e-15, 0.22441949362198294]}, {'': [8.346736956218045e-16, 0.2244194936219651]}, {'': [-2.568226755759398e-16, 0.22441949362199112]}, {'': [4.387387374422305e-16, 0.22441949362197566]}, {'': [-3.210283444699248e-16, 0.22441949362196856]}, {'': [-2.487969669641917e-16, 0.22441949362197]}, {'': [5.3504724078320797e-17, 0.22441949362197922]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.04e-06, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.221508378093415;  // std dev = 0.481, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,463 #pos=835 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.035813909718800704;  // std dev = 5.365, 197.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=35 */
%   | | | else return -0.006434398233820991;  // std dev = 3.353, 96.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19235023176126115;  // std dev = 0.481, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,463 #pos=835 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21629702856625074;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.05154258263854086;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1116184812053133;  // std dev = 2.583, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.0067290833712168666;  // std dev = 5.753, 258.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=39 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.59e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16333496651476462;  // std dev = 0.481, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,463 #pos=835 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.07352654272012987;  // std dev = 4.665, 125.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=29 */
%   | | | else return 0.0010977640852148811;  // std dev = 3.567, 99.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -9.538886635905449E-5;  // std dev = 3.469, 99.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=14 */
%   | | | else return -0.14195568948882026;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4.30e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3932467059042937;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return 0.040849733658709184;  // std dev = 2.837, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else return 0.13431647622560097;  // std dev = 0.481, 2,228.000 (wgt'ed) examples reached here.  /* #neg=1,422 #pos=806 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.23007558641641426;  // std dev = 2.426, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.1618867447197496;  // std dev = 0.054, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01899644338779745;  // std dev = 5.240, 191.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=34 */
%   | | | else return 0.0012321455141973982;  // std dev = 3.464, 99.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.72e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.33599634034021475;  // std dev = 2.512, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return 0.020121368588259855;  // std dev = 2.870, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else return 0.10985668771304945;  // std dev = 0.481, 2,228.000 (wgt'ed) examples reached here.  /* #neg=1,422 #pos=806 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.16887206718222753;  // std dev = 2.323, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.048209330298538224;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018415987929005725;  // std dev = 5.317, 197.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=35 */
%   | | | else return -0.006666589650427911;  // std dev = 3.354, 96.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.26336579840835234;  // std dev = 2.498, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return 0.01636336227039881;  // std dev = 2.871, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else return 0.0885963665223521;  // std dev = 0.481, 2,228.000 (wgt'ed) examples reached here.  /* #neg=1,422 #pos=806 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1383344241918145;  // std dev = 2.322, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.04280523731022882;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01594010990364338;  // std dev = 5.316, 197.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=35 */
%   | | | else return -0.005856285071879128;  // std dev = 3.354, 96.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.70e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07128166841327649;  // std dev = 0.480, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,463 #pos=835 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11134048835475321;  // std dev = 2.321, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.03816705714198201;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.013772140228254477;  // std dev = 5.316, 197.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=35 */
%   | | | else return -0.00514765811345367;  // std dev = 3.354, 96.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.042787051516099225;  // std dev = 3.645, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | | else return 0.5068589837261752;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.055731470499969654;  // std dev = 0.481, 2,228.000 (wgt'ed) examples reached here.  /* #neg=1,422 #pos=806 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1858351328605398;  // std dev = 2.398, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.15022702094738286;  // std dev = 0.112, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.001574402428067185;  // std dev = 5.168, 198.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=33 */
%   | | | else return 0.00569629424123585;  // std dev = 3.521, 92.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.18300475966629398;  // std dev = 2.403, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | | else return -0.028379658562585845;  // std dev = 2.840, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else return 0.04376928875754526;  // std dev = 0.481, 2,228.000 (wgt'ed) examples reached here.  /* #neg=1,422 #pos=806 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1531162554754946;  // std dev = 2.394, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.13216477074679608;  // std dev = 0.102, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.04267438720182884;  // std dev = 2.435, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return -0.0024858941962599287;  // std dev = 5.754, 258.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=39 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.265270864673991;  // std dev = 2.675, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return -0.11616471061082682;  // std dev = 2.288, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else return 0.03362836496254465;  // std dev = 0.480, 2,235.000 (wgt'ed) examples reached here.  /* #neg=1,425 #pos=810 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12375692785869993;  // std dev = 2.391, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.11782094052671502;  // std dev = 0.093, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.035191553585483426;  // std dev = 2.434, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return -0.0021632143978166426;  // std dev = 5.754, 258.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=39 */


Results
   AUC ROC   = 0.68156
   AUC PR    = 0.624946
   CLL	      = -0.541853
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 126.829 seconds
Total inference time: 1.523 seconds
AUC ROC: 0.68156


Results scoring model
   AUC ROC   = 0.63169
   AUC PR    = 0.581174
   CLL	      = -0.597365
   Precision = 0.978723 at threshold = 0.5
   Recall    = 0.173749
   F1        = 0.295108


Total scoring time: 3.288 seconds
Refined model CLL: -0.597365


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.68156
   AUC PR    = 0.624946
   CLL	      = -0.541853
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 137.155 seconds
Total inference time: 1.523 seconds
AUC ROC: 0.68156
Total revision time: 137.155
Best scored revision CLL: -0.597365


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 05:34:22
{'AUC ROC': 0.68156, 'AUC PR': 0.624946, 'CLL': -0.541853, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 137.155, 'Inference time': 1.523, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555448, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.952, 'Inference time': 1.129}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.07e-06, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.19757982940845029;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.17178725991569882;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.46e-07, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.14643080573499315;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.12259511294845825;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 1.88e-07, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.10105548533372763;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948795;  // std dev = 3.21e-07, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.08222681914340851;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.86e-07, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.06620656558594647;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.052864294701265344;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.041935628205886914;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801112;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else return 0.033097666156403374;  // std dev = 29.707, 3,936.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,336 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555371
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 6.382 seconds
Total inference time: 1.174 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.57961
   AUC PR    = 0.54481
   CLL	      = -0.611087
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15922
   F1        = 0.274701


Total scoring time: 2.346 seconds
Parameter learned model CLL: -0.611087


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 253], 'false': [29.707, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 253], 'false': [29.707, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 253], 'false': [29.707, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 253], 'false': [29.707, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 253], 'false': [29.707, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.21e-07, 0, 253], 'false': [29.707, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 253], 'false': [29.707, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 253], 'false': [29.707, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 253], 'false': [29.707, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 253], 'false': [29.707, 2, 1]}]]
[{'': [4.49355089808759e-15, 0.2242175622975828]}, {'': [-4.3812121256354e-15, 0.2242175622975415]}, {'': [7.863714071653283e-16, 0.22421756229760437]}, {'': [-3.3701631735656924e-16, 0.22421756229755846]}, {'': [1.404234655652372e-16, 0.22421756229756548]}, {'': [4.0722805013918787e-16, 0.22421756229759685]}, {'': [3.2297397080004555e-16, 0.22421756229756035]}, {'': [-1.4042346556523718e-17, 0.22421756229761644]}, {'': [-1.6148698540002277e-16, 0.22421756229755493]}, {'': [-1.0531759917392789e-17, 0.2242175622975859]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.07e-06, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21975866295127328;  // std dev = 0.480, 3,454.000 (wgt'ed) examples reached here.  /* #neg=2,205 #pos=1,249 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.07672817007218889;  // std dev = 5.591, 183.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=40 */
%   | | | else return 0.0350196833988315;  // std dev = 4.626, 147.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=26 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.003982268432845507;  // std dev = 4.235, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19084842232512614;  // std dev = 0.480, 3,454.000 (wgt'ed) examples reached here.  /* #neg=2,205 #pos=1,249 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.06712902381864229;  // std dev = 5.591, 183.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=40 */
%   | | | else return 0.030703061377840853;  // std dev = 4.626, 147.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=26 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0034968177935673223;  // std dev = 4.235, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.46e-07, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3719238791875832;  // std dev = 3.207, 42.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | | | else return 0.12307595292030295;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else return 0.16019680029630065;  // std dev = 0.480, 3,350.000 (wgt'ed) examples reached here.  /* #neg=2,145 #pos=1,205 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.14669720338950917;  // std dev = 2.762, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.03173982024151344;  // std dev = 6.685, 294.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=55 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13515204212544496;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.004338051226822345;  // std dev = 4.230, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13492641298461328;  // std dev = 0.480, 3,454.000 (wgt'ed) examples reached here.  /* #neg=2,205 #pos=1,249 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3459056750421829;  // std dev = 1.203, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04908358352272739;  // std dev = 2.647, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06493805078845274;  // std dev = 2.877, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.01281581570759181;  // std dev = 7.301, 385.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=64 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 1.88e-07, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.12724377682195256;  // std dev = 4.743, 97.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=38 */
%   | | | else return 0.6062744870915048;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.10888637378244131;  // std dev = 0.480, 3,350.000 (wgt'ed) examples reached here.  /* #neg=2,145 #pos=1,205 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.11516111333480689;  // std dev = 2.750, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.02446924648239327;  // std dev = 6.675, 294.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=55 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 7.501061950078746E-4;  // std dev = 4.235, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
%   | | | else return -0.11220447569815405;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948795;  // std dev = 3.21e-07, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3292019168429186;  // std dev = 3.190, 43.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | | else return -0.01074206215852502;  // std dev = 3.416, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else return 0.08779203088581823;  // std dev = 0.480, 3,350.000 (wgt'ed) examples reached here.  /* #neg=2,143 #pos=1,207 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.13933998034210754;  // std dev = 2.585, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.05491925285633036;  // std dev = 1.276, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.042766139161402976;  // std dev = 2.864, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.009073236060553753;  // std dev = 7.300, 385.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=64 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.86e-07, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.259159632655593;  // std dev = 3.189, 43.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | | else return -0.008616844393585232;  // std dev = 3.416, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11088488092862689;  // std dev = 4.699, 94.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=40 */
%   | | | else return 0.06886949538745274;  // std dev = 27.363, 3,256.000 (wgt'ed) examples reached here.  /* #neg=2,089 #pos=1,167 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.03747236959411409;  // std dev = 6.016, 223.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=46 */
%   | | | else return 0.002647951890747099;  // std dev = 3.977, 107.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13394606132517228;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 6.652159587566554E-4;  // std dev = 4.229, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.056083700795654;  // std dev = 0.479, 3,454.000 (wgt'ed) examples reached here.  /* #neg=2,205 #pos=1,249 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11649183594109941;  // std dev = 2.570, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.048720456133466775;  // std dev = 1.273, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.03466487020913217;  // std dev = 2.866, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.005354466439782293;  // std dev = 7.298, 385.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=64 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.12629007466068023;  // std dev = 4.494, 84.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=40 */
%   | | | else return -0.1481187992052056;  // std dev = 1.651, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else return 0.04315438805843618;  // std dev = 0.479, 3,350.000 (wgt'ed) examples reached here.  /* #neg=2,145 #pos=1,205 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.08265000959696706;  // std dev = 2.737, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.012199011150845237;  // std dev = 6.652, 294.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=55 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0018137271173524646;  // std dev = 4.236, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
%   | | | else return -0.09876078091294752;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801112;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #pos=253 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03442915593047008;  // std dev = 0.479, 3,454.000 (wgt'ed) examples reached here.  /* #neg=2,205 #pos=1,249 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.027650144881197453;  // std dev = 6.006, 223.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=46 */
%   | | | else return -0.006064329150001441;  // std dev = 3.961, 107.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1228036316362817;  // std dev = 0.111, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 2.1844983726944416E-4;  // std dev = 4.229, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */


Results
   AUC ROC   = 0.681493
   AUC PR    = 0.624929
   CLL	      = -0.542054
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 256.623 seconds
Total inference time: 1.862 seconds
AUC ROC: 0.681493


Results scoring model
   AUC ROC   = 0.629709
   AUC PR    = 0.580686
   CLL	      = -0.599584
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159849
   F1        = 0.275638


Total scoring time: 4.431 seconds
Refined model CLL: -0.599584


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.681493
   AUC PR    = 0.624929
   CLL	      = -0.542054
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 269.782 seconds
Total inference time: 1.862 seconds
AUC ROC: 0.681493
Total revision time: 269.782
Best scored revision CLL: -0.599584


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 05:38:56
{'AUC ROC': 0.681493, 'AUC PR': 0.624929, 'CLL': -0.542054, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 269.782, 'Inference time': 1.862, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555371, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 6.382, 'Inference time': 1.174}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.05e-06, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.19839631854384587;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.17248978585318311;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.14701059633526858;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.1230549752341773;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.10140713079922838;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.08248689972250081;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.06639304829619483;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.83e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.05299399178305776;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.04202293779683678;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.03315420425525416;  // std dev = 34.346, 5,255.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,788 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555472
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 8.019 seconds
Total inference time: 1.143 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.578103
   AUC PR    = 0.542395
   CLL	      = -0.612187
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156206
   F1        = 0.270204


Total scoring time: 2.456 seconds
Parameter learned model CLL: -0.612187


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 331], 'false': [34.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [34.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [34.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [34.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [34.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.91e-07, 0, 331], 'false': [34.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 331], 'false': [34.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 331], 'false': [34.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [34.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [34.346, 3, 1]}]]
[{'': [3.34878147367298e-15, 0.22447910150356284]}, {'': [-5.0661053063257895e-15, 0.22447910150366698]}, {'': [-5.151971497958431e-16, 0.2244791015036473]}, {'': [-9.874612037753659e-16, 0.22447910150365846]}, {'': [-6.86929533061124e-16, 0.2244791015036699]}, {'': [4.615307800254427e-16, 0.22447910150362052]}, {'': [1.878322941964011e-16, 0.22447910150364475]}, {'': [2.4149866396680143e-16, 0.22447910150361927]}, {'': [-2.2808207152420137e-16, 0.22447910150364292]}, {'': [-2.1466547908160128e-16, 0.22447910150364125]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.05e-06, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21632650519296512;  // std dev = 31.367, 4,280.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,533 */
%   | | | else return 0.18533787519167963;  // std dev = 6.912, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.41670749365807186;  // std dev = 5.232, 111.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=62 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.19905802600860326;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.06185106490048781;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.09344305274657119;  // std dev = 3.498, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return 0.02315887545736512;  // std dev = 8.325, 503.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=83 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18790171552917262;  // std dev = 31.367, 4,280.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,533 */
%   | | | else return 0.16124659549266562;  // std dev = 6.912, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6417663171874723;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3557293906186655;  // std dev = 5.221, 111.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=62 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1488210920743751;  // std dev = 3.331, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.03473565751711266;  // std dev = 7.608, 392.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.012319905754005931;  // std dev = 4.941, 183.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=29 */
%   | | | else return -0.14437138235624272;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1597695425837553;  // std dev = 31.378, 4,284.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,534 */
%   | | | else return 0.13569283003476243;  // std dev = 6.863, 213.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2751658081858661;  // std dev = 4.214, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | | | else return 0.3545188031433123;  // std dev = 3.234, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12852246348740293;  // std dev = 3.330, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.030343445345264813;  // std dev = 7.608, 392.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01077610991597236;  // std dev = 4.941, 183.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=29 */
%   | | | else return -0.12744198071676635;  // std dev = 0.021, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13314260820087379;  // std dev = 31.377, 4,284.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,534 */
%   | | | else return 0.11368259332686932;  // std dev = 6.864, 213.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.44595206074890925;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2283669898089671;  // std dev = 5.211, 111.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=62 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10932951120059987;  // std dev = 3.329, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.026418466728948944;  // std dev = 7.608, 392.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009414736801171261;  // std dev = 4.941, 183.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=29 */
%   | | | else return -0.11393427617610759;  // std dev = 0.019, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10912745487307857;  // std dev = 31.365, 4,280.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,533 */
%   | | | else return 0.09333306158210912;  // std dev = 6.919, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16092130088036685;  // std dev = 4.195, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | | | else return 0.22564828905349074;  // std dev = 3.228, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.05049412625754121;  // std dev = 6.553, 255.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=56 */
%   | | | else return 0.006009907631051546;  // std dev = 4.949, 185.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=29 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10461018511396035;  // std dev = 0.938, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.008594745600331279;  // std dev = 5.001, 186.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=30 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0881867721106025;  // std dev = 31.376, 4,284.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,534 */
%   | | | else return 0.07553351769728672;  // std dev = 6.868, 213.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=70 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12166662879435296;  // std dev = 4.243, 76.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=43 */
%   | | | else return 0.175594568554126;  // std dev = 3.161, 42.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15262900141564398;  // std dev = 3.117, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.06376995373051936;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03901691547880191;  // std dev = 3.445, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return 0.008682329424938084;  // std dev = 8.320, 503.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=83 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07048337434329355;  // std dev = 31.365, 4,280.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,533 */
%   | | | else return 0.060742724527583544;  // std dev = 6.922, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.29858749558760644;  // std dev = 0.890, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.09407531032952088;  // std dev = 5.193, 111.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=62 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1282131258185903;  // std dev = 3.115, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.056122748931522685;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03283389714052523;  // std dev = 3.444, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return 0.007534367143151511;  // std dev = 8.320, 503.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=83 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.83e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05584724335583103;  // std dev = 31.376, 4,284.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,534 */
%   | | | else return 0.04815214444742603;  // std dev = 6.871, 213.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.058685878729470176;  // std dev = 4.175, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | | | else return 0.11460408354610595;  // std dev = 3.227, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01281655162698637;  // std dev = 7.534, 381.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=72 */
%   | | | else return 0.06709585284737649;  // std dev = 3.398, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.003350620889324188;  // std dev = 4.944, 183.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=29 */
%   | | | else return -0.10100088861201534;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.043949118787517255;  // std dev = 31.364, 4,280.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,533 */
%   | | | else return 0.03829347043884582;  // std dev = 6.924, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.21117660748677342;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.05065389991292523;  // std dev = 5.190, 111.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=62 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10347893475079606;  // std dev = 3.114, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.05000370893543485;  // std dev = 1.355, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009134057614297178;  // std dev = 7.577, 388.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=71 */
%   | | | else return 0.002398233814632168;  // std dev = 4.858, 183.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.034420640624725336;  // std dev = 31.375, 4,284.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,534 */
%   | | | else return 0.029920799382051833;  // std dev = 6.873, 213.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=70 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.16521143366865307;  // std dev = 0.891, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.038047508817886225;  // std dev = 5.190, 111.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=62 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008364156141135814;  // std dev = 7.521, 381.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=72 */
%   | | | else return 0.05565859989854898;  // std dev = 3.402, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.09316863484122147;  // std dev = 0.927, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.0020915935240694798;  // std dev = 4.858, 183.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=28 */


Results
   AUC ROC   = 0.677515
   AUC PR    = 0.622222
   CLL	      = -0.545321
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1096.611 seconds
Total inference time: 2.998 seconds
AUC ROC: 0.677515


Results scoring model
   AUC ROC   = 0.627572
   AUC PR    = 0.577351
   CLL	      = -0.60023
   Precision = 0.888641 at threshold = 0.5
   Recall    = 0.188296
   F1        = 0.310748


Total scoring time: 30.659 seconds
Refined model CLL: -0.60023


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677515
   AUC PR    = 0.622222
   CLL	      = -0.545321
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1137.7450000000001 seconds
Total inference time: 2.998 seconds
AUC ROC: 0.677515
Total revision time: 1137.7450000000001
Best scored revision CLL: -0.60023


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 05:57:59
{'AUC ROC': 0.677515, 'AUC PR': 0.622222, 'CLL': -0.545321, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1137.7450000000001, 'Inference time': 2.998, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555472, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 8.019, 'Inference time': 1.143}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 10.216 seconds
Total inference time: 1.186 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 2.55 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43157550852608434;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027532;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.13188754443331552;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6045267906174348;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.37055206062581303;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1413166583955482;  // std dev = 3.366, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03792704271485758;  // std dev = 8.509, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16051920012347048;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.11289879459957758;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5555402519390158;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3001208593604805;  // std dev = 5.898, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13590836049502245;  // std dev = 3.360, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07762444073070456;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.034181811723169156;  // std dev = 8.440, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.031205475457689924;  // std dev = 5.853, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359515;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.09262066068403074;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3838297075937837;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2390571035453232;  // std dev = 5.904, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11787838328886349;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.027859478270285176;  // std dev = 8.499, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.027571959544926604;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11318146851691421;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10964998699963234;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.0771545166781606;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3610827403265879;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.18041522023876905;  // std dev = 5.894, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1003595658719877;  // std dev = 3.355, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.024104936177157504;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023903914552851502;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10231079075638505;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809342;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.06140774263889949;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2735087033394984;  // std dev = 0.896, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13681639797138262;  // std dev = 5.894, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10868785150505186;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07444519830305987;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.019667057793170004;  // std dev = 8.480, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.02186354884518971;  // std dev = 5.773, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367406;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.050179477894514456;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2101249279806313;  // std dev = 0.897, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.10304501352924937;  // std dev = 5.894, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09193779141139075;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06545106920796383;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.020763359153907215;  // std dev = 3.500, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.01714904422512396;  // std dev = 9.643, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05614201621630124;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.039471451616439265;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06532165296373918;  // std dev = 4.735, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.10858834696307697;  // std dev = 3.620, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.031950742345947754;  // std dev = 7.632, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.0030777831386850293;  // std dev = 4.991, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01471478496097205;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09381257717393207;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.044157282993931055;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.031858896465029055;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04309948107072272;  // std dev = 4.728, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09193321338881488;  // std dev = 3.624, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0727585594169529;  // std dev = 3.342, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01131301220750123;  // std dev = 8.484, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.012597978305751002;  // std dev = 5.922, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.0861429306457061;  // std dev = 0.032, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034601599067735446;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.024640335297715248;  // std dev = 7.480, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.14161241506676334;  // std dev = 0.896, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04153170326351958;  // std dev = 5.889, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07474823216226743;  // std dev = 3.334, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.008094658162915698;  // std dev = 8.475, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.08187497876216078;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01485100326768679;  // std dev = 5.766, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */


Results
   AUC ROC   = 0.677835
   AUC PR    = 0.622308
   CLL	      = -0.545756
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1362.537 seconds
Total inference time: 2.435 seconds
AUC ROC: 0.677835


Results scoring model
   AUC ROC   = 0.624959
   AUC PR    = 0.5736
   CLL	      = -0.60329
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 37.975 seconds
Refined model CLL: -0.60329


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677835
   AUC PR    = 0.622308
   CLL	      = -0.545756
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1413.278 seconds
Total inference time: 2.435 seconds
AUC ROC: 0.677835
Total revision time: 1413.278
Best scored revision CLL: -0.60329


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:21:36
{'AUC ROC': 0.677835, 'AUC PR': 0.622308, 'CLL': -0.545756, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1413.278, 'Inference time': 2.435, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 10.216, 'Inference time': 1.186}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.14556931726511252;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 2.92e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.12690935324721206;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.86e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.10906374780323803;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1.63e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.0925168821582966;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.07758876831819868;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.06443482436858822;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9.66e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.053071761073398595;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.04341525308537813;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.035317864635627236;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.96e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.028600680783340167;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.812817
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 3.356 seconds
Total inference time: 1.281 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.597996
   AUC PR    = 0.536512
   CLL	      = -0.570119
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.195991
   F1        = 0.327747


Total scoring time: 1.679 seconds
Parameter learned model CLL: -0.570119


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.63e-07, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.66e-08, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 88], 'false': [16.039, 895, 361]}]]
[{'': [0.0, 0.20480990608136385]}, {'': [9.689219124001365e-16, 0.20480990608136937]}, {'': [1.6956133467002392e-15, 0.20480990608137184]}, {'': [3.0278809762504267e-16, 0.2048099060813804]}, {'': [-3.431598439750484e-16, 0.20480990608138963]}, {'': [-4.0371746350005693e-17, 0.20480990608138394]}, {'': [1.0597583416876495e-16, 0.20480990608137892]}, {'': [1.0092936587501423e-16, 0.20480990608137475]}, {'': [-7.065055611250996e-17, 0.20480990608137525]}, {'': [4.0371746350005693e-17, 0.20480990608139243]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1705895808734866;  // std dev = 0.463, 1,053.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=329 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.07288554765910842;  // std dev = 1.930, 58.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.04235946141530185;  // std dev = 3.380, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.07689893509951237;  // std dev = 3.307, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 2.92e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14852950187339975;  // std dev = 0.463, 1,053.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=329 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.06424267630445772;  // std dev = 1.930, 58.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.03712443430138824;  // std dev = 3.380, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06727784200614957;  // std dev = 3.307, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.86e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2908960773734213;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.18529439881705512;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.12531903837865366;  // std dev = 0.463, 1,027.000 (wgt'ed) examples reached here.  /* #neg=708 #pos=319 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.056998173268745365;  // std dev = 1.930, 58.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.03240582820575244;  // std dev = 3.380, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.05842652332659526;  // std dev = 3.307, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1.63e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24292882903259536;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.15893477492576516;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.10565087708195581;  // std dev = 0.463, 1,027.000 (wgt'ed) examples reached here.  /* #neg=708 #pos=319 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.05085547602717062;  // std dev = 1.930, 58.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.028186007424758082;  // std dev = 3.380, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14609596087007595;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04782085659476509;  // std dev = 3.307, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19671320898234854;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.1388218316090008;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08031475780903576;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.088149645925618;  // std dev = 14.593, 994.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=309 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return -0.045594900688487094;  // std dev = 1.930, 58.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.024438363077918107;  // std dev = 3.380, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0444236398518355;  // std dev = 3.304, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -0.10263927050153787;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1554438655876369;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.12304215296105134;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07231166140030634;  // std dev = 0.463, 1,027.000 (wgt'ed) examples reached here.  /* #neg=708 #pos=319 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.003537773884377573;  // std dev = 3.891, 123.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=18 */
%   | | | else return -0.11001608825130474;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.037937634943117554;  // std dev = 3.304, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -0.09356804790503827;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9.66e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05936619621836734;  // std dev = 0.463, 1,053.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=329 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.03937463718746327;  // std dev = 1.926, 58.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
%   | | | else return 0.02064686485524231;  // std dev = 3.380, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.032251025351947536;  // std dev = 3.304, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -0.08593163003788308;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.047999840296797595;  // std dev = 0.463, 1,053.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=329 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.07748350439888996;  // std dev = 1.545, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.01576297356432095;  // std dev = 3.567, 119.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.027309224284486025;  // std dev = 3.304, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -0.07942030144854004;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.038574481544433076;  // std dev = 0.463, 1,053.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=329 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.00788967962545804;  // std dev = 3.812, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.11742219460711963;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.021905624393107014;  // std dev = 3.373, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return -0.07380629810839012;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.96e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.18986246668345386;  // std dev = 0.964, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.007288751200693026;  // std dev = 2.072, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.030472073899771707;  // std dev = 0.463, 1,027.000 (wgt'ed) examples reached here.  /* #neg=708 #pos=319 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.002575830233249203;  // std dev = 3.881, 123.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=18 */
%   | | | else return -0.09553587642829865;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.022101413431369437;  // std dev = 3.302, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -0.06891869841776986;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.566551
   AUC PR    = 0.700803
   CLL	      = -0.800091
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 96.77000000000001 seconds
Total inference time: 1.957 seconds
AUC ROC: 0.566551


Results scoring model
   AUC ROC   = 0.648367
   AUC PR    = 0.567765
   CLL	      = -0.55734
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.195991
   F1        = 0.327747


Total scoring time: 3.267 seconds
Refined model CLL: -0.55734


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566551
   AUC PR    = 0.700803
   CLL	      = -0.800091
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 105.072 seconds
Total inference time: 1.957 seconds
AUC ROC: 0.566551
Total revision time: 105.072
Best scored revision CLL: -0.55734


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:23:25
{'AUC ROC': 0.566551, 'AUC PR': 0.700803, 'CLL': -0.800091, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 105.072, 'Inference time': 1.957, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.812817, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 3.356, 'Inference time': 1.281}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.06e-06, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.14743464938522155;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.12852317781857872;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.72e-07, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.11041865433298859;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583093;  // std dev = 4.13e-07, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.09362255289472941;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.77e-07, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.07846758145335585;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.06511652346903249;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.75e-07, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.05358864854428618;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.04379865811945947;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.03559600579763392;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else return 0.028797682281156797;  // std dev = 22.762, 2,520.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=729 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.810478
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.395 seconds
Total inference time: 1.246 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.594098
   AUC PR    = 0.530105
   CLL	      = -0.572954
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.188196
   F1        = 0.316776


Total scoring time: 2.155 seconds
Parameter learned model CLL: -0.572954


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.06e-06, 0, 169], 'false': [22.762, 1, 729]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 169], 'false': [22.762, 1, 729]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.72e-07, 0, 169], 'false': [22.762, 1, 729]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.13e-07, 0, 169], 'false': [22.762, 1, 729]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 169], 'false': [22.762, 1, 729]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 169], 'false': [22.762, 1, 729]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.75e-07, 0, 169], 'false': [22.762, 1, 729]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 169], 'false': [22.762, 1, 729]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 169], 'false': [22.762, 1, 729]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 169], 'false': [22.762, 1, 729]}]]
[{'': [6.6429439201240136e-15, 0.20559948979594325]}, {'': [-3.027164318031196e-15, 0.20559948979595058]}, {'': [1.934021647631042e-15, 0.2055994897959348]}, {'': [1.0090547726770654e-15, 0.20559948979592896]}, {'': [8.4087897723088775e-16, 0.20559948979590903]}, {'': [-2.6277468038465245e-16, 0.20559948979593817]}, {'': [4.467169566539092e-16, 0.20559948979590514]}, {'': [-3.25840603676969e-16, 0.20559948979591416]}, {'': [-2.5226369316926634e-16, 0.2055994897959263]}, {'': [5.2554936076930484e-17, 0.20559948979592346]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.06e-06, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16995519140626814;  // std dev = 20.623, 1,982.000 (wgt'ed) examples reached here.  /* #neg=1,364 #pos=618 */
%   | | | else return 0.09344305274657057;  // std dev = 4.284, 102.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.433906510857088;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.21814893509951236;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004073287122710528;  // std dev = 5.170, 225.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=31 */
%   | | | else return 0.04363280606725389;  // std dev = 4.328, 124.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=23 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14798203331903276;  // std dev = 20.623, 1,982.000 (wgt'ed) examples reached here.  /* #neg=1,364 #pos=618 */
%   | | | else return 0.08168328864042076;  // std dev = 4.284, 102.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7967482646957417;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2174443385998185;  // std dev = 3.420, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.18946651417661506;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0035781715491372385;  // std dev = 5.170, 225.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=31 */
%   | | | else return 0.03823796381211303;  // std dev = 4.328, 124.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.72e-07, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1266902048763726;  // std dev = 20.623, 1,982.000 (wgt'ed) examples reached here.  /* #neg=1,364 #pos=618 */
%   | | | else return 0.0707602882901818;  // std dev = 4.284, 102.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3203971811495019;  // std dev = 2.775, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.053619239674636054;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1609726502429864;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003144430042432788;  // std dev = 5.170, 225.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=31 */
%   | | | else return 0.03337158337366889;  // std dev = 4.328, 124.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=23 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583093;  // std dev = 4.13e-07, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10681284610310589;  // std dev = 20.623, 1,982.000 (wgt'ed) examples reached here.  /* #neg=1,364 #pos=618 */
%   | | | else return 0.060801154164531704;  // std dev = 4.284, 102.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2554921451243877;  // std dev = 2.769, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.045415690798772126;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13406559433555765;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0027641851165642094;  // std dev = 5.170, 225.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=31 */
%   | | | else return 0.02901736564043801;  // std dev = 4.328, 124.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=23 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.77e-07, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08894514609090076;  // std dev = 20.628, 1,986.000 (wgt'ed) examples reached here.  /* #neg=1,368 #pos=618 */
%   | | | else return 0.04856691249528936;  // std dev = 4.259, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4983639803818978;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10691783684975581;  // std dev = 3.350, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10976255315780364;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0024306310532394146;  // std dev = 5.170, 225.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=31 */
%   | | | else return 0.02514922836793978;  // std dev = 4.328, 124.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07319524178649281;  // std dev = 20.627, 1,986.000 (wgt'ed) examples reached here.  /* #neg=1,368 #pos=618 */
%   | | | else return 0.04080803513410825;  // std dev = 4.260, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.37638794640615136;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08500605060939279;  // std dev = 3.347, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0886104042332189;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0021378746188886557;  // std dev = 5.170, 225.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=31 */
%   | | | else return 0.021734461956579382;  // std dev = 4.328, 124.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.75e-07, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.059730717635953466;  // std dev = 20.622, 1,982.000 (wgt'ed) examples reached here.  /* #neg=1,364 #pos=618 */
%   | | | else return 0.03394668534395354;  // std dev = 4.286, 102.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1333273809020057;  // std dev = 2.712, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.005792255973835433;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13901725986840788;  // std dev = 2.345, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.1550498777339942;  // std dev = 0.145, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002970209765837895;  // std dev = 5.316, 214.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=35 */
%   | | | else return 0.01685821558599028;  // std dev = 4.089, 125.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.048341584810485616;  // std dev = 20.627, 1,986.000 (wgt'ed) examples reached here.  /* #neg=1,368 #pos=618 */
%   | | | else return 0.02685754367588727;  // std dev = 4.261, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10150412725572953;  // std dev = 2.714, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.004757673552392259;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12090398195111186;  // std dev = 2.342, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.13599236246452986;  // std dev = 0.132, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0031395143162651195;  // std dev = 5.200, 215.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=33 */
%   | | | else return 0.015926550305216156;  // std dev = 4.235, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09299819182575979;  // std dev = 3.128, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | | else return -0.16210878023611347;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.03798842737674574;  // std dev = 0.462, 2,082.000 (wgt'ed) examples reached here.  /* #neg=1,436 #pos=646 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.0713948754201548;  // std dev = 2.378, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.08260182317470458;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.004298303238883492;  // std dev = 5.143, 225.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=31 */
%   | | | else return 0.016558813907454718;  // std dev = 4.323, 124.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.031222762514953515;  // std dev = 20.622, 1,986.000 (wgt'ed) examples reached here.  /* #neg=1,368 #pos=618 */
%   | | | else return 0.015441656603711454;  // std dev = 4.262, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2298557797595332;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02439710371916416;  // std dev = 3.328, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10350675247170966;  // std dev = 2.335, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.1218683063778859;  // std dev = 0.134, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005871281562964074;  // std dev = 5.309, 214.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=35 */
%   | | | else return 0.015210505352035482;  // std dev = 4.089, 125.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=20 */


Results
   AUC ROC   = 0.571055
   AUC PR    = 0.705762
   CLL	      = -0.795813
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 454.211 seconds
Total inference time: 3.585 seconds
AUC ROC: 0.571055


Results scoring model
   AUC ROC   = 0.650476
   AUC PR    = 0.568873
   CLL	      = -0.560392
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.19265
   F1        = 0.323063


Total scoring time: 12.142 seconds
Refined model CLL: -0.560392


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.571055
   AUC PR    = 0.705762
   CLL	      = -0.795813
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 472.903 seconds
Total inference time: 3.585 seconds
AUC ROC: 0.571055
Total revision time: 472.903
Best scored revision CLL: -0.560392


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:31:24
{'AUC ROC': 0.571055, 'AUC PR': 0.705762, 'CLL': -0.795813, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 472.903, 'Inference time': 3.585, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.810478, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.395, 'Inference time': 1.246}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.14888038479583673;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.12977376190342305;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.11146802853876957;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.09447812237307626;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.0791467683860991;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.04e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.06564255949653211;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.05398677576321643;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.04409334143205584;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.035809252625346656;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 5.96e-08, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.028948276091255262;  // std dev = 27.945, 3,787.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,101 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.808679
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 6.279 seconds
Total inference time: 1.225 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.591314
   AUC PR    = 0.525594
   CLL	      = -0.575058
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.182628
   F1        = 0.308851


Total scoring time: 2.238 seconds
Parameter learned model CLL: -0.575058


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 246], 'false': [27.945, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 246], 'false': [27.945, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.77e-07, 0, 246], 'false': [27.945, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 246], 'false': [27.945, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 246], 'false': [27.945, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.04e-07, 0, 246], 'false': [27.945, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 246], 'false': [27.945, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 246], 'false': [27.945, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 246], 'false': [27.945, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 246], 'false': [27.945, 2, 1]}]]
[{'': [4.621416167545367e-15, 0.20620667385382616]}, {'': [-4.274809954979465e-15, 0.2062066738538004]}, {'': [9.242832335090735e-16, 0.2062066738538006]}, {'': [-2.8883851047158543e-16, 0.20620667385382177]}, {'': [2.310708083772684e-16, 0.20620667385376903]}, {'': [3.754900636130611e-16, 0.20620667385379723]}, {'': [3.393852498041129e-16, 0.20620667385380162]}, {'': [-3.9715295189843e-17, 0.20620667385378164]}, {'': [-1.7691358766384608e-16, 0.2062066738538084]}, {'': [1.4441925523579274e-17, 0.20620667385378552]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.1405018762759822;  // std dev = 4.150, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.18106560176617761;  // std dev = 4.581, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return 0.17163577720477038;  // std dev = 25.578, 3,040.000 (wgt'ed) examples reached here.  /* #neg=2,087 #pos=953 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.14386322081379807;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0079224934719166;  // std dev = 6.243, 336.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=45 */
%   | | | else return 0.048093069177723616;  // std dev = 5.248, 179.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=34 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.12252356180980672;  // std dev = 4.150, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1496812270114863;  // std dev = 0.464, 3,136.000 (wgt'ed) examples reached here.  /* #neg=2,152 #pos=984 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 4.603744898981709E-4;  // std dev = 6.398, 335.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=48 */
%   | | | else return 0.04332112762602781;  // std dev = 2.390, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04516793660424139;  // std dev = 5.236, 177.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=34 */
%   | | | else return -0.14221628941746842;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12803622225361497;  // std dev = 0.464, 3,225.000 (wgt'ed) examples reached here.  /* #neg=2,213 #pos=1,012 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.12537104340999958;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.12469548925042256;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.007612555615338662;  // std dev = 6.241, 336.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=45 */
%   | | | else return 0.0375039496705214;  // std dev = 5.241, 179.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10789886365439122;  // std dev = 0.464, 3,225.000 (wgt'ed) examples reached here.  /* #neg=2,213 #pos=1,012 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -5.397450242331501E-4;  // std dev = 6.386, 335.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=48 */
%   | | | else return 0.03894330411909794;  // std dev = 2.390, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.035207409241759295;  // std dev = 5.232, 177.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=34 */
%   | | | else return -0.1260647773078711;  // std dev = 0.054, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08970764061625552;  // std dev = 0.464, 3,225.000 (wgt'ed) examples reached here.  /* #neg=2,213 #pos=1,012 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1078442154196494;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.11118683199184559;  // std dev = 0.047, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.007186932204015469;  // std dev = 6.240, 336.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=45 */
%   | | | else return 0.0287888901292418;  // std dev = 5.236, 179.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.04e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0737342958714105;  // std dev = 0.464, 3,225.000 (wgt'ed) examples reached here.  /* #neg=2,213 #pos=1,012 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0013476174932042534;  // std dev = 6.376, 335.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=48 */
%   | | | else return 0.034955699754716;  // std dev = 2.390, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.027129399650885132;  // std dev = 5.228, 177.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=34 */
%   | | | else return -0.11302956211287148;  // std dev = 0.067, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2288528752486427;  // std dev = 2.780, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.021335482268337983;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07568898985823795;  // std dev = 4.091, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | | | else return 0.05984946488279691;  // std dev = 25.578, 3,040.000 (wgt'ed) examples reached here.  /* #neg=2,087 #pos=953 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.0917335060267306;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.10024240960802637;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.006683288091701341;  // std dev = 6.239, 336.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=45 */
%   | | | else return 0.02183262406716364;  // std dev = 5.232, 179.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.18300528314832776;  // std dev = 2.780, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.017312068203712234;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else return 0.04868911264081189;  // std dev = 0.464, 3,121.000 (wgt'ed) examples reached here.  /* #neg=2,141 #pos=980 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.07698714357933249;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.09158161153894202;  // std dev = 0.054, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.005877762611361696;  // std dev = 6.239, 336.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=45 */
%   | | | else return 0.018760844782982254;  // std dev = 5.231, 179.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.14317161694656474;  // std dev = 2.780, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.014078719634511475;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else return 0.03909647487414316;  // std dev = 0.464, 3,121.000 (wgt'ed) examples reached here.  /* #neg=2,141 #pos=980 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.06398683563426665;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.08426179617036479;  // std dev = 0.050, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.005172522507035006;  // std dev = 6.239, 336.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=45 */
%   | | | else return 0.016085869364207746;  // std dev = 5.231, 179.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 5.96e-08, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.031033126869500778;  // std dev = 0.463, 3,225.000 (wgt'ed) examples reached here.  /* #neg=2,213 #pos=1,012 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.05274871714595896;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.0779992426258666;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.00455436941560088;  // std dev = 6.239, 336.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=45 */
%   | | | else return 0.013766147905073961;  // std dev = 5.231, 179.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=34 */


Results
   AUC ROC   = 0.564962
   AUC PR    = 0.699348
   CLL	      = -0.79295
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 211.82999999999998 seconds
Total inference time: 1.862 seconds
AUC ROC: 0.564962


Results scoring model
   AUC ROC   = 0.638034
   AUC PR    = 0.554001
   CLL	      = -0.564719
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.185598
   F1        = 0.313087


Total scoring time: 3.466 seconds
Refined model CLL: -0.564719


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.564962
   AUC PR    = 0.699348
   CLL	      = -0.79295
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 223.813 seconds
Total inference time: 1.862 seconds
AUC ROC: 0.564962
Total revision time: 223.813
Best scored revision CLL: -0.564719


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:35:12
{'AUC ROC': 0.564962, 'AUC PR': 0.699348, 'CLL': -0.79295, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 223.813, 'Inference time': 1.862, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.808679, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 6.279, 'Inference time': 1.225}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.14996388171872424;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.13071087847173846;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.11225404385291403;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.09511852995234422;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.07965467073201213;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.82e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.06603547071042032;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.53e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.054283731807637084;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.67e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.04431278211406873;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.03596774887127216;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.02905995342408244;  // std dev = 32.331, 5,058.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,476 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.807338
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 7.699 seconds
Total inference time: 1.229 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.589087
   AUC PR    = 0.521896
   CLL	      = -0.576683
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178174
   F1        = 0.302457


Total scoring time: 2.536 seconds
Parameter learned model CLL: -0.576683


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 320], 'false': [32.331, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [32.331, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [32.331, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [32.331, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [32.331, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.82e-07, 0, 320], 'false': [32.331, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 320], 'false': [32.331, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 320], 'false': [32.331, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [32.331, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [32.331, 3, 1]}]]
[{'': [3.4638958368304883e-15, 0.20665898354878465]}, {'': [-4.973799150320701e-15, 0.20665898354883847]}, {'': [-3.552713678800501e-16, 0.20665898354885873]}, {'': [-9.103828801926283e-16, 0.20665898354883375]}, {'': [-5.10702591327572e-16, 0.20665898354884857]}, {'': [4.551914400963141e-16, 0.2066589835488255]}, {'': [1.9984014443252818e-16, 0.20665898354885023]}, {'': [2.220446049250313e-16, 0.2066589835488348]}, {'': [-2.248201624865942e-16, 0.20665898354884002]}, {'': [-1.942890293094024e-16, 0.20665898354885837]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1731258936248528;  // std dev = 0.465, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,973 #pos=1,367 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.027333225129723887;  // std dev = 6.821, 331.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=56 */
%   | | | else return -0.02821470126412402;  // std dev = 3.646, 132.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.016482268432844793;  // std dev = 5.655, 240.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=38 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.17187542636539432;  // std dev = 5.153, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | | else return 0.6928838297267391;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1492198525079057;  // std dev = 0.464, 4,214.000 (wgt'ed) examples reached here.  /* #neg=2,893 #pos=1,321 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12500617075268783;  // std dev = 3.195, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.14177388316819148;  // std dev = 0.031, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.004051049226886225;  // std dev = 7.068, 418.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=58 */
%   | | | else return 0.018762306126378706;  // std dev = 5.559, 228.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=37 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12894495250384458;  // std dev = 0.464, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,973 #pos=1,367 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.08485578986766763;  // std dev = 2.916, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return -0.14310974370125049;  // std dev = 0.037, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -1.8126134268641212E-4;  // std dev = 7.134, 412.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=60 */
%   | | | else return 0.01976292132816442;  // std dev = 5.634, 234.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=38 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17546534129025093;  // std dev = 5.096, 110.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=42 */
%   | | | else return -0.050345355514016914;  // std dev = 1.788, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.15574913773345922;  // std dev = 5.154, 116.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
%   | | | else return 0.10646438939125263;  // std dev = 29.641, 4,089.000 (wgt'ed) examples reached here.  /* #neg=2,811 #pos=1,278 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.10907049836975281;  // std dev = 3.189, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.12685230641626397;  // std dev = 0.028, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005109284415797916;  // std dev = 7.055, 418.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=58 */
%   | | | else return 0.01634059884176605;  // std dev = 5.558, 228.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=37 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.09093985405996785;  // std dev = 5.248, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return 0.469154570475199;  // std dev = 1.182, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.08960076090111216;  // std dev = 0.464, 4,205.000 (wgt'ed) examples reached here.  /* #neg=2,884 #pos=1,321 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.0938532260711045;  // std dev = 3.189, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.113458628372619;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.004481238771080821;  // std dev = 7.055, 418.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=58 */
%   | | | else return 0.014292676129007531;  // std dev = 5.558, 228.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=37 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.82e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07412580912252995;  // std dev = 0.464, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,973 #pos=1,367 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07503649104876461;  // std dev = 2.906, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return -0.1287260689905094;  // std dev = 0.062, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.003951139721056248;  // std dev = 7.105, 412.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=60 */
%   | | | else return 0.01801820572495752;  // std dev = 5.634, 234.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=38 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.53e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22983092757697784;  // std dev = 3.440, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.005314579427406742;  // std dev = 3.888, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else return 0.0594047019258432;  // std dev = 0.464, 4,214.000 (wgt'ed) examples reached here.  /* #neg=2,893 #pos=1,321 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.080467304482321;  // std dev = 3.183, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.10344894047467006;  // std dev = 0.028, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.005275907897981952;  // std dev = 7.044, 418.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=58 */
%   | | | else return 0.01278092387436602;  // std dev = 5.558, 228.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=37 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.67e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04868414716188497;  // std dev = 0.464, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,973 #pos=1,367 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.06784275279900473;  // std dev = 3.182, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.09424382501425063;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.004627044135284141;  // std dev = 7.044, 418.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=58 */
%   | | | else return 0.011149392302930654;  // std dev = 5.558, 228.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=37 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1633716736033158;  // std dev = 3.374, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | | | else return -0.00619606911048067;  // std dev = 4.144, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   | | else return 0.03858606861386641;  // std dev = 0.464, 4,205.000 (wgt'ed) examples reached here.  /* #neg=2,884 #pos=1,321 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.013725619927541037;  // std dev = 6.741, 331.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=56 */
%   | | | else return -0.03209367604866477;  // std dev = 3.638, 132.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11600881311828634;  // std dev = 0.082, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.016522817644342838;  // std dev = 5.635, 234.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=38 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.031158698173789367;  // std dev = 5.093, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | | else return 0.44170752497223437;  // std dev = 0.916, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.030516089159351632;  // std dev = 0.464, 4,214.000 (wgt'ed) examples reached here.  /* #neg=2,893 #pos=1,321 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.05589644758082039;  // std dev = 3.176, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.0874506552899387;  // std dev = 0.022, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.004914185794306224;  // std dev = 7.024, 404.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=58 */
%   | | | else return 0.00927014602028676;  // std dev = 5.575, 242.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=37 */


Results
   AUC ROC   = 0.575561
   AUC PR    = 0.708044
   CLL	      = -0.793415
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 240.599 seconds
Total inference time: 1.819 seconds
AUC ROC: 0.575561


Results scoring model
   AUC ROC   = 0.6365
   AUC PR    = 0.552999
   CLL	      = -0.565775
   Precision = 0.996942 at threshold = 0.5
   Recall    = 0.181514
   F1        = 0.307113


Total scoring time: 4.761 seconds
Refined model CLL: -0.565775


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.575561
   AUC PR    = 0.708044
   CLL	      = -0.793415
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 255.595 seconds
Total inference time: 1.819 seconds
AUC ROC: 0.575561
Total revision time: 255.595
Best scored revision CLL: -0.565775


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:39:31
{'AUC ROC': 0.575561, 'AUC PR': 0.708044, 'CLL': -0.793415, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 255.595, 'Inference time': 1.819, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.807338, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 7.699, 'Inference time': 1.229}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 9.761 seconds
Total inference time: 1.195 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 2.485 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14911870422593365;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.11697060028902613;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5398498420741675;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2857709517384712;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248207;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.127648531406923;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117945;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5178923030490515;  // std dev = 1.214, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23218819741991475;  // std dev = 5.644, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10459627439703681;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.048782996064003804;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010456166386326518;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1076740514402258;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.08395534636649292;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23837009586576313;  // std dev = 4.441, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14994541581367818;  // std dev = 3.705, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09797266390427661;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07410552729615988;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0012031873085422363;  // std dev = 7.971, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006892248810745733;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117453;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.07049037196827364;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3546834787140376;  // std dev = 1.212, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.14506231623756807;  // std dev = 5.634, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0835834377475886;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06499509620262611;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.001026411020032858;  // std dev = 8.025, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006260940660848051;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07369162312032777;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.05745028465583279;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1589841701865856;  // std dev = 4.438, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07091281545629743;  // std dev = 3.667, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19685641417684005;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.009264980408650357;  // std dev = 3.405, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 5.783443698064011E-4;  // std dev = 7.971, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0059042422611841755;  // std dev = 6.123, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06002025943316843;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.04741904647039094;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.23806916117521698;  // std dev = 1.210, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.08381081039436128;  // std dev = 5.624, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06610370953676442;  // std dev = 3.504, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06269151745920827;  // std dev = 1.336, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.039820049456498974;  // std dev = 3.638, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020139848103261273;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04854983220098262;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03818605419664084;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1977451048230563;  // std dev = 1.207, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.06260901539884538;  // std dev = 5.621, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1651210989639591;  // std dev = 1.597, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0020579266543577666;  // std dev = 3.389, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03421279911438407;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017680520157489065;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03899906934798489;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03115348690401464;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08117505805011155;  // std dev = 4.430, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.015969768710846505;  // std dev = 3.657, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07751914664272923;  // std dev = 3.483, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0027642959836925284;  // std dev = 8.005, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.005809644936406339;  // std dev = 6.188, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13976689673853837;  // std dev = 0.030, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03120427327685979;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.024756729702290335;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06943998861051867;  // std dev = 4.441, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 6.709771055400918E-4;  // std dev = 3.633, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.051587689646608176;  // std dev = 3.496, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05895164980035016;  // std dev = 1.313, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0019964036683807816;  // std dev = 8.012, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006073346836080502;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */


Results
   AUC ROC   = 0.566401
   AUC PR    = 0.701211
   CLL	      = -0.79126
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1241.406 seconds
Total inference time: 3.7 seconds
AUC ROC: 0.566401


Results scoring model
   AUC ROC   = 0.638292
   AUC PR    = 0.553319
   CLL	      = -0.566906
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 33.92 seconds
Refined model CLL: -0.566906


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566401
   AUC PR    = 0.701211
   CLL	      = -0.79126
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1287.5720000000001 seconds
Total inference time: 3.7 seconds
AUC ROC: 0.566401
Total revision time: 1287.5720000000001
Best scored revision CLL: -0.566906


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 07:01:04
{'AUC ROC': 0.566401, 'AUC PR': 0.701211, 'CLL': -0.79126, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1287.5720000000001, 'Inference time': 3.7, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 9.761, 'Inference time': 1.195}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.2784387901719713;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.24105811671161034;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.20282525690527736;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.16634413898553696;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.1335628559815732;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.10548933552137592;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.08230369318374797;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.06364990991682011;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367116;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.04891610217109285;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.03742637823642788;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.559743
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 2.768 seconds
Total inference time: 1.437 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.583162
   AUC PR    = 0.620424
   CLL	      = -0.639133
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166324
   F1        = 0.285211


Total scoring time: 1.615 seconds
Parameter learned model CLL: -0.639133


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.42e-07, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.43e-08, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.58e-08, 0, 81], 'false': [15.342, 560, 406]}]]
[{'': [-7.894919286223335e-16, 0.24364629279561792]}, {'': [7.894919286223335e-16, 0.24364629279563602]}, {'': [1.4474018691409447e-15, 0.24364629279562106]}, {'': [8.77213254024815e-17, 0.24364629279563257]}, {'': [-2.8509430755806487e-16, 0.24364629279562267]}, {'': [-4.386066270124075e-17, 0.24364629279562947]}, {'': [-8.22387425648264e-17, 0.24364629279563668]}, {'': [1.644774851296528e-17, 0.2436462927956372]}, {'': [-4.9343245538895844e-17, 0.24364629279562916]}, {'': [3.8378079863585656e-17, 0.24364629279563668]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2899945322044533;  // std dev = 0.495, 829.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=358 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5081489350995123;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.35814893509951234;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.06327714022771751;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.020311097261674484;  // std dev = 2.242, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2509076142783965;  // std dev = 0.495, 829.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=358 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43446033631952596;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.3087411357856347;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.05539853433077727;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.01782060961185161;  // std dev = 2.242, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21071636629995574;  // std dev = 0.495, 829.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=358 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3521152146484872;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.25641236875858675;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.048208019134862945;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.015605658500845634;  // std dev = 2.242, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1723095763111996;  // std dev = 0.495, 829.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=358 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3230111033707501;  // std dev = 1.859, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.18246135144950598;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.20613740734453997;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.041724299521406986;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.06990902274840138;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.013642952808514566;  // std dev = 2.242, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13785316083630364;  // std dev = 0.495, 829.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=358 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3523980880306796;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20235428786296822;  // std dev = 2.124, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07609448909760803;  // std dev = 3.738, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.41162857548414655;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.059354635365447495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.01190936180238197;  // std dev = 2.242, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10845182028899723;  // std dev = 0.495, 829.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=358 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1919016759211554;  // std dev = 1.857, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.08320333257425334;  // std dev = 1.028, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.062400398330584674;  // std dev = 3.735, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.31437363177996613;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.014250298200848588;  // std dev = 0.376, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.39739360032041465;  // std dev = 9.705, 497.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=371 */
%   | | | else return -0.31604973602112024;  // std dev = 2.950, 393.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=8 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.21353979865654776;  // std dev = 1.423, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.07892761502526677;  // std dev = 2.074, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.18955609692184258;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.049564827010085535;  // std dev = 2.646, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else return -0.2659779346685217;  // std dev = 0.275, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.2759558958592669;  // std dev = 1.179, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.10253629843954039;  // std dev = 1.649, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.05863610670866414;  // std dev = 12.607, 818.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=352 */
%   | | | else return 0.04479909344780379;  // std dev = 3.596, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.16213152938251468;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.041430655376328215;  // std dev = 2.645, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else return -0.22300717134421236;  // std dev = 0.247, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367116;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2885251575752805;  // std dev = 9.704, 497.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=371 */
%   | | | else return -0.26204845185877357;  // std dev = 2.919, 393.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=8 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.14463199606734384;  // std dev = 1.416, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.049816568225491485;  // std dev = 2.072, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.12859938920953787;  // std dev = 0.160, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.05153455576337803;  // std dev = 2.590, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.19057147289399964;  // std dev = 0.221, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.21714056899948678;  // std dev = 9.706, 497.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=371 */
%   | | | else return -0.21252824453930275;  // std dev = 2.886, 393.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=8 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.11258827125271333;  // std dev = 1.414, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.038076298893894675;  // std dev = 2.071, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then return 0.01816900866966399;  // std dev = 0.404, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else return -0.16552853674347562;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.933035
   AUC PR    = 0.803457
   CLL	      = -0.35688
   Precision = 0.801512 at threshold = 0.5
   Recall    = 0.729776
   F1        = 0.763964


Total learning time: 693.358 seconds
Total inference time: 4.57 seconds
AUC ROC: 0.933035


Results scoring model
   AUC ROC   = 0.893972
   AUC PR    = 0.857333
   CLL	      = -0.438621
   Precision = 0.78157 at threshold = 0.5
   Recall    = 0.940452
   F1        = 0.853681


Total scoring time: 8.759 seconds
Refined model CLL: -0.438621


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.933035
   AUC PR    = 0.803457
   CLL	      = -0.35688
   Precision = 0.801512 at threshold = 0.5
   Recall    = 0.729776
   F1        = 0.763964


Total learning time: 706.5 seconds
Total inference time: 4.57 seconds
AUC ROC: 0.933035
Total revision time: 706.5
Best scored revision CLL: -0.438621


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:12:58
{'AUC ROC': 0.933035, 'AUC PR': 0.803457, 'CLL': -0.35688, 'Precision': [0.801512, 0.5], 'Recall': 0.729776, 'F1': 0.763964, 'Learning time': 706.5, 'Inference time': 4.57, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.559743, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 2.768, 'Inference time': 1.437}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.00e-06, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.27903828360002436;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.24156940306748378;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.2032356654538065;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.50e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.16665532433887909;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.10e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.13378745578662096;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.10564496846457526;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.62e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.08240793523516568;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.06371763095070922;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.048958734698393874;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.037452211889406645;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560249
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.643 seconds
Total inference time: 1.66 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.582136
   AUC PR    = 0.61899
   CLL	      = -0.639841
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164271
   F1        = 0.282187


Total scoring time: 1.912 seconds
Parameter learned model CLL: -0.639841


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1e-06, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.53e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.62e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 160], 'false': [21.712, 1, 814]}]]
[{'': [6.306066779870889e-15, 0.24374150481935125]}, {'': [-2.7533531010703883e-15, 0.24374150481933973]}, {'': [1.909583602355269e-15, 0.243741504819311]}, {'': [1.2656542480726785e-15, 0.2437415048193056]}, {'': [5.995204332975846e-16, 0.24374150481931564]}, {'': [-2.220446049250313e-16, 0.24374150481932097]}, {'': [4.274358644806853e-16, 0.2437415048193204]}, {'': [-3.164135620181696e-16, 0.24374150481931114]}, {'': [-2.3869795029440865e-16, 0.24374150481933324]}, {'': [5.2735593669694933e-17, 0.2437415048193359]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.00e-06, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29074697431519364;  // std dev = 0.495, 1,632.000 (wgt'ed) examples reached here.  /* #neg=926 #pos=706 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.46529179224236833;  // std dev = 3.655, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.32293766749387726;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return 0.09344305274657101;  // std dev = 3.911, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.08481560176617904;  // std dev = 3.626, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2515485181254459;  // std dev = 0.495, 1,632.000 (wgt'ed) examples reached here.  /* #neg=926 #pos=706 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7555458866792231;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.39618461297118707;  // std dev = 3.641, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2789171856807028;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return 0.08168328864042075;  // std dev = 3.911, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.07417418268850375;  // std dev = 3.626, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21122873766807412;  // std dev = 0.495, 1,632.000 (wgt'ed) examples reached here.  /* #neg=926 #pos=706 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.37561360930391097;  // std dev = 3.017, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | | | else return 0.2600218319746876;  // std dev = 2.061, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23298338348967967;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return 0.07076028829018179;  // std dev = 3.911, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.06433901741563773;  // std dev = 3.626, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.50e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17269561544542752;  // std dev = 0.495, 1,632.000 (wgt'ed) examples reached here.  /* #neg=926 #pos=706 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5119333734247137;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24869043411168085;  // std dev = 3.627, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.18894281736325025;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return 0.060801154164531794;  // std dev = 3.911, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.05539922836487688;  // std dev = 3.626, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.10e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13812969947611228;  // std dev = 0.495, 1,632.000 (wgt'ed) examples reached here.  /* #neg=926 #pos=706 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.16039855293159716;  // std dev = 2.705, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.2516747655089592;  // std dev = 2.421, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1496533710750037;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return 0.05186901535993095;  // std dev = 3.911, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04129151263536022;  // std dev = 3.624, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | | else return -0.1619576886422826;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10864203842480483;  // std dev = 0.495, 1,632.000 (wgt'ed) examples reached here.  /* #neg=926 #pos=706 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.17828817690130602;  // std dev = 2.984, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | | | else return 0.0948472084880435;  // std dev = 2.063, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.11649904183524239;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return 0.04397215751306843;  // std dev = 3.911, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0947424927858008;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.04277027358982984;  // std dev = 3.619, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.62e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08440885986275956;  // std dev = 0.495, 1,632.000 (wgt'ed) examples reached here.  /* #neg=926 #pos=706 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3389231748503275;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09941262103543284;  // std dev = 3.603, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.08961080363621073;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return 0.037076392265265434;  // std dev = 3.911, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08692470521700332;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.03626626994570743;  // std dev = 3.619, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.37449860422281184;  // std dev = 13.793, 995.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=739 */
%   | | | else return -0.3288030060379472;  // std dev = 4.800, 777.000 (wgt'ed) examples reached here.  /* #neg=754 #pos=23 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.15552061948853202;  // std dev = 1.802, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.03741718862080653;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06187560878946977;  // std dev = 3.949, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return -0.11987603860841807;  // std dev = 0.611, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.5040307292645315;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14742854617162962;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.28470769829601406;  // std dev = 13.799, 995.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=739 */
%   | | | else return -0.25771779458238353;  // std dev = 4.768, 777.000 (wgt'ed) examples reached here.  /* #neg=754 #pos=23 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.11975262778161085;  // std dev = 1.798, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.028521382453896987;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05172455347819978;  // std dev = 3.944, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return -0.09926977424546973;  // std dev = 0.611, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.3803866396575848;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13004254653751926;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.10706619717473168;  // std dev = 2.075, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.010662863518133205;  // std dev = 1.912, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.016763867135954187;  // std dev = 1.206, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.14172421966528184;  // std dev = 0.855, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.02685295355365221;  // std dev = 16.750, 1,661.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=722 */
%   | | | else return 0.036564977038391254;  // std dev = 3.866, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06849725620605902;  // std dev = 3.656, 97.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=37 */
%   | | | else return -0.20388385319892038;  // std dev = 0.269, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.916512
   AUC PR    = 0.79154
   CLL	      = -0.391689
   Precision = 0.799607 at threshold = 0.5
   Recall    = 0.700516
   F1        = 0.746789


Total learning time: 1030.357 seconds
Total inference time: 4.332 seconds
AUC ROC: 0.916512


Results scoring model
   AUC ROC   = 0.87856
   AUC PR    = 0.846834
   CLL	      = -0.480845
   Precision = 0.778938 at threshold = 0.5
   Recall    = 0.918891
   F1        = 0.843146


Total scoring time: 10.303 seconds
Refined model CLL: -0.480845


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.916512
   AUC PR    = 0.79154
   CLL	      = -0.391689
   Precision = 0.799607 at threshold = 0.5
   Recall    = 0.700516
   F1        = 0.746789


Total learning time: 1046.2150000000001 seconds
Total inference time: 4.332 seconds
AUC ROC: 0.916512
Total revision time: 1046.2150000000001
Best scored revision CLL: -0.480845


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:30:31
{'AUC ROC': 0.916512, 'AUC PR': 0.79154, 'CLL': -0.391689, 'Precision': [0.799607, 0.5], 'Recall': 0.700516, 'F1': 0.746789, 'Learning time': 1046.2150000000001, 'Inference time': 4.332, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560249, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.643, 'Inference time': 1.66}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.2814239093528543;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.24360368124792517;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.59e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.2048677283244315;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.16789179701698131;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.26e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.1346790128663958;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.10626215352333188;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.08282097855296104;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527755;  // std dev = 5.96e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.06398581782333843;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.04912754582476123;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.037554557914413554;  // std dev = 26.666, 2,913.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,233 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.562273
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 4.486 seconds
Total inference time: 1.457 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.578029
   AUC PR    = 0.613201
   CLL	      = -0.642662
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156057
   F1        = 0.269982


Total scoring time: 2.221 seconds
Parameter learned model CLL: -0.642662


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 228], 'false': [26.666, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 228], 'false': [26.666, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.59e-07, 0, 228], 'false': [26.666, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 228], 'false': [26.666, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 228], 'false': [26.666, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 228], 'false': [26.666, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 228], 'false': [26.666, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 228], 'false': [26.666, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 228], 'false': [26.666, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 228], 'false': [26.666, 1, 1]}]]
[{'': [5.11092143266037e-15, 0.24411327042420072]}, {'': [-4.175996780344449e-15, 0.24411327042416478]}, {'': [1.3712228233966845e-15, 0.24411327042418265]}, {'': [-3.1164155077197375e-17, 0.24411327042414624]}, {'': [4.674623261579606e-16, 0.24411327042414355]}, {'': [3.505967446184705e-16, 0.24411327042418496]}, {'': [3.739698609263685e-16, 0.24411327042419761]}, {'': [1.5582077538598687e-17, 0.24411327042417172]}, {'': [-1.5192525600133721e-16, 0.24411327042416234]}, {'': [4.285071323114639e-17, 0.2441132704241694]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29787104380404344;  // std dev = 0.496, 2,447.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=1,076 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5191658842520542;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | | | else return 0.433906510857088;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.26936388837054054;  // std dev = 5.090, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | | | else return 0.06953104892064986;  // std dev = 4.528, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0713842292171585;  // std dev = 4.777, 136.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2576138965064938;  // std dev = 0.496, 2,447.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=1,076 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4436086770783546;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | | | else return 0.37250584045331747;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23331431914418535;  // std dev = 5.090, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | | | else return 0.06085450823001123;  // std dev = 4.528, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.062470570632710484;  // std dev = 4.777, 136.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.59e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21607105652534356;  // std dev = 0.496, 2,447.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=1,076 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.7170297963639939;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.31808126193713443;  // std dev = 4.537, 87.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=53 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.19659885332865207;  // std dev = 5.090, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | | | else return 0.05290652342944244;  // std dev = 4.528, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05704035938788057;  // std dev = 1.337, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.06246861485092302;  // std dev = 4.581, 123.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17633623091077905;  // std dev = 0.496, 2,447.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=1,076 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5532263951672391;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24848351234796529;  // std dev = 4.536, 87.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=53 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07191129278510987;  // std dev = 6.545, 222.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | | | else return 0.37335439874989734;  // std dev = 2.204, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09586189892737954;  // std dev = 0.964, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.0530006619582075;  // std dev = 4.413, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.26e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14073121750602624;  // std dev = 0.496, 2,447.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=1,076 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.4161235688022578;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18952202489953135;  // std dev = 4.535, 87.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=53 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06737181132282413;  // std dev = 6.249, 203.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=57 */
%   | | | else return 0.21816692532267837;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.05869548531814189;  // std dev = 1.337, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.043677792364135375;  // std dev = 4.581, 123.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11042736541327809;  // std dev = 0.496, 2,447.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=1,076 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3198914604998072;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14285657628861834;  // std dev = 4.535, 87.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=53 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.048584683018002256;  // std dev = 6.519, 222.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | | | else return 0.2833968311144337;  // std dev = 2.198, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.030823966771440545;  // std dev = 4.520, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return -0.11859224723785344;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.085595544455545;  // std dev = 0.496, 2,447.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=1,076 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1372009063988387;  // std dev = 3.606, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | | | else return 0.07602023214139753;  // std dev = 2.754, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.043847956767672884;  // std dev = 6.202, 203.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=57 */
%   | | | else return 0.1632823046345623;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.025142870875153878;  // std dev = 4.771, 136.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=29 */
%   | | | else return -0.10675784456204701;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527755;  // std dev = 5.96e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20603270502096452;  // std dev = 3.314, 48.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
%   | | | else return -0.12570807480773782;  // std dev = 1.855, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06500316224562426;  // std dev = 24.225, 2,383.000 (wgt'ed) examples reached here.  /* #neg=1,337 #pos=1,046 */
%   | | | else return 0.07832635270355569;  // std dev = 4.530, 87.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=53 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.031013034885229638;  // std dev = 6.504, 222.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | | | else return 0.20738122012035984;  // std dev = 2.194, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.10017160450596584;  // std dev = 0.964, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.026955591174456266;  // std dev = 4.403, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3603198522346791;  // std dev = 16.644, 1,483.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=1,110 */
%   | | | else return -0.3443650271033045;  // std dev = 6.223, 1,164.000 (wgt'ed) examples reached here.  /* #neg=1,126 #pos=38 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1293554291795281;  // std dev = 2.510, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return -0.00638732071717042;  // std dev = 3.741, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.048304658992625656;  // std dev = 5.285, 156.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=46 */
%   | | | else return -0.14162109840413148;  // std dev = 0.663, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.5149211461349054;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09809403635310784;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.2690550928074509;  // std dev = 2.447, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | | else return 0.06556253538547721;  // std dev = 2.709, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.12194970093514651;  // std dev = 1.527, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.20362559677942318;  // std dev = 1.014, 35.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.06450679344219074;  // std dev = 3.228, 63.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=31 */
%   | | | else return 0.03300886610354847;  // std dev = 21.687, 2,406.000 (wgt'ed) examples reached here.  /* #neg=1,339 #pos=1,067 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02368909086756736;  // std dev = 5.794, 201.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=59 */
%   | | | else return 0.015471769103339472;  // std dev = 4.573, 123.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=27 */


Results
   AUC ROC   = 0.895919
   AUC PR    = 0.767306
   CLL	      = -0.452102
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 933.466 seconds
Total inference time: 3.214 seconds
AUC ROC: 0.895919


Results scoring model
   AUC ROC   = 0.864891
   AUC PR    = 0.838772
   CLL	      = -0.535482
   Precision = 0.931034 at threshold = 0.5
   Recall    = 0.240246
   F1        = 0.381937


Total scoring time: 10.35 seconds
Refined model CLL: -0.535482


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.895919
   AUC PR    = 0.767306
   CLL	      = -0.452102
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 950.523 seconds
Total inference time: 3.214 seconds
AUC ROC: 0.895919
Total revision time: 950.523
Best scored revision CLL: -0.535482


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:46:27
{'AUC ROC': 0.895919, 'AUC PR': 0.767306, 'CLL': -0.452102, 'Precision': [0.903509, 0.5], 'Recall': 0.177281, 'F1': 0.296403, 'Learning time': 950.523, 'Inference time': 3.214, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.562273, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 4.486, 'Inference time': 1.457}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.2805316065796516;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.24284285696240757;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.2042574920981401;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.1674296629639844;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.13434595483431644;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.1060317050430751;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.08266681738451481;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.56e-07, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.06388574860374088;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.04906456010452034;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080117;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else return 0.037516360618366065;  // std dev = 30.759, 3,878.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,638 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.561514
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 5.841 seconds
Total inference time: 1.75 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.579569
   AUC PR    = 0.615382
   CLL	      = -0.641607
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159138
   F1        = 0.274579


Total scoring time: 1.978 seconds
Parameter learned model CLL: -0.641607


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 310], 'false': [30.759, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 310], 'false': [30.759, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 310], 'false': [30.759, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 310], 'false': [30.759, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 310], 'false': [30.759, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.67e-07, 0, 310], 'false': [30.759, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 310], 'false': [30.759, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.56e-07, 0, 310], 'false': [30.759, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 310], 'false': [30.759, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 310], 'false': [30.759, 2, 1]}]]
[{'': [3.4839514785656523e-15, 0.24397555031339385]}, {'': [-4.950878416909085e-15, 0.2439755503134021]}, {'': [-2.2920733411616134e-16, 0.24397555031346502]}, {'': [-8.48067136229797e-16, 0.24397555031343393]}, {'': [-3.552713678800501e-16, 0.24397555031344106]}, {'': [4.3549393482070654e-16, 0.24397555031343288]}, {'': [2.0055641735164118e-16, 0.24397555031341495]}, {'': [2.1201678405744925e-16, 0.24397555031345042]}, {'': [-2.1201678405744925e-16, 0.24397555031346838]}, {'': [-1.71905500587121e-16, 0.24397555031345333]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29872952173391903;  // std dev = 0.496, 3,307.000 (wgt'ed) examples reached here.  /* #neg=1,850 #pos=1,457 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4320619785777742;  // std dev = 5.303, 115.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=66 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2457458343243195;  // std dev = 5.534, 129.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=50 */
%   | | | else return 0.047338124288700795;  // std dev = 4.765, 148.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0471733253434139;  // std dev = 5.014, 164.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=31 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2583444737065096;  // std dev = 0.496, 3,307.000 (wgt'ed) examples reached here.  /* #neg=1,850 #pos=1,457 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6045267906174348;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3709598490989208;  // std dev = 5.303, 115.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=66 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.21312421570324003;  // std dev = 5.534, 129.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=50 */
%   | | | else return 0.041477417035170855;  // std dev = 4.765, 148.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04133336391976588;  // std dev = 5.014, 164.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=31 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21665350365598796;  // std dev = 0.496, 3,307.000 (wgt'ed) examples reached here.  /* #neg=1,850 #pos=1,457 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.4749335700127619;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3043770800585687;  // std dev = 5.303, 115.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=66 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1802725991120065;  // std dev = 5.534, 129.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=50 */
%   | | | else return 0.03617904004820066;  // std dev = 4.765, 148.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03605426343622799;  // std dev = 5.014, 164.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=31 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17677319111480905;  // std dev = 0.496, 3,307.000 (wgt'ed) examples reached here.  /* #neg=1,850 #pos=1,457 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.37523696669469286;  // std dev = 1.173, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.23824559460356537;  // std dev = 5.249, 114.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=66 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1490853642817295;  // std dev = 5.534, 129.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=50 */
%   | | | else return 0.031431222146765136;  // std dev = 4.765, 148.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03132403106245855;  // std dev = 5.014, 164.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=31 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14104268736382033;  // std dev = 0.496, 3,307.000 (wgt'ed) examples reached here.  /* #neg=1,850 #pos=1,457 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.28614721420177713;  // std dev = 1.172, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.1831803609147884;  // std dev = 5.249, 114.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=66 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.053301987233738184;  // std dev = 6.737, 245.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=63 */
%   | | | else return 0.20538722119950625;  // std dev = 2.807, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.05678000913453579;  // std dev = 1.335, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.032438946323538075;  // std dev = 4.829, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3386792496340255;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.1104353428023164;  // std dev = 28.535, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,455 */
%   | | | else return 0.14065458240150625;  // std dev = 5.375, 120.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=70 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.04094901791652064;  // std dev = 6.945, 265.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=67 */
%   | | | else return 0.22677353279995346;  // std dev = 2.627, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10617560590327813;  // std dev = 0.968, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.028618714956367676;  // std dev = 4.647, 139.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08573525844217594;  // std dev = 0.496, 3,307.000 (wgt'ed) examples reached here.  /* #neg=1,850 #pos=1,457 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.12546189502318736;  // std dev = 4.182, 74.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | | | else return 0.08259996817212442;  // std dev = 3.377, 48.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.035781126139010674;  // std dev = 6.700, 245.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=63 */
%   | | | else return 0.15506913792842922;  // std dev = 2.805, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.054614105168972034;  // std dev = 1.335, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.022284305975975888;  // std dev = 4.829, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.56e-07, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.23303681840555518;  // std dev = 3.709, 60.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=38 */
%   | | | else return -0.18914115700463405;  // std dev = 1.954, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08193509290128896;  // std dev = 4.520, 83.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=39 */
%   | | | else return 0.06516960916551014;  // std dev = 28.327, 3,258.000 (wgt'ed) examples reached here.  /* #neg=1,812 #pos=1,446 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.026914221146244914;  // std dev = 6.926, 265.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=67 */
%   | | | else return 0.1718852210241664;  // std dev = 2.624, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return -0.09665966153436725;  // std dev = 0.968, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.019597373789662094;  // std dev = 4.647, 139.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=27 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0501761308818312;  // std dev = 0.496, 3,307.000 (wgt'ed) examples reached here.  /* #neg=1,850 #pos=1,457 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.07832110179242276;  // std dev = 4.170, 74.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | | | else return 0.04372421394388994;  // std dev = 3.395, 48.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.12581425989934322;  // std dev = 2.725, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.021093671286311903;  // std dev = 6.886, 260.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=68 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01111676556800732;  // std dev = 4.754, 148.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=28 */
%   | | | else return -0.09379736774903044;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080117;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #pos=310 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.35270356996808755;  // std dev = 19.132, 1,982.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=1,489 */
%   | | | else return -0.35956325309769394;  // std dev = 6.927, 1,566.000 (wgt'ed) examples reached here.  /* #neg=1,520 #pos=46 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.05448672192433178;  // std dev = 4.878, 101.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=44 */
%   | | | else return -0.30116368721008063;  // std dev = 0.968, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04648132664232283;  // std dev = 5.722, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
%   | | | else return -0.19874463898484443;  // std dev = 0.881, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.515238588439742;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08612826461044573;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.897445
   AUC PR    = 0.78022
   CLL	      = -0.452357
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 1245.824 seconds
Total inference time: 3.402 seconds
AUC ROC: 0.897445


Results scoring model
   AUC ROC   = 0.872571
   AUC PR    = 0.847217
   CLL	      = -0.533313
   Precision = 0.941043 at threshold = 0.5
   Recall    = 0.213039
   F1        = 0.347426


Total scoring time: 12.011 seconds
Refined model CLL: -0.533313


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897445
   AUC PR    = 0.78022
   CLL	      = -0.452357
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 1265.654 seconds
Total inference time: 3.402 seconds
AUC ROC: 0.897445
Total revision time: 1265.654
Best scored revision CLL: -0.533313


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 08:07:38
{'AUC ROC': 0.897445, 'AUC PR': 0.78022, 'CLL': -0.452357, 'Precision': [0.903509, 0.5], 'Recall': 0.177281, 'F1': 0.296403, 'Learning time': 1265.654, 'Inference time': 3.402, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.561514, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 5.841, 'Inference time': 1.75}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 7.263 seconds
Total inference time: 1.529 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 2.499 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.39055105437540644;  // std dev = 4.690, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.35220854356048176;  // std dev = 3.871, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5037114772652433;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.29522599019948076;  // std dev = 5.923, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.4307752411499357;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23077371550692627;  // std dev = 5.916, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3281290417446801;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.17756717202413147;  // std dev = 5.915, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559862;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508082;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11049163082472004;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.15130176691260402;  // std dev = 4.679, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.12633535643417762;  // std dev = 3.835, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0416213028775109;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426388;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094525;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510962;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27355458614579253;  // std dev = 4.036, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.17844333985512004;  // std dev = 2.234, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1237974739759138;  // std dev = 4.965, 100.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return 0.08459871283261478;  // std dev = 31.680, 4,076.000 (wgt'ed) examples reached here.  /* #neg=2,272 #pos=1,804 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.03471874332830444;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.015948249735960793;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027476;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0656485043361987;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.09250312013260958;  // std dev = 4.683, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.07034371512168491;  // std dev = 3.836, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02659322878595533;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302791;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.050155081444257524;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.20186207897167405;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.05406383085373173;  // std dev = 5.908, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1368243325647754;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021577358070322405;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06923665802894201;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012802064843005846;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3510457285210346;  // std dev = 21.458, 2,481.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=1,857 */
%   | | | else return -0.35842590747825753;  // std dev = 7.788, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,898 #pos=58 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.04851978284562954;  // std dev = 5.368, 120.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=53 */
%   | | | else return -0.2435920486203573;  // std dev = 1.168, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.045098811373733935;  // std dev = 6.304, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | | else return -0.18183979087806038;  // std dev = 0.955, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.5016607490959046;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0853527292888521;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.897448
   AUC PR    = 0.780284
   CLL	      = -0.451536
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 1549.854 seconds
Total inference time: 3.113 seconds
AUC ROC: 0.897448


Results scoring model
   AUC ROC   = 0.875352
   AUC PR    = 0.848919
   CLL	      = -0.532562
   Precision = 0.940647 at threshold = 0.5
   Recall    = 0.214696
   F1        = 0.349599


Total scoring time: 16.299 seconds
Refined model CLL: -0.532562


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897448
   AUC PR    = 0.780284
   CLL	      = -0.451536
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 1575.915 seconds
Total inference time: 3.113 seconds
AUC ROC: 0.897448
Total revision time: 1575.915
Best scored revision CLL: -0.532562


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 08:34:00
{'AUC ROC': 0.897448, 'AUC PR': 0.780284, 'CLL': -0.451536, 'Precision': [0.903509, 0.5], 'Recall': 0.177281, 'F1': 0.296403, 'Learning time': 1575.915, 'Inference time': 3.113, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 7.263, 'Inference time': 1.529}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.18351187275962702;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.15967316767076137;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.23e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.13640798538446663;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.11461234611254559;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.09491694891926032;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.07765563941280372;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.06290301609221344;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.05054601906307314;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.99e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.04035878922309246;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.03206375507968719;  // std dev = 16.032, 1,171.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=381 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637159
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 2.834 seconds
Total inference time: 1.356 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.580396
   AUC PR    = 0.533927
   CLL	      = -0.602696
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.160793
   F1        = 0.27704


Total scoring time: 1.726 seconds
Parameter learned model CLL: -0.602696


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.032, 790, 381]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 73], 'false': [16.032, 790, 381]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 73], 'false': [16.032, 790, 381]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.032, 790, 381]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.032, 790, 381]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.032, 790, 381]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.032, 790, 381]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 73], 'false': [16.032, 790, 381]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.99e-08, 0, 73], 'false': [16.032, 790, 381]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 73], 'false': [16.032, 790, 381]}]]
[{'': [-1.4600193200550003e-15, 0.21950189645727958]}, {'': [4.866731066850001e-16, 0.21950189645731383]}, {'': [6.813423493590001e-16, 0.21950189645728588]}, {'': [-9.733462133700002e-17, 0.21950189645730622]}, {'': [-3.5283800234662507e-16, 0.21950189645730261]}, {'': [-1.2166827667125003e-17, 0.219501896457297]}, {'': [-9.125120750343752e-17, 0.21950189645730356]}, {'': [6.083413833562501e-18, 0.21950189645730495]}, {'': [6.691755216918751e-17, 0.21950189645728774]}, {'': [3.650048300137501e-17, 0.21950189645729204]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.4581489350995123;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else return 0.20579291415709916;  // std dev = 0.476, 955.000 (wgt'ed) examples reached here.  /* #neg=623 #pos=332 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.2581489350995123;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.030334365563087946;  // std dev = 4.639, 151.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=26 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18061970359467547;  // std dev = 0.476, 992.000 (wgt'ed) examples reached here.  /* #neg=645 #pos=347 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09605207540330889;  // std dev = 1.488, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.13379530847388582;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.011278829611703256;  // std dev = 3.673, 102.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   | | | else return 0.07379294881942226;  // std dev = 3.168, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.23e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1537049378555301;  // std dev = 0.476, 992.000 (wgt'ed) examples reached here.  /* #neg=645 #pos=347 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08312642196845346;  // std dev = 1.487, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.11574338849564803;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.009870248852601207;  // std dev = 3.673, 102.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   | | | else return 0.0641311944113814;  // std dev = 3.167, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1283482261086481;  // std dev = 0.476, 992.000 (wgt'ed) examples reached here.  /* #neg=645 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.20214503477401333;  // std dev = 0.489, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.04168497891514279;  // std dev = 1.761, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.01896745888340098;  // std dev = 4.635, 151.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=26 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10543992868604891;  // std dev = 0.476, 992.000 (wgt'ed) examples reached here.  /* #neg=645 #pos=347 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06272678729281417;  // std dev = 1.473, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.09236698636197757;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.00621748084047143;  // std dev = 3.673, 102.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   | | | else return 0.047854945137568175;  // std dev = 3.161, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11514303836070477;  // std dev = 1.925, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.2703206318242926;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.16243607221457884;  // std dev = 2.799, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.08519439463134187;  // std dev = 14.568, 934.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=326 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordauthor(N, M) )
%   | | | then return -0.004102784134534817;  // std dev = 3.514, 97.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=15 */
%   | | | else return 0.13039394639042617;  // std dev = 2.082, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordvenue(A, P), haswordtitle(Q, P) )
%   | | | then return 0.048460299081434684;  // std dev = 3.145, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return -0.1908736118471956;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22520081592785232;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.09091316015822602;  // std dev = 1.531, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else return 0.07044743290842323;  // std dev = 0.477, 968.000 (wgt'ed) examples reached here.  /* #neg=627 #pos=341 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.052311833083102645;  // std dev = 1.475, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.08652480808616012;  // std dev = 1.182, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0846163211736011;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.009997719599933766;  // std dev = 4.619, 151.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08970730275677723;  // std dev = 1.890, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.21217811148546173;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.055979961148164795;  // std dev = 0.477, 968.000 (wgt'ed) examples reached here.  /* #neg=627 #pos=341 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.13569402742099385;  // std dev = 0.491, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.011713030149783345;  // std dev = 3.819, 99.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=18 */
%   | | | else return 0.006247374865937254;  // std dev = 3.134, 70.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.99e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07118577406683774;  // std dev = 1.888, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.17895173448430035;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.044182688846158134;  // std dev = 0.477, 968.000 (wgt'ed) examples reached here.  /* #neg=627 #pos=341 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06794871566495812;  // std dev = 3.741, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return -0.10267892538179442;  // std dev = 1.384, 35.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0295004798409913;  // std dev = 3.183, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | | else return -0.17122022705924075;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4398406607559713;  // std dev = 8.821, 425.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=318 */
%   | | | else return -0.26356936012381765;  // std dev = 4.617, 587.000 (wgt'ed) examples reached here.  /* #neg=566 #pos=21 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06183939980022211;  // std dev = 3.205, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return 0.08539264981754441;  // std dev = 2.197, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.3535766349294313;  // std dev = 0.474, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02312905720063635;  // std dev = 3.132, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return -0.14832481104060796;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.895088
   AUC PR    = 0.857714
   CLL	      = -0.522621
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 253.477 seconds
Total inference time: 2.899 seconds
AUC ROC: 0.895088


Results scoring model
   AUC ROC   = 0.881862
   AUC PR    = 0.833581
   CLL	      = -0.500455
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.160793
   F1        = 0.27704


Total scoring time: 4.856 seconds
Refined model CLL: -0.500455


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.895088
   AUC PR    = 0.857714
   CLL	      = -0.522621
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 262.893 seconds
Total inference time: 2.899 seconds
AUC ROC: 0.895088
Total revision time: 262.893
Best scored revision CLL: -0.500455


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:38:28
{'AUC ROC': 0.895088, 'AUC PR': 0.857714, 'CLL': -0.522621, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 262.893, 'Inference time': 2.899, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637159, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 2.834, 'Inference time': 1.356}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9.23e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.18221905053345339;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.15855898365119586;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.26e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.13548376307612034;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.54e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.113873089151103;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.80e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.09434519701395196;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.07722687712727058;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.46e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.06259062807101971;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.050324764472018495;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.04020668545993237;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.03196273963449983;  // std dev = 22.635, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=758 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637556
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 4.301 seconds
Total inference time: 1.395 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582599
   AUC PR    = 0.537382
   CLL	      = -0.601002
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165198
   F1        = 0.283554


Total scoring time: 2.11 seconds
Parameter learned model CLL: -0.601002


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.23e-07, 0, 150], 'false': [22.635, 1, 758]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 150], 'false': [22.635, 1, 758]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.26e-07, 0, 150], 'false': [22.635, 1, 758]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.54e-07, 0, 150], 'false': [22.635, 1, 758]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 150], 'false': [22.635, 1, 758]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 150], 'false': [22.635, 1, 758]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 150], 'false': [22.635, 1, 758]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 150], 'false': [22.635, 1, 758]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 150], 'false': [22.635, 1, 758]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.66e-08, 0, 150], 'false': [22.635, 1, 758]}]]
[{'': [5.684341886080802e-15, 0.2190486757165996]}, {'': [-2.4632148173016807e-15, 0.21904867571660808]}, {'': [1.8474111129762605e-15, 0.2190486757165846]}, {'': [1.3737159558028603e-15, 0.21904867571657177]}, {'': [5.210646728907401e-16, 0.21904867571657818]}, {'': [-1.6579330501069005e-16, 0.21904867571658232]}, {'': [4.026408835973901e-16, 0.21904867571656833]}, {'': [-3.019806626980426e-16, 0.21904867571657682]}, {'': [-3.552713678800501e-17, 0.21904867571656453]}, {'': [2.960594732333751e-17, 0.2190486757165765]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9.23e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20690515400497994;  // std dev = 0.477, 2,010.000 (wgt'ed) examples reached here.  /* #neg=1,309 #pos=701 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.018946036967526978;  // std dev = 4.393, 179.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=22 */
%   | | | else return 0.09952824544433996;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.10814893509951136;  // std dev = 4.583, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4310510807910455;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.09771774745771253;  // std dev = 2.966, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else return 0.17847376120342323;  // std dev = 0.476, 1,940.000 (wgt'ed) examples reached here.  /* #neg=1,266 #pos=674 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.01665536029963344;  // std dev = 4.393, 179.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=22 */
%   | | | else return 0.08697564907438818;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.09446743783575606;  // std dev = 4.583, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.26e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15299518540224755;  // std dev = 0.476, 2,010.000 (wgt'ed) examples reached here.  /* #neg=1,309 #pos=701 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.014667310620317951;  // std dev = 4.393, 179.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=22 */
%   | | | else return 0.07527551940942277;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.08165239320886196;  // std dev = 4.583, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.54e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12778800898746664;  // std dev = 0.476, 2,010.000 (wgt'ed) examples reached here.  /* #neg=1,309 #pos=701 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.012936322779467956;  // std dev = 4.393, 179.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=22 */
%   | | | else return 0.06458521224134897;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.06990902274840138;  // std dev = 4.583, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | | | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.80e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10501354533017668;  // std dev = 0.476, 2,010.000 (wgt'ed) examples reached here.  /* #neg=1,309 #pos=701 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.03004340271353947;  // std dev = 3.057, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.019944897639319822;  // std dev = 3.904, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.059354635365448036;  // std dev = 4.583, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.32187513017377944;  // std dev = 2.019, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return -0.018799956249959813;  // std dev = 2.759, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10847715615779262;  // std dev = 3.771, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.08449097753527861;  // std dev = 20.700, 1,889.000 (wgt'ed) examples reached here.  /* #neg=1,232 #pos=657 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.011658037433609476;  // std dev = 4.388, 179.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=22 */
%   | | | else return 0.058980666292756494;  // std dev = 2.306, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.05002771289938823;  // std dev = 4.583, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.46e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06825389338990694;  // std dev = 0.476, 2,010.000 (wgt'ed) examples reached here.  /* #neg=1,309 #pos=701 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.027968808265533936;  // std dev = 3.049, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.018783511410295706;  // std dev = 3.906, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.041903868526057146;  // std dev = 4.583, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24117101798075027;  // std dev = 2.451, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return -0.016676282267901722;  // std dev = 2.956, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03756372952104227;  // std dev = 3.295, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.053812203969415676;  // std dev = 20.700, 1,889.000 (wgt'ed) examples reached here.  /* #neg=1,232 #pos=657 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.5737024411859276;  // std dev = 0.913, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.033244295034996894;  // std dev = 2.281, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.008799226203166774;  // std dev = 4.807, 204.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=27 */
%   | | | else return 0.015604938112196754;  // std dev = 3.911, 91.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.027133169216900517;  // std dev = 3.692, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.49626027140652784;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.04218406152479362;  // std dev = 0.476, 1,940.000 (wgt'ed) examples reached here.  /* #neg=1,266 #pos=674 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.4761175305572094;  // std dev = 0.932, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.027924597106946236;  // std dev = 2.281, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.007739221629761066;  // std dev = 4.807, 204.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=27 */
%   | | | else return 0.013080264052467204;  // std dev = 3.911, 91.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03365393755791633;  // std dev = 0.475, 2,010.000 (wgt'ed) examples reached here.  /* #neg=1,309 #pos=701 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.010764168868842332;  // std dev = 4.320, 179.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=22 */
%   | | | else return 0.05630562500602589;  // std dev = 2.308, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0248125029788728;  // std dev = 4.568, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
%   | | | else return -0.07572651122126531;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.600456
   AUC PR    = 0.583939
   CLL	      = -0.630193
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 165.418 seconds
Total inference time: 2.206 seconds
AUC ROC: 0.600456


Results scoring model
   AUC ROC   = 0.637174
   AUC PR    = 0.574421
   CLL	      = -0.587236
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.1663
   F1        = 0.285175


Total scoring time: 3.163 seconds
Refined model CLL: -0.587236


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.600456
   AUC PR    = 0.583939
   CLL	      = -0.630193
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 174.99200000000002 seconds
Total inference time: 2.206 seconds
AUC ROC: 0.600456
Total revision time: 174.99200000000002
Best scored revision CLL: -0.587236


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:41:27
{'AUC ROC': 0.600456, 'AUC PR': 0.583939, 'CLL': -0.630193, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 174.99200000000002, 'Inference time': 2.206, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637556, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 4.301, 'Inference time': 1.395}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.18082169352326505;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.15735453547744044;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.46e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.13448421575730243;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.11307298393988095;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 3.10e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.09372575735174321;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.89e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.07676177652741185;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.89e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.06225127389166732;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527753;  // std dev = 8.43e-08, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.050084011240649075;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.04004085813685724;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1.03e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else return 0.03185235423255541;  // std dev = 27.665, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,130 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 5.393 seconds
Total inference time: 1.424 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.585169
   AUC PR    = 0.541486
   CLL	      = -0.599089
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170338
   F1        = 0.291092


Total scoring time: 2.171 seconds
Parameter learned model CLL: -0.599089


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 232], 'false': [27.665, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 232], 'false': [27.665, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.46e-07, 0, 232], 'false': [27.665, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 232], 'false': [27.665, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 232], 'false': [27.665, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 232], 'false': [27.665, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 232], 'false': [27.665, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.43e-08, 0, 232], 'false': [27.665, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 232], 'false': [27.665, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 232], 'false': [27.665, 2, 1]}]]
[{'': [5.022802097614501e-15, 0.21855504939498688]}, {'': [-4.226504204090251e-15, 0.2185550493949894]}, {'': [1.2863273664622503e-15, 0.21855504939493006]}, {'': [-9.188052617587502e-17, 0.21855504939493017]}, {'': [4.134623677914376e-16, 0.21855504939500128]}, {'': [3.598653941888438e-16, 0.21855504939496603]}, {'': [3.598653941888438e-16, 0.2185550493949555]}, {'': [3.062684205862501e-17, 0.21855504939492829]}, {'': [-1.5696256555045316e-16, 0.21855504939493367]}, {'': [4.594026308793751e-17, 0.2185550493949591]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20453247856334267;  // std dev = 0.476, 3,014.000 (wgt'ed) examples reached here.  /* #neg=1,970 #pos=1,044 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.08629550934493224;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.036179238129815;  // std dev = 6.216, 264.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=47 */
%   | | | else return 0.0198255818060986;  // std dev = 4.758, 167.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.177767498560675;  // std dev = 0.476, 3,014.000 (wgt'ed) examples reached here.  /* #neg=1,970 #pos=1,044 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3495849395068438;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.025504126856749847;  // std dev = 2.695, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.03171784117111172;  // std dev = 6.216, 264.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=47 */
%   | | | else return 0.017395048393095268;  // std dev = 4.758, 167.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.46e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1513611427876561;  // std dev = 0.476, 3,014.000 (wgt'ed) examples reached here.  /* #neg=1,970 #pos=1,044 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.020957249416854958;  // std dev = 6.088, 261.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=45 */
%   | | | else return 0.09914271100348189;  // std dev = 3.002, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.02567017005838522;  // std dev = 4.879, 167.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=29 */
%   | | | else return -0.1438986824943578;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831064;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12649892389264597;  // std dev = 0.476, 3,014.000 (wgt'ed) examples reached here.  /* #neg=1,970 #pos=1,044 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.0020534484310525706;  // std dev = 5.863, 263.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=41 */
%   | | | else return 0.08711821137046265;  // std dev = 3.019, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.04745935099286327;  // std dev = 5.116, 163.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=33 */
%   | | | else return -0.12707111227554432;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 3.10e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10403379702062594;  // std dev = 0.476, 3,014.000 (wgt'ed) examples reached here.  /* #neg=1,970 #pos=1,044 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10570657764600941;  // std dev = 2.794, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.08345335360541407;  // std dev = 0.926, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.012827614508592197;  // std dev = 6.502, 304.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=51 */
%   | | | else return 0.024151053953801887;  // std dev = 4.329, 127.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.89e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2980399914644107;  // std dev = 3.510, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | | | else return -0.050421546997128384;  // std dev = 2.945, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else return 0.08316361783805425;  // std dev = 0.475, 2,912.000 (wgt'ed) examples reached here.  /* #neg=1,907 #pos=1,005 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -2.111891465358202E-4;  // std dev = 5.861, 263.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=41 */
%   | | | else return 0.07372072994545055;  // std dev = 3.019, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03652394889366925;  // std dev = 5.107, 163.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=33 */
%   | | | else return -0.1135722372994324;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.89e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06773001750213546;  // std dev = 0.475, 3,014.000 (wgt'ed) examples reached here.  /* #neg=1,970 #pos=1,044 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2828828184839833;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0059194759690183825;  // std dev = 2.655, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.025863146652528247;  // std dev = 2.715, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else return 0.009696526612662796;  // std dev = 7.318, 380.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=65 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527753;  // std dev = 8.43e-08, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05391725678579175;  // std dev = 0.475, 3,014.000 (wgt'ed) examples reached here.  /* #neg=1,970 #pos=1,044 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.05988158348852308;  // std dev = 2.453, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return -0.033822687608979794;  // std dev = 1.325, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0014325912873669037;  // std dev = 6.040, 269.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=44 */
%   | | | else return 0.02396803990995459;  // std dev = 5.035, 165.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042639345991071664;  // std dev = 0.475, 3,014.000 (wgt'ed) examples reached here.  /* #neg=1,970 #pos=1,044 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4377323071390983;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.015746070239616182;  // std dev = 2.387, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0012382972354505189;  // std dev = 6.040, 269.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=44 */
%   | | | else return 0.020570197699824377;  // std dev = 5.034, 165.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1.03e-07, 232.000 (wgt'ed) examples reached here.  /* #pos=232 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22518958057023788;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return -0.0982278530026186;  // std dev = 3.189, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06715652362392177;  // std dev = 4.561, 92.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=36 */
%   | | | else return 0.03340125575510388;  // std dev = 25.318, 2,833.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=980 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.36932125008276184;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.013668147022706684;  // std dev = 2.388, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0010702031929617072;  // std dev = 6.040, 269.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=44 */
%   | | | else return 0.017611581250236975;  // std dev = 5.034, 165.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=32 */


Results
   AUC ROC   = 0.599888
   AUC PR    = 0.583457
   CLL	      = -0.630325
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 148.121 seconds
Total inference time: 1.868 seconds
AUC ROC: 0.599888


Results scoring model
   AUC ROC   = 0.639505
   AUC PR    = 0.578276
   CLL	      = -0.588045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170338
   F1        = 0.291092


Total scoring time: 2.871 seconds
Refined model CLL: -0.588045


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.599888
   AUC PR    = 0.583457
   CLL	      = -0.630325
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 158.556 seconds
Total inference time: 1.868 seconds
AUC ROC: 0.599888
Total revision time: 158.556
Best scored revision CLL: -0.588045


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:44:10
{'AUC ROC': 0.599888, 'AUC PR': 0.583457, 'CLL': -0.630325, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 158.556, 'Inference time': 1.868, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637993, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 5.393, 'Inference time': 1.424}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.04e-06, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.18214978998302928;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.15849928895224974;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.13543423466410742;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.11383345789677322;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015083;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.09431452992366282;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.58e-07, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.0772038651380598;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2.83e-07, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.0625738497032552;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527692;  // std dev = 1.79e-07, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.05031287091062409;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.04019850115302087;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801162;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else return 0.03195729788610014;  // std dev = 32.013, 4,679.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,516 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637577
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.945 seconds
Total inference time: 1.384 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582599
   AUC PR    = 0.537319
   CLL	      = -0.600961
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165198
   F1        = 0.283554


Total scoring time: 2.315 seconds
Parameter learned model CLL: -0.600961


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 300], 'false': [32.013, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 300], 'false': [32.013, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 300], 'false': [32.013, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 300], 'false': [32.013, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 300], 'false': [32.013, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 300], 'false': [32.013, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 300], 'false': [32.013, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.79e-07, 0, 300], 'false': [32.013, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 300], 'false': [32.013, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 300], 'false': [32.013, 3, 1]}]]
[{'': [3.600083194517841e-15, 0.21902430091821545]}, {'': [-4.831690603168682e-15, 0.2190243009182294]}, {'': [-9.473903143468003e-17, 0.21902430091824218]}, {'': [-7.579122514774402e-16, 0.2190243009182673]}, {'': [-2.842170943040401e-16, 0.21902430091828445]}, {'': [4.263256414560601e-16, 0.2190243009182976]}, {'': [2.6645352591003756e-16, 0.21902430091825645]}, {'': [1.0658141036401502e-16, 0.21902430091826516]}, {'': [-2.0724163126336256e-16, 0.21902430091826156]}, {'': [-1.4802973661668753e-16, 0.21902430091828518]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.04e-06, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20751350026272672;  // std dev = 0.477, 4,013.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1642713840791042;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.09837280403092258;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01795523049902844;  // std dev = 7.447, 413.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=66 */
%   | | | else return 0.034944515210008714;  // std dev = 5.132, 181.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18033021378440184;  // std dev = 0.477, 4,013.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.14307534018294843;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.08681449082837045;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01575546532129973;  // std dev = 7.447, 413.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=66 */
%   | | | else return 0.03063727413199447;  // std dev = 5.132, 181.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1534703889426219;  // std dev = 0.477, 4,013.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 9.324257533570988E-4;  // std dev = 6.717, 359.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=53 */
%   | | | else return 0.08837060260218618;  // std dev = 3.389, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05262618543947563;  // std dev = 6.007, 223.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=46 */
%   | | | else return -0.14752209277241962;  // std dev = 0.074, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3197834158814371;  // std dev = 3.892, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return -0.013407982883731476;  // std dev = 3.560, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else return 0.12796109964661673;  // std dev = 0.477, 3,875.000 (wgt'ed) examples reached here.  /* #neg=2,522 #pos=1,353 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11705518343150202;  // std dev = 3.220, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.078935199392829;  // std dev = 0.975, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.029774267368234148;  // std dev = 3.143, 68.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | | else return 0.013045246525966125;  // std dev = 8.468, 526.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=86 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015083;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1052554898516904;  // std dev = 0.476, 4,013.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0014470657081934813;  // std dev = 6.714, 359.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=53 */
%   | | | else return 0.0751606058533422;  // std dev = 3.389, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.04166307079428321;  // std dev = 5.993, 223.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=46 */
%   | | | else return -0.13169821087072908;  // std dev = 0.095, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.58e-07, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.28733401218994026;  // std dev = 3.771, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return -0.056472398055071094;  // std dev = 3.460, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else return 0.08496693937517263;  // std dev = 0.476, 3,882.000 (wgt'ed) examples reached here.  /* #neg=2,527 #pos=1,355 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09367830823434975;  // std dev = 3.214, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.07202019748859344;  // std dev = 0.973, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.026186911288107167;  // std dev = 3.142, 68.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | | else return 0.00881023362609269;  // std dev = 8.457, 526.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=86 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2.83e-07, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2661139381995988;  // std dev = 3.381, 47.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=27 */
%   | | | else return -0.028006380685617335;  // std dev = 4.003, 91.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07631707289142702;  // std dev = 5.112, 119.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=43 */
%   | | | else return 0.06797641513355576;  // std dev = 29.208, 3,756.000 (wgt'ed) examples reached here.  /* #neg=2,446 #pos=1,310 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.07759813385567216;  // std dev = 3.214, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.0648753176857844;  // std dev = 0.973, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.007118247781632694;  // std dev = 7.433, 413.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=66 */
%   | | | else return 0.014577075829284455;  // std dev = 5.114, 181.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527692;  // std dev = 1.79e-07, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.21252775497035656;  // std dev = 3.768, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return -0.05987052631843938;  // std dev = 3.454, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05498873465590902;  // std dev = 5.163, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   | | | else return 0.05404631717432746;  // std dev = 29.208, 3,756.000 (wgt'ed) examples reached here.  /* #neg=2,446 #pos=1,310 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.06598152369765618;  // std dev = 2.900, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return -0.06082377593511834;  // std dev = 1.346, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return -0.0012726731918558537;  // std dev = 6.872, 365.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=56 */
%   | | | else return 0.022303726566485924;  // std dev = 5.927, 229.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=45 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.20144900580243943;  // std dev = 3.171, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return -0.04485203346067993;  // std dev = 3.959, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | | else return 0.04271383266379131;  // std dev = 0.476, 3,882.000 (wgt'ed) examples reached here.  /* #neg=2,527 #pos=1,355 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.004558197460118573;  // std dev = 6.705, 359.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=53 */
%   | | | else return 0.062180616850089535;  // std dev = 3.392, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02579627097790769;  // std dev = 5.975, 223.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=46 */
%   | | | else return -0.12166109618198946;  // std dev = 0.128, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801162;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #pos=300 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033595997979496924;  // std dev = 0.475, 4,013.000 (wgt'ed) examples reached here.  /* #neg=2,611 #pos=1,402 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17742405899060343;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.0022477166465270206;  // std dev = 2.859, 63.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.002127717073021539;  // std dev = 6.866, 365.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=56 */
%   | | | else return 0.016283667893298513;  // std dev = 5.920, 229.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=45 */


Results
   AUC ROC   = 0.602972
   AUC PR    = 0.5865
   CLL	      = -0.629052
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 224.34300000000002 seconds
Total inference time: 2.258 seconds
AUC ROC: 0.602972


Results scoring model
   AUC ROC   = 0.640102
   AUC PR    = 0.577214
   CLL	      = -0.587752
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165198
   F1        = 0.283554


Total scoring time: 4.234 seconds
Refined model CLL: -0.587752


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602972
   AUC PR    = 0.5865
   CLL	      = -0.629052
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 237.83700000000002 seconds
Total inference time: 2.258 seconds
AUC ROC: 0.602972
Total revision time: 237.83700000000002
Best scored revision CLL: -0.587752


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:48:12
{'AUC ROC': 0.602972, 'AUC PR': 0.5865, 'CLL': -0.629052, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 237.83700000000002, 'Inference time': 2.258, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637577, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.945, 'Inference time': 1.384}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 9.053 seconds
Total inference time: 1.194 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.511 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.41979277071595067;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.06245001036832955;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.2054740379801656;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1789291768537829;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12800246769009244;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697812;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.056276641057215464;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.019061048961767534;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1523153115526057;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10831975056255072;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06965937941835045;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.013632486057174754;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.031985791416746956;  // std dev = 6.441, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12725183555449776;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10753145554275953;  // std dev = 3.494, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07178779770497921;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.00918746269119296;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.030002039965254575;  // std dev = 6.428, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10460664893948542;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09206427437332834;  // std dev = 3.492, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0632059060423121;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.00800505717051209;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026083722637837918;  // std dev = 6.428, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2983748527642458;  // std dev = 4.224, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.05714263310596969;  // std dev = 3.897, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.08435513784427974;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07795433035968727;  // std dev = 3.491, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05601310496602493;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006968650868058111;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022611101632271348;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.23654970177990067;  // std dev = 4.222, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.046000994179935875;  // std dev = 3.896, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.0676817284815076;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08276812541839108;  // std dev = 3.478, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07297491069040861;  // std dev = 1.369, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004970795057616516;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01975511073215931;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05403120557759602;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2034904244473797;  // std dev = 1.563, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0022272197366257655;  // std dev = 3.378, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0043251096761796;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.017421638337186348;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04270929467546036;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.17474187138594793;  // std dev = 1.561, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0018910958441245953;  // std dev = 3.378, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.003754965393208435;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015010208987821138;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03358916098008754;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0640640779751497;  // std dev = 3.461, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0694232014182157;  // std dev = 1.373, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.011100140359342921;  // std dev = 8.445, 505.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=87 */
%   | | | else return -0.003694630454753305;  // std dev = 5.490, 223.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=36 */


Results
   AUC ROC   = 0.602807
   AUC PR    = 0.586517
   CLL	      = -0.629682
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 197.018 seconds
Total inference time: 2.119 seconds
AUC ROC: 0.602807


Results scoring model
   AUC ROC   = 0.639969
   AUC PR    = 0.578384
   CLL	      = -0.588541
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 3.538 seconds
Refined model CLL: -0.588541


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602807
   AUC PR    = 0.586517
   CLL	      = -0.629682
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 212.12 seconds
Total inference time: 2.119 seconds
AUC ROC: 0.602807
Total revision time: 212.12
Best scored revision CLL: -0.588541


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:51:48
{'AUC ROC': 0.602807, 'AUC PR': 0.586517, 'CLL': -0.629682, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 212.12, 'Inference time': 2.119, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 9.053, 'Inference time': 1.194}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.16964931590681892;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.67e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.1477180541254869;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.53e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.12647027544969808;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583103;  // std dev = 1.26e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.10663565261135546;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.0887183010635217;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.07297995526313752;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253584;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.05947296403974477;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.0480973282410318;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.0386598174024794;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.030922781535025805;  // std dev = 16.781, 1,313.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=409 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.727491
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.208 seconds
Total inference time: 1.12 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.585193
   AUC PR    = 0.531545
   CLL	      = -0.592002
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170385
   F1        = 0.291161


Total scoring time: 1.848 seconds
Parameter learned model CLL: -0.592002


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.781, 904, 409]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 84], 'false': [16.781, 904, 409]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.53e-07, 0, 84], 'false': [16.781, 904, 409]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 84], 'false': [16.781, 904, 409]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.781, 904, 409]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.781, 904, 409]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.781, 904, 409]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 84], 'false': [16.781, 904, 409]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.781, 904, 409]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 84], 'false': [16.781, 904, 409]}]]
[{'': [-4.2294210461910723e-16, 0.21446789356419427]}, {'': [8.458842092382145e-16, 0.21446789356419582]}, {'': [1.4802973661668755e-15, 0.21446789356421547]}, {'': [1.9032394707859825e-16, 0.2144678935642245]}, {'': [-3.383536836952858e-16, 0.21446789356419518]}, {'': [-5.2867763077388404e-17, 0.2144678935642153]}, {'': [-1.2688263138573217e-16, 0.21446789356421636]}, {'': [2.114710523095536e-17, 0.2144678935642154]}, {'': [-5.551115123125783e-17, 0.21446789356421173]}, {'': [3.9650822308041306e-17, 0.21446789356420254]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18249837747868966;  // std dev = 15.356, 1,076.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=349 */
%   | | | else return 0.12600607795665522;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.05217878584578037;  // std dev = 4.578, 134.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=26 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.67e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15879972713703192;  // std dev = 15.356, 1,076.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=349 */
%   | | | else return 0.10996473133807864;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856348;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.4285227559352605;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03706130139658023;  // std dev = 3.370, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | | else return 0.10167778261349796;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 2.495896293888925E-4;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.53e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13568349515390557;  // std dev = 15.356, 1,076.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=349 */
%   | | | else return 0.0947878984394107;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2564123687585864;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.34770087126293936;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.032415006863981126;  // std dev = 3.370, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | | else return 0.08836914271818352;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 2.1813481305770293E-4;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583103;  // std dev = 1.26e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11403289370512736;  // std dev = 15.356, 1,076.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=349 */
%   | | | else return 0.08079918165998834;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20613740734453953;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.2706524682508071;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.13215700792629806;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04817790531932999;  // std dev = 3.768, 87.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   | | | else return 0.002562084888894345;  // std dev = 2.606, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7701193968943247;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.0737095245196491;  // std dev = 1.298, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09085889436645682;  // std dev = 15.542, 1,112.000 (wgt'ed) examples reached here.  /* #neg=757 #pos=355 */
%   | | | else return 0.17971586261196992;  // std dev = 2.869, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.11772327167752027;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0416430956911039;  // std dev = 3.768, 87.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   | | | else return 0.002238037081115926;  // std dev = 2.606, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07736934668806529;  // std dev = 15.312, 1,076.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=349 */
%   | | | else return 0.053757132389465064;  // std dev = 3.312, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12030530540687707;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.16094973103063248;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.14398808336203886;  // std dev = 6.45e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03837659474733323;  // std dev = 3.758, 87.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   | | | else return 5.649164186278728E-5;  // std dev = 2.608, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253584;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.40566276120392036;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.029233772630624655;  // std dev = 2.058, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05962757787367387;  // std dev = 15.430, 1,102.000 (wgt'ed) examples reached here.  /* #neg=750 #pos=352 */
%   | | | else return 0.10359027499696036;  // std dev = 2.867, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.12713384053970447;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.032943668331618554;  // std dev = 3.758, 87.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=18 */
%   | | else return 4.9366895891660514E-5;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05053466269880254;  // std dev = 15.297, 1,076.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=349 */
%   | | | else return 0.03415105049622381;  // std dev = 3.311, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06634366491487072;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.09496986311507749;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.029430930805029745;  // std dev = 3.197, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return -0.003959302153280141;  // std dev = 1.997, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else return 4.314049364475897E-5;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.30878261619942715;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.013876463820901897;  // std dev = 2.057, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.038065937925562975;  // std dev = 15.429, 1,102.000 (wgt'ed) examples reached here.  /* #neg=750 #pos=352 */
%   | | | else return 0.05887187305299957;  // std dev = 2.867, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008787320013863124;  // std dev = 3.346, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | | else return 0.052277865066082146;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 3.76992196984149E-5;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.032136841899661796;  // std dev = 15.287, 1,076.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=349 */
%   | | | else return 0.021043515781843374;  // std dev = 3.311, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0318877262195837;  // std dev = 2.199, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.06452667703040432;  // std dev = 1.837, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.024047819240786;  // std dev = 3.196, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return -0.008877475731302818;  // std dev = 1.994, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else return 3.2944113861714065E-5;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */


Results
   AUC ROC   = 0.678295
   AUC PR    = 0.712274
   CLL	      = -0.716338
   Precision = 0.958763 at threshold = 0.5
   Recall    = 0.169091
   F1        = 0.287481


Total learning time: 250.515 seconds
Total inference time: 2.296 seconds
AUC ROC: 0.678295


Results scoring model
   AUC ROC   = 0.640975
   AUC PR    = 0.581155
   CLL	      = -0.578684
   Precision = 0.94898 at threshold = 0.5
   Recall    = 0.188641
   F1        = 0.314721


Total scoring time: 7.18 seconds
Refined model CLL: -0.578684


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678295
   AUC PR    = 0.712274
   CLL	      = -0.716338
   Precision = 0.958763 at threshold = 0.5
   Recall    = 0.169091
   F1        = 0.287481


Total learning time: 262.751 seconds
Total inference time: 2.296 seconds
AUC ROC: 0.678295
Total revision time: 262.751
Best scored revision CLL: -0.578684


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:56:15
{'AUC ROC': 0.678295, 'AUC PR': 0.712274, 'CLL': -0.716338, 'Precision': [0.958763, 0.5], 'Recall': 0.169091, 'F1': 0.287481, 'Learning time': 262.751, 'Inference time': 2.296, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.727491, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 3.208, 'Inference time': 1.12}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.39e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.1740778038093067;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.15153912320102972;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.33e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.129651546293877;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.58e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.10919583119660493;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.80e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.09071485031908387;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.07449252082824;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.48e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.06058821773603447;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.0488981533148269;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.0392192152402227;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.031301503063027675;  // std dev = 23.900, 2,643.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=835 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.723841
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.701 seconds
Total inference time: 1.092 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.576572
   AUC PR    = 0.517267
   CLL	      = -0.598308
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153144
   F1        = 0.265611


Total scoring time: 1.988 seconds
Parameter learned model CLL: -0.598308


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.39e-07, 0, 151], 'false': [23.9, 1, 835]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 151], 'false': [23.9, 1, 835]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.33e-07, 0, 151], 'false': [23.9, 1, 835]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 151], 'false': [23.9, 1, 835]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 151], 'false': [23.9, 1, 835]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 151], 'false': [23.9, 1, 835]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.48e-07, 0, 151], 'false': [23.9, 1, 835]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 151], 'false': [23.9, 1, 835]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 151], 'false': [23.9, 1, 835]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.66e-08, 0, 151], 'false': [23.9, 1, 835]}]]
[{'': [5.834920479089564e-15, 0.2161178186255708]}, {'': [-2.5410137570228748e-15, 0.21611781862556761]}, {'': [1.882232412609537e-15, 0.21611781862551188]}, {'': [1.3881464042995335e-15, 0.21611781862555718]}, {'': [5.176139134676226e-16, 0.21611781862552926]}, {'': [-1.882232412609537e-16, 0.21611781862551793]}, {'': [4.058563639689314e-16, 0.21611781862554397]}, {'': [-2.9998079075964495e-16, 0.21611781862553092]}, {'': [-3.8232845881131217e-17, 0.21611781862553645]}, {'': [2.9409881447024017e-17, 0.21611781862555776]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.39e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18946863770173777;  // std dev = 21.835, 2,152.000 (wgt'ed) examples reached here.  /* #neg=1,439 #pos=713 */
%   | | | else return 0.12481560176617768;  // std dev = 4.844, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3692600462106225;  // std dev = 3.353, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return 0.4735335504841277;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07518439823382113;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.04402254104746751;  // std dev = 6.380, 269.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=50 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16480484862394787;  // std dev = 21.835, 2,152.000 (wgt'ed) examples reached here.  /* #neg=1,439 #pos=713 */
%   | | | else return 0.10893247925776797;  // std dev = 4.844, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.31812769406709934;  // std dev = 3.353, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return 0.40564015880039006;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06627631666542753;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.035347822573547315;  // std dev = 5.109, 177.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=32 */
%   | | | else return 0.019574132665573684;  // std dev = 3.872, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.33e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14065957144440233;  // std dev = 21.835, 2,152.000 (wgt'ed) examples reached here.  /* #neg=1,439 #pos=713 */
%   | | | else return 0.0939152997273263;  // std dev = 4.844, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3169981565181926;  // std dev = 3.127, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.24887526074223582;  // std dev = 2.760, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.12926380891106828;  // std dev = 0.002, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.03937134326677853;  // std dev = 5.323, 186.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | else return 0.012032623245658056;  // std dev = 0.369, 98.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.58e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11800620863426885;  // std dev = 21.835, 2,152.000 (wgt'ed) examples reached here.  /* #neg=1,439 #pos=713 */
%   | | | else return 0.08007894754642024;  // std dev = 4.844, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2087898141393979;  // std dev = 3.359, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return 0.2636941249151711;  // std dev = 2.469, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06279774328199332;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11539835631952496;  // std dev = 0.002, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.03104890019869926;  // std dev = 6.379, 269.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=50 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.80e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09753466927822545;  // std dev = 21.835, 2,152.000 (wgt'ed) examples reached here.  /* #neg=1,439 #pos=713 */
%   | | | else return 0.06761908965919;  // std dev = 4.844, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19523369719495653;  // std dev = 3.113, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.15237897310394774;  // std dev = 2.772, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05588344972481291;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026493342563845324;  // std dev = 5.093, 177.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=32 */
%   | | | else return 0.008260105891638633;  // std dev = 3.871, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07961216852477132;  // std dev = 21.835, 2,152.000 (wgt'ed) examples reached here.  /* #neg=1,439 #pos=713 */
%   | | | else return 0.0566190771634183;  // std dev = 4.844, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.148090288724102;  // std dev = 3.111, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.11711868512310385;  // std dev = 2.773, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007953523160947135;  // std dev = 4.813, 174.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=28 */
%   | | | else return 0.08530698117540039;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else return 0.00329871615247279;  // std dev = 0.369, 98.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.48e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06432300077098083;  // std dev = 21.835, 2,152.000 (wgt'ed) examples reached here.  /* #neg=1,439 #pos=713 */
%   | | | else return 0.04707019797674128;  // std dev = 4.844, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09245360856011398;  // std dev = 3.368, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return 0.11867540097586889;  // std dev = 2.455, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05075897272720499;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10728126765077803;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.0223524988483556;  // std dev = 6.375, 269.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=50 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05154471350799431;  // std dev = 21.873, 2,167.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=715 */
%   | | | else return 0.037143668719244786;  // std dev = 4.670, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08484294565586717;  // std dev = 3.107, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.0659585613725486;  // std dev = 2.778, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04559982667539768;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.09743122722261326;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.01927256520717969;  // std dev = 6.375, 269.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=50 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4744303384645723;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.05031692929627232;  // std dev = 2.479, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03836745593845309;  // std dev = 22.087, 2,223.000 (wgt'ed) examples reached here.  /* #neg=1,499 #pos=724 */
%   | | | else return 0.06554939346207174;  // std dev = 4.132, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004523107126406458;  // std dev = 4.802, 174.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=28 */
%   | | | else return 0.06709433200120099;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else return -0.0025487688089776404;  // std dev = 0.369, 98.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.032614456017301265;  // std dev = 21.842, 2,167.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=715 */
%   | | | else return 0.02312736686444489;  // std dev = 4.670, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03599020666267582;  // std dev = 3.366, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return 0.05233212583300876;  // std dev = 2.452, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04148199235963126;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015163702934767941;  // std dev = 5.078, 177.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=32 */
%   | | | else return -1.4438849834364765E-5;  // std dev = 3.870, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */


Results
   AUC ROC   = 0.682269
   AUC PR    = 0.718493
   CLL	      = -0.713249
   Precision = 0.978947 at threshold = 0.5
   Recall    = 0.169091
   F1        = 0.288372


Total learning time: 537.8 seconds
Total inference time: 2.413 seconds
AUC ROC: 0.682269


Results scoring model
   AUC ROC   = 0.632658
   AUC PR    = 0.562389
   CLL	      = -0.586527
   Precision = 0.902062 at threshold = 0.5
   Recall    = 0.177485
   F1        = 0.29661


Total scoring time: 15.737 seconds
Refined model CLL: -0.586527


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682269
   AUC PR    = 0.718493
   CLL	      = -0.713249
   Precision = 0.978947 at threshold = 0.5
   Recall    = 0.169091
   F1        = 0.288372


Total learning time: 560.2259999999999 seconds
Total inference time: 2.413 seconds
AUC ROC: 0.682269
Total revision time: 560.2259999999999
Best scored revision CLL: -0.586527


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 09:05:40
{'AUC ROC': 0.682269, 'AUC PR': 0.718493, 'CLL': -0.713249, 'Precision': [0.978947, 0.5], 'Recall': 0.169091, 'F1': 0.288372, 'Learning time': 560.2259999999999, 'Inference time': 2.413, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.723841, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.701, 'Inference time': 1.092}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.17287487599367238;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.15050136977219858;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.1287880179189675;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.10850151322279476;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.09017404579504033;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.95e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.07408342736673762;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.060287114734505313;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9.42e-08, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.048682382683728834;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.039068851969661776;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.031199995977881728;  // std dev = 29.221, 3,959.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,246 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.724823
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 6.006 seconds
Total inference time: 1.129 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.579054
   AUC PR    = 0.521481
   CLL	      = -0.596545
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158108
   F1        = 0.273046


Total scoring time: 2.195 seconds
Parameter learned model CLL: -0.596545


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 234], 'false': [29.221, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 234], 'false': [29.221, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.33e-07, 0, 234], 'false': [29.221, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 234], 'false': [29.221, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 234], 'false': [29.221, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.95e-07, 0, 234], 'false': [29.221, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 234], 'false': [29.221, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 234], 'false': [29.221, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 234], 'false': [29.221, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 234], 'false': [29.221, 2, 1]}]]
[{'': [4.8584118684451296e-15, 0.21567352302247372]}, {'': [-4.12965008817836e-15, 0.21567352302248358]}, {'': [1.2146029671112824e-15, 0.21567352302248488]}, {'': [-1.2146029671112825e-16, 0.21567352302246756]}, {'': [3.795634272222757e-16, 0.21567352302246168]}, {'': [3.7197215867783024e-16, 0.21567352302244963]}, {'': [3.643808901333847e-16, 0.21567352302241488]}, {'': [3.7956342722227575e-17, 0.2156735230224356]}, {'': [-1.6321227370557858e-16, 0.21567352302243697]}, {'': [4.175197699445033e-17, 0.21567352302245324]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19158489569064022;  // std dev = 26.868, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,165 #pos=1,083 */
%   | | | else return 0.10659614006845534;  // std dev = 5.483, 161.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.34995221378803576;  // std dev = 3.905, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.3709694479200248;  // std dev = 3.121, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013321348892614914;  // std dev = 5.515, 232.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=36 */
%   | | | else return 0.13592671287729013;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.007704723437073255;  // std dev = 0.341, 164.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16662718880410102;  // std dev = 26.868, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,165 #pos=1,083 */
%   | | | else return 0.09311848122425923;  // std dev = 5.483, 161.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.30180906690868475;  // std dev = 3.905, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.3195707324298151;  // std dev = 3.121, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.09479750315235977;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0400335841560346;  // std dev = 6.365, 268.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=50 */
%   | | | else return -0.00511329040805581;  // std dev = 4.360, 162.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1421673283066288;  // std dev = 26.868, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,165 #pos=1,083 */
%   | | | else return 0.08050547193402197;  // std dev = 5.483, 161.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2509923434990771;  // std dev = 3.905, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.26484890423013485;  // std dev = 3.121, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.10301630752823264;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03873317555457541;  // std dev = 6.349, 264.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=50 */
%   | | | else return -0.006023834954577443;  // std dev = 4.364, 164.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11920708215553216;  // std dev = 26.868, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,165 #pos=1,083 */
%   | | | else return 0.06895327342887454;  // std dev = 5.483, 161.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20218658216144808;  // std dev = 3.905, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.2122559513279361;  // std dev = 3.121, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09045811497143685;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03371198062441907;  // std dev = 6.349, 264.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=50 */
%   | | | else return -0.005299407668182941;  // std dev = 4.364, 164.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09839832401775714;  // std dev = 26.876, 3,259.000 (wgt'ed) examples reached here.  /* #neg=2,176 #pos=1,083 */
%   | | | else return 0.05694675822706921;  // std dev = 5.445, 150.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15855008532707532;  // std dev = 3.731, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.1654928852014064;  // std dev = 3.327, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.08018018448041463;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.029231406583814654;  // std dev = 6.348, 264.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=50 */
%   | | | else return -0.004664696553968319;  // std dev = 4.364, 164.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.95e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08046871318498415;  // std dev = 26.866, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,165 #pos=1,083 */
%   | | | else return 0.04646115402048446;  // std dev = 5.488, 161.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12176892126951516;  // std dev = 3.903, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.12889377776827352;  // std dev = 3.123, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.001174429443917407;  // std dev = 5.494, 232.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=36 */
%   | | | else return 0.09936674960834191;  // std dev = 3.288, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.00410801188185414;  // std dev = 0.341, 164.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06498375003265652;  // std dev = 26.873, 3,259.000 (wgt'ed) examples reached here.  /* #neg=2,176 #pos=1,083 */
%   | | | else return 0.0364911031265198;  // std dev = 5.452, 150.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0919991356774834;  // std dev = 3.729, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.09864352770312376;  // std dev = 3.330, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.09549939578745739;  // std dev = 0.219, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07151210599707886;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return 0.017664654167659742;  // std dev = 7.622, 408.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=71 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9.42e-08, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.052123864617746374;  // std dev = 26.865, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,165 #pos=1,083 */
%   | | | else return 0.03040836341247022;  // std dev = 5.492, 161.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06967713881722527;  // std dev = 3.902, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.07528466083425386;  // std dev = 3.124, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08403314255272894;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02059241029856621;  // std dev = 6.333, 268.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=50 */
%   | | | else return -0.004202425906465889;  // std dev = 4.360, 162.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04153218765986619;  // std dev = 26.871, 3,259.000 (wgt'ed) examples reached here.  /* #neg=2,176 #pos=1,083 */
%   | | | else return 0.02256618079631559;  // std dev = 5.457, 150.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05161337172558408;  // std dev = 3.727, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.05746364296849838;  // std dev = 3.331, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07458363648801714;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06635454913655679;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return 0.01375719386372799;  // std dev = 7.620, 408.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=71 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0328972023385767;  // std dev = 26.871, 3,259.000 (wgt'ed) examples reached here.  /* #neg=2,176 #pos=1,083 */
%   | | | else return 0.01839909736556468;  // std dev = 5.458, 150.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.038918025855202064;  // std dev = 3.901, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.04366148469947872;  // std dev = 3.125, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.003946307485415477;  // std dev = 5.483, 232.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=36 */
%   | | | else return 0.07761500149654764;  // std dev = 3.282, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.006533697388055783;  // std dev = 0.341, 164.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=22 */


Results
   AUC ROC   = 0.684062
   AUC PR    = 0.724476
   CLL	      = -0.713388
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 845.48 seconds
Total inference time: 2.662 seconds
AUC ROC: 0.684062


Results scoring model
   AUC ROC   = 0.629145
   AUC PR    = 0.555354
   CLL	      = -0.586128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158108
   F1        = 0.273046


Total scoring time: 23.98 seconds
Refined model CLL: -0.586128


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.684062
   AUC PR    = 0.724476
   CLL	      = -0.713388
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 877.6610000000001 seconds
Total inference time: 2.662 seconds
AUC ROC: 0.684062
Total revision time: 877.6610000000001
Best scored revision CLL: -0.586128


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 09:20:22
{'AUC ROC': 0.684062, 'AUC PR': 0.724476, 'CLL': -0.713388, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 877.6610000000001, 'Inference time': 2.662, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.724823, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 6.006, 'Inference time': 1.129}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.17207154511468167;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.1498082702220635;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.12821108780528223;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.10803737626563362;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.08981225629552271;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.07380949545834206;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.06008527336482574;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.048537560273939295;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.03896778170320211;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.03113164488979159;  // std dev = 33.697, 5,272.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,655 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.725482
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 8.541 seconds
Total inference time: 1.171 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.580588
   AUC PR    = 0.524014
   CLL	      = -0.595414
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161176
   F1        = 0.277608


Total scoring time: 2.413 seconds
Parameter learned model CLL: -0.595414


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 318], 'false': [33.697, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [33.697, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [33.697, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [33.697, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [33.697, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 318], 'false': [33.697, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 318], 'false': [33.697, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 318], 'false': [33.697, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [33.697, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [33.697, 3, 1]}]]
[{'': [3.4856813452382273e-15, 0.21537520493637802]}, {'': [-5.005080905983095e-15, 0.21537520493646076]}, {'': [-3.5750577899879257e-16, 0.21537520493649395]}, {'': [-9.161085586844059e-16, 0.2153752049365125]}, {'': [-4.692263349359152e-16, 0.21537520493643708]}, {'': [4.468822237484907e-16, 0.21537520493638102]}, {'': [1.8992494509310855e-16, 0.21537520493641873]}, {'': [2.2344111187424534e-16, 0.2153752049364595]}, {'': [-2.2344111187424534e-16, 0.2153752049364318]}, {'': [-1.8992494509310855e-16, 0.2153752049364614]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19010105296322724;  // std dev = 31.037, 4,344.000 (wgt'ed) examples reached here.  /* #neg=2,902 #pos=1,442 */
%   | | | else return 0.11795285666814016;  // std dev = 6.263, 204.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=53 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.41038774106966036;  // std dev = 4.070, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.3496743588283247;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014888747011737865;  // std dev = 6.493, 319.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=50 */
%   | | | else return 0.10430278125335853;  // std dev = 3.473, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.006585364417396403;  // std dev = 4.921, 207.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.165407778781232;  // std dev = 31.059, 4,352.000 (wgt'ed) examples reached here.  /* #neg=2,908 #pos=1,444 */
%   | | | else return 0.09913901267977226;  // std dev = 6.149, 196.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3527691412538241;  // std dev = 4.070, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.30157396914689066;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07915701559840427;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03553912143332669;  // std dev = 7.232, 353.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=64 */
%   | | | else return -0.009699701465551698;  // std dev = 4.930, 214.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1412974432733012;  // std dev = 31.034, 4,344.000 (wgt'ed) examples reached here.  /* #neg=2,902 #pos=1,442 */
%   | | | else return 0.08505578716406696;  // std dev = 6.270, 204.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=53 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.29047923034909356;  // std dev = 4.070, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.2508082546151588;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06969019671577495;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03105867368568433;  // std dev = 7.232, 353.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=64 */
%   | | | else return -0.008532237164558608;  // std dev = 4.930, 214.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11861743287673623;  // std dev = 31.056, 4,352.000 (wgt'ed) examples reached here.  /* #neg=2,908 #pos=1,444 */
%   | | | else return 0.06880162167828292;  // std dev = 6.157, 196.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23062469874650807;  // std dev = 4.070, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.20205211471792747;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007179390601715324;  // std dev = 6.483, 319.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=50 */
%   | | | else return 0.0822000776439081;  // std dev = 3.473, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0035911377236110186;  // std dev = 4.921, 207.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=28 */
%   | | | else return -0.12345806496021025;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09811655221295537;  // std dev = 31.031, 4,344.000 (wgt'ed) examples reached here.  /* #neg=2,902 #pos=1,442 */
%   | | | else return 0.05801209547908433;  // std dev = 6.277, 204.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.178154295297835;  // std dev = 4.439, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | | | else return 0.15469523180353573;  // std dev = 3.407, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06259138759323483;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024161232355493476;  // std dev = 7.227, 353.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=64 */
%   | | | else return -0.006680095320489692;  // std dev = 4.929, 214.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08016647708050234;  // std dev = 31.053, 4,352.000 (wgt'ed) examples reached here.  /* #neg=2,908 #pos=1,444 */
%   | | | else return 0.04536158533986499;  // std dev = 6.165, 196.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13915427874585065;  // std dev = 4.075, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.11897861080799293;  // std dev = 3.834, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0035610646659936063;  // std dev = 6.422, 327.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=49 */
%   | | | else return 0.06935466462791817;  // std dev = 3.405, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0032526341775562105;  // std dev = 5.040, 197.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=30 */
%   | | | else return -0.11005091177512313;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06480440708451181;  // std dev = 31.029, 4,344.000 (wgt'ed) examples reached here.  /* #neg=2,902 #pos=1,442 */
%   | | | else return 0.038023054567899006;  // std dev = 6.283, 204.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1064607725431867;  // std dev = 4.445, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | | | else return 0.08522323357294322;  // std dev = 3.397, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.002361612094825701;  // std dev = 6.474, 319.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=50 */
%   | | | else return 0.06658652167641038;  // std dev = 3.473, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0028681693409958343;  // std dev = 4.921, 207.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=28 */
%   | | | else return -0.09972605930301258;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.052007076663645006;  // std dev = 31.051, 4,352.000 (wgt'ed) examples reached here.  /* #neg=2,908 #pos=1,444 */
%   | | | else return 0.028809813185701433;  // std dev = 6.171, 196.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08169795802715023;  // std dev = 4.080, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.06574692552715879;  // std dev = 3.828, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05680510038026809;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017260121813568705;  // std dev = 7.218, 353.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=64 */
%   | | | else return -0.005425063246510824;  // std dev = 4.926, 214.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=28 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.041409765014966925;  // std dev = 31.051, 4,352.000 (wgt'ed) examples reached here.  /* #neg=2,908 #pos=1,444 */
%   | | | else return 0.023655188318539813;  // std dev = 6.171, 196.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06271456253617472;  // std dev = 4.449, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | | | else return 0.044633325935105085;  // std dev = 3.391, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0508787914432422;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.014854437518766726;  // std dev = 7.139, 367.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=62 */
%   | | | else return -0.006114053537544074;  // std dev = 5.040, 200.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=30 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03287134369031617;  // std dev = 31.027, 4,344.000 (wgt'ed) examples reached here.  /* #neg=2,902 #pos=1,442 */
%   | | | else return 0.018468640098768394;  // std dev = 6.292, 204.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=53 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.048264959384164856;  // std dev = 4.084, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.034764297404810754;  // std dev = 3.822, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 4.567892374920954E-5;  // std dev = 6.413, 327.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=49 */
%   | | | else return 0.055861880566182534;  // std dev = 3.403, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004407266020513324;  // std dev = 5.039, 197.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=30 */
%   | | | else return -0.09017194760794202;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.686244
   AUC PR    = 0.724946
   CLL	      = -0.709262
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 1120.569 seconds
Total inference time: 2.653 seconds
AUC ROC: 0.686244


Results scoring model
   AUC ROC   = 0.631156
   AUC PR    = 0.558917
   CLL	      = -0.58462
   Precision = 0.922078 at threshold = 0.5
   Recall    = 0.179929
   F1        = 0.301103


Total scoring time: 31.212 seconds
Refined model CLL: -0.58462


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.686244
   AUC PR    = 0.724946
   CLL	      = -0.709262
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 1162.735 seconds
Total inference time: 2.653 seconds
AUC ROC: 0.686244
Total revision time: 1162.735
Best scored revision CLL: -0.58462


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 09:39:50
{'AUC ROC': 0.686244, 'AUC PR': 0.724946, 'CLL': -0.709262, 'Precision': [0.978261, 0.5], 'Recall': 0.163636, 'F1': 0.280374, 'Learning time': 1162.735, 'Inference time': 2.653, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.725482, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 8.541, 'Inference time': 1.171}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 10.856 seconds
Total inference time: 1.213 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 2.486 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16281165607612208;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.11705241862532778;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06261940488996087;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06323004872688665;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.025921138191458484;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13902683790466847;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.10051288053749487;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2650732416269156;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.055084618573868996;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02955752511786051;  // std dev = 8.052, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0011169129400832169;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11683219078218161;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.08298829629729196;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611724;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.20308413151775792;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.048734191123617925;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02663338101659442;  // std dev = 8.057, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.0030685982652600766;  // std dev = 5.538, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0966582515623662;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068732;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16750919730103575;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566578;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007035418600719423;  // std dev = 7.211, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07692101337179193;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.001055028297013808;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12784869404552435;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0790770048865046;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.05588637066419624;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12986669782561092;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224821;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06272803441004286;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.04461360695694025;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.016809888626595465;  // std dev = 9.621, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0639687050699186;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.046047402274410926;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180404;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09166851495201686;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05517625233499597;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021983434520736738;  // std dev = 8.036, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00655300294428534;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4363307661888433;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.05602225967148368;  // std dev = 4.015, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05007518751086534;  // std dev = 34.950, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.07261257093281721;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00571027085611092;  // std dev = 7.203, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06097209429233922;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0057180883950345325;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11530040097938568;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04103059210227471;  // std dev = 34.563, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.027527883231084436;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05850328953639899;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.05030428589983231;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04235603595944588;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01815285744070863;  // std dev = 8.032, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008143287464327392;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03255033576720404;  // std dev = 34.563, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.022311642013537383;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.043989195371871806;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.03780693433867814;  // std dev = 4.056, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0019861108084011977;  // std dev = 7.197, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05855824784652319;  // std dev = 3.916, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005110099325763295;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10329379837820882;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.682887
   AUC PR    = 0.718615
   CLL	      = -0.712261
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 1475.634 seconds
Total inference time: 2.514 seconds
AUC ROC: 0.682887


Results scoring model
   AUC ROC   = 0.634295
   AUC PR    = 0.566302
   CLL	      = -0.583004
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 43.72 seconds
Refined model CLL: -0.583004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682887
   AUC PR    = 0.718615
   CLL	      = -0.712261
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 1532.6960000000001 seconds
Total inference time: 2.514 seconds
AUC ROC: 0.682887
Total revision time: 1532.6960000000001
Best scored revision CLL: -0.583004


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 10:05:27
{'AUC ROC': 0.682887, 'AUC PR': 0.718615, 'CLL': -0.712261, 'Precision': [1.0, 0.5], 'Recall': 0.150909, 'F1': 0.262243, 'Learning time': 1532.6960000000001, 'Inference time': 2.514, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 10.856, 'Inference time': 1.213}}


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.20059388574491363;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.23e-07, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.17438031568809656;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.32e-07, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.1485700448450331;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.12429081401180372;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.10235108047912814;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.08318410408878014;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.06689217772569281;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.05334052236366052;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.16e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.04225574745094284;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else return 0.03330459996060251;  // std dev = 17.221, 1,317.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=451 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 3.142 seconds
Total inference time: 1.229 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.573724
   AUC PR    = 0.535156
   CLL	      = -0.61528
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147448
   F1        = 0.257002


Total scoring time: 1.709 seconds
Parameter learned model CLL: -0.61528


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.32e-07, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.16e-08, 0, 78], 'false': [17.221, 866, 451]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 78], 'false': [17.221, 866, 451]}]]
[{'': [-1.002047447866808e-15, 0.22517640642285613]}, {'': [6.376665577334232e-16, 0.2251764064228649]}, {'': [1.4119759492668657e-15, 0.22517640642287287]}, {'': [-2.2773805633336544e-17, 0.22517640642288073]}, {'': [-3.8715469576672126e-16, 0.2251764064228737]}, {'': [-1.1386902816668272e-17, 0.2251764064228632]}, {'': [-9.678867394168032e-17, 0.22517640642288225]}, {'': [1.708035422500241e-17, 0.22517640642287906]}, {'': [8.540177112501205e-17, 0.22517640642286432]}, {'': [3.700743415417188e-17, 0.22517640642287404]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22194506866717004;  // std dev = 0.481, 1,138.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=414 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04945328292559899;  // std dev = 4.218, 115.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=22 */
%   | | | else return 0.08731560176617903;  // std dev = 2.912, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.23e-07, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5432145866929475;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.10165614513450577;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return 0.1900903969081396;  // std dev = 0.480, 1,102.000 (wgt'ed) examples reached here.  /* #neg=704 #pos=398 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.08753453166035643;  // std dev = 1.738, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.15666914250527716;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.09354295879156342;  // std dev = 1.480, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.05884332692018682;  // std dev = 4.872, 144.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=30 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.32e-07, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16356142266613974;  // std dev = 0.481, 1,138.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=414 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07617325975401236;  // std dev = 1.737, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.13707123362246668;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08083005673233178;  // std dev = 1.479, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.05120683230294085;  // std dev = 4.872, 144.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=30 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5237843666383587;  // std dev = 1.734, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.1258675019782846;  // std dev = 2.138, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.16986945133332532;  // std dev = 2.630, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.12951349067321347;  // std dev = 15.676, 1,071.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=382 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.15145073057958633;  // std dev = 1.610, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.03807227967685377;  // std dev = 4.180, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.15373015499228299;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.045264922085388744;  // std dev = 2.952, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11118420573309573;  // std dev = 0.480, 1,138.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=414 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.12791637265784198;  // std dev = 1.608, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.03279442030236057;  // std dev = 4.179, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.13483880850873012;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.039017151230619516;  // std dev = 2.952, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08964197146706251;  // std dev = 0.480, 1,138.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=414 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05533150648922442;  // std dev = 3.805, 82.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | | | else return -0.004967410094535681;  // std dev = 2.353, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03074381570558518;  // std dev = 2.951, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return -0.17202711058263956;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6339711129186346;  // std dev = 0.125, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.33452973174921147;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.24711128781062222;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06807525120048417;  // std dev = 2.553, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.06721152099512387;  // std dev = 0.479, 1,102.000 (wgt'ed) examples reached here.  /* #neg=707 #pos=395 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.014925775499455101;  // std dev = 4.206, 115.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=22 */
%   | | | else return 0.048183724309060406;  // std dev = 2.895, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.056333206975406655;  // std dev = 0.478, 1,138.000 (wgt'ed) examples reached here.  /* #neg=724 #pos=414 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.04709417294154825;  // std dev = 1.644, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.14225509185470583;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.020841102944803548;  // std dev = 4.161, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
%   | | | else return 0.035096655872078664;  // std dev = 2.909, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.16e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.45370509152633454;  // std dev = 9.506, 519.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=400 */
%   | | | else return -0.29297502316634166;  // std dev = 2.930, 633.000 (wgt'ed) examples reached here.  /* #neg=625 #pos=8 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return -0.07562616753720566;  // std dev = 3.142, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.027755898341247132;  // std dev = 2.526, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.09949360350943762;  // std dev = 3.352, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.20075976478794685;  // std dev = 1.228, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.19953478652799278;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3496907295054295;  // std dev = 9.505, 519.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=400 */
%   | | | else return -0.23486564914259017;  // std dev = 2.895, 633.000 (wgt'ed) examples reached here.  /* #neg=625 #pos=8 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return -0.059501440234669696;  // std dev = 3.142, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.02337154454052983;  // std dev = 2.525, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.4313742861021061;  // std dev = 0.415, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.14513729392986954;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.011160444419439246;  // std dev = 2.938, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */


Results
   AUC ROC   = 0.869561
   AUC PR    = 0.808872
   CLL	      = -0.439602
   Precision = 0.731235 at threshold = 0.5
   Recall    = 0.820652
   F1        = 0.773367


Total learning time: 553.661 seconds
Total inference time: 2.493 seconds
AUC ROC: 0.869561


Results scoring model
   AUC ROC   = 0.912819
   AUC PR    = 0.859318
   CLL	      = -0.435297
   Precision = 0.808511 at threshold = 0.5
   Recall    = 0.862004
   F1        = 0.834401


Total scoring time: 8.331 seconds
Refined model CLL: -0.435297


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.869561
   AUC PR    = 0.808872
   CLL	      = -0.439602
   Precision = 0.731235 at threshold = 0.5
   Recall    = 0.820652
   F1        = 0.773367


Total learning time: 566.843 seconds
Total inference time: 2.493 seconds
AUC ROC: 0.869561
Total revision time: 566.843
Best scored revision CLL: -0.435297


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 10:14:58
{'AUC ROC': 0.869561, 'AUC PR': 0.808872, 'CLL': -0.439602, 'Precision': [0.731235, 0.5], 'Recall': 0.820652, 'F1': 0.773367, 'Learning time': 566.843, 'Inference time': 2.493, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555755, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 3.142, 'Inference time': 1.229}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.02e-06, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.1987121010051389;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.17276147572494774;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.14723477750991928;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.34e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.12323272879903593;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.1015429969471099;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.08258733621489618;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.67e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.06646502085504362;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.0530440148957288;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.04205658686691724;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.03317597420404923;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555511
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.561 seconds
Total inference time: 1.158 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.577432
   AUC PR    = 0.541273
   CLL	      = -0.612651
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154863
   F1        = 0.268193


Total scoring time: 2.074 seconds
Parameter learned model CLL: -0.612651


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.02e-06, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.53e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 164], 'false': [24.294, 1, 895]}]]
[{'': [6.325563379327721e-15, 0.22457989593398991]}, {'': [-2.859501253668696e-15, 0.22457989593394026]}, {'': [1.863008392541726e-15, 0.22457989593397182]}, {'': [1.1481330791245522e-15, 0.2245798959339989]}, {'': [8.015268665586496e-16, 0.22457989593398317]}, {'': [-2.4912321528174247e-16, 0.22457989593396438]}, {'': [4.3325776570737815e-16, 0.22457989593394406]}, {'': [-3.195276022091914e-16, 0.22457989593396144]}, {'': [-2.4641535424607135e-16, 0.22457989593395444]}, {'': [5.415722071342227e-17, 0.22457989593398034]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.02e-06, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5143989350995116;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else return 0.22211289906347123;  // std dev = 0.481, 2,220.000 (wgt'ed) examples reached here.  /* #neg=1,412 #pos=808 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04802235282103049;  // std dev = 4.930, 158.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=30 */
%   | | | else return 0.00814893509951235;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.03206197857777325;  // std dev = 3.636, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19439205871073356;  // std dev = 0.481, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,451 #pos=837 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.1477979325049499;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.023071159026082408;  // std dev = 2.237, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03146753044936295;  // std dev = 5.512, 208.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=37 */
%   | | | else return 0.02104928440883561;  // std dev = 3.531, 91.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1650032538738299;  // std dev = 0.481, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,451 #pos=837 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.038774226211823325;  // std dev = 4.926, 158.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=30 */
%   | | | else return 0.0035459398636348448;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.02147729547379528;  // std dev = 3.641, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | | else return -0.13961892949815016;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.34e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13722119025220472;  // std dev = 0.481, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,451 #pos=837 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.1345863787418937;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.01923687898629832;  // std dev = 2.237, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.018892436331025036;  // std dev = 5.303, 200.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=34 */
%   | | | else return 0.027241444416035633;  // std dev = 3.830, 99.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11213603706950082;  // std dev = 0.481, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,451 #pos=837 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.031123858189272983;  // std dev = 4.923, 158.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=30 */
%   | | | else return 6.801125438838238E-4;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.016340999517166117;  // std dev = 3.641, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | | else return -0.12653535623996595;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09033300105945094;  // std dev = 0.481, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,451 #pos=837 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.012579558128031382;  // std dev = 5.372, 203.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=35 */
%   | | | else return 0.049941220103288955;  // std dev = 2.362, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.1250144396148619;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.019660976525837;  // std dev = 3.630, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.67e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07194876591161319;  // std dev = 0.481, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,451 #pos=837 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.45522030699104776;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.03126386784874904;  // std dev = 1.849, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.015429256628719865;  // std dev = 2.077, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.013408061320681898;  // std dev = 6.155, 264.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=46 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0568056683295565;  // std dev = 0.481, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,451 #pos=837 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.023427813799657984;  // std dev = 4.899, 158.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=30 */
%   | | | else return -0.004467428232887848;  // std dev = 3.176, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.12099219506872212;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.015709043908437623;  // std dev = 3.629, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.051812468620598094;  // std dev = 4.051, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.6625124532065296;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0432047739176054;  // std dev = 0.481, 2,214.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=807 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.006858269470353743;  // std dev = 5.339, 203.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=35 */
%   | | | else return 0.04232813093011387;  // std dev = 2.360, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009527333115449284;  // std dev = 3.636, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | | else return -0.10590046523348987;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034742322172061364;  // std dev = 0.481, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,451 #pos=837 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.019154526434991635;  // std dev = 4.897, 158.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=30 */
%   | | | else return -0.0068101627885529354;  // std dev = 3.175, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.10726239442963856;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.012850077411931702;  // std dev = 3.627, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */


Results
   AUC ROC   = 0.678337
   AUC PR    = 0.620756
   CLL	      = -0.54263
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 128.713 seconds
Total inference time: 1.676 seconds
AUC ROC: 0.678337


Results scoring model
   AUC ROC   = 0.630153
   AUC PR    = 0.577557
   CLL	      = -0.600017
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.155807
   F1        = 0.269608


Total scoring time: 3.155 seconds
Refined model CLL: -0.600017


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678337
   AUC PR    = 0.620756
   CLL	      = -0.54263
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 138.503 seconds
Total inference time: 1.676 seconds
AUC ROC: 0.678337
Total revision time: 138.503
Best scored revision CLL: -0.600017


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 10:17:20
{'AUC ROC': 0.678337, 'AUC PR': 0.620756, 'CLL': -0.54263, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 138.503, 'Inference time': 1.676, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555511, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.561, 'Inference time': 1.158}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.19975440483868165;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.17365817738523195;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.14797450871888657;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.12381904009235062;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.73e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.10199091678893075;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.01e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.0829182493171927;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.06670198576660145;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.0532085823241524;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.042167186362325616;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.42e-08, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.03324745125688461;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555644
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 5.931 seconds
Total inference time: 1.13 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575519
   AUC PR    = 0.538189
   CLL	      = -0.614047
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151038
   F1        = 0.262438


Total scoring time: 2.084 seconds
Parameter learned model CLL: -0.614047


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.06e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.15e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 240], 'false': [29.802, 2, 1]}]]
[{'': [4.736951571734001e-15, 0.22491117278344738]}, {'': [-4.263256414560601e-15, 0.2249111727834422]}, {'': [1.0658141036401502e-15, 0.2249111727834472]}, {'': [-1.7763568394002506e-16, 0.22491117278343734]}, {'': [3.108624468950438e-16, 0.22491117278341546]}, {'': [3.774758283725532e-16, 0.22491117278342052]}, {'': [3.552713678800501e-16, 0.22491117278348094]}, {'': [5.551115123125783e-17, 0.22491117278342548]}, {'': [-1.7023419710919068e-16, 0.2249111727834187]}, {'': [3.700743415417188e-17, 0.22491117278346087]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21671591329265363;  // std dev = 27.171, 3,210.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,151 */
%   | | | else return 0.15876243203202794;  // std dev = 5.854, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.48777856472914083;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.4010060779566551;  // std dev = 2.947, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0949910403626705;  // std dev = 6.420, 228.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=54 */
%   | | | else return 0.012694389644966919;  // std dev = 3.791, 110.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.039308355389366896;  // std dev = 4.524, 138.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.188236100214325;  // std dev = 27.171, 3,210.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,151 */
%   | | | else return 0.13831676009576224;  // std dev = 5.854, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.791419531381939;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3700110514694808;  // std dev = 4.551, 85.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.08302990742025479;  // std dev = 6.420, 228.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=54 */
%   | | | else return 0.011142073235255946;  // std dev = 3.791, 110.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.14090580131484284;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.03568809445654981;  // std dev = 4.518, 138.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=25 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15996388094390784;  // std dev = 27.171, 3,210.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,151 */
%   | | | else return 0.11862319724547614;  // std dev = 5.854, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3440527430100185;  // std dev = 3.523, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.27702347464823723;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07190998974937433;  // std dev = 6.420, 228.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=54 */
%   | | | else return 0.00976794826265623;  // std dev = 3.791, 110.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.12470677593798891;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.03119627624654734;  // std dev = 4.518, 138.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=25 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13327415089076394;  // std dev = 27.171, 3,210.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,151 */
%   | | | else return 0.10029382546857553;  // std dev = 5.854, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.553527814215204;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23545359921139314;  // std dev = 4.546, 85.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06176581164118095;  // std dev = 6.420, 228.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=54 */
%   | | | else return 0.008554308978660047;  // std dev = 3.791, 110.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.028133305314018316;  // std dev = 4.513, 138.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=25 */
%   | | | else return -0.12372649018101219;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.73e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10923577042419619;  // std dev = 27.176, 3,215.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,151 */
%   | | | else return 0.08152108932804247;  // std dev = 5.832, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.41629945922896666;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1808196341773441;  // std dev = 4.546, 85.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14120826152685403;  // std dev = 2.791, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.09040721402617834;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04344555061718649;  // std dev = 2.753, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.02333651446425107;  // std dev = 7.704, 387.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=74 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.01e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08826898073017628;  // std dev = 27.176, 3,215.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,151 */
%   | | | else return 0.06684953180921213;  // std dev = 5.833, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.16198478668743588;  // std dev = 3.497, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.11920705763764568;  // std dev = 2.919, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12173340082933373;  // std dev = 2.792, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.07882860659541605;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0229145290512265;  // std dev = 6.884, 299.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=60 */
%   | | | else return 0.01990493723081169;  // std dev = 4.419, 136.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07057748640236415;  // std dev = 27.170, 3,210.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,151 */
%   | | | else return 0.05400817466573424;  // std dev = 5.860, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12198731685440241;  // std dev = 3.498, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.09005415881148457;  // std dev = 2.920, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3302175248051577;  // std dev = 1.175, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.016213362872763742;  // std dev = 2.631, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021355406715776824;  // std dev = 6.645, 290.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=55 */
%   | | | else return 0.01419514440945676;  // std dev = 4.794, 144.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=29 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.055928210011846585;  // std dev = 27.174, 3,215.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,151 */
%   | | | else return 0.04271891742853197;  // std dev = 5.837, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09188342715799236;  // std dev = 3.499, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.06779779236857392;  // std dev = 2.920, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09899253497885536;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.07165319652447232;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.026872068072087696;  // std dev = 2.730, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.014217344288809221;  // std dev = 7.703, 387.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=74 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25967374877843213;  // std dev = 3.390, 47.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=27 */
%   | | | else return -0.06897704175273842;  // std dev = 3.352, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06575676846083132;  // std dev = 4.769, 96.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=37 */
%   | | | else return 0.042602208697555224;  // std dev = 27.291, 3,252.000 (wgt'ed) examples reached here.  /* #neg=2,081 #pos=1,171 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.21404786599559217;  // std dev = 1.329, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.013688981654165374;  // std dev = 2.623, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.022881867090868212;  // std dev = 2.729, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.012141098293752053;  // std dev = 7.703, 387.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=74 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.42e-08, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.034333524624803546;  // std dev = 27.152, 3,215.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,151 */
%   | | | else return 0.026250724036745252;  // std dev = 5.834, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.26230784521962724;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04261750477154452;  // std dev = 4.543, 85.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07791071575707376;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.011859078886236952;  // std dev = 6.642, 293.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=55 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011212834054008062;  // std dev = 4.933, 146.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=31 */
%   | | | else return -0.1178612119035471;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.678119
   AUC PR    = 0.621814
   CLL	      = -0.54521
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 887.854 seconds
Total inference time: 2.458 seconds
AUC ROC: 0.678119


Results scoring model
   AUC ROC   = 0.632064
   AUC PR    = 0.58248
   CLL	      = -0.602254
   Precision = 0.890578 at threshold = 0.5
   Recall    = 0.184393
   F1        = 0.305527


Total scoring time: 22.041 seconds
Refined model CLL: -0.602254


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678119
   AUC PR    = 0.621814
   CLL	      = -0.54521
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 917.9100000000001 seconds
Total inference time: 2.458 seconds
AUC ROC: 0.678119
Total revision time: 917.9100000000001
Best scored revision CLL: -0.602254


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 10:32:43
{'AUC ROC': 0.678119, 'AUC PR': 0.621814, 'CLL': -0.54521, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 917.9100000000001, 'Inference time': 2.458, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555644, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 5.931, 'Inference time': 1.13}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.19877274643461557;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.17281365219631922;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.1472778274706064;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.12326685958114515;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.1015690811717255;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.08260661520344516;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.0664788334380153;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.80e-07, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.05305361294867568;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.04206304156967595;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else return 0.03318014894624199;  // std dev = 34.365, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,791 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555519
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 7.881 seconds
Total inference time: 1.199 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.577395
   AUC PR    = 0.54125
   CLL	      = -0.612699
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15479
   F1        = 0.268083


Total scoring time: 2.264 seconds
Parameter learned model CLL: -0.612699


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 328], 'false': [34.365, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 328], 'false': [34.365, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 328], 'false': [34.365, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 328], 'false': [34.365, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 328], 'false': [34.365, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.91e-07, 0, 328], 'false': [34.365, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 328], 'false': [34.365, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 328], 'false': [34.365, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 328], 'false': [34.365, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 328], 'false': [34.365, 3, 1]}]]
[{'': [3.292759019376074e-15, 0.2245992304865958]}, {'': [-5.112441635347062e-15, 0.22459923048661137]}, {'': [-4.76583542278116e-16, 0.2245992304866157]}, {'': [-9.53167084556232e-16, 0.2245992304866519]}, {'': [-6.498866485610672e-16, 0.22459923048667585]}, {'': [4.657520981354315e-16, 0.22459923048662397]}, {'': [1.841345504256357e-16, 0.2245992304866227]}, {'': [2.38291771139058e-16, 0.22459923048665]}, {'': [-2.247524659607024e-16, 0.22459923048664746]}, {'': [-2.0850529974667573e-16, 0.22459923048666028]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2157077517778207;  // std dev = 31.403, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,535 */
%   | | | else return 0.1528349254376779;  // std dev = 6.559, 207.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4494532829256003;  // std dev = 5.272, 115.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=68 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16926004621062346;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.050456627407205384;  // std dev = 7.783, 390.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=75 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.03709630352056402;  // std dev = 5.284, 190.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=34 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1873703629924583;  // std dev = 31.403, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,535 */
%   | | | else return 0.1331935242930391;  // std dev = 6.559, 207.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38337377498878583;  // std dev = 4.265, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.42038770274514925;  // std dev = 3.162, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14738209092488688;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.04420289095842981;  // std dev = 7.783, 390.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=75 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.03252032323666458;  // std dev = 5.284, 190.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15925380053814592;  // std dev = 31.403, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,535 */
%   | | | else return 0.11433503506080223;  // std dev = 6.559, 207.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3131692451814564;  // std dev = 4.262, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.3429303900713139;  // std dev = 3.160, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06201850926385009;  // std dev = 7.082, 295.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=64 */
%   | | | else return 0.017236958018970176;  // std dev = 4.493, 140.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=25 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.027805720109216347;  // std dev = 5.280, 193.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=34 */
%   | | | else return -0.14011432036165944;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13271666652179412;  // std dev = 31.403, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,535 */
%   | | | else return 0.09681219301432215;  // std dev = 6.559, 207.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.47509698482899715;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.24247079848513556;  // std dev = 5.198, 113.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0331132334979775;  // std dev = 7.542, 372.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=71 */
%   | | | else return 0.09210085754183928;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.023295994879374844;  // std dev = 5.417, 193.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=36 */
%   | | | else return -0.12410311616081572;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10874551882128844;  // std dev = 31.403, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,535 */
%   | | | else return 0.0809959184469286;  // std dev = 6.559, 207.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4820609570183401;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1844045912291476;  // std dev = 5.259, 115.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=68 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04869501693661392;  // std dev = 7.074, 295.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=64 */
%   | | | else return 0.00952888475083688;  // std dev = 4.497, 140.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=25 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0198645703267358;  // std dev = 5.280, 193.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=34 */
%   | | | else return -0.11125519584608053;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08798050948998133;  // std dev = 31.375, 4,292.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,532 */
%   | | | else return 0.06490683897717132;  // std dev = 6.688, 208.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13726126585852255;  // std dev = 4.229, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.1638814801086605;  // std dev = 3.154, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1065250005718626;  // std dev = 3.025, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.023457242375472132;  // std dev = 7.709, 387.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=74 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013488299206757747;  // std dev = 5.417, 193.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=36 */
%   | | | else return -0.10073987213009326;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0703371290687264;  // std dev = 31.375, 4,292.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,532 */
%   | | | else return 0.05280385818117806;  // std dev = 6.690, 208.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2702454775507502;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10195091797383785;  // std dev = 5.185, 113.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09142160018356064;  // std dev = 3.022, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.02016022727079797;  // std dev = 7.709, 387.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=74 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011550262573739615;  // std dev = 5.417, 193.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=36 */
%   | | | else return -0.09198812519430129;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.80e-07, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05574515774455379;  // std dev = 31.375, 4,292.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,532 */
%   | | | else return 0.04267006868439005;  // std dev = 6.691, 208.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.20618168020799457;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.07655793376450598;  // std dev = 5.185, 113.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10579191116458898;  // std dev = 3.101, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return -0.07374642426328706;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01625308850158818;  // std dev = 7.601, 379.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=72 */
%   | | | else return 0.010843012416949528;  // std dev = 5.331, 193.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=35 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04390055403919037;  // std dev = 31.400, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,535 */
%   | | | else return 0.03394076982854274;  // std dev = 6.569, 207.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05363159177626941;  // std dev = 4.218, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.07872822415492907;  // std dev = 3.155, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07491207095947851;  // std dev = 3.008, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.014191343630427782;  // std dev = 7.700, 387.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=74 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007609486280008851;  // std dev = 5.420, 193.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=36 */
%   | | | else return -0.08481965008368712;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #pos=328 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.27186196368065346;  // std dev = 3.705, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
%   | | | else return -0.09252597785786687;  // std dev = 3.582, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.033252630539851856;  // std dev = 31.606, 4,372.000 (wgt'ed) examples reached here.  /* #neg=2,825 #pos=1,547 */
%   | | | else return 0.04192651588797723;  // std dev = 5.185, 113.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08524099726937341;  // std dev = 3.095, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return -0.06612599903881038;  // std dev = 1.349, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010712824825772342;  // std dev = 7.598, 379.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=72 */
%   | | | else return 0.008584562111211561;  // std dev = 5.330, 193.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=35 */


Results
   AUC ROC   = 0.679699
   AUC PR    = 0.623713
   CLL	      = -0.54601
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1165.531 seconds
Total inference time: 2.592 seconds
AUC ROC: 0.679699


Results scoring model
   AUC ROC   = 0.633522
   AUC PR    = 0.585097
   CLL	      = -0.600779
   Precision = 0.894855 at threshold = 0.5
   Recall    = 0.188768
   F1        = 0.311769


Total scoring time: 27.784 seconds
Refined model CLL: -0.600779


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.679699
   AUC PR    = 0.623713
   CLL	      = -0.54601
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1203.46 seconds
Total inference time: 2.592 seconds
AUC ROC: 0.679699
Total revision time: 1203.46
Best scored revision CLL: -0.600779


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 10:52:51
{'AUC ROC': 0.679699, 'AUC PR': 0.623713, 'CLL': -0.54601, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1203.46, 'Inference time': 2.592, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555519, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 7.881, 'Inference time': 1.199}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 10.425 seconds
Total inference time: 1.076 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 3.253 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43157550852608434;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027526;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.13188754443331546;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.36841857951468715;  // std dev = 4.779, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40338010231130156;  // std dev = 3.650, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14131665839554822;  // std dev = 3.366, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03792704271485758;  // std dev = 8.509, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1605192001234706;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.11289879459957762;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5691705856824335;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.29979734221359805;  // std dev = 5.903, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13590836049502245;  // std dev = 3.360, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07762444073070458;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.051978895871749274;  // std dev = 3.525, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.030925716345781933;  // std dev = 9.646, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359513;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.09262066068403081;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4409588514077069;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2364232952185766;  // std dev = 5.902, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04712598177542589;  // std dev = 7.652, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.016568537139122548;  // std dev = 5.020, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.027380325475343532;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1136234278258406;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1096499869996321;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.07715451667816063;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17247577950458812;  // std dev = 4.745, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.21618852304974573;  // std dev = 3.635, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11149098646463654;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.023664887318589053;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09747576234136657;  // std dev = 0.954, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.023195363314173705;  // std dev = 5.845, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809346;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.06140774263889952;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.28802245170374735;  // std dev = 0.905, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13591206109560514;  // std dev = 5.899, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1111537693983924;  // std dev = 3.343, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.018628963419928823;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07568850020982427;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022562843017776276;  // std dev = 5.772, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367406;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.05017947789451449;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2788166436129226;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.09935177044378189;  // std dev = 5.890, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0913785707569945;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.016795344945457306;  // std dev = 8.489, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017124823084333364;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1027255721870399;  // std dev = 0.027, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05614201621630093;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03947145161643923;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06697022056889046;  // std dev = 4.735, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.10485262137575846;  // std dev = 3.626, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07638839137707508;  // std dev = 3.345, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.014416476982379136;  // std dev = 8.488, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0943083173441844;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.015713862171432474;  // std dev = 5.842, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return -0.034614920277933774;  // std dev = 1.176, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.03830602630400565;  // std dev = 0.555, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.043816794105877944;  // std dev = 35.968, 5,644.000 (wgt'ed) examples reached here.  /* #neg=3,632 #pos=2,012 */
%   | | | else return 0.058593424130737856;  // std dev = 5.962, 148.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=86 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.09111217768060281;  // std dev = 3.323, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08317233975908911;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.010927123902027394;  // std dev = 8.469, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.01492515081413613;  // std dev = 5.772, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03464743827745848;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.023467704681234717;  // std dev = 7.476, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03156793291997786;  // std dev = 4.730, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.07223687493264788;  // std dev = 3.633, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07618541252583354;  // std dev = 3.321, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07269265681086923;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009331018681717521;  // std dev = 8.469, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.012832832055918938;  // std dev = 5.772, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */


Results
   AUC ROC   = 0.677835
   AUC PR    = 0.622308
   CLL	      = -0.545985
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1325.095 seconds
Total inference time: 2.675 seconds
AUC ROC: 0.677835


Results scoring model
   AUC ROC   = 0.62504
   AUC PR    = 0.573633
   CLL	      = -0.603285
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 36.6 seconds
Refined model CLL: -0.603285


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677835
   AUC PR    = 0.622308
   CLL	      = -0.545985
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1375.373 seconds
Total inference time: 2.675 seconds
AUC ROC: 0.677835
Total revision time: 1375.373
Best scored revision CLL: -0.603285


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 11:15:51
{'AUC ROC': 0.677835, 'AUC PR': 0.622308, 'CLL': -0.545985, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1375.373, 'Inference time': 2.675, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 10.425, 'Inference time': 1.076}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.14726728299466232;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.1283783908751506;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.72e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.11029713044144437;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1.33e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.09352342922268013;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.07838884554023176;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.06505549600835966;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.0535424190062701;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.04376440463297367;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.0355711883384366;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.028780131183871575;  // std dev = 16.086, 1,259.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=364 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.810687
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 3.14 seconds
Total inference time: 1.199 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.594655
   AUC PR    = 0.531117
   CLL	      = -0.572624
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.18931
   F1        = 0.318352


Total scoring time: 1.784 seconds
Parameter learned model CLL: -0.572624


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [16.086, 895, 364]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 85], 'false': [16.086, 895, 364]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.72e-07, 0, 85], 'false': [16.086, 895, 364]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.33e-07, 0, 85], 'false': [16.086, 895, 364]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [16.086, 895, 364]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [16.086, 895, 364]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [16.086, 895, 364]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 85], 'false': [16.086, 895, 364]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [16.086, 895, 364]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 85], 'false': [16.086, 895, 364]}]]
[{'': [-3.343730521224001e-16, 0.2055289288055124]}, {'': [9.195258933366003e-16, 0.2055289288055488]}, {'': [1.6300686290967004e-15, 0.2055289288055362]}, {'': [2.0898315757650005e-16, 0.2055289288055285]}, {'': [-3.343730521224001e-16, 0.20552892880553272]}, {'': [-5.224578939412501e-17, 0.20552892880553186]}, {'': [-1.2016531560648752e-16, 0.20552892880553528]}, {'': [2.0898315757650005e-17, 0.20552892880553375]}, {'': [-5.747036833353752e-17, 0.20552892880553336]}, {'': [3.918434204559376e-17, 0.20552892880553317]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1700755406040947;  // std dev = 14.510, 981.000 (wgt'ed) examples reached here.  /* #neg=675 #pos=306 */
%   | | | else return 0.08891816586874314;  // std dev = 3.038, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.020311097261674547;  // std dev = 3.883, 111.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0056899187060697205;  // std dev = 2.770, 61.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6361592902084616;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.06975804160385218;  // std dev = 2.312, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.14292722495929713;  // std dev = 14.544, 996.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=305 */
%   | | | else return 0.18966463043551235;  // std dev = 2.604, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.18340385319677519;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.01782060961185186;  // std dev = 3.883, 111.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004995876181714902;  // std dev = 2.770, 61.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.72e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12695313017203108;  // std dev = 14.482, 981.000 (wgt'ed) examples reached here.  /* #neg=675 #pos=306 */
%   | | | else return 0.05868170527440168;  // std dev = 3.037, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4814882405031139;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15006525445075605;  // std dev = 2.567, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.48765183161135983;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.059456301937243966;  // std dev = 1.909, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.013936110838756684;  // std dev = 3.489, 107.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | | else return 0.048096403611835585;  // std dev = 3.107, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1.33e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10705536328149765;  // std dev = 14.480, 981.000 (wgt'ed) examples reached here.  /* #neg=675 #pos=306 */
%   | | | else return 0.05015982034506149;  // std dev = 3.037, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4652076275367378;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12506001651389476;  // std dev = 2.566, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.405107997095799;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05062182186632892;  // std dev = 1.908, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.012219153631889594;  // std dev = 3.489, 107.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | | else return 0.04201756339779484;  // std dev = 3.107, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.481300903126263;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.018002386968198482;  // std dev = 2.271, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08572898611364409;  // std dev = 14.541, 996.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=305 */
%   | | | else return 0.10176931208278166;  // std dev = 2.563, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.32038032279664935;  // std dev = 0.853, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.042840188751762105;  // std dev = 1.906, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.010727716011541965;  // std dev = 3.489, 107.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | | else return 0.03653766966868675;  // std dev = 3.107, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3182049019860268;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.052684295129032256;  // std dev = 2.006, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07340462194918455;  // std dev = 14.559, 999.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=310 */
%   | | | else return 0.07901006821202959;  // std dev = 2.550, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.09807978295148033;  // std dev = 0.424, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0059862708635143;  // std dev = 3.737, 116.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=17 */
%   | | | else return 0.03021309822906733;  // std dev = 3.188, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05975677119446172;  // std dev = 14.440, 981.000 (wgt'ed) examples reached here.  /* #neg=675 #pos=306 */
%   | | | else return 0.018231101393878516;  // std dev = 3.032, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1536092566315864;  // std dev = 2.218, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.008234295620064894;  // std dev = 1.557, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10259764655767697;  // std dev = 1.954, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.04078028121054996;  // std dev = 0.738, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009808403886480535;  // std dev = 3.486, 107.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | | else return 0.02734611462657361;  // std dev = 3.107, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24323615079884078;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.05432095798713787;  // std dev = 2.010, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.048918387472620777;  // std dev = 14.557, 999.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=310 */
%   | | | else return 0.04271206858598824;  // std dev = 2.529, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2268852729817075;  // std dev = 0.877, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.023522655718966903;  // std dev = 1.887, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008627245793575962;  // std dev = 3.486, 107.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | | else return 0.02352318950879431;  // std dev = 3.107, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0388053285909872;  // std dev = 14.429, 981.000 (wgt'ed) examples reached here.  /* #neg=675 #pos=306 */
%   | | | else return 0.007353231110961807;  // std dev = 3.030, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3292105985698579;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.033647384294691086;  // std dev = 2.529, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07301252211026664;  // std dev = 1.959, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.0029316912236560435;  // std dev = 3.865, 111.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.005352967260595674;  // std dev = 2.707, 61.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   | | | else return -0.1323508888215518;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.040634073412228;  // std dev = 2.579, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.3088863768432745;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.02939646575144483;  // std dev = 14.516, 996.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=305 */
%   | | | else return 0.027659225827627545;  // std dev = 2.544, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.08284502239273239;  // std dev = 0.419, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.00850870094771421;  // std dev = 3.722, 116.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=17 */
%   | | | else return 0.016754515701695692;  // std dev = 3.186, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */


Results
   AUC ROC   = 0.588085
   AUC PR    = 0.719687
   CLL	      = -0.79017
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 200.452 seconds
Total inference time: 3.305 seconds
AUC ROC: 0.588085


Results scoring model
   AUC ROC   = 0.66288
   AUC PR    = 0.585282
   CLL	      = -0.557568
   Precision = 0.977528 at threshold = 0.5
   Recall    = 0.193764
   F1        = 0.32342


Total scoring time: 5.752 seconds
Refined model CLL: -0.557568


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.588085
   AUC PR    = 0.719687
   CLL	      = -0.79017
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 211.12800000000001 seconds
Total inference time: 3.305 seconds
AUC ROC: 0.588085
Total revision time: 211.12800000000001
Best scored revision CLL: -0.557568


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 11:19:27
{'AUC ROC': 0.588085, 'AUC PR': 0.719687, 'CLL': -0.79017, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 211.12800000000001, 'Inference time': 3.305, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.810687, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 3.14, 'Inference time': 1.199}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.03e-06, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.14856097947351676;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.1294974876979841;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.59e-07, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.1112362476381763;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583092;  // std dev = 4.30e-07, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.0942892061653707;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.67e-07, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.07899686186128556;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.06552651658436397;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.68e-07, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.05389900421862261;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.04402842248804635;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.03576231398710704;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else return 0.028915161556536728;  // std dev = 22.806, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=733 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.809075
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.466 seconds
Total inference time: 1.246 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.591871
   AUC PR    = 0.526472
   CLL	      = -0.574615
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.183742
   F1        = 0.310442


Total scoring time: 1.94 seconds
Parameter learned model CLL: -0.574615


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-06, 0, 165], 'false': [22.806, 1, 733]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 165], 'false': [22.806, 1, 733]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.59e-07, 0, 165], 'false': [22.806, 1, 733]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.3e-07, 0, 165], 'false': [22.806, 1, 733]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.67e-07, 0, 165], 'false': [22.806, 1, 733]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 165], 'false': [22.806, 1, 733]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.68e-07, 0, 165], 'false': [22.806, 1, 733]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 165], 'false': [22.806, 1, 733]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 165], 'false': [22.806, 1, 733]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 165], 'false': [22.806, 1, 733]}]]
[{'': [6.373353023787565e-15, 0.20607288885654276]}, {'': [-2.842170943040401e-15, 0.20607288885651773]}, {'': [1.8947806286936005e-15, 0.20607288885650862]}, {'': [1.1196430987734911e-15, 0.206072888856528]}, {'': [8.182007260267821e-16, 0.20607288885652222]}, {'': [-2.4761337761336826e-16, 0.20607288885650668]}, {'': [4.3601486058006148e-16, 0.20607288885650626]}, {'': [-3.1759107128671147e-16, 0.20607288885652503]}, {'': [-2.4223047810003414e-16, 0.2060728888565255]}, {'': [5.3828995133340925e-17, 0.20607288885651925]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.03e-06, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16979795174095966;  // std dev = 20.625, 1,983.000 (wgt'ed) examples reached here.  /* #neg=1,365 #pos=618 */
%   | | | else return 0.13337829289767622;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2140811384893424;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0057008301587041935;  // std dev = 5.005, 213.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=29 */
%   | | | else return 0.02481560176617902;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.147846332123875;  // std dev = 20.625, 1,983.000 (wgt'ed) examples reached here.  /* #neg=1,365 #pos=618 */
%   | | | else return 0.11635424489145232;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18597334387608905;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1764295502114536;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.04485324549538032;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.09983386441922647;  // std dev = 2.306, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.004967813952915872;  // std dev = 5.944, 298.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=41 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.59e-07, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1265771507068399;  // std dev = 20.625, 1,983.000 (wgt'ed) examples reached here.  /* #neg=1,365 #pos=618 */
%   | | | else return 0.1001817161296314;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.15810744627750134;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15025909497878384;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.03967602222259858;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00601143599802646;  // std dev = 4.996, 213.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=29 */
%   | | | else return 0.022028964130233565;  // std dev = 3.981, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583092;  // std dev = 4.30e-07, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10672176397461856;  // std dev = 20.625, 1,983.000 (wgt'ed) examples reached here.  /* #neg=1,365 #pos=618 */
%   | | | else return 0.08524098783723338;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3991553280036089;  // std dev = 1.103, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12669982879554365;  // std dev = 3.605, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13138313082016634;  // std dev = 2.368, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.1606605351176466;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006478017982678596;  // std dev = 5.101, 219.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=31 */
%   | | | else return 0.02180403606352833;  // std dev = 4.067, 117.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.67e-07, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08878556292999679;  // std dev = 20.625, 1,983.000 (wgt'ed) examples reached here.  /* #neg=1,365 #pos=618 */
%   | | | else return 0.07177532749258955;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3186112962468294;  // std dev = 1.101, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1031504446337361;  // std dev = 3.603, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12522176556932663;  // std dev = 2.554, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.03654217464964415;  // std dev = 0.956, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006770943626385777;  // std dev = 4.986, 213.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=29 */
%   | | | else return 0.01713885060824944;  // std dev = 3.978, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07303101344426459;  // std dev = 20.625, 1,983.000 (wgt'ed) examples reached here.  /* #neg=1,365 #pos=618 */
%   | | | else return 0.05989562684182327;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14519017521389002;  // std dev = 3.018, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.031845557714545426;  // std dev = 2.240, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11367078948924184;  // std dev = 2.360, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.007254528978154532;  // std dev = 5.089, 219.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.020440231957380723;  // std dev = 4.057, 114.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=20 */
%   | | | else return -0.14282802200569808;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.68e-07, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.059510698490653866;  // std dev = 20.625, 1,983.000 (wgt'ed) examples reached here.  /* #neg=1,365 #pos=618 */
%   | | | else return 0.049602939189086995;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.21709945435433342;  // std dev = 1.103, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06341239061571435;  // std dev = 3.591, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10279655493495189;  // std dev = 2.549, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.030562624031300653;  // std dev = 0.955, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0072171798290972386;  // std dev = 4.977, 213.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=29 */
%   | | | else return 0.013004231772432779;  // std dev = 3.975, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048124497130727556;  // std dev = 20.625, 1,983.000 (wgt'ed) examples reached here.  /* #neg=1,365 #pos=618 */
%   | | | else return 0.04081860499516789;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.22972217849718204;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.043521009055299105;  // std dev = 3.628, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09729875612145882;  // std dev = 2.352, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.14636517611719896;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04150179206455565;  // std dev = 2.656, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.006051960809322565;  // std dev = 5.934, 298.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2770298385227614;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return -0.02460658526462622;  // std dev = 3.262, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0382092589415026;  // std dev = 20.772, 2,019.000 (wgt'ed) examples reached here.  /* #neg=1,394 #pos=625 */
%   | | | else return 0.03706732706098387;  // std dev = 3.581, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.21601008222367063;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.021053480977586955;  // std dev = 2.480, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00755807631936482;  // std dev = 4.970, 213.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=29 */
%   | | | else return 0.012534947900701022;  // std dev = 3.973, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.21875847765285555;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return -0.019673352259615293;  // std dev = 3.262, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.030590786744452043;  // std dev = 20.772, 2,019.000 (wgt'ed) examples reached here.  /* #neg=1,394 #pos=625 */
%   | | | else return 0.029068321132512773;  // std dev = 3.580, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08288441398939339;  // std dev = 2.349, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.1304224163250167;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.009580336106943128;  // std dev = 5.268, 221.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=34 */
%   | | | else return 0.013366212950127998;  // std dev = 3.801, 115.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=17 */


Results
   AUC ROC   = 0.578694
   AUC PR    = 0.711677
   CLL	      = -0.79504
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 427.285 seconds
Total inference time: 3.454 seconds
AUC ROC: 0.578694


Results scoring model
   AUC ROC   = 0.643849
   AUC PR    = 0.562684
   CLL	      = -0.562911
   Precision = 0.994152 at threshold = 0.5
   Recall    = 0.18931
   F1        = 0.318054


Total scoring time: 11.28 seconds
Refined model CLL: -0.562911


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.578694
   AUC PR    = 0.711677
   CLL	      = -0.79504
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 444.971 seconds
Total inference time: 3.454 seconds
AUC ROC: 0.578694
Total revision time: 444.971
Best scored revision CLL: -0.562911


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 11:26:58
{'AUC ROC': 0.578694, 'AUC PR': 0.711677, 'CLL': -0.79504, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 444.971, 'Inference time': 3.454, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.809075, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.466, 'Inference time': 1.246}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.15056200148517632;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.1312281462361867;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.11268778735023077;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.09547176125743476;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.86e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.07993463976577515;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.95e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.06625188390256061;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.05444714113552824;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 1.07e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.04443340528227821;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.03605476182697925;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1.03e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.029121171388779864;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806601
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 5.996 seconds
Total inference time: 1.22 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587973
   AUC PR    = 0.52009
   CLL	      = -0.577537
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175947
   F1        = 0.299242


Total scoring time: 2.364 seconds
Parameter learned model CLL: -0.577537


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.33e-07, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.95e-07, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-07, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 237], 'false': [28.025, 2, 1]}]]
[{'': [4.916835808635292e-15, 0.2069076649926254]}, {'': [-4.137337448729697e-15, 0.2069076649926292]}, {'': [1.1992282460086079e-15, 0.2069076649925593]}, {'': [-1.4990353075107598e-16, 0.20690766499262986]}, {'': [3.4477812072747475e-16, 0.20690766499259297]}, {'': [3.6726365034013617e-16, 0.20690766499260832]}, {'': [3.5976847380258237e-16, 0.20690766499256466]}, {'': [4.87186474940997e-17, 0.20690766499262456]}, {'': [-1.686414720949605e-16, 0.20690766499261767]}, {'': [4.4971059225322796e-17, 0.2069076649926109]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17293270982294;  // std dev = 25.366, 2,983.000 (wgt'ed) examples reached here.  /* #neg=2,044 #pos=939 */
%   | | | else return 0.11901850031690285;  // std dev = 5.572, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.29344305274656984;  // std dev = 4.571, 85.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14703782398840126;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.07042249347191636;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.011132110652122263;  // std dev = 5.897, 306.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=40 */
%   | | | else return 0.023097388707758962;  // std dev = 5.169, 194.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1505512654730691;  // std dev = 25.366, 2,983.000 (wgt'ed) examples reached here.  /* #neg=2,044 #pos=939 */
%   | | | else return 0.10390401933018506;  // std dev = 5.572, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5170719622367218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2538445036079418;  // std dev = 4.571, 85.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1281798840811021;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.062064272658592136;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009782401333237014;  // std dev = 5.897, 306.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=40 */
%   | | | else return 0.0202624332349593;  // std dev = 5.169, 194.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12882954471491612;  // std dev = 25.366, 2,983.000 (wgt'ed) examples reached here.  /* #neg=2,044 #pos=939 */
%   | | | else return 0.08965978484201656;  // std dev = 5.572, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.623969896944501;  // std dev = 0.915, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1931669325828243;  // std dev = 4.527, 85.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11013050708837398;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.055047016691192656;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05927361022159126;  // std dev = 2.685, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.004086960137028374;  // std dev = 7.362, 455.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=63 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10850408070220624;  // std dev = 25.387, 2,991.000 (wgt'ed) examples reached here.  /* #neg=2,051 #pos=940 */
%   | | | else return 0.07549078481371921;  // std dev = 5.473, 153.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.49232810524068193;  // std dev = 0.913, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.15734661010563827;  // std dev = 4.525, 85.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09338750448288427;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.04908944930418291;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00905297051382052;  // std dev = 5.893, 306.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=40 */
%   | | | else return 0.01791471706358853;  // std dev = 5.170, 194.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.86e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09031429613808538;  // std dev = 25.366, 2,983.000 (wgt'ed) examples reached here.  /* #neg=2,044 #pos=939 */
%   | | | else return 0.0628183882127754;  // std dev = 5.571, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20544551195693458;  // std dev = 3.556, 53.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | | | else return 0.06953309894779326;  // std dev = 2.947, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08441299271806874;  // std dev = 2.610, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return -0.032168066521959804;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.039173745719156924;  // std dev = 3.123, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return -0.0038729355903795123;  // std dev = 7.360, 455.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=63 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.95e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0742154341568121;  // std dev = 25.387, 2,991.000 (wgt'ed) examples reached here.  /* #neg=2,051 #pos=940 */
%   | | | else return 0.05126631534829699;  // std dev = 5.472, 153.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=41 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16011940799310503;  // std dev = 3.554, 53.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | | | else return 0.0548588104922114;  // std dev = 2.946, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.16671855209021724;  // std dev = 1.117, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.040120386060634394;  // std dev = 2.534, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006847136491244073;  // std dev = 6.094, 316.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=44 */
%   | | | else return 0.012788743908760315;  // std dev = 5.177, 196.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=32 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.060464587862075474;  // std dev = 25.365, 2,983.000 (wgt'ed) examples reached here.  /* #neg=2,044 #pos=939 */
%   | | | else return 0.042473244855231546;  // std dev = 5.570, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1329713237146133;  // std dev = 3.476, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | | else return 0.03478483304992824;  // std dev = 3.024, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06620326753473726;  // std dev = 2.607, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return -0.03762423854195711;  // std dev = 0.921, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0337045506339727;  // std dev = 3.123, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return -0.0035865353401949925;  // std dev = 7.359, 455.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=63 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 1.07e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04886661782460758;  // std dev = 25.387, 2,991.000 (wgt'ed) examples reached here.  /* #neg=2,051 #pos=940 */
%   | | | else return 0.033683209460170775;  // std dev = 5.472, 153.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2768231058381885;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.048557780128063735;  // std dev = 4.483, 85.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06553269363096278;  // std dev = 3.031, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.052354074791878875;  // std dev = 0.965, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009729777940107787;  // std dev = 5.883, 306.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=40 */
%   | | | else return 0.014988346977175196;  // std dev = 5.167, 194.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03923196597068126;  // std dev = 25.387, 2,991.000 (wgt'ed) examples reached here.  /* #neg=2,051 #pos=940 */
%   | | | else return 0.027595629290637483;  // std dev = 5.471, 153.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=41 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08768815271903932;  // std dev = 3.564, 53.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | | | else return 0.0055803563817701796;  // std dev = 2.888, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.13494235532984797;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.028725507141948752;  // std dev = 2.528, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006632067490439872;  // std dev = 6.085, 316.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=44 */
%   | | | else return 0.009169445989183497;  // std dev = 5.179, 196.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1.03e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03138066187174613;  // std dev = 25.365, 2,983.000 (wgt'ed) examples reached here.  /* #neg=2,044 #pos=939 */
%   | | | else return 0.02224551516477561;  // std dev = 5.570, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2009661770662745;  // std dev = 0.948, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.024693646452008926;  // std dev = 4.473, 85.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.05405407844095928;  // std dev = 3.026, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.0022685784162145266;  // std dev = 6.434, 335.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=49 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007125309789375784;  // std dev = 4.548, 169.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=24 */
%   | | | else return -0.14615021379181542;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.566463
   AUC PR    = 0.701226
   CLL	      = -0.792124
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 813.835 seconds
Total inference time: 3.71 seconds
AUC ROC: 0.566463


Results scoring model
   AUC ROC   = 0.640706
   AUC PR    = 0.555223
   CLL	      = -0.56549
   Precision = 0.988048 at threshold = 0.5
   Recall    = 0.184113
   F1        = 0.310388


Total scoring time: 18.5 seconds
Refined model CLL: -0.56549


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566463
   AUC PR    = 0.701226
   CLL	      = -0.792124
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 840.695 seconds
Total inference time: 3.71 seconds
AUC ROC: 0.566463
Total revision time: 840.695
Best scored revision CLL: -0.56549


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 11:41:04
{'AUC ROC': 0.566463, 'AUC PR': 0.701226, 'CLL': -0.792124, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 840.695, 'Inference time': 3.71, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806601, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 5.996, 'Inference time': 1.22}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.1502437967595862;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.13095295953276814;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.11245704619898667;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.095283865019047;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.07978572990757042;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.06613679313253427;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.05436025184633637;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.044369278166983835;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.036008512700136955;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.029088640941063396;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 8.036 seconds
Total inference time: 1.21 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.58853
   AUC PR    = 0.520976
   CLL	      = -0.577096
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.17706
   F1        = 0.300851


Total scoring time: 2.577 seconds
Parameter learned model CLL: -0.577096


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}]]
[{'': [3.4856813452382273e-15, 0.2067754534518024]}, {'': [-5.005080905983095e-15, 0.20677545345192766]}, {'': [-3.5750577899879257e-16, 0.20677545345186688]}, {'': [-9.161085586844059e-16, 0.20677545345189413]}, {'': [-4.692263349359152e-16, 0.20677545345181506]}, {'': [4.468822237484907e-16, 0.20677545345184778]}, {'': [1.8992494509310855e-16, 0.20677545345188436]}, {'': [2.2344111187424534e-16, 0.20677545345182985]}, {'': [-2.2344111187424534e-16, 0.20677545345183407]}, {'': [-1.8992494509310855e-16, 0.20677545345188839]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1719333962523894;  // std dev = 29.311, 3,990.000 (wgt'ed) examples reached here.  /* #neg=2,738 #pos=1,252 */
%   | | | else return 0.12298911774791496;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.3189332488250034;  // std dev = 5.034, 102.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13885068948547727;  // std dev = 3.392, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01058614843270721;  // std dev = 6.912, 419.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=55 */
%   | | | else return 0.02687321493490257;  // std dev = 5.838, 243.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=41 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14968907185505775;  // std dev = 29.311, 3,990.000 (wgt'ed) examples reached here.  /* #neg=2,738 #pos=1,252 */
%   | | | else return 0.10734849948736816;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6765682559010627;  // std dev = 0.923, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.26746538978569284;  // std dev = 5.038, 103.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12109397838014756;  // std dev = 3.392, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return -0.041032968606155205;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009302382848393432;  // std dev = 6.912, 419.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=55 */
%   | | | else return 0.023570366334580758;  // std dev = 5.838, 243.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=41 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1281118525518069;  // std dev = 29.311, 3,990.000 (wgt'ed) examples reached here.  /* #neg=2,738 #pos=1,252 */
%   | | | else return 0.09257565558192211;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.548081573604882;  // std dev = 0.920, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.22312209802454502;  // std dev = 5.036, 103.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10528332040912336;  // std dev = 3.231, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return -0.032781763500769834;  // std dev = 1.333, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06023691187374255;  // std dev = 3.498, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return -0.0049781034621421945;  // std dev = 8.401, 595.000 (wgt'ed) examples reached here.  /* #neg=513 #pos=82 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1079575212785401;  // std dev = 29.311, 3,990.000 (wgt'ed) examples reached here.  /* #neg=2,738 #pos=1,252 */
%   | | | else return 0.0789723273897878;  // std dev = 6.530, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4190315899368911;  // std dev = 0.919, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.18094669882308553;  // std dev = 5.034, 103.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.15513191319449637;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08026775819036082;  // std dev = 3.484, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05178933950430769;  // std dev = 3.497, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return -0.00436993789107889;  // std dev = 8.401, 595.000 (wgt'ed) examples reached here.  /* #neg=513 #pos=82 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08975812943857606;  // std dev = 29.321, 3,997.000 (wgt'ed) examples reached here.  /* #neg=2,745 #pos=1,252 */
%   | | | else return 0.06581092156750014;  // std dev = 6.484, 212.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2037160341232989;  // std dev = 3.950, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | | | else return 0.08820959127536525;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08287077049522026;  // std dev = 3.223, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return -0.03510107935356497;  // std dev = 1.326, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04425741665152691;  // std dev = 3.497, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return -0.0038378529268654946;  // std dev = 8.401, 595.000 (wgt'ed) examples reached here.  /* #neg=513 #pos=82 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07384679321097558;  // std dev = 29.311, 3,990.000 (wgt'ed) examples reached here.  /* #neg=2,738 #pos=1,252 */
%   | | | else return 0.05449731461916383;  // std dev = 6.529, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.29991290482246225;  // std dev = 1.198, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1052728634484907;  // std dev = 4.948, 102.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1691530513972014;  // std dev = 1.398, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03107326791930271;  // std dev = 3.189, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00858307152969882;  // std dev = 7.029, 425.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=58 */
%   | | | else return 0.017894850079018462;  // std dev = 5.780, 241.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=40 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.060165893172129184;  // std dev = 29.321, 3,997.000 (wgt'ed) examples reached here.  /* #neg=2,745 #pos=1,252 */
%   | | | else return 0.04398998488621751;  // std dev = 6.483, 212.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12749085537355617;  // std dev = 3.938, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | | | else return 0.04435395908739753;  // std dev = 3.225, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2688001831444731;  // std dev = 1.477, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.015830575481557373;  // std dev = 3.280, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.011060602039096805;  // std dev = 6.888, 419.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=55 */
%   | | | else return 0.019450078274929387;  // std dev = 5.834, 243.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04862638406349569;  // std dev = 29.321, 3,997.000 (wgt'ed) examples reached here.  /* #neg=2,745 #pos=1,252 */
%   | | | else return 0.036127049124116344;  // std dev = 6.483, 212.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.21936502610798703;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05949441008820943;  // std dev = 4.995, 103.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06535158602573674;  // std dev = 3.211, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return -0.04109525785718944;  // std dev = 1.304, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.031528847355975186;  // std dev = 3.485, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return -0.003778161310775119;  // std dev = 8.397, 595.000 (wgt'ed) examples reached here.  /* #neg=513 #pos=82 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0390914133316988;  // std dev = 29.311, 3,990.000 (wgt'ed) examples reached here.  /* #neg=2,738 #pos=1,252 */
%   | | | else return 0.0292211552583515;  // std dev = 6.528, 219.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.17861501252538695;  // std dev = 1.198, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.0434687853773875;  // std dev = 4.935, 102.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07074527149944575;  // std dev = 3.356, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.003645678921842039;  // std dev = 7.435, 431.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=66 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006060252604019212;  // std dev = 5.273, 241.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=32 */
%   | | | else return -0.15220986653516488;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03125050952063354;  // std dev = 29.321, 3,997.000 (wgt'ed) examples reached here.  /* #neg=2,745 #pos=1,252 */
%   | | | else return 0.023381618295190747;  // std dev = 6.483, 212.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07360271571605853;  // std dev = 3.856, 63.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=33 */
%   | | | else return -4.466994502745648E-4;  // std dev = 3.297, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.15534600692779993;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04757908971175947;  // std dev = 3.446, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008525157337967689;  // std dev = 7.012, 425.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=58 */
%   | | | else return 0.012797562318172452;  // std dev = 5.775, 241.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=40 */


Results
   AUC ROC   = 0.56672
   AUC PR    = 0.701289
   CLL	      = -0.792095
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 950.066 seconds
Total inference time: 3.328 seconds
AUC ROC: 0.56672


Results scoring model
   AUC ROC   = 0.64017
   AUC PR    = 0.555725
   CLL	      = -0.565274
   Precision = 0.990991 at threshold = 0.5
   Recall    = 0.183742
   F1        = 0.310005


Total scoring time: 30.432 seconds
Refined model CLL: -0.565274


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.56672
   AUC PR    = 0.701289
   CLL	      = -0.792095
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 991.1110000000001 seconds
Total inference time: 3.328 seconds
AUC ROC: 0.56672
Total revision time: 991.1110000000001
Best scored revision CLL: -0.565274


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 11:57:41
{'AUC ROC': 0.56672, 'AUC PR': 0.701289, 'CLL': -0.792095, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 991.1110000000001, 'Inference time': 3.328, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806993, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 8.036, 'Inference time': 1.21}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 9.563 seconds
Total inference time: 1.303 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 2.361 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2967454263275814;  // std dev = 3.746, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14911870422593337;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.11697060028902609;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5879828100125666;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2825983350750409;  // std dev = 5.663, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248223;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12764853140692312;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117948;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.48118656595108633;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23524521781860644;  // std dev = 5.662, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1045962743970368;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.048782996064003784;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010456166386326518;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1076740514402258;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.08395534636649284;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23813914582412488;  // std dev = 4.465, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.15052233814760227;  // std dev = 3.699, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09797266390427659;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07410552729615988;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04066377358700953;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.186139961084003E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117442;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.07049037196827355;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.31628728467647593;  // std dev = 1.250, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1477732898265084;  // std dev = 5.653, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08401745024449463;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06487206449610225;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 5.361712496763703E-4;  // std dev = 7.968, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006633026514079988;  // std dev = 6.123, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07369162312032765;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.05745028465583279;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3743113238764865;  // std dev = 1.203, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.10502336814470734;  // std dev = 5.620, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08345108656030377;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06688139863560558;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0013158450586324012;  // std dev = 7.961, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007114008511546747;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06002025943316849;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.047419046470391225;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2837735412538115;  // std dev = 1.203, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.08048604308617603;  // std dev = 5.619, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1962703611080037;  // std dev = 1.584, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.009190489569368913;  // std dev = 3.403, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02736591145597226;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013841052324413893;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048549832200982634;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03818605419664083;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09939858215936266;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.03134163145090897;  // std dev = 3.660, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19274599678542145;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.004093665380465102;  // std dev = 3.395, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0014223654262253277;  // std dev = 7.960, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.00594752170384184;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03899906934798494;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.031153486904014645;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.19221574480418033;  // std dev = 1.206, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04436207720007941;  // std dev = 5.614, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06626173240533019;  // std dev = 3.488, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06602348609427088;  // std dev = 1.340, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0023936439474039404;  // std dev = 7.957, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006141691340926293;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031204273276859793;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.024756729702290287;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06938027180423806;  // std dev = 4.442, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 5.952041992326754E-4;  // std dev = 3.631, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.062374968749547705;  // std dev = 3.482, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06931145024743819;  // std dev = 1.341, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0027439077833622543;  // std dev = 7.955, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.00602261567887355;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */


Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791305
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1170.171 seconds
Total inference time: 3.811 seconds
AUC ROC: 0.566386


Results scoring model
   AUC ROC   = 0.638802
   AUC PR    = 0.553849
   CLL	      = -0.566894
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 35.122 seconds
Refined model CLL: -0.566894


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791305
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1217.217 seconds
Total inference time: 3.811 seconds
AUC ROC: 0.566386
Total revision time: 1217.217
Best scored revision CLL: -0.566894


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 12:18:04
{'AUC ROC': 0.566386, 'AUC PR': 0.701208, 'CLL': -0.791305, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1217.217, 'Inference time': 3.811, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 9.563, 'Inference time': 1.303}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995124;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.2790382836000246;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.38e-07, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.24156940306745292;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.37e-07, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.2032356654537942;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 4.21e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.16665532433886537;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.1337874557866323;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.10564496846458993;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.08240793523518283;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.0637176309507261;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.56e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.04895873469840921;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.03745221188941763;  // std dev = 15.352, 967.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=407 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560249
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 2.742 seconds
Total inference time: 1.666 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.582136
   AUC PR    = 0.618992
   CLL	      = -0.639841
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164271
   F1        = 0.282187


Total scoring time: 1.567 seconds
Parameter learned model CLL: -0.639841


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 80], 'false': [15.352, 560, 407]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 80], 'false': [15.352, 560, 407]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 80], 'false': [15.352, 560, 407]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 80], 'false': [15.352, 560, 407]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 80], 'false': [15.352, 560, 407]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 80], 'false': [15.352, 560, 407]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 80], 'false': [15.352, 560, 407]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 80], 'false': [15.352, 560, 407]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.56e-08, 0, 80], 'false': [15.352, 560, 407]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.58e-08, 0, 80], 'false': [15.352, 560, 407]}]]
[{'': [-7.993605777301127e-16, 0.24374150481931411]}, {'': [7.105427357601002e-16, 0.2437415048193254]}, {'': [1.4210854715202005e-15, 0.24374150481933304]}, {'': [2.2204460492503132e-17, 0.24374150481933166]}, {'': [-3.9968028886505636e-16, 0.24374150481933438]}, {'': [-4.4408920985006264e-17, 0.2437415048193258]}, {'': [-8.326672684688674e-17, 0.24374150481931803]}, {'': [1.6653345369377347e-17, 0.24374150481932802]}, {'': [9.159339953157541e-17, 0.24374150481933102]}, {'': [3.8857805861880476e-17, 0.24374150481933352]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995124;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30814893509950764;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.44638422921715937;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.09148226843284571;  // std dev = 3.276, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.07518439823382113;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.05613677918620208;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.38e-07, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2663559447484833;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4285227559352605;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.382955427940009;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0799772616902236;  // std dev = 3.276, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.06627631666542753;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.02176788419240575;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.04943969186492505;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.37e-07, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.22302914248952282;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3851153085068464;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3229191052727118;  // std dev = 2.576, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06930293300279447;  // std dev = 3.276, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.05882080275108568;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.01904987294481035;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.04376434301746965;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 4.21e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1815431429223933;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.27538491545801647;  // std dev = 1.798, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.24307080979965826;  // std dev = 2.024, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05957725059431498;  // std dev = 3.276, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.05250670097644501;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.01663677639228948;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.038910967778582474;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1444321971884298;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.20750134521918337;  // std dev = 2.236, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.17406173906775593;  // std dev = 1.525, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.050857136964601014;  // std dev = 3.276, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.04710428366758889;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.014502864105143046;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.03472765257415664;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11295499454068383;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.18933385700879257;  // std dev = 0.844, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14394233351851202;  // std dev = 2.571, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.06962130764166964;  // std dev = 2.270, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.004682259887506671;  // std dev = 2.549, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.01262239661487466;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.031096976562481338;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08727022450993314;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.12590841371647712;  // std dev = 1.807, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.09935755192702524;  // std dev = 2.014, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.040365187470145794;  // std dev = 3.270, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.04840668052674717;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.010970321301480393;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.027926844501370198;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0668656207951871;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.09239267545496219;  // std dev = 2.238, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.06510056352580346;  // std dev = 1.519, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.05857708624781145;  // std dev = 2.262, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.009756498501933752;  // std dev = 2.548, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.009522764707203951;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.025144068566074724;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.56e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05094395286945014;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0756664953238195;  // std dev = 1.810, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.05230604285988627;  // std dev = 2.010, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.032132798868257255;  // std dev = 3.264, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.048580346316511626;  // std dev = 0.964, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.00825735549633603;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.02268979184362014;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.038666586310152705;  // std dev = 0.497, 820.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=369 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05497193932738459;  // std dev = 2.240, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.03150555665689263;  // std dev = 1.515, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.3149131780851494;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.012057870690083553;  // std dev = 2.611, 64.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.18894918006468311;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.02343736891728626;  // std dev = 2.487, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */


Results
   AUC ROC   = 0.622608
   AUC PR    = 0.420863
   CLL	      = -0.553034
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 196.64600000000002 seconds
Total inference time: 2.538 seconds
AUC ROC: 0.622608


Results scoring model
   AUC ROC   = 0.643972
   AUC PR    = 0.657839
   CLL	      = -0.616068
   Precision = 0.891892 at threshold = 0.5
   Recall    = 0.203285
   F1        = 0.331104


Total scoring time: 2.95 seconds
Refined model CLL: -0.616068


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622608
   AUC PR    = 0.420863
   CLL	      = -0.553034
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 203.905 seconds
Total inference time: 2.538 seconds
AUC ROC: 0.622608
Total revision time: 203.905
Best scored revision CLL: -0.616068


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 12:21:33
{'AUC ROC': 0.622608, 'AUC PR': 0.420863, 'CLL': -0.553034, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 203.905, 'Inference time': 2.538, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560249, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 2.742, 'Inference time': 1.666}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.00e-06, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.27903828360002436;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.24156940306748378;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.2032356654538065;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.50e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.16665532433887909;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.10e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.13378745578662096;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.10564496846457526;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.62e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.08240793523516568;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.06371763095070922;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.048958734698393874;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.037452211889406645;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560249
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.823 seconds
Total inference time: 1.469 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.582136
   AUC PR    = 0.61899
   CLL	      = -0.639841
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164271
   F1        = 0.282187


Total scoring time: 1.718 seconds
Parameter learned model CLL: -0.639841


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1e-06, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.53e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.62e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 160], 'false': [21.712, 1, 814]}]]
[{'': [6.306066779870889e-15, 0.24374150481935125]}, {'': [-2.7533531010703883e-15, 0.24374150481933973]}, {'': [1.909583602355269e-15, 0.243741504819311]}, {'': [1.2656542480726785e-15, 0.2437415048193056]}, {'': [5.995204332975846e-16, 0.24374150481931564]}, {'': [-2.220446049250313e-16, 0.24374150481932097]}, {'': [4.274358644806853e-16, 0.2437415048193204]}, {'': [-3.164135620181696e-16, 0.24374150481931114]}, {'': [-2.3869795029440865e-16, 0.24374150481933324]}, {'': [5.2735593669694933e-17, 0.2437415048193359]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.00e-06, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3040784612234442;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3991325416568882;  // std dev = 3.892, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.18573514199606403;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.034619523334806494;  // std dev = 3.515, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.021851064900487684;  // std dev = 2.814, 75.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.26289492625588984;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3433051115719201;  // std dev = 3.892, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.16158887109600276;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.030352835297128622;  // std dev = 3.515, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.06354154584162044;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.03736358141261611;  // std dev = 2.507, 69.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.22027738932368837;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3395710767892688;  // std dev = 3.012, 38.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.23506187243632853;  // std dev = 2.611, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1379961362622879;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.02652496982746542;  // std dev = 3.515, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.05588161709610342;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.03295716727295845;  // std dev = 2.507, 69.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.50e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17948735797754944;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.268632855957129;  // std dev = 3.012, 38.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.18702060470928794;  // std dev = 2.609, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.11588141743192369;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.023112561218445488;  // std dev = 3.515, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.048852693741914276;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.029169034045353714;  // std dev = 2.507, 69.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.10e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14297371812395793;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2065461990478112;  // std dev = 3.012, 38.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.14563228081736515;  // std dev = 2.607, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.09589716938050136;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.020087540311506474;  // std dev = 3.515, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.011222968721509609;  // std dev = 2.803, 75.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | | else return -0.1300142744706633;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11196054956614811;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.15636332243197137;  // std dev = 3.012, 38.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.11178185810103831;  // std dev = 2.606, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.07838952715340868;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.01741911467621213;  // std dev = 3.515, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12164415322446465;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.008136964217221859;  // std dev = 2.800, 74.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.62e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0866120219532579;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.23306390534688531;  // std dev = 0.929, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09318895031795729;  // std dev = 3.864, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.054076601861432975;  // std dev = 4.438, 111.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=27 */
%   | | | else return -0.03255521494659579;  // std dev = 2.308, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10924318753096149;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0072218003850346634;  // std dev = 2.800, 74.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06644002087423106;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.17724169249926974;  // std dev = 0.928, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07016888096493494;  // std dev = 3.863, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.04576053869350824;  // std dev = 4.436, 111.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=27 */
%   | | | else return -0.026516241358697755;  // std dev = 2.308, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.048744470051598876;  // std dev = 1.256, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.021122015919737256;  // std dev = 2.503, 69.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.050674478164328504;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1367805552254793;  // std dev = 0.926, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05274824378990959;  // std dev = 3.863, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.058631207345815874;  // std dev = 3.557, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.0021282986851821305;  // std dev = 3.511, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.005741873639328157;  // std dev = 2.798, 75.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | | else return -0.1118734047577975;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03849981724859473;  // std dev = 0.497, 1,646.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=734 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.10707361599638929;  // std dev = 0.925, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.03963162156733515;  // std dev = 3.863, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.2598808968075286;  // std dev = 1.738, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.10562858286082334;  // std dev = 0.973, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.004070168665755526;  // std dev = 4.075, 116.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=21 */
%   | | | else return 0.014468090843645094;  // std dev = 3.362, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */


Results
   AUC ROC   = 0.622899
   AUC PR    = 0.420916
   CLL	      = -0.549149
   Precision = 0.910714 at threshold = 0.5
   Recall    = 0.175559
   F1        = 0.294372


Total learning time: 369.44 seconds
Total inference time: 2.525 seconds
AUC ROC: 0.622899


Results scoring model
   AUC ROC   = 0.633861
   AUC PR    = 0.650792
   CLL	      = -0.62162
   Precision = 0.925 at threshold = 0.5
   Recall    = 0.189938
   F1        = 0.315162


Total scoring time: 4.285 seconds
Refined model CLL: -0.62162


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622899
   AUC PR    = 0.420916
   CLL	      = -0.549149
   Precision = 0.910714 at threshold = 0.5
   Recall    = 0.175559
   F1        = 0.294372


Total learning time: 379.266 seconds
Total inference time: 2.525 seconds
AUC ROC: 0.622899
Total revision time: 379.266
Best scored revision CLL: -0.62162


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 12:27:57
{'AUC ROC': 0.622899, 'AUC PR': 0.420916, 'CLL': -0.549149, 'Precision': [0.910714, 0.5], 'Recall': 0.175559, 'F1': 0.294372, 'Learning time': 379.266, 'Inference time': 2.525, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560249, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.823, 'Inference time': 1.469}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.28003468871272125;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.24241912605987745;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.203917546988596;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.1671721234134822;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.92e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.1341602627592423;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.95e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.10590316332867918;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.08258079516771843;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9.88e-08, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.06382989608628828;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.04902940386010104;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1.03e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else return 0.037495045997186734;  // std dev = 26.623, 2,906.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,226 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.561092
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 4.612 seconds
Total inference time: 1.642 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.580424
   AUC PR    = 0.616589
   CLL	      = -0.641019
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.160849
   F1        = 0.277123


Total scoring time: 1.926 seconds
Parameter learned model CLL: -0.641019


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 235], 'false': [26.623, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 235], 'false': [26.623, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.33e-07, 0, 235], 'false': [26.623, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 235], 'false': [26.623, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 235], 'false': [26.623, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.95e-07, 0, 235], 'false': [26.623, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 235], 'false': [26.623, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 235], 'false': [26.623, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 235], 'false': [26.623, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 235], 'false': [26.623, 1, 1]}]]
[{'': [4.958681219772614e-15, 0.2438981645114498]}, {'': [-4.1725488312720774e-15, 0.24389816451139265]}, {'': [1.209434443846979e-15, 0.24389816451141552]}, {'': [-1.209434443846979e-16, 0.2438981645113915]}, {'': [3.628303331540937e-16, 0.24389816451141266]}, {'': [3.703892984281373e-16, 0.24389816451139643]}, {'': [3.628303331540937e-16, 0.2438981645114162]}, {'': [4.15743090072399e-17, 0.24389816451143875]}, {'': [-1.662972360289596e-16, 0.24389816451144067]}, {'': [4.535379164426171e-17, 0.24389816451144558]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3005341083468884;  // std dev = 0.497, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,098 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.451369274082562;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return 0.4036034805540578;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2427643197148956;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.04075763075168605;  // std dev = 4.143, 115.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01916588425205473;  // std dev = 3.993, 118.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25987997556371717;  // std dev = 0.497, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,098 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3871260174676034;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return 0.3470659933516938;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.21057171779917386;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.03572344255659487;  // std dev = 4.143, 115.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016816780902213516;  // std dev = 3.993, 118.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4525765690110694;  // std dev = 3.087, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | | | else return 0.03681584413334923;  // std dev = 1.906, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.2156734468983518;  // std dev = 24.440, 2,424.000 (wgt'ed) examples reached here.  /* #neg=1,357 #pos=1,067 */
%   | | | else return 0.29297638754191585;  // std dev = 4.623, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.17819907632636625;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.03119023692074635;  // std dev = 4.143, 115.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.014729038558489357;  // std dev = 3.993, 118.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.177578194412659;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,098 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.4756412354975249;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.22983959265414985;  // std dev = 4.618, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1474828092189576;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.027138855461080007;  // std dev = 4.143, 115.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13882885562291222;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.01806339168825927;  // std dev = 3.976, 116.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.92e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14160738569078296;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,098 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3646752134611876;  // std dev = 0.916, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.17701147807455267;  // std dev = 4.617, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.11977923661567542;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.02354214265104499;  // std dev = 4.143, 115.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12308887228593088;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.015802170151580586;  // std dev = 3.976, 116.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.95e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11102192607953613;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,098 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.32898640456160705;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1311955801548072;  // std dev = 4.611, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.09581200856283949;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.020367710077142276;  // std dev = 4.143, 115.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11043713200028986;  // std dev = 0.048, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.01380033224795038;  // std dev = 3.976, 116.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1221704171678768;  // std dev = 3.033, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return -0.12642006015737411;  // std dev = 1.887, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08755896559481428;  // std dev = 24.458, 2,428.000 (wgt'ed) examples reached here.  /* #neg=1,350 #pos=1,078 */
%   | | | else return 0.09971150489320987;  // std dev = 4.612, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.23700431352565277;  // std dev = 2.156, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return -0.06431591100354782;  // std dev = 1.351, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06023678521315645;  // std dev = 2.408, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.014175139382073364;  // std dev = 6.436, 257.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=53 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9.88e-08, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06594731873130882;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,098 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.23373215198714242;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07380554409572695;  // std dev = 4.610, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02867945290808783;  // std dev = 5.804, 187.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=48 */
%   | | | else return 0.11677213211100032;  // std dev = 2.128, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006811095006643313;  // std dev = 3.982, 118.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
%   | | | else return -0.09924643013270211;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2116717783050293;  // std dev = 3.124, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   | | | else return -0.14638850866094905;  // std dev = 1.734, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04878481771286532;  // std dev = 24.431, 2,424.000 (wgt'ed) examples reached here.  /* #neg=1,357 #pos=1,067 */
%   | | | else return 0.05541135551123586;  // std dev = 4.610, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.18529362256668752;  // std dev = 2.130, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return -0.05878103521723028;  // std dev = 1.350, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04692817247434907;  // std dev = 2.402, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.007477565343525547;  // std dev = 6.431, 257.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=53 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1.03e-07, 235.000 (wgt'ed) examples reached here.  /* #pos=235 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03814833899283558;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,098 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.19501971380029065;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04161211433550437;  // std dev = 4.610, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.018647589484316898;  // std dev = 5.770, 187.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=48 */
%   | | | else return 0.08999082975693608;  // std dev = 2.127, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11838582662277294;  // std dev = 0.124, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.0076332326992863755;  // std dev = 3.974, 116.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=19 */


Results
   AUC ROC   = 0.62247
   AUC PR    = 0.420754
   CLL	      = -0.543994
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 454.18 seconds
Total inference time: 2.479 seconds
AUC ROC: 0.62247


Results scoring model
   AUC ROC   = 0.639333
   AUC PR    = 0.657309
   CLL	      = -0.624379
   Precision = 0.872576 at threshold = 0.5
   Recall    = 0.215606
   F1        = 0.345774


Total scoring time: 5.38 seconds
Refined model CLL: -0.624379


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.62247
   AUC PR    = 0.420754
   CLL	      = -0.543994
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 466.098 seconds
Total inference time: 2.479 seconds
AUC ROC: 0.62247
Total revision time: 466.098
Best scored revision CLL: -0.624379


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 12:35:48
{'AUC ROC': 0.62247, 'AUC PR': 0.420754, 'CLL': -0.543994, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 466.098, 'Inference time': 2.479, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.561092, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 4.612, 'Inference time': 1.642}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.03e-06, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.2806805154037093;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.24296982968530217;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.20435934660761482;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.16750681343799245;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.13440157037132894;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.10607019568728863;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.08269257137261464;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.06390246822835972;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.049075084012144395;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.03752274185209332;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.561641
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 5.764 seconds
Total inference time: 1.683 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.579312
   AUC PR    = 0.61502
   CLL	      = -0.641783
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158624
   F1        = 0.273815


Total scoring time: 2.182 seconds
Parameter learned model CLL: -0.641783


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-06, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.67e-07, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}]]
[{'': [3.4032467602749133e-15, 0.24399864394978876]}, {'': [-4.966900677157982e-15, 0.24399864394988544]}, {'': [-2.299491054239806e-16, 0.24399864394983883]}, {'': [-8.048218689839323e-16, 0.24399864394981632]}, {'': [-3.5642111340717e-16, 0.2439986439498552]}, {'': [4.369033003055632e-16, 0.2439986439497987]}, {'': [2.0695419488158259e-16, 0.2439986439498101]}, {'': [2.0695419488158259e-16, 0.24399864394980642]}, {'': [-2.1270292251718208e-16, 0.24399864394983445]}, {'': [-1.6958746525018573e-16, 0.24399864394983062]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.03e-06, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3003402183924854;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4897278824679339;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
%   | | | else return 0.41912454485560896;  // std dev = 3.178, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.24703782398840207;  // std dev = 5.472, 126.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=49 */
%   | | | else return 0.04682818038253037;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.030988441272351182;  // std dev = 4.813, 162.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2597150116378815;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.66400529716899;  // std dev = 0.937, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3789615784172006;  // std dev = 5.137, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.21423003928421153;  // std dev = 5.472, 126.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=49 */
%   | | | else return 0.041031659967106504;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1406101303781096;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.02925250223345653;  // std dev = 4.804, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21774568382951034;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5331372974810024;  // std dev = 0.938, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3096690213266487;  // std dev = 5.137, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.18117025335774012;  // std dev = 5.472, 126.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=49 */
%   | | | else return 0.035792912049292476;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12447082546732652;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.02559580481188169;  // std dev = 4.804, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17759201668111396;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.40544627762564417;  // std dev = 0.938, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.24357319799903293;  // std dev = 5.136, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1497783029984901;  // std dev = 5.472, 126.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=49 */
%   | | | else return 0.031099485715739544;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.022268051835563477;  // std dev = 4.802, 162.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=28 */
%   | | | else return -0.12273471601568203;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14162591328064292;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.20969932643830394;  // std dev = 4.164, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
%   | | | else return 0.16726175806656776;  // std dev = 3.159, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0502811599058338;  // std dev = 6.817, 254.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=64 */
%   | | | else return 0.21986557382839983;  // std dev = 2.766, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.019399393857111164;  // std dev = 4.802, 162.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=28 */
%   | | | else return -0.110141951634035;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11103968443848929;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2554291282643663;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.13938713070127112;  // std dev = 5.134, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04220168970131028;  // std dev = 6.815, 254.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=64 */
%   | | | else return 0.17508723006082735;  // std dev = 2.764, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01686397547984472;  // std dev = 4.801, 162.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=28 */
%   | | | else return -0.09981799351243238;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0860017686613168;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.19733249877541037;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1047499762438365;  // std dev = 5.134, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17782439019299998;  // std dev = 2.478, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.03231140001331993;  // std dev = 6.809, 260.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=65 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14592788485076114;  // std dev = 0.105, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.014449621965344217;  // std dev = 4.926, 162.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06604544810383822;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1558305167422383;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07858999752134535;  // std dev = 5.134, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.075143063836206;  // std dev = 5.421, 126.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=49 */
%   | | | else return 0.012291015024049824;  // std dev = 4.932, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12091419703444993;  // std dev = 0.097, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.012669214411148735;  // std dev = 4.793, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05042511682831517;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.12546532279493405;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.058986087832618606;  // std dev = 5.134, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1506343650825601;  // std dev = 2.501, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.019423279226814017;  // std dev = 6.869, 258.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=67 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.00876427630331235;  // std dev = 4.800, 162.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=28 */
%   | | | else return -0.08738898745305498;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.038346181876654395;  // std dev = 0.497, 3,304.000 (wgt'ed) examples reached here.  /* #neg=1,843 #pos=1,461 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.10266130749259503;  // std dev = 0.938, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04432582900759557;  // std dev = 5.134, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.014139192131685442;  // std dev = 6.741, 261.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=65 */
%   | | | else return 0.13729962744199184;  // std dev = 2.561, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06316599275293143;  // std dev = 1.328, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.010234530059456542;  // std dev = 4.750, 150.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=28 */


Results
   AUC ROC   = 0.622875
   AUC PR    = 0.42091
   CLL	      = -0.548696
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 679.265 seconds
Total inference time: 2.512 seconds
AUC ROC: 0.622875


Results scoring model
   AUC ROC   = 0.626488
   AUC PR    = 0.645878
   CLL	      = -0.62677
   Precision = 0.892019 at threshold = 0.5
   Recall    = 0.195072
   F1        = 0.320135


Total scoring time: 5.958 seconds
Refined model CLL: -0.62677


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622875
   AUC PR    = 0.42091
   CLL	      = -0.548696
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 693.169 seconds
Total inference time: 2.512 seconds
AUC ROC: 0.622875
Total revision time: 693.169
Best scored revision CLL: -0.62677


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 12:47:26
{'AUC ROC': 0.622875, 'AUC PR': 0.42091, 'CLL': -0.548696, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 693.169, 'Inference time': 2.512, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.561641, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 5.764, 'Inference time': 1.683}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 7.275 seconds
Total inference time: 1.573 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 2.353 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.39055105437540644;  // std dev = 4.690, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.35220854356048176;  // std dev = 3.871, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.503812763904907;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2952196155158656;  // std dev = 5.923, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.254596872795733;  // std dev = 4.689, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.22474350208010285;  // std dev = 3.852, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.19867766860935865;  // std dev = 4.688, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.16842495699952345;  // std dev = 3.851, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0514243422155987;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.0278321495815081;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3020873019155047;  // std dev = 4.029, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.14859745465150728;  // std dev = 2.285, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.109886146880426;  // std dev = 31.519, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.1322459528577211;  // std dev = 5.919, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04162130287751089;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426388;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09335578437677157;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08555839084786884;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.23534481294075096;  // std dev = 1.307, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.0995305762346782;  // std dev = 5.919, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830454;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07583294993931636;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.019204361885541258;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0657525500860307;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.09003165619751924;  // std dev = 4.706, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.06713484873177496;  // std dev = 3.829, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026614411937304554;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17192093335745545;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01133824771468196;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08568087954252014;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05023590025031799;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2542194272203865;  // std dev = 1.255, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.048537010103173316;  // std dev = 5.907, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13632575217542986;  // std dev = 2.866, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021222550967437238;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.009708368605760232;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07920364750921868;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.30270447649025034;  // std dev = 3.475, 60.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | | | else return 0.057889971060630804;  // std dev = 3.293, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.03507504419199615;  // std dev = 31.602, 4,068.000 (wgt'ed) examples reached here.  /* #neg=2,291 #pos=1,777 */
%   | | | else return 0.022323450010149706;  // std dev = 8.777, 395.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=132 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04455246975432463;  // std dev = 6.309, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | | else return -0.18209715081117225;  // std dev = 0.961, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return -0.5008927466421004;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07361726729733353;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.621633
   AUC PR    = 0.419195
   CLL	      = -0.544262
   Precision = 0.87395 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.297143


Total learning time: 878.838 seconds
Total inference time: 2.747 seconds
AUC ROC: 0.621633


Results scoring model
   AUC ROC   = 0.638285
   AUC PR    = 0.659566
   CLL	      = -0.624853
   Precision = 0.904673 at threshold = 0.5
   Recall    = 0.198686
   F1        = 0.325816


Total scoring time: 8.598 seconds
Refined model CLL: -0.624853


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.621633
   AUC PR    = 0.419195
   CLL	      = -0.544262
   Precision = 0.87395 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.297143


Total learning time: 897.064 seconds
Total inference time: 2.747 seconds
AUC ROC: 0.621633
Total revision time: 897.064
Best scored revision CLL: -0.624853


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 13:02:28
{'AUC ROC': 0.621633, 'AUC PR': 0.419195, 'CLL': -0.544262, 'Precision': [0.87395, 0.5], 'Recall': 0.179002, 'F1': 0.297143, 'Learning time': 897.064, 'Inference time': 2.747, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 7.275, 'Inference time': 1.573}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995117;  // std dev = 1.69e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.17297981107522298;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.15059190149618645;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.95e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.12886336434890047;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831;  // std dev = 1.93e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.10856211375759474;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.0902212670784267;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.07411916627178457;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253576;  // std dev = 1.07e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.06031343519809036;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.04870125696889533;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.03908201538858764;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6.14e-08, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else return 0.031208890909405144;  // std dev = 15.771, 1,153.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=363 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.640611
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 2.901 seconds
Total inference time: 1.364 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.60022
   AUC PR    = 0.565247
   CLL	      = -0.587995
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.200441
   F1        = 0.333945


Total scoring time: 1.547 seconds
Parameter learned model CLL: -0.587995


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 91], 'false': [15.771, 790, 363]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 91], 'false': [15.771, 790, 363]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.95e-07, 0, 91], 'false': [15.771, 790, 363]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 91], 'false': [15.771, 790, 363]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 91], 'false': [15.771, 790, 363]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 91], 'false': [15.771, 790, 363]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-07, 0, 91], 'false': [15.771, 790, 363]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 91], 'false': [15.771, 790, 363]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 91], 'false': [15.771, 790, 363]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.14e-08, 0, 91], 'false': [15.771, 790, 363]}]]
[{'': [3.123264772571869e-16, 0.21571239550806134]}, {'': [8.58897812457264e-16, 0.2157123955080687]}, {'': [1.717795624914528e-15, 0.21571239550807375]}, {'': [4.099285014000578e-16, 0.21571239550808216]}, {'': [-3.5136728691433524e-16, 0.21571239550808036]}, {'': [-3.9040809657148365e-17, 0.21571239550807986]}, {'': [1.2688263138573217e-16, 0.21571239550807406]}, {'': [9.76020241428709e-17, 0.21571239550808358]}, {'': [-8.296172052144027e-17, 0.21571239550808635]}, {'': [4.1480860260720135e-17, 0.21571239550806937]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995117;  // std dev = 1.69e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19628640738332132;  // std dev = 14.208, 902.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=305 */
%   | | | else return 0.1308762078267851;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007830446343786629;  // std dev = 3.355, 97.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   | | | else return 0.021785298735875997;  // std dev = 2.744, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17067424344764684;  // std dev = 14.208, 902.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=305 */
%   | | | else return 0.11418623766746594;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.6045267906174346;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.1665388245648817;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.06920641632942474;  // std dev = 1.522, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.1894134746544347;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.023356745570676365;  // std dev = 3.251, 101.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=12 */
%   | | | else return 0.04912250995201761;  // std dev = 2.681, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.95e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.145618639378821;  // std dev = 14.187, 900.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=304 */
%   | | | else return 0.09832252944829795;  // std dev = 3.393, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return -0.25489582272187744;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.36712196502222183;  // std dev = 2.187, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.5797090094886703;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.030390034315446363;  // std dev = 1.326, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.020532368590651627;  // std dev = 3.251, 101.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=12 */
%   | | | else return 0.04287793614812418;  // std dev = 2.681, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831;  // std dev = 1.93e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12206699061503001;  // std dev = 14.207, 902.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=305 */
%   | | | else return 0.08066557089677438;  // std dev = 3.304, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.39592648320477647;  // std dev = 1.217, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.09213369297080247;  // std dev = 1.794, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.16009315635459978;  // std dev = 1.561, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.17357793389512519;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.041114312100113064;  // std dev = 1.697, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.00594553427831243;  // std dev = 3.942, 133.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1008055007114538;  // std dev = 14.186, 900.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=304 */
%   | | | else return 0.06694835806676858;  // std dev = 3.394, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return -0.2502186158784909;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.23254578381940927;  // std dev = 2.092, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.4674718020210174;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.03180220946985476;  // std dev = 1.326, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.01773186251307008;  // std dev = 3.252, 101.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=12 */
%   | | | else return 0.0345818014866438;  // std dev = 2.666, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.27689208925767006;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.1333364630924664;  // std dev = 1.592, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08282873533984988;  // std dev = 14.333, 921.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=310 */
%   | | | else return 0.16046559346856323;  // std dev = 2.024, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.12401691478650856;  // std dev = 1.517, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.15244756615313385;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.010540857476423872;  // std dev = 3.368, 97.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
%   | | | else return 0.014527685272596652;  // std dev = 2.617, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253576;  // std dev = 1.07e-07, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24760131188552076;  // std dev = 1.823, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.1253244241031683;  // std dev = 1.633, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06683425061898171;  // std dev = 14.333, 921.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=310 */
%   | | | else return 0.12411808173228563;  // std dev = 2.023, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.018945910874135205;  // std dev = 3.124, 97.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=12 */
%   | | | else return 0.08974701286786882;  // std dev = 1.766, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.12865005355129197;  // std dev = 1.484, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0134522818296348;  // std dev = 2.286, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05305716300416048;  // std dev = 14.166, 902.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=305 */
%   | | | else return 0.027641003914634164;  // std dev = 3.305, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1950353776484876;  // std dev = 1.089, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.007378881590884256;  // std dev = 1.805, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.016667788852833553;  // std dev = 3.125, 97.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=12 */
%   | | | else return 0.07908936446705575;  // std dev = 1.766, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.10554356345437942;  // std dev = 1.479, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.011668979936555633;  // std dev = 2.286, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04227814670261422;  // std dev = 14.144, 900.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=304 */
%   | | | else return 0.02086665934645596;  // std dev = 3.395, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19114720237430394;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.0012693001301415559;  // std dev = 1.479, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.34657170484513145;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.026169710035467378;  // std dev = 1.328, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.016002763325215007;  // std dev = 3.240, 101.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=12 */
%   | | | else return 0.021593359362498142;  // std dev = 2.646, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6.14e-08, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1734567056421622;  // std dev = 1.808, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.12225723049106677;  // std dev = 1.626, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0342931218803967;  // std dev = 14.332, 921.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=310 */
%   | | | else return 0.06191479351199275;  // std dev = 1.971, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2624375214029958;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.02284404157863237;  // std dev = 1.328, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.014148338373773111;  // std dev = 3.240, 101.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=12 */
%   | | | else return 0.018515841290918073;  // std dev = 2.645, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */


Results
   AUC ROC   = 0.605681
   AUC PR    = 0.591121
   CLL	      = -0.635024
   Precision = 0.848485 at threshold = 0.5
   Recall    = 0.187416
   F1        = 0.307018


Total learning time: 206.678 seconds
Total inference time: 3.911 seconds
AUC ROC: 0.605681


Results scoring model
   AUC ROC   = 0.676238
   AUC PR    = 0.624208
   CLL	      = -0.562866
   Precision = 0.981481 at threshold = 0.5
   Recall    = 0.23348
   F1        = 0.377224


Total scoring time: 7.276 seconds
Refined model CLL: -0.562866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.605681
   AUC PR    = 0.591121
   CLL	      = -0.635024
   Precision = 0.848485 at threshold = 0.5
   Recall    = 0.187416
   F1        = 0.307018


Total learning time: 218.40200000000002 seconds
Total inference time: 3.911 seconds
AUC ROC: 0.605681
Total revision time: 218.40200000000002
Best scored revision CLL: -0.562866


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:06:13
{'AUC ROC': 0.605681, 'AUC PR': 0.591121, 'CLL': -0.635024, 'Precision': [0.848485, 0.5], 'Recall': 0.187416, 'F1': 0.307018, 'Learning time': 218.40200000000002, 'Inference time': 3.911, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.640611, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 2.901, 'Inference time': 1.364}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.04e-06, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.1775634852501745;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.15454543107136937;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.59e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.13215117964387207;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4.30e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.11120304740472782;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.72e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.09227551644248888;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.07567053009154176;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.70e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.061453055981699395;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.04951607989305188;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.03964835963354472;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else return 0.03159002230933208;  // std dev = 22.472, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=742 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.639048
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.891 seconds
Total inference time: 1.473 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.59141
   AUC PR    = 0.55145
   CLL	      = -0.594504
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.182819
   F1        = 0.309125


Total scoring time: 2.064 seconds
Parameter learned model CLL: -0.594504


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 166], 'false': [22.472, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 166], 'false': [22.472, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.59e-07, 0, 166], 'false': [22.472, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.3e-07, 0, 166], 'false': [22.472, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.72e-07, 0, 166], 'false': [22.472, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 166], 'false': [22.472, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.7e-07, 0, 166], 'false': [22.472, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 166], 'false': [22.472, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 166], 'false': [22.472, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 166], 'false': [22.472, 1, 742]}]]
[{'': [6.5061744479238086e-15, 0.21738889530273875]}, {'': [-2.9106569898606513e-15, 0.21738889530268268]}, {'': [1.8833662875568922e-15, 0.21738889530270197]}, {'': [1.1128982608290726e-15, 0.21738889530271285]}, {'': [8.346736956218045e-16, 0.2173888953027144]}, {'': [-2.568226755759398e-16, 0.21738889530269825]}, {'': [4.387387374422305e-16, 0.21738889530271582]}, {'': [-3.210283444699248e-16, 0.2173888953027075]}, {'': [-2.487969669641917e-16, 0.21738889530272582]}, {'': [5.3504724078320797e-17, 0.2173888953027131]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.04e-06, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20249327944385165;  // std dev = 0.475, 1,998.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=688 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.17633075328133055;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.02481560176617806;  // std dev = 5.477, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
%   | | | else return -8.254238748466371E-4;  // std dev = 3.074, 78.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17601397076196357;  // std dev = 0.475, 1,998.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=688 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.45177071572292693;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.023915586769072992;  // std dev = 1.876, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.011960129140260099;  // std dev = 5.030, 191.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=30 */
%   | | | else return 0.03269688768687937;  // std dev = 3.717, 96.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.59e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3440338642857095;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.09589490646933256;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else return 0.1481792294820917;  // std dev = 0.475, 1,941.000 (wgt'ed) examples reached here.  /* #neg=1,276 #pos=665 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1469821898182716;  // std dev = 2.161, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.12812647890358705;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01992548341718107;  // std dev = 5.461, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
%   | | | else return -0.005167688817903929;  // std dev = 3.076, 78.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4.30e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1253310379934849;  // std dev = 0.475, 1,998.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=688 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.008656173564030567;  // std dev = 4.709, 184.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=26 */
%   | | | else return 0.12149719113018088;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03448781230024337;  // std dev = 3.765, 96.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=18 */
%   | | | else return -0.13525819722474425;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.72e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3404922382757444;  // std dev = 2.051, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.0629998655203368;  // std dev = 2.875, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.12756326882186686;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.10096811852575377;  // std dev = 20.588, 1,884.000 (wgt'ed) examples reached here.  /* #neg=1,240 #pos=644 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.12092282955824457;  // std dev = 2.155, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.1139161396700075;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 3.864079357534331E-4;  // std dev = 4.770, 177.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=27 */
%   | | | else return 0.02328381619664952;  // std dev = 4.046, 117.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2684748835073108;  // std dev = 2.048, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.05119953425134391;  // std dev = 2.875, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10347530176135877;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.08202706540298121;  // std dev = 20.588, 1,884.000 (wgt'ed) examples reached here.  /* #neg=1,240 #pos=644 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return -0.20401971385466805;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07830426541109364;  // std dev = 2.150, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 3.3657767260919546E-4;  // std dev = 4.770, 177.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=27 */
%   | | | else return 0.02033256902843535;  // std dev = 4.046, 117.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.70e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3770756878954944;  // std dev = 2.355, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | | else return -0.13558790273420743;  // std dev = 2.255, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.13364859010686486;  // std dev = 3.357, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.06594513570561981;  // std dev = 20.588, 1,884.000 (wgt'ed) examples reached here.  /* #neg=1,240 #pos=644 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.09556142960913189;  // std dev = 2.128, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.11037278534681359;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.01264769844242833;  // std dev = 5.447, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
%   | | | else return -0.00778530038183945;  // std dev = 3.072, 78.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E), haswordtitle(G, D) )
%   | | | then return -0.24315691019521787;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08543234532240332;  // std dev = 3.500, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06742677369630534;  // std dev = 3.452, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.052578529332986804;  // std dev = 20.588, 1,884.000 (wgt'ed) examples reached here.  /* #neg=1,240 #pos=644 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.030193293683461332;  // std dev = 4.745, 150.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=29 */
%   | | | else return -0.06096433568920173;  // std dev = 2.141, 54.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02123217324185751;  // std dev = 4.035, 113.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=20 */
%   | | | else return -0.12015560110022241;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04228894492858075;  // std dev = 0.474, 1,998.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=688 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07510429593475364;  // std dev = 2.119, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.10008933859628866;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0102875334204116;  // std dev = 5.440, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
%   | | | else return -0.00922370009704149;  // std dev = 3.068, 78.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033315530038112606;  // std dev = 0.474, 1,998.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=688 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34974956886780506;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.03206325429820261;  // std dev = 1.879, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -1.748910221565387E-4;  // std dev = 5.010, 191.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=30 */
%   | | | else return 0.01213095976515588;  // std dev = 3.645, 96.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=17 */


Results
   AUC ROC   = 0.602966
   AUC PR    = 0.586558
   CLL	      = -0.630341
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 125.328 seconds
Total inference time: 1.927 seconds
AUC ROC: 0.602966


Results scoring model
   AUC ROC   = 0.649108
   AUC PR    = 0.59246
   CLL	      = -0.58063
   Precision = 0.994012 at threshold = 0.5
   Recall    = 0.182819
   F1        = 0.308837


Total scoring time: 2.846 seconds
Refined model CLL: -0.58063


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602966
   AUC PR    = 0.586558
   CLL	      = -0.630341
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 134.12900000000002 seconds
Total inference time: 1.927 seconds
AUC ROC: 0.602966
Total revision time: 134.12900000000002
Best scored revision CLL: -0.58063


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:08:31
{'AUC ROC': 0.602966, 'AUC PR': 0.586558, 'CLL': -0.630341, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 134.12900000000002, 'Inference time': 1.927, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.639048, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.891, 'Inference time': 1.473}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.1794651010508663;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.15618505165279664;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.13351323715531385;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.11229515219321559;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.73e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.0931229372210496;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.98e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.0763085785716126;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.06192011297268631;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.049848669747282644;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.03987843722523254;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else return 0.03174397826235432;  // std dev = 27.607, 3,495.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,123 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.638427
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 5.427 seconds
Total inference time: 1.204 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.587739
   AUC PR    = 0.545597
   CLL	      = -0.597195
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175477
   F1        = 0.298563


Total scoring time: 2.04 seconds
Parameter learned model CLL: -0.597195


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 239], 'false': [27.607, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 239], 'false': [27.607, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.06e-07, 0, 239], 'false': [27.607, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 239], 'false': [27.607, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 239], 'false': [27.607, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 239], 'false': [27.607, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 239], 'false': [27.607, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.15e-07, 0, 239], 'false': [27.607, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 239], 'false': [27.607, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 239], 'false': [27.607, 2, 1]}]]
[{'': [4.875690739106964e-15, 0.21807208744970355]}, {'': [-4.221634664348712e-15, 0.21807208744968068]}, {'': [1.0702735768771384e-15, 0.21807208744966844]}, {'': [-1.7837892947952306e-16, 0.21807208744966985]}, {'': [3.1216312658916533e-16, 0.21807208744965864]}, {'': [3.7162276974900636e-16, 0.21807208744963819]}, {'': [3.567578589590461e-16, 0.2180720874496602]}, {'': [5.574341546235095e-17, 0.21807208744966436]}, {'': [-1.7094647408454293e-16, 0.21807208744967085]}, {'': [4.08785046723907e-17, 0.21807208744969112]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.49148226843284554;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.06867525088898606;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | else return 0.2043553602533008;  // std dev = 0.476, 2,926.000 (wgt'ed) examples reached here.  /* #neg=1,913 #pos=1,013 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00466908161965818;  // std dev = 5.843, 273.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=40 */
%   | | | else return 0.04053887220642982;  // std dev = 4.869, 159.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=29 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1778115537079759;  // std dev = 0.476, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,044 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2284792031721;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.035838044257171915;  // std dev = 2.556, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.002968745120252863;  // std dev = 5.840, 271.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=40 */
%   | | | else return 0.031987896312906036;  // std dev = 4.791, 159.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15139516224105576;  // std dev = 0.475, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,044 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10276165714292308;  // std dev = 2.562, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.07352836867461884;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05843102503331372;  // std dev = 2.798, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | | else return 0.007925169417972146;  // std dev = 7.068, 385.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=59 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1265250861842683;  // std dev = 0.475, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,044 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09803370475945171;  // std dev = 2.568, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.05098884300148614;  // std dev = 1.302, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0013598601562729695;  // std dev = 5.842, 271.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=40 */
%   | | | else return 0.02566292434399816;  // std dev = 4.780, 159.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.73e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3357563360964406;  // std dev = 3.050, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.008989942579623204;  // std dev = 2.977, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else return 0.1026050222966471;  // std dev = 0.475, 2,927.000 (wgt'ed) examples reached here.  /* #neg=1,917 #pos=1,010 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08449146525140218;  // std dev = 2.567, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.04396800663004045;  // std dev = 1.303, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.001190022390811992;  // std dev = 5.842, 271.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=40 */
%   | | | else return 0.022357575795029932;  // std dev = 4.779, 159.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.98e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08440076658679467;  // std dev = 0.475, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,044 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1855587497326978;  // std dev = 1.360, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.008893938804312692;  // std dev = 2.523, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.033944707851870363;  // std dev = 2.648, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.004789623054523827;  // std dev = 7.068, 385.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=59 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.25052956731483345;  // std dev = 3.051, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return -0.00849139916155934;  // std dev = 2.976, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else return 0.0666380229781539;  // std dev = 0.475, 2,927.000 (wgt'ed) examples reached here.  /* #neg=1,917 #pos=1,010 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.027775755189446364;  // std dev = 5.903, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.06304420511249274;  // std dev = 2.541, 83.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.029837374377336117;  // std dev = 4.821, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.15743149160127698;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.28446093867602246;  // std dev = 2.568, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return -0.06308724207136056;  // std dev = 3.118, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else return 0.0536653661632507;  // std dev = 0.475, 2,926.000 (wgt'ed) examples reached here.  /* #neg=1,913 #pos=1,013 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.024092871191412207;  // std dev = 5.903, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.055301684875368275;  // std dev = 2.540, 83.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02587437957224332;  // std dev = 4.821, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.13767665757930334;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04253334369388692;  // std dev = 0.474, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,044 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07344510134390496;  // std dev = 2.523, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.07734306745524931;  // std dev = 0.966, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.004786543685671774;  // std dev = 5.843, 273.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=40 */
%   | | | else return 0.020534338722563248;  // std dev = 4.821, 159.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 239.000 (wgt'ed) examples reached here.  /* #pos=239 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.20923493013159128;  // std dev = 2.604, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return -0.06886263749450451;  // std dev = 3.051, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08564100303866355;  // std dev = 4.195, 78.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=33 */
%   | | | else return 0.03194755216502159;  // std dev = 25.353, 2,848.000 (wgt'ed) examples reached here.  /* #neg=1,868 #pos=980 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.020524978619449543;  // std dev = 5.894, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.049029071490746076;  // std dev = 2.543, 83.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01960043918191178;  // std dev = 4.819, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.12225668771117292;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.602805
   AUC PR    = 0.586325
   CLL	      = -0.629922
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 164.289 seconds
Total inference time: 2.006 seconds
AUC ROC: 0.602805


Results scoring model
   AUC ROC   = 0.640501
   AUC PR    = 0.581698
   CLL	      = -0.583675
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175477
   F1        = 0.298563


Total scoring time: 3.613 seconds
Refined model CLL: -0.583675


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602805
   AUC PR    = 0.586325
   CLL	      = -0.629922
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 175.369 seconds
Total inference time: 2.006 seconds
AUC ROC: 0.602805
Total revision time: 175.369
Best scored revision CLL: -0.583675


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:11:31
{'AUC ROC': 0.602805, 'AUC PR': 0.586325, 'CLL': -0.629922, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 175.369, 'Inference time': 2.006, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.638427, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 5.427, 'Inference time': 1.204}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.18012106800411595;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.15675056527989453;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.13398281697069744;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.11267139647744323;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.09341460366986636;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.07652792327785275;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.06208045315051493;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.60e-07, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.049962665907705595;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.0399571512919823;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else return 0.031796532376966315;  // std dev = 31.912, 4,665.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,502 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.638216
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.901 seconds
Total inference time: 1.391 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.586454
   AUC PR    = 0.543525
   CLL	      = -0.598129
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172907
   F1        = 0.294836


Total scoring time: 2.266 seconds
Parameter learned model CLL: -0.598129


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 314], 'false': [31.912, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 314], 'false': [31.912, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 314], 'false': [31.912, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 314], 'false': [31.912, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 314], 'false': [31.912, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.72e-07, 0, 314], 'false': [31.912, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 314], 'false': [31.912, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 314], 'false': [31.912, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 314], 'false': [31.912, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 314], 'false': [31.912, 3, 1]}]]
[{'': [3.439569931068001e-15, 0.2183060785374123]}, {'': [-4.978324900230001e-15, 0.2183060785374703]}, {'': [-2.7154499455800006e-16, 0.2183060785374681]}, {'': [-8.598924827670002e-16, 0.21830607853745565]}, {'': [-4.073174918370001e-16, 0.2183060785374708]}, {'': [4.412606161567501e-16, 0.2183060785374897]}, {'': [2.0365874591850006e-16, 0.2183060785374352]}, {'': [2.1497312069175006e-16, 0.2183060785374834]}, {'': [-2.1780171438506256e-16, 0.21830607853749617]}, {'': [-1.8102999637200006e-16, 0.21830607853744358]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.4507415276921038;  // std dev = 3.611, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.07609765304823032;  // std dev = 3.646, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.2547006592374438;  // std dev = 5.269, 116.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=46 */
%   | | | else return 0.2024460173276239;  // std dev = 29.174, 3,770.000 (wgt'ed) examples reached here.  /* #neg=2,472 #pos=1,298 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.09814893509951236;  // std dev = 3.020, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.010082636756970935;  // std dev = 6.830, 362.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=55 */
%   | | | else return 0.04506482294997875;  // std dev = 5.703, 214.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=40 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.4351290187251172;  // std dev = 3.568, 54.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=33 */
%   | | | else return 0.05237148517749435;  // std dev = 3.633, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.20383146051425555;  // std dev = 5.182, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   | | | else return 0.1759733250142065;  // std dev = 29.174, 3,770.000 (wgt'ed) examples reached here.  /* #neg=2,472 #pos=1,298 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.006967530721833246;  // std dev = 6.700, 351.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=53 */
%   | | | else return 0.08046518039450513;  // std dev = 3.414, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.04502807466156552;  // std dev = 5.753, 213.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=41 */
%   | | | else return -0.14660889106377023;  // std dev = 0.022, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15146043223724118;  // std dev = 0.475, 4,018.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,393 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12382339692411386;  // std dev = 3.177, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.06405120909172891;  // std dev = 1.348, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.00675211784648928;  // std dev = 6.804, 351.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=55 */
%   | | | else return 0.02675709154864018;  // std dev = 5.597, 222.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=38 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3733425659584608;  // std dev = 3.169, 44.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=28 */
%   | | | else return 0.03736216032682947;  // std dev = 3.956, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14703586338815625;  // std dev = 5.160, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   | | | else return 0.12506041005510923;  // std dev = 29.174, 3,770.000 (wgt'ed) examples reached here.  /* #neg=2,472 #pos=1,298 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.10728609906045483;  // std dev = 3.176, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.05602425959370044;  // std dev = 1.349, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.04778875879361179;  // std dev = 3.211, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | | else return 0.00818964377602872;  // std dev = 8.200, 508.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=80 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.27759845881380546;  // std dev = 3.528, 54.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=33 */
%   | | | else return 0.008407141187757745;  // std dev = 3.602, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | else return 0.10342957005239482;  // std dev = 0.475, 3,889.000 (wgt'ed) examples reached here.  /* #neg=2,546 #pos=1,343 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09181165045677071;  // std dev = 3.175, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.049297528204701464;  // std dev = 1.349, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004670484668546697;  // std dev = 6.805, 351.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=55 */
%   | | | else return 0.02112742474674559;  // std dev = 5.593, 222.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=38 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.27053017656029654;  // std dev = 3.574, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return -0.0262168168597125;  // std dev = 3.659, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | else return 0.0839008802746429;  // std dev = 0.475, 3,886.000 (wgt'ed) examples reached here.  /* #neg=2,542 #pos=1,344 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07770507002349505;  // std dev = 3.175, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.04360071187681358;  // std dev = 1.349, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03907355333941484;  // std dev = 3.209, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | | else return 0.005858056061927935;  // std dev = 8.201, 508.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=80 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06756429443390721;  // std dev = 0.474, 4,018.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,393 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0025953788512463787;  // std dev = 6.692, 351.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=53 */
%   | | | else return 0.06656916272839052;  // std dev = 3.415, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.02758948907366678;  // std dev = 5.706, 213.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=41 */
%   | | | else return -0.13810439826452983;  // std dev = 0.063, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.60e-07, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2381442944720408;  // std dev = 3.079, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
%   | | | else return -0.021879476761090262;  // std dev = 4.049, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.066944879665473;  // std dev = 4.909, 116.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=46 */
%   | | | else return 0.053221318397767295;  // std dev = 29.174, 3,770.000 (wgt'ed) examples reached here.  /* #neg=2,472 #pos=1,298 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.06958240103645569;  // std dev = 2.993, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -0.05791591619521169;  // std dev = 1.347, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return -0.001442325769415591;  // std dev = 6.819, 362.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=55 */
%   | | | else return 0.02067860761519005;  // std dev = 5.648, 214.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=40 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04249826831095717;  // std dev = 0.474, 4,018.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,393 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.18147493404631035;  // std dev = 1.410, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.006336891568564734;  // std dev = 3.124, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0013497757028782845;  // std dev = 6.801, 351.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=55 */
%   | | | else return 0.016666201358785108;  // std dev = 5.577, 222.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=38 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #pos=314 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033456959902391406;  // std dev = 0.474, 4,018.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,393 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordvenue(A, G) )
%   | | | then return -0.15911099892765254;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.037027189064191626;  // std dev = 3.427, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0011703719342347051;  // std dev = 6.801, 351.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=55 */
%   | | | else return 0.014479925950404598;  // std dev = 5.577, 222.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=38 */


Results
   AUC ROC   = 0.602907
   AUC PR    = 0.586292
   CLL	      = -0.629827
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 218.287 seconds
Total inference time: 2.125 seconds
AUC ROC: 0.602907


Results scoring model
   AUC ROC   = 0.643222
   AUC PR    = 0.58409
   CLL	      = -0.584572
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172907
   F1        = 0.294836


Total scoring time: 3.869 seconds
Refined model CLL: -0.584572


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602907
   AUC PR    = 0.586292
   CLL	      = -0.629827
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 231.323 seconds
Total inference time: 2.125 seconds
AUC ROC: 0.602907
Total revision time: 231.323
Best scored revision CLL: -0.584572


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:15:26
{'AUC ROC': 0.602907, 'AUC PR': 0.586292, 'CLL': -0.629827, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 231.323, 'Inference time': 2.125, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.638216, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.901, 'Inference time': 1.391}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 8.768 seconds
Total inference time: 1.267 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.654 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20594041938124213;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17897797555565295;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12800246769009246;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697812;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.056276641057215464;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01906104896176764;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.152357693407333;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11129332679128004;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06707326593972926;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.01220988015008446;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.033354885139688484;  // std dev = 6.439, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3411384932113446;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.016204267136276422;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.12681976047552845;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09554434922942266;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05926329469376671;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.044891725088928865;  // std dev = 3.648, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.014266551095607581;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10458355747776228;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09827868725416929;  // std dev = 3.489, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08104921957867653;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.00860781908302251;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025354085835877175;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2983549991417159;  // std dev = 4.224, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.05716239491556196;  // std dev = 3.897, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.08433529542372047;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.20740410451683855;  // std dev = 1.572, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.012310320824779258;  // std dev = 3.400, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.006403387780552472;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023529401329454393;  // std dev = 6.426, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06801425947471894;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 6.455786812598234E-4;  // std dev = 7.677, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07740582678685036;  // std dev = 3.729, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.029767663821678333;  // std dev = 6.491, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16073705718362158;  // std dev = 0.101, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05411263928062848;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07980255563467614;  // std dev = 3.477, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07225948968883944;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.003591851481324904;  // std dev = 7.767, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.017628884757638043;  // std dev = 6.405, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04276930992310544;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06850230381100265;  // std dev = 3.468, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06530559847356886;  // std dev = 1.335, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 4.067210579070945E-4;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01939346471590375;  // std dev = 6.409, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03363238920203907;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19540540094534056;  // std dev = 1.559, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -8.617755187247023E-5;  // std dev = 3.380, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0017315558915608124;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.013724919218236457;  // std dev = 6.398, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */


Results
   AUC ROC   = 0.602863
   AUC PR    = 0.586531
   CLL	      = -0.629839
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 198.142 seconds
Total inference time: 1.942 seconds
AUC ROC: 0.602863


Results scoring model
   AUC ROC   = 0.63956
   AUC PR    = 0.577761
   CLL	      = -0.58887
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 3.347 seconds
Refined model CLL: -0.58887


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602863
   AUC PR    = 0.586531
   CLL	      = -0.629839
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 212.911 seconds
Total inference time: 1.942 seconds
AUC ROC: 0.602863
Total revision time: 212.911
Best scored revision CLL: -0.58887


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:19:03
{'AUC ROC': 0.602863, 'AUC PR': 0.586531, 'CLL': -0.629839, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 212.911, 'Inference time': 1.942, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 8.768, 'Inference time': 1.267}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3.58e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.16276431971489203;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.69e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.1417738295438772;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.13e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.12151203623039128;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830986;  // std dev = 2.23e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.10263294062121166;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.08558347627872422;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.07059250212797229;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1.26e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.05770167510974651;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7.60e-08, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.04681625755183582;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.037757430982495545;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3.65e-08, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else return 0.030305675081969;  // std dev = 16.594, 1,300.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=396 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.733366
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.079 seconds
Total inference time: 1.16 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.598377
   AUC PR    = 0.552609
   CLL	      = -0.582186
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.196755
   F1        = 0.328814


Total scoring time: 1.784 seconds
Parameter learned model CLL: -0.582186


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 97], 'false': [16.594, 904, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 97], 'false': [16.594, 904, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.13e-07, 0, 97], 'false': [16.594, 904, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 97], 'false': [16.594, 904, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 97], 'false': [16.594, 904, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 97], 'false': [16.594, 904, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 97], 'false': [16.594, 904, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 97], 'false': [16.594, 904, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 97], 'false': [16.594, 904, 396]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 97], 'false': [16.594, 904, 396]}]]
[{'': [1.3185329117197736e-15, 0.21182485207098833]}, {'': [2.9300731371550523e-16, 0.2118248520710023]}, {'': [1.7580438822930315e-15, 0.21182485207102292]}, {'': [5.127627990021341e-16, 0.2118248520710015]}, {'': [1.8312957107219077e-17, 0.21182485207101662]}, {'': [-4.578239276804769e-17, 0.21182485207099655]}, {'': [1.648166139649717e-16, 0.2118248520710021]}, {'': [5.9517110598462e-17, 0.21182485207100854]}, {'': [-5.493887132165723e-17, 0.21182485207100588]}, {'': [1.3734717830414308e-17, 0.2118248520710128]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 3.58e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17128966203333787;  // std dev = 15.192, 1,073.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=336 */
%   | | | else return 0.18467954734441033;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.0733388085172339;  // std dev = 3.653, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | else return 0.003603480554057789;  // std dev = 0.353, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.69e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1501350868849861;  // std dev = 15.247, 1,079.000 (wgt'ed) examples reached here.  /* #neg=740 #pos=339 */
%   | | | else return 0.1371605245173292;  // std dev = 3.013, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.40207411659007225;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.2616318086752123;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.14992453989086513;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.05113677909908371;  // std dev = 4.472, 126.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=25 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.13e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12752714071441232;  // std dev = 15.192, 1,073.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=336 */
%   | | | else return 0.1399406077041501;  // std dev = 3.281, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32791564552282043;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.2192721473492705;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.13180322688780055;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04459922333441769;  // std dev = 4.471, 126.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=25 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830986;  // std dev = 2.23e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10839411209827031;  // std dev = 15.247, 1,079.000 (wgt'ed) examples reached here.  /* #neg=740 #pos=339 */
%   | | | else return 0.09609119042555929;  // std dev = 3.015, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2569390306095517;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.1787352457468729;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.055507113107511025;  // std dev = 3.636, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | | else return -0.008140149446450525;  // std dev = 2.613, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.27602564320023903;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07398349823450487;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09202577978297262;  // std dev = 15.405, 1,098.000 (wgt'ed) examples reached here.  /* #neg=751 #pos=347 */
%   | | | else return 0.1693331786697411;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.047927302321966306;  // std dev = 3.635, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | | else return -0.00708515211932872;  // std dev = 2.613, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.224446947592706;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06138703783724557;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07562438343727275;  // std dev = 15.405, 1,098.000 (wgt'ed) examples reached here.  /* #neg=751 #pos=347 */
%   | | | else return 0.1301086001399957;  // std dev = 2.957, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.005788286822530195;  // std dev = 3.296, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | | else return 0.22163888776729526;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return -0.015497348538329523;  // std dev = 0.368, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 1.26e-07, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.059396568651222094;  // std dev = 15.182, 1,073.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=336 */
%   | | | else return 0.07198033961584192;  // std dev = 3.269, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11897454935093597;  // std dev = 2.509, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.04719021823094105;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.12643282477087123;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03462723984442343;  // std dev = 3.840, 97.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=19 */
%   | | | else return -0.013244807728205238;  // std dev = 2.240, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 7.60e-08, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04798980314939582;  // std dev = 15.182, 1,073.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=336 */
%   | | | else return 0.05809176925561946;  // std dev = 3.268, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09018655057448316;  // std dev = 2.509, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.035618515681946586;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.11312001025253073;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03635859885762997;  // std dev = 3.595, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | | | else return -0.007878701834019062;  // std dev = 2.610, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3246443530557671;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.11653781653649894;  // std dev = 1.505, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04076805510633555;  // std dev = 15.399, 1,099.000 (wgt'ed) examples reached here.  /* #neg=752 #pos=347 */
%   | | | else return 0.04166344278176639;  // std dev = 2.904, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.10226176078333853;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028087610656151632;  // std dev = 3.834, 97.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=19 */
%   | | | else return -0.016459790037962368;  // std dev = 2.240, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3.65e-08, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.03030966435658879;  // std dev = 15.172, 1,074.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=336 */
%   | | | else return 0.04682995017077316;  // std dev = 4.592, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   | | else return -3.391261150205535E-4;  // std dev = 0.396, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.013241229613076565;  // std dev = 3.127, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return -0.1206922005644151;  // std dev = 0.853, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.08490909692007088;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.662925
   AUC PR    = 0.69902
   CLL	      = -0.730368
   Precision = 0.988636 at threshold = 0.5
   Recall    = 0.158182
   F1        = 0.272727


Total learning time: 259.221 seconds
Total inference time: 2.899 seconds
AUC ROC: 0.662925


Results scoring model
   AUC ROC   = 0.645401
   AUC PR    = 0.59066
   CLL	      = -0.570957
   Precision = 0.93913 at threshold = 0.5
   Recall    = 0.219067
   F1        = 0.355263


Total scoring time: 11.001 seconds
Refined model CLL: -0.570957


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.662925
   AUC PR    = 0.69902
   CLL	      = -0.730368
   Precision = 0.988636 at threshold = 0.5
   Recall    = 0.158182
   F1        = 0.272727


Total learning time: 275.085 seconds
Total inference time: 2.899 seconds
AUC ROC: 0.662925
Total revision time: 275.085
Best scored revision CLL: -0.570957


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 13:23:43
{'AUC ROC': 0.662925, 'AUC PR': 0.69902, 'CLL': -0.730368, 'Precision': [0.988636, 0.5], 'Recall': 0.158182, 'F1': 0.272727, 'Learning time': 275.085, 'Inference time': 2.899, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.733366, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 3.079, 'Inference time': 1.16}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.08e-06, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.16859897323833256;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.14681151315214336;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.72e-07, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.1257148371643218;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 4.04e-07, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.10602678041934849;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.86e-07, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.08824249440273604;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.07261857104119036;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2.78e-07, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.059205708235602277;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.04790475717493886;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.03852475963437202;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else return 0.03083090299607268;  // std dev = 23.692, 2,622.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=814 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.728371
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.483 seconds
Total inference time: 1.12 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.587221
   AUC PR    = 0.53484
   CLL	      = -0.590506
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174442
   F1        = 0.297064


Total scoring time: 1.892 seconds
Parameter learned model CLL: -0.590506


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 172], 'false': [23.692, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 172], 'false': [23.692, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.72e-07, 0, 172], 'false': [23.692, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.04e-07, 0, 172], 'false': [23.692, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 172], 'false': [23.692, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 172], 'false': [23.692, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.78e-07, 0, 172], 'false': [23.692, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 172], 'false': [23.692, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 172], 'false': [23.692, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.66e-08, 0, 172], 'false': [23.692, 1, 814]}]]
[{'': [6.774942364224211e-15, 0.21407081195845223]}, {'': [-3.0569861887353147e-15, 0.21407081195840588]}, {'': [1.900288711916547e-15, 0.21407081195843958]}, {'': [9.501443559582734e-16, 0.21407081195841993]}, {'': [8.675231076140758e-16, 0.21407081195844213]}, {'': [-2.7884671316166723e-16, 0.21407081195841066]}, {'': [4.49253037871575e-16, 0.21407081195842362]}, {'': [-3.304849933767908e-16, 0.21407081195842453]}, {'': [-2.5302757305410545e-16, 0.21407081195843936]}, {'': [5.4220194225879736e-17, 0.21407081195842267]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.08e-06, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18811681027160457;  // std dev = 21.949, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,460 #pos=719 */
%   | | | else return 0.11588089386239818;  // std dev = 4.308, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.39868947564005247;  // std dev = 3.031, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.020939632773930322;  // std dev = 4.842, 172.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=28 */
%   | | | else return -0.034324183180057574;  // std dev = 2.987, 93.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16364055358516869;  // std dev = 21.949, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,460 #pos=719 */
%   | | | else return 0.10118115733219309;  // std dev = 4.308, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.34293230716935624;  // std dev = 3.031, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.020033604113508702;  // std dev = 4.084, 123.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=20 */
%   | | | else return -0.01683270451692571;  // std dev = 2.641, 63.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02756396053247544;  // std dev = 2.983, 91.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=10 */
%   | | | else return -0.13772394529661233;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.72e-07, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13969570180109878;  // std dev = 21.949, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,460 #pos=719 */
%   | | | else return 0.08735215959260588;  // std dev = 4.308, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28292103907752514;  // std dev = 3.031, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.20848477447886868;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07598910352518914;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.013859596268096089;  // std dev = 4.759, 171.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=27 */
%   | | | else return -0.028448188192482207;  // std dev = 2.989, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 4.04e-07, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11723777900359203;  // std dev = 21.949, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,460 #pos=719 */
%   | | | else return 0.0746471479340937;  // std dev = 4.308, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23281594316075144;  // std dev = 3.102, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return 0.15506247432447814;  // std dev = 2.525, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.12747612204487374;  // std dev = 0.013, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016703539526057194;  // std dev = 4.837, 172.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=28 */
%   | | | else return -0.023160736425103006;  // std dev = 2.986, 93.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.86e-07, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09694299902338134;  // std dev = 21.949, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,460 #pos=719 */
%   | | | else return 0.06321748233886122;  // std dev = 4.308, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1837878321072108;  // std dev = 3.101, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return 0.12122720471154746;  // std dev = 2.524, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.11395894754925788;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.014607826209952386;  // std dev = 4.837, 172.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=28 */
%   | | | else return -0.02055204932822652;  // std dev = 2.986, 93.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07663477451153403;  // std dev = 21.893, 2,180.000 (wgt'ed) examples reached here.  /* #neg=1,468 #pos=712 */
%   | | | else return 0.11044042345596412;  // std dev = 4.581, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14922279604740557;  // std dev = 3.023, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.08776902567968159;  // std dev = 2.611, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.10294944816417595;  // std dev = 0.011, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07061159249387736;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.006213848764093921;  // std dev = 5.599, 250.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=37 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2.78e-07, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06199654863149676;  // std dev = 21.893, 2,180.000 (wgt'ed) examples reached here.  /* #neg=1,468 #pos=712 */
%   | | | else return 0.09078912185076841;  // std dev = 4.579, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11577762210647553;  // std dev = 3.097, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return 0.06044184464057552;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09382377849383731;  // std dev = 0.010, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.062461075720689756;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.0054570237892682906;  // std dev = 5.599, 250.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=37 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05201290975868085;  // std dev = 21.946, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,460 #pos=719 */
%   | | | else return 0.022933187622585928;  // std dev = 4.308, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0927818329768965;  // std dev = 3.021, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.0425098187703753;  // std dev = 2.608, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.08614559663949796;  // std dev = 0.009, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.012690918324267277;  // std dev = 4.833, 172.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=28 */
%   | | | else return -0.019563568920043534;  // std dev = 2.986, 93.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.039323362574652854;  // std dev = 21.892, 2,180.000 (wgt'ed) examples reached here.  /* #neg=1,468 #pos=712 */
%   | | | else return 0.06695186688426014;  // std dev = 4.573, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0727691716076465;  // std dev = 3.095, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return 0.02506323663445749;  // std dev = 2.516, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.056966835292694126;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.009548632390060355;  // std dev = 4.740, 171.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=27 */
%   | | | else return -0.018607137438109406;  // std dev = 2.987, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03321262692155234;  // std dev = 21.945, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,460 #pos=719 */
%   | | | else return 0.008439967005533813;  // std dev = 4.308, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05873118598387667;  // std dev = 3.019, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.016469442487446462;  // std dev = 2.605, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05092578945859654;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08006278189900265;  // std dev = 0.011, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.004520991753532392;  // std dev = 5.597, 250.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=37 */


Results
   AUC ROC   = 0.677202
   AUC PR    = 0.716982
   CLL	      = -0.7238
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 616.071 seconds
Total inference time: 2.601 seconds
AUC ROC: 0.677202


Results scoring model
   AUC ROC   = 0.63793
   AUC PR    = 0.570919
   CLL	      = -0.578287
   Precision = 0.967914 at threshold = 0.5
   Recall    = 0.18357
   F1        = 0.30861


Total scoring time: 16.285 seconds
Refined model CLL: -0.578287


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677202
   AUC PR    = 0.716982
   CLL	      = -0.7238
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 638.731 seconds
Total inference time: 2.601 seconds
AUC ROC: 0.677202
Total revision time: 638.731
Best scored revision CLL: -0.578287


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 13:34:27
{'AUC ROC': 0.677202, 'AUC PR': 0.716982, 'CLL': -0.7238, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 638.731, 'Inference time': 2.601, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.728371, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.483, 'Inference time': 1.12}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.08e-06, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.16623360737698742;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109576;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.1447696160205605;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.37e-07, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.12401231876756341;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831114;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.10465328081786282;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.08716778506834606;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694878;  // std dev = 3.48e-07, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.07180100990683258;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325348;  // std dev = 2.83e-07, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.05859996018784547;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452771;  // std dev = 1.03e-07, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.04746733773222067;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.038217203292472794;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801134;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else return 0.030621039178769127;  // std dev = 28.911, 3,921.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,208 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.730375
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 6.001 seconds
Total inference time: 1.143 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.591892
   AUC PR    = 0.542411
   CLL	      = -0.587084
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.183784
   F1        = 0.310502


Total scoring time: 2.158 seconds
Parameter learned model CLL: -0.587084


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 272], 'false': [28.911, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 272], 'false': [28.911, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 272], 'false': [28.911, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 272], 'false': [28.911, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 272], 'false': [28.911, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.48e-07, 0, 272], 'false': [28.911, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 272], 'false': [28.911, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 272], 'false': [28.911, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 272], 'false': [28.911, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 272], 'false': [28.911, 2, 1]}]]
[{'': [4.284154730318251e-15, 0.2131685069851839]}, {'': [-4.5976294666830014e-15, 0.2131685069851797]}, {'': [4.179663151530001e-16, 0.21316850698519582]}, {'': [-5.224578939412502e-16, 0.21316850698513046]}, {'': [-5.224578939412501e-17, 0.21316850698518422]}, {'': [4.440892098500626e-16, 0.21316850698519055]}, {'': [2.938825653419532e-16, 0.21316850698518608]}, {'': [3.918434204559376e-17, 0.2131685069851501]}, {'': [-1.8286026287943754e-16, 0.21316850698515194]}, {'': [-7.18379604169219e-17, 0.21316850698516432]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.08e-06, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5103228481429906;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.04780410751330547;  // std dev = 2.986, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else return 0.1862237232969948;  // std dev = 0.470, 3,423.000 (wgt'ed) examples reached here.  /* #neg=2,300 #pos=1,123 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.029271929751917922;  // std dev = 5.150, 187.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=32 */
%   | | | else return -0.019628842678265458;  // std dev = 3.107, 90.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.023332546381969136;  // std dev = 3.755, 135.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=16 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109576;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1618216300301265;  // std dev = 0.469, 3,504.000 (wgt'ed) examples reached here.  /* #neg=2,355 #pos=1,149 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.10063638116056621;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02064071122995073;  // std dev = 5.922, 256.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=42 */
%   | | | else return -0.022600059785127538;  // std dev = 3.759, 138.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.37e-07, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.40761683919257236;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.020323925069402393;  // std dev = 2.986, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.20160342156695513;  // std dev = 4.054, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   | | | else return 0.1370730749334998;  // std dev = 27.163, 3,354.000 (wgt'ed) examples reached here.  /* #neg=2,258 #pos=1,096 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.02449719246523057;  // std dev = 5.145, 187.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=32 */
%   | | | else return -0.019280651736771195;  // std dev = 3.106, 90.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.01770032581364236;  // std dev = 3.755, 135.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=16 */
%   | | | else return -0.1229861405762073;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831114;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11591779702826731;  // std dev = 0.469, 3,504.000 (wgt'ed) examples reached here.  /* #neg=2,355 #pos=1,149 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.021405799202705425;  // std dev = 5.144, 187.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=32 */
%   | | | else return -0.01695471340371969;  // std dev = 3.106, 90.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.015631046135860083;  // std dev = 3.755, 135.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=16 */
%   | | | else return -0.1103238621206091;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015044;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09592252315257285;  // std dev = 0.469, 3,504.000 (wgt'ed) examples reached here.  /* #neg=2,355 #pos=1,149 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.09204759873803899;  // std dev = 0.203, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.015683206525173157;  // std dev = 5.918, 256.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=42 */
%   | | | else return -0.015353085359298236;  // std dev = 3.757, 138.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694878;  // std dev = 3.48e-07, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07840813039753113;  // std dev = 0.469, 3,504.000 (wgt'ed) examples reached here.  /* #neg=2,355 #pos=1,149 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.017829097224618982;  // std dev = 5.140, 187.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=32 */
%   | | | else return -0.016423825342591805;  // std dev = 3.105, 90.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.011954476574503568;  // std dev = 3.755, 135.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=16 */
%   | | | else return -0.09857899441565428;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325348;  // std dev = 2.83e-07, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06345139884062977;  // std dev = 0.469, 3,504.000 (wgt'ed) examples reached here.  /* #neg=2,355 #pos=1,149 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.08287304444336914;  // std dev = 0.203, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012798450798004441;  // std dev = 5.916, 256.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=42 */
%   | | | else return -0.01200392651222092;  // std dev = 3.756, 138.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452771;  // std dev = 1.03e-07, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.050935672563434294;  // std dev = 0.469, 3,504.000 (wgt'ed) examples reached here.  /* #neg=2,355 #pos=1,149 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.0458157082862065;  // std dev = 1.348, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.009077722947512318;  // std dev = 5.848, 256.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=41 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.00915911577631241;  // std dev = 3.754, 135.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=16 */
%   | | | else return -0.08917929818536147;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04062858527443385;  // std dev = 0.469, 3,504.000 (wgt'ed) examples reached here.  /* #neg=2,355 #pos=1,149 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.013707802786002537;  // std dev = 5.136, 187.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=32 */
%   | | | else return -0.015394834394878536;  // std dev = 3.103, 90.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.008142554413218999;  // std dev = 3.754, 135.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=16 */
%   | | | else return -0.08219605954215022;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801134;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #pos=272 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.441061611990594;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return -0.08080747862298673;  // std dev = 3.035, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else return 0.03164131010809336;  // std dev = 0.469, 3,430.000 (wgt'ed) examples reached here.  /* #neg=2,308 #pos=1,122 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.07570503501622827;  // std dev = 0.203, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.011704664719091583;  // std dev = 5.662, 258.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=38 */
%   | | | else return -0.012041138533749713;  // std dev = 4.121, 136.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=20 */


Results
   AUC ROC   = 0.660493
   AUC PR    = 0.694003
   CLL	      = -0.72065
   Precision = 0.97619 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.258675


Total learning time: 183.478 seconds
Total inference time: 1.746 seconds
AUC ROC: 0.660493


Results scoring model
   AUC ROC   = 0.638308
   AUC PR    = 0.57401
   CLL	      = -0.576111
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.183784
   F1        = 0.310502


Total scoring time: 4.217 seconds
Refined model CLL: -0.576111


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.660493
   AUC PR    = 0.694003
   CLL	      = -0.72065
   Precision = 0.97619 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.258675


Total learning time: 195.854 seconds
Total inference time: 1.746 seconds
AUC ROC: 0.660493
Total revision time: 195.854
Best scored revision CLL: -0.576111


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 13:37:46
{'AUC ROC': 0.660493, 'AUC PR': 0.694003, 'CLL': -0.72065, 'Precision': [0.97619, 0.5], 'Recall': 0.149091, 'F1': 0.258675, 'Learning time': 195.854, 'Inference time': 1.746, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.730375, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 6.001, 'Inference time': 1.143}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.17011393414839435;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.14811902939174887;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.12680433182606454;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.10690478448923718;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.08892849586447654;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.07313948975832514;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.059590847321971854;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.86e-07, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.0481821875053909;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.0387192660738506;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else return 0.030963169629225237;  // std dev = 33.591, 5,257.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,640 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.727103
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.817 seconds
Total inference time: 1.179 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584389
   AUC PR    = 0.530273
   CLL	      = -0.592626
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168779
   F1        = 0.288812


Total scoring time: 2.26 seconds
Parameter learned model CLL: -0.592626


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 333], 'false': [33.591, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 333], 'false': [33.591, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 333], 'false': [33.591, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 333], 'false': [33.591, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 333], 'false': [33.591, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.91e-07, 0, 333], 'false': [33.591, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 333], 'false': [33.591, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 333], 'false': [33.591, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 333], 'false': [33.591, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 333], 'false': [33.591, 3, 1]}]]
[{'': [3.243318193259316e-15, 0.21464283841725793]}, {'': [-5.12102872619892e-15, 0.21464283841727438]}, {'': [-5.54778112004883e-16, 0.2146428384173768]}, {'': [-1.0028681255472886e-15, 0.21464283841724716]}, {'': [-7.254790695448471e-16, 0.21464283841736187]}, {'': [4.587588233886533e-16, 0.21464283841735374]}, {'': [1.8670417230933564e-16, 0.2146428384173188]}, {'': [2.4538262646369825e-16, 0.21464283841732198]}, {'': [-2.3204661415588857e-16, 0.21464283841733198]}, {'': [-2.2137780430964081e-16, 0.21464283841728687]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18713543704414226;  // std dev = 31.063, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,933 #pos=1,438 */
%   | | | else return 0.1093337692227354;  // std dev = 6.300, 211.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.37243464938522536;  // std dev = 4.182, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.3679528566681387;  // std dev = 3.570, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0420569810765235;  // std dev = 6.259, 261.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=48 */
%   | | | else return 0.0010060779566552149;  // std dev = 3.703, 112.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.010422493471916518;  // std dev = 4.470, 175.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1627952155090376;  // std dev = 31.063, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,933 #pos=1,438 */
%   | | | else return 0.09549658973580796;  // std dev = 6.300, 211.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=53 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3212264389894539;  // std dev = 4.182, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.31644885405037415;  // std dev = 3.570, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06583120456838747;  // std dev = 1.360, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.03294237340119685;  // std dev = 7.135, 347.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=62 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009158499900986305;  // std dev = 4.470, 175.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=23 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1389956083392701;  // std dev = 31.063, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,933 #pos=1,438 */
%   | | | else return 0.08252702683170599;  // std dev = 6.300, 211.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2662664122926841;  // std dev = 4.182, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.2622429320104232;  // std dev = 3.569, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.057963169779076895;  // std dev = 1.360, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.028793361252699778;  // std dev = 7.135, 347.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=62 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008055586601095593;  // std dev = 4.470, 175.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=23 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11667927775977541;  // std dev = 31.063, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,933 #pos=1,438 */
%   | | | else return 0.07063734609615825;  // std dev = 6.300, 211.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=53 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2138391358894117;  // std dev = 4.183, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.20960460454890353;  // std dev = 3.569, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.036933820162127186;  // std dev = 5.324, 188.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=35 */
%   | | | else return 0.0023080006754687093;  // std dev = 4.943, 185.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=29 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.007091493114435289;  // std dev = 4.470, 175.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=23 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09651259063422686;  // std dev = 31.063, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,933 #pos=1,438 */
%   | | | else return 0.05994982075838423;  // std dev = 6.300, 211.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1671464171446108;  // std dev = 4.183, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.16372666700225136;  // std dev = 3.569, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.05506309346906916;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.022633517545814132;  // std dev = 7.132, 347.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=62 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0062474165115277355;  // std dev = 4.470, 175.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=23 */
%   | | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07888486164667896;  // std dev = 31.027, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,937 #pos=1,434 */
%   | | | else return 0.04977369451884472;  // std dev = 6.472, 211.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.128778683920169;  // std dev = 4.183, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.1252352701976945;  // std dev = 3.568, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05293249816329585;  // std dev = 0.262, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.020143836362070806;  // std dev = 7.130, 346.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=62 */
%   | | | else return -0.008148630968809988;  // std dev = 4.474, 181.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0638719618525595;  // std dev = 31.062, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,933 #pos=1,438 */
%   | | | else return 0.040471957211377495;  // std dev = 6.303, 211.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09795106877114186;  // std dev = 4.183, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.09507426781862484;  // std dev = 3.568, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.028596664340883107;  // std dev = 5.318, 188.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=35 */
%   | | | else return -0.0033452400804581495;  // std dev = 4.942, 185.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=29 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004547196659324546;  // std dev = 4.470, 175.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=23 */
%   | | | else return -0.0845518850538039;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.86e-07, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05131812041148964;  // std dev = 31.026, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,937 #pos=1,434 */
%   | | | else return 0.032100500204924595;  // std dev = 6.477, 211.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07430372302808182;  // std dev = 4.184, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.07137061180754103;  // std dev = 3.567, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04972643865860861;  // std dev = 0.262, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01579042883137961;  // std dev = 7.128, 346.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=62 */
%   | | | else return -0.0064741519981309685;  // std dev = 4.473, 181.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.040932800393377045;  // std dev = 31.026, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,937 #pos=1,434 */
%   | | | else return 0.026254485244088854;  // std dev = 6.478, 211.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05602442180911426;  // std dev = 4.184, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.053588244513840394;  // std dev = 3.567, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.003386551499847914;  // std dev = 5.996, 297.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=42 */
%   | | | else return 0.07003766690838804;  // std dev = 3.476, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004042229674893026;  // std dev = 4.939, 184.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=29 */
%   | | | else return -0.07776745693418256;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #pos=333 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03249670196593738;  // std dev = 31.061, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,933 #pos=1,438 */
%   | | | else return 0.021150037628762115;  // std dev = 6.308, 211.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=53 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04234865843565368;  // std dev = 4.184, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.039907057334771213;  // std dev = 3.567, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0029686960868530875;  // std dev = 5.996, 297.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=42 */
%   | | | else return 0.05998898091553361;  // std dev = 3.476, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0034953306829106413;  // std dev = 4.939, 184.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=29 */
%   | | | else return -0.07236995201716029;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.686189
   AUC PR    = 0.724929
   CLL	      = -0.710136
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1168.272 seconds
Total inference time: 2.667 seconds
AUC ROC: 0.686189


Results scoring model
   AUC ROC   = 0.630707
   AUC PR    = 0.561871
   CLL	      = -0.58299
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168779
   F1        = 0.288812


Total scoring time: 31.909 seconds
Refined model CLL: -0.58299


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.686189
   AUC PR    = 0.724929
   CLL	      = -0.710136
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1210.258 seconds
Total inference time: 2.667 seconds
AUC ROC: 0.686189
Total revision time: 1210.258
Best scored revision CLL: -0.58299


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 13:58:01
{'AUC ROC': 0.686189, 'AUC PR': 0.724929, 'CLL': -0.710136, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1210.258, 'Inference time': 2.667, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.727103, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.817, 'Inference time': 1.179}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 9.955 seconds
Total inference time: 1.196 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 2.34 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16281165607612189;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.11705241862532781;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011891393393414506;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0862077043203286;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.004983742099648496;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13902683790466883;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.10051288053749481;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26507324162691553;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06474094755843036;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.029253790847881628;  // std dev = 8.049, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 7.884295564755445E-4;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11683219078218116;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.08298829629729206;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611719;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.20308413151775795;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.056860818271318156;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06790564572626033;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02134148247468538;  // std dev = 9.623, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09665825156236615;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068729;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16750919730103575;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566578;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05023775324994821;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.059500145706021274;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.01861804697868338;  // std dev = 9.623, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07907700488650461;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.05588637066419638;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12986669782561092;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224821;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04461257519315595;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05246450759249746;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.016208866829973675;  // std dev = 9.623, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06396870506991825;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.046047402274411314;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180404;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09166851495201678;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006956897458453217;  // std dev = 7.205, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0651648734809059;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005772296478635229;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11812167272046446;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05138426195928967;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.03655677066814328;  // std dev = 7.313, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07571056108472934;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.06819952394789884;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04089390322788968;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01865421589186224;  // std dev = 8.035, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0063362198171039025;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04096665694210108;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.029779817532989465;  // std dev = 7.313, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05728620015365759;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.05103555973533511;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0490189272733525;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.019965926579051413;  // std dev = 8.029, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.010484244710844073;  // std dev = 5.538, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4174219992529683;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.0749220619056399;  // std dev = 4.013, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03149237057680093;  // std dev = 34.950, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.04118100503317144;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.0314150495344256;  // std dev = 6.045, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.005694098904346956;  // std dev = 5.536, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005958891094837387;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10477301852064037;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.682785
   AUC PR    = 0.718587
   CLL	      = -0.712589
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 1280.101 seconds
Total inference time: 2.529 seconds
AUC ROC: 0.682785


Results scoring model
   AUC ROC   = 0.634296
   AUC PR    = 0.566302
   CLL	      = -0.583002
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 35.514 seconds
Refined model CLL: -0.583002


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682785
   AUC PR    = 0.718587
   CLL	      = -0.712589
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 1327.91 seconds
Total inference time: 2.529 seconds
AUC ROC: 0.682785
Total revision time: 1327.91
Best scored revision CLL: -0.583002


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:20:13
{'AUC ROC': 0.682785, 'AUC PR': 0.718587, 'CLL': -0.712589, 'Precision': [1.0, 0.5], 'Recall': 0.150909, 'F1': 0.262243, 'Learning time': 1327.91, 'Inference time': 2.529, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 9.955, 'Inference time': 1.196}}


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995118;  // std dev = 1.69e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.19454740253245761;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.16917754924332276;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.95e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.1442756258930519;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583101;  // std dev = 1.84e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.12088388731199694;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.0997450621643955;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.08125592192530612;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253578;  // std dev = 1.05e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.06550901514190255;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.66e-08, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.052378052673673695;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.041607446854311315;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6.14e-08, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else return 0.03288448469970436;  // std dev = 17.068, 1,305.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=439 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555019
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 3.171 seconds
Total inference time: 1.114 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.585066
   AUC PR    = 0.553397
   CLL	      = -0.607049
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170132
   F1        = 0.290792


Total scoring time: 1.508 seconds
Parameter learned model CLL: -0.607049


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 90], 'false': [17.068, 866, 439]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 90], 'false': [17.068, 866, 439]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.95e-07, 0, 90], 'false': [17.068, 866, 439]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.84e-07, 0, 90], 'false': [17.068, 866, 439]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 90], 'false': [17.068, 866, 439]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 90], 'false': [17.068, 866, 439]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-07, 0, 90], 'false': [17.068, 866, 439]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.66e-08, 0, 90], 'false': [17.068, 866, 439]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 90], 'false': [17.068, 866, 439]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.14e-08, 0, 90], 'false': [17.068, 866, 439]}]]
[{'': [3.1579677144893343e-16, 0.22323453854169675]}, {'': [8.684411214845669e-16, 0.2232345385417258]}, {'': [1.7368822429691337e-15, 0.2232345385417118]}, {'': [3.7500866609560843e-16, 0.22323453854169686]}, {'': [-3.3553406966449175e-16, 0.2232345385416972]}, {'': [-4.9343245538895844e-17, 0.22323453854172234]}, {'': [1.2335811384723962e-16, 0.2232345385417114]}, {'': [1.0362081563168128e-16, 0.22323453854170666]}, {'': [-7.894919286223336e-17, 0.2232345385417184]}, {'': [4.194175870806147e-17, 0.2232345385417141]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995118;  // std dev = 1.69e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21473132393996083;  // std dev = 0.479, 1,147.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=409 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03709630352056501;  // std dev = 3.736, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
%   | | | else return 0.00100607795665518;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4013779687193994;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.0700506027091718;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return 0.1884399633285555;  // std dev = 0.480, 1,113.000 (wgt'ed) examples reached here.  /* #neg=714 #pos=399 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.4136573287083126;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.02176788419240575;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03252032323666512;  // std dev = 3.736, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
%   | | | else return 8.835646163369304E-4;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.95e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15848409466419455;  // std dev = 0.478, 1,147.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=409 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3366053739648666;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.01904987294481035;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.02840881974637272;  // std dev = 3.736, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
%   | | | else return 7.758973011973736E-4;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583101;  // std dev = 1.84e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3074529747229335;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.0828980193627987;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return 0.13376630568676867;  // std dev = 0.480, 1,113.000 (wgt'ed) examples reached here.  /* #neg=714 #pos=399 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.26297558544868993;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.01663677639228948;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.007497540082598766;  // std dev = 3.438, 90.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | | else return 0.03164606020938673;  // std dev = 2.852, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10809651139297115;  // std dev = 0.478, 1,147.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=409 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27970851100458494;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05707867542358054;  // std dev = 1.379, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.022045571624194685;  // std dev = 3.735, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
%   | | | else return -4.1843012873772026E-4;  // std dev = 2.450, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08738842518765089;  // std dev = 0.478, 1,147.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=409 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.057692734935755705;  // std dev = 3.515, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | | else return -0.025551436934502517;  // std dev = 1.894, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.18570157246337818;  // std dev = 0.273, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.016323302479691194;  // std dev = 2.518, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253578;  // std dev = 1.05e-07, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06987292951935792;  // std dev = 0.478, 1,147.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=409 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1776861868333648;  // std dev = 1.317, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.014765021511833981;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.014276855768195481;  // std dev = 3.734, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
%   | | | else return 4.8014976934183343E-4;  // std dev = 2.442, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.66e-08, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05538927316733297;  // std dev = 0.478, 1,147.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=409 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03663797853800301;  // std dev = 3.838, 96.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=21 */
%   | | | else return -0.08102894466432352;  // std dev = 1.025, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.16716026384721425;  // std dev = 0.291, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.012280292636794699;  // std dev = 2.518, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04361776916914726;  // std dev = 0.478, 1,147.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=409 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21026383995294318;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.014085190211057624;  // std dev = 1.288, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0027428287296182375;  // std dev = 3.431, 90.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | | else return 0.01131773778237718;  // std dev = 2.846, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6.14e-08, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.47123999845543785;  // std dev = 8.980, 492.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=388 */
%   | | | else return -0.2953749612102131;  // std dev = 3.184, 652.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=9 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.1857480636280366;  // std dev = 1.863, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.05267274334772667;  // std dev = 3.323, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.3437091867093336;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.1618940992678713;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.02359312808756579;  // std dev = 2.948, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */


Results
   AUC ROC   = 0.85552
   AUC PR    = 0.801335
   CLL	      = -0.473057
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 267.72 seconds
Total inference time: 1.855 seconds
AUC ROC: 0.85552


Results scoring model
   AUC ROC   = 0.905587
   AUC PR    = 0.863678
   CLL	      = -0.487506
   Precision = 0.980952 at threshold = 0.5
   Recall    = 0.194707
   F1        = 0.324921


Total scoring time: 5.122 seconds
Refined model CLL: -0.487506


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.85552
   AUC PR    = 0.801335
   CLL	      = -0.473057
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 277.521 seconds
Total inference time: 1.855 seconds
AUC ROC: 0.85552
Total revision time: 277.521
Best scored revision CLL: -0.487506


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 14:24:55
{'AUC ROC': 0.85552, 'AUC PR': 0.801335, 'CLL': -0.473057, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 277.521, 'Inference time': 1.855, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555019, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 3.171, 'Inference time': 1.114}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.02e-06, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.1987121010051389;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.17276147572494774;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.14723477750991928;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.34e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.12323272879903593;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.1015429969471099;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.08258733621489618;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.67e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.06646502085504362;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.0530440148957288;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.04205658686691724;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.03317597420404923;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555511
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.88 seconds
Total inference time: 1.087 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.577432
   AUC PR    = 0.541273
   CLL	      = -0.612651
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154863
   F1        = 0.268193


Total scoring time: 2.102 seconds
Parameter learned model CLL: -0.612651


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.02e-06, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.53e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 164], 'false': [24.294, 1, 895]}]]
[{'': [6.325563379327721e-15, 0.22457989593398991]}, {'': [-2.859501253668696e-15, 0.22457989593394026]}, {'': [1.863008392541726e-15, 0.22457989593397182]}, {'': [1.1481330791245522e-15, 0.2245798959339989]}, {'': [8.015268665586496e-16, 0.22457989593398317]}, {'': [-2.4912321528174247e-16, 0.22457989593396438]}, {'': [4.3325776570737815e-16, 0.22457989593394406]}, {'': [-3.195276022091914e-16, 0.22457989593396144]}, {'': [-2.4641535424607135e-16, 0.22457989593395444]}, {'': [5.415722071342227e-17, 0.22457989593398034]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.02e-06, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21777770540113142;  // std dev = 22.278, 2,155.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=775 */
%   | | | else return 0.1914822684328446;  // std dev = 5.099, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.443514788758048;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.014398935099512298;  // std dev = 2.054, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return -0.0020205564259121044;  // std dev = 5.328, 236.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=33 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1891477891709147;  // std dev = 22.278, 2,155.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=775 */
%   | | | else return 0.16653882456488237;  // std dev = 5.099, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3805537122526917;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.28858739689073243;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.3087411357856348;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.03683251744007497;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.012637106985919865;  // std dev = 2.054, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return -0.0017747733721894892;  // std dev = 5.328, 236.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=33 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16071138715400296;  // std dev = 22.278, 2,155.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=775 */
%   | | | else return 0.1420942428155646;  // std dev = 5.099, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.48583043044983915;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.27392810736170614;  // std dev = 3.784, 58.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2564123687585864;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.03254015317273094;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0017563539046506948;  // std dev = 4.532, 167.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=24 */
%   | | | else return -0.0030381154025492995;  // std dev = 3.474, 101.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.34e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386067789239744;  // std dev = 22.278, 2,155.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=775 */
%   | | | else return 0.1191489049074635;  // std dev = 5.099, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.25044875922509213;  // std dev = 3.152, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.18562624362584618;  // std dev = 2.279, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20613740734453964;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.028843434243526523;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.01098787836304806;  // std dev = 2.054, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return -0.0015408106099628334;  // std dev = 5.328, 236.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=33 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10960817318225598;  // std dev = 22.278, 2,155.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=775 */
%   | | | else return 0.09841340278401954;  // std dev = 5.099, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1926150785667246;  // std dev = 3.152, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.14595174404358072;  // std dev = 2.278, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1299164520681568;  // std dev = 2.114, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.16258036532656311;  // std dev = 0.184, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -8.990398344243762E-4;  // std dev = 4.690, 178.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=27 */
%   | | | else return 0.016386501405523245;  // std dev = 3.270, 80.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08851032753279828;  // std dev = 22.308, 2,163.000 (wgt'ed) examples reached here.  /* #neg=1,386 #pos=777 */
%   | | | else return 0.07942241258356121;  // std dev = 4.964, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.28105767573304896;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.124633904203608;  // std dev = 3.775, 58.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2979575879766299;  // std dev = 1.054, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.024841025768091596;  // std dev = 1.890, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0050502760354530695;  // std dev = 2.025, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return -0.0019333624374029766;  // std dev = 5.327, 236.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=33 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.67e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07068655165453194;  // std dev = 22.308, 2,163.000 (wgt'ed) examples reached here.  /* #neg=1,386 #pos=777 */
%   | | | else return 0.0638584156106748;  // std dev = 4.965, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08667380583988678;  // std dev = 2.863, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.11920252202251871;  // std dev = 2.624, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.018897004412169304;  // std dev = 4.195, 128.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=22 */
%   | | | else return -0.00414632532574072;  // std dev = 2.629, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002729182903771045;  // std dev = 3.582, 104.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=15 */
%   | | | else return -0.13803143280464777;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05598510221446841;  // std dev = 22.277, 2,155.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=775 */
%   | | | else return 0.05086007193235603;  // std dev = 5.103, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.18789938465117867;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06908750568551279;  // std dev = 3.774, 58.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.24825765313936277;  // std dev = 1.030, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.020532481874889312;  // std dev = 1.891, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.001134344261142828;  // std dev = 4.710, 182.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=26 */
%   | | | else return -0.0031317405107957356;  // std dev = 3.203, 86.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.34235454631501516;  // std dev = 2.428, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return -0.07075625318233869;  // std dev = 2.931, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.043003198106280636;  // std dev = 22.473, 2,199.000 (wgt'ed) examples reached here.  /* #neg=1,413 #pos=786 */
%   | | | else return 0.046090324293290866;  // std dev = 3.847, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1335965574288284;  // std dev = 1.924, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.0022337223690704192;  // std dev = 4.518, 168.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=24 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14633655277981478;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.0038454177213466897;  // std dev = 3.570, 103.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=15 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03434579916295647;  // std dev = 22.282, 2,163.000 (wgt'ed) examples reached here.  /* #neg=1,386 #pos=777 */
%   | | | else return 0.03151219299789372;  // std dev = 4.963, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03244846700667219;  // std dev = 2.852, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.060776813910942445;  // std dev = 2.623, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10429089868576878;  // std dev = 2.051, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.14180491815978;  // std dev = 0.211, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005446438411246194;  // std dev = 4.677, 178.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=27 */
%   | | | else return 0.011529613909363884;  // std dev = 3.241, 80.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */


Results
   AUC ROC   = 0.680284
   AUC PR    = 0.624035
   CLL	      = -0.542681
   Precision = 0.970874 at threshold = 0.5
   Recall    = 0.271739
   F1        = 0.424628


Total learning time: 501.366 seconds
Total inference time: 3.024 seconds
AUC ROC: 0.680284


Results scoring model
   AUC ROC   = 0.639249
   AUC PR    = 0.587801
   CLL	      = -0.597476
   Precision = 0.918269 at threshold = 0.5
   Recall    = 0.180359
   F1        = 0.3015


Total scoring time: 14.809 seconds
Refined model CLL: -0.597476


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.680284
   AUC PR    = 0.624035
   CLL	      = -0.542681
   Precision = 0.970874 at threshold = 0.5
   Recall    = 0.271739
   F1        = 0.424628


Total learning time: 523.1569999999999 seconds
Total inference time: 3.024 seconds
AUC ROC: 0.680284
Total revision time: 523.1569999999999
Best scored revision CLL: -0.597476


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 14:33:43
{'AUC ROC': 0.680284, 'AUC PR': 0.624035, 'CLL': -0.542681, 'Precision': [0.970874, 0.5], 'Recall': 0.271739, 'F1': 0.424628, 'Learning time': 523.1569999999999, 'Inference time': 3.024, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555511, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.88, 'Inference time': 1.087}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.19975440483868165;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.17365817738523195;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.14797450871888657;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.12381904009235062;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.73e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.10199091678893075;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.01e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.0829182493171927;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.06670198576660145;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.0532085823241524;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.042167186362325616;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.42e-08, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.03324745125688461;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555644
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 6.322 seconds
Total inference time: 1.207 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575519
   AUC PR    = 0.538189
   CLL	      = -0.614047
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151038
   F1        = 0.262438


Total scoring time: 2.124 seconds
Parameter learned model CLL: -0.614047


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.06e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.15e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 240], 'false': [29.802, 2, 1]}]]
[{'': [4.736951571734001e-15, 0.22491117278344738]}, {'': [-4.263256414560601e-15, 0.2249111727834422]}, {'': [1.0658141036401502e-15, 0.2249111727834472]}, {'': [-1.7763568394002506e-16, 0.22491117278343734]}, {'': [3.108624468950438e-16, 0.22491117278341546]}, {'': [3.774758283725532e-16, 0.22491117278342052]}, {'': [3.552713678800501e-16, 0.22491117278348094]}, {'': [5.551115123125783e-17, 0.22491117278342548]}, {'': [-1.7023419710919068e-16, 0.2249111727834187]}, {'': [3.700743415417188e-17, 0.22491117278346087]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21608938174963127;  // std dev = 27.220, 3,224.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,154 */
%   | | | else return 0.18552988748046584;  // std dev = 6.082, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.43507201202258816;  // std dev = 3.563, 52.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=30 */
%   | | | else return 0.4478925248431012;  // std dev = 3.072, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.04696012391070113;  // std dev = 6.618, 286.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=54 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.033331416851336726;  // std dev = 4.449, 137.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18769809073809243;  // std dev = 27.220, 3,224.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,154 */
%   | | | else return 0.1614120305232396;  // std dev = 6.082, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.796142358295412;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3537774940047195;  // std dev = 4.605, 86.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.23906125368341288;  // std dev = 2.706, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.08424188683325123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.032669242119057994;  // std dev = 6.459, 281.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=51 */
%   | | | else return 0.022047324164173987;  // std dev = 4.371, 138.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15952263258795382;  // std dev = 27.220, 3,224.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,154 */
%   | | | else return 0.13784958204181286;  // std dev = 6.082, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6378900213061716;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2902734380827968;  // std dev = 4.605, 86.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20631322588348738;  // std dev = 2.705, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.07400767389888134;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.028483548089602826;  // std dev = 6.459, 281.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=51 */
%   | | | else return 0.019299122304358082;  // std dev = 4.371, 138.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=23 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13292776371476922;  // std dev = 27.220, 3,224.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,154 */
%   | | | else return 0.11576437357100917;  // std dev = 6.082, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32696530959647163;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23972319691117272;  // std dev = 4.570, 87.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10305390231435327;  // std dev = 2.522, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.029791234101061225;  // std dev = 6.579, 286.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=54 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021741913558150337;  // std dev = 4.450, 137.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=24 */
%   | | | else return -0.12795493909001301;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.73e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10890479843037335;  // std dev = 27.220, 3,224.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,154 */
%   | | | else return 0.09580683429380665;  // std dev = 6.082, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17876618968014993;  // std dev = 3.488, 52.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=30 */
%   | | | else return 0.1991991816586656;  // std dev = 3.050, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16809064488608735;  // std dev = 2.698, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.06841726597386837;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.019642372005537825;  // std dev = 6.457, 281.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=51 */
%   | | | else return 0.015130453339600768;  // std dev = 4.366, 138.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.01e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08803895193268789;  // std dev = 27.234, 3,230.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,155 */
%   | | | else return 0.07692248587499671;  // std dev = 6.019, 162.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=54 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.20494415596143187;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13947166485405277;  // std dev = 4.569, 87.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13799902623467172;  // std dev = 2.697, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.060833724825161514;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.016960976423620603;  // std dev = 6.457, 281.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=51 */
%   | | | else return 0.013176148237250747;  // std dev = 4.366, 138.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07035833485224786;  // std dev = 27.234, 3,230.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,155 */
%   | | | else return 0.06199164553061272;  // std dev = 6.019, 162.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=54 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3332280890905511;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09423921689087775;  // std dev = 4.605, 86.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1113139965726867;  // std dev = 2.696, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.054410526168359216;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014617028190412922;  // std dev = 6.457, 281.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=51 */
%   | | | else return 0.011457515439878904;  // std dev = 4.366, 138.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.29250229087072194;  // std dev = 3.365, 48.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
%   | | | else return -0.0340874808691672;  // std dev = 3.304, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05396436877284107;  // std dev = 27.436, 3,288.000 (wgt'ed) examples reached here.  /* #neg=2,121 #pos=1,167 */
%   | | | else return 0.07074377431060466;  // std dev = 4.605, 86.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03349376744075349;  // std dev = 5.984, 224.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=47 */
%   | | | else return -0.009969650523592133;  // std dev = 3.630, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010799540918300302;  // std dev = 4.459, 137.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=24 */
%   | | | else return -0.11658380854348271;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04378362354205885;  // std dev = 27.211, 3,230.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,155 */
%   | | | else return 0.03880857898561115;  // std dev = 6.018, 162.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=54 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05667348696794423;  // std dev = 3.481, 52.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=30 */
%   | | | else return 0.07466553819870178;  // std dev = 3.049, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08389280433995144;  // std dev = 2.689, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.05099378152863062;  // std dev = 0.967, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010225828042491957;  // std dev = 6.217, 266.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=47 */
%   | | | else return 0.008659698790019248;  // std dev = 4.696, 153.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.42e-08, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.034282312213167944;  // std dev = 27.211, 3,230.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,155 */
%   | | | else return 0.03068627117757246;  // std dev = 6.018, 162.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=54 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24778410811470097;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0369247457202899;  // std dev = 4.605, 86.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07358887528541978;  // std dev = 2.472, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.008438905193755715;  // std dev = 6.537, 286.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=54 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00731139962673934;  // std dev = 4.462, 137.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=24 */
%   | | | else return -0.1055315283512791;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.679772
   AUC PR    = 0.623734
   CLL	      = -0.544722
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 781.907 seconds
Total inference time: 2.911 seconds
AUC ROC: 0.679772


Results scoring model
   AUC ROC   = 0.630898
   AUC PR    = 0.581533
   CLL	      = -0.601848
   Precision = 0.885196 at threshold = 0.5
   Recall    = 0.184393
   F1        = 0.305208


Total scoring time: 20.732 seconds
Refined model CLL: -0.601848


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.679772
   AUC PR    = 0.623734
   CLL	      = -0.544722
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 811.085 seconds
Total inference time: 2.911 seconds
AUC ROC: 0.679772
Total revision time: 811.085
Best scored revision CLL: -0.601848


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 14:47:19
{'AUC ROC': 0.679772, 'AUC PR': 0.623734, 'CLL': -0.544722, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 811.085, 'Inference time': 2.911, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555644, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 6.322, 'Inference time': 1.207}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.19977445731750942;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.1736754276919306;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.147988736748395;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.12383031388571014;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.10199952611742244;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.82e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.08292460664195142;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.53e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.06670653570723242;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.67e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.05321174021218418;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.042169307157766595;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else return 0.03324882070091204;  // std dev = 34.415, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,799 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555647
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 7.815 seconds
Total inference time: 1.102 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575507
   AUC PR    = 0.538182
   CLL	      = -0.614063
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151015
   F1        = 0.262403


Total scoring time: 2.623 seconds
Parameter learned model CLL: -0.614063


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 320], 'false': [34.415, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [34.415, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [34.415, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [34.415, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [34.415, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.82e-07, 0, 320], 'false': [34.415, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 320], 'false': [34.415, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 320], 'false': [34.415, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [34.415, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 320], 'false': [34.415, 3, 1]}]]
[{'': [3.4638958368304883e-15, 0.2249175247872224]}, {'': [-4.973799150320701e-15, 0.22491752478730603]}, {'': [-3.552713678800501e-16, 0.22491752478731641]}, {'': [-9.103828801926283e-16, 0.224917524787236]}, {'': [-5.10702591327572e-16, 0.22491752478728932]}, {'': [4.551914400963141e-16, 0.22491752478730803]}, {'': [1.9984014443252818e-16, 0.22491752478731675]}, {'': [2.220446049250313e-16, 0.22491752478727828]}, {'': [-2.248201624865942e-16, 0.22491752478730206]}, {'': [-1.942890293094024e-16, 0.2249175247872678]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2168445872734202;  // std dev = 31.538, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,551 */
%   | | | else return 0.1553187464202684;  // std dev = 6.654, 212.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.41220298915356635;  // std dev = 4.276, 74.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=41 */
%   | | | else return 0.45814893509951127;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16584124279182005;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.08921948595311938;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03971318090956858;  // std dev = 7.294, 358.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=65 */
%   | | | else return 0.04762261931003758;  // std dev = 5.402, 190.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18834658943931765;  // std dev = 31.538, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,551 */
%   | | | else return 0.13534072163816444;  // std dev = 6.654, 212.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6563194395778532;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.35267740559468885;  // std dev = 5.373, 117.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.057640416415335745;  // std dev = 6.772, 282.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=58 */
%   | | | else return 0.024152154819588177;  // std dev = 4.365, 134.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=23 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.038070217058702456;  // std dev = 5.185, 178.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=33 */
%   | | | else return -0.14501190785839332;  // std dev = 0.021, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16011616065967585;  // std dev = 31.488, 4,313.000 (wgt'ed) examples reached here.  /* #neg=2,767 #pos=1,546 */
%   | | | else return 0.11710696356856409;  // std dev = 6.889, 223.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=68 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5308212526217261;  // std dev = 0.924, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2897008623133369;  // std dev = 5.372, 117.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10471131742798087;  // std dev = 2.851, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.033476567517260115;  // std dev = 7.527, 373.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=70 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03322396346629113;  // std dev = 5.185, 178.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=33 */
%   | | | else return -0.1279461063287023;  // std dev = 0.019, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1334820627047917;  // std dev = 31.536, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,551 */
%   | | | else return 0.09566115566610005;  // std dev = 6.661, 212.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4652011483597585;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.22795814641428355;  // std dev = 5.369, 118.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=66 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13238781946572334;  // std dev = 2.874, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.08581929375947292;  // std dev = 0.971, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02476328236342612;  // std dev = 7.292, 358.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=65 */
%   | | | else return 0.03218904791945412;  // std dev = 5.387, 190.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10941503506142314;  // std dev = 31.485, 4,313.000 (wgt'ed) examples reached here.  /* #neg=2,767 #pos=1,546 */
%   | | | else return 0.07985332567537003;  // std dev = 6.898, 223.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=68 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3540569974994943;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.17582623339309528;  // std dev = 5.369, 118.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=66 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11242006820745343;  // std dev = 2.874, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.07590838423654629;  // std dev = 0.971, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02146153298763553;  // std dev = 7.292, 358.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=65 */
%   | | | else return 0.02787848592397836;  // std dev = 5.387, 190.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.82e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08841815639820721;  // std dev = 31.534, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,551 */
%   | | | else return 0.06404041189209005;  // std dev = 6.667, 212.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1221606802576878;  // std dev = 4.223, 74.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=41 */
%   | | | else return 0.16664881421548172;  // std dev = 3.434, 50.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08370170258626332;  // std dev = 2.830, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.020302756096538636;  // std dev = 7.511, 373.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=70 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02155750696807231;  // std dev = 5.189, 178.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=33 */
%   | | | else return -0.11727546187869477;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.53e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07070064764099147;  // std dev = 31.483, 4,313.000 (wgt'ed) examples reached here.  /* #neg=2,767 #pos=1,546 */
%   | | | else return 0.051937592258270486;  // std dev = 6.905, 223.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=68 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2347625573357753;  // std dev = 0.871, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.09911412802242048;  // std dev = 5.366, 118.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01615958579005129;  // std dev = 7.373, 360.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=68 */
%   | | | else return 0.06728463992883275;  // std dev = 3.168, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.01858554856807516;  // std dev = 5.189, 178.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=33 */
%   | | | else return -0.10568525786057799;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.67e-07, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.055992928934021066;  // std dev = 31.533, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,551 */
%   | | | else return 0.04137953882905776;  // std dev = 6.672, 212.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2153244615844778;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07151255670496581;  // std dev = 5.355, 117.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=65 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08679816434074522;  // std dev = 2.870, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.07033672033250413;  // std dev = 0.972, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011371395891183701;  // std dev = 7.286, 358.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=65 */
%   | | | else return 0.019969252317628867;  // std dev = 5.381, 190.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.044107577371964905;  // std dev = 31.482, 4,313.000 (wgt'ed) examples reached here.  /* #neg=2,767 #pos=1,546 */
%   | | | else return 0.03275574533883126;  // std dev = 6.910, 223.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=68 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.16813996194747777;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.05368944218963704;  // std dev = 5.355, 117.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06690126800157209;  // std dev = 2.820, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.011145011050576952;  // std dev = 7.503, 373.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=70 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.013889305594127087;  // std dev = 5.191, 178.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=33 */
%   | | | else return -0.0968709464216544;  // std dev = 0.045, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #pos=320 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034525294202066764;  // std dev = 31.481, 4,313.000 (wgt'ed) examples reached here.  /* #neg=2,767 #pos=1,546 */
%   | | | else return 0.026230339039996796;  // std dev = 6.910, 223.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=68 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1337458035688685;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04030857109637286;  // std dev = 5.355, 117.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.025720982632414156;  // std dev = 6.737, 282.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=58 */
%   | | | else return -0.009500719624336386;  // std dev = 4.339, 134.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=23 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011909671799982834;  // std dev = 5.191, 178.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=33 */
%   | | | else return -0.08873493698581153;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.678449
   AUC PR    = 0.622803
   CLL	      = -0.54533
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1087.084 seconds
Total inference time: 2.527 seconds
AUC ROC: 0.678449


Results scoring model
   AUC ROC   = 0.624542
   AUC PR    = 0.573143
   CLL	      = -0.603429
   Precision = 0.880631 at threshold = 0.5
   Recall    = 0.184521
   F1        = 0.305111


Total scoring time: 34.29 seconds
Refined model CLL: -0.603429


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678449
   AUC PR    = 0.622803
   CLL	      = -0.54533
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1131.8120000000001 seconds
Total inference time: 2.527 seconds
AUC ROC: 0.678449
Total revision time: 1131.8120000000001
Best scored revision CLL: -0.603429


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 15:06:15
{'AUC ROC': 0.678449, 'AUC PR': 0.622803, 'CLL': -0.54533, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1131.8120000000001, 'Inference time': 2.527, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555647, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 7.815, 'Inference time': 1.102}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 10.164 seconds
Total inference time: 1.153 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 2.64 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.46529179224236833;  // std dev = 3.655, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027523;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.13188754443331552;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6533371991725403;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3683302541817919;  // std dev = 5.913, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03813944049451664;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1605192001234705;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.11289879459957756;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5690321806218253;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2997704957850342;  // std dev = 5.903, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12414864300004128;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03325401102763176;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03122601228946699;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359515;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.09262066068403074;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23078325779777834;  // std dev = 4.758, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2713799409799556;  // std dev = 3.639, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03159256885958836;  // std dev = 8.401, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07204189585811441;  // std dev = 3.624, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.026371161776164748;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10964998699963219;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.0771545166781606;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3827141854928051;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.17938262779998485;  // std dev = 5.899, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04158313890828601;  // std dev = 7.646, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.012414309672505515;  // std dev = 5.023, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07034535483845093;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.025606608078599956;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809339;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.06140774263889957;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.28798358696297377;  // std dev = 0.905, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13586899900429558;  // std dev = 5.899, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11171286923770438;  // std dev = 3.358, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07743096451667508;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.021368644478597817;  // std dev = 8.428, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.018571363376494083;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367406;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.05017947789451449;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09425192875654331;  // std dev = 4.744, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.130257788825401;  // std dev = 3.627, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09312378904986436;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.017608117913021176;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07840534424003308;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.017527274475313055;  // std dev = 5.769, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.056142016216301154;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03947145161643937;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06597199572035392;  // std dev = 4.734, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.10604677521332341;  // std dev = 3.637, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09194460481284876;  // std dev = 3.349, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07123417743938266;  // std dev = 1.369, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.020837366813680536;  // std dev = 3.494, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.013862562528552707;  // std dev = 9.637, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04415728299393128;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03185889646502913;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23703719877757276;  // std dev = 0.892, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.052200402974581166;  // std dev = 5.886, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07468184244029911;  // std dev = 3.337, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.012395877045887665;  // std dev = 8.480, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010577171630701508;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09285116138507961;  // std dev = 0.033, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034601599067735335;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.02464033529771523;  // std dev = 7.480, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.18400509905465587;  // std dev = 0.893, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.03922877477846796;  // std dev = 5.887, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02816845763133115;  // std dev = 7.630, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.009785636000108055;  // std dev = 4.978, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11204514496462378;  // std dev = 0.949, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.011714598598378855;  // std dev = 5.840, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */


Results
   AUC ROC   = 0.678329
   AUC PR    = 0.622436
   CLL	      = -0.545985
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1489.503 seconds
Total inference time: 2.404 seconds
AUC ROC: 0.678329


Results scoring model
   AUC ROC   = 0.625314
   AUC PR    = 0.573691
   CLL	      = -0.60329
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 37.119 seconds
Refined model CLL: -0.60329


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678329
   AUC PR    = 0.622436
   CLL	      = -0.545985
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1539.426 seconds
Total inference time: 2.404 seconds
AUC ROC: 0.678329
Total revision time: 1539.426
Best scored revision CLL: -0.60329


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 15:31:59
{'AUC ROC': 0.678329, 'AUC PR': 0.622436, 'CLL': -0.545985, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1539.426, 'Inference time': 2.404, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 10.164, 'Inference time': 1.153}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.1478314747820471;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.67e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.12886645714141234;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.53e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.11070675202289916;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583103;  // std dev = 1.26e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.09385751009586571;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.0786541733587452;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.06526111108048314;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253584;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.05369814236141379;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.04387975735424912;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.035654739219672965;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else return 0.02883919816990214;  // std dev = 16.102, 1,260.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=365 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.809983
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 3.059 seconds
Total inference time: 1.187 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.593541
   AUC PR    = 0.529307
   CLL	      = -0.573456
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.187082
   F1        = 0.315197


Total scoring time: 1.762 seconds
Parameter learned model CLL: -0.573456


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.102, 895, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 84], 'false': [16.102, 895, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.53e-07, 0, 84], 'false': [16.102, 895, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 84], 'false': [16.102, 895, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.102, 895, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.102, 895, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.102, 895, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 84], 'false': [16.102, 895, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 84], 'false': [16.102, 895, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 84], 'false': [16.102, 895, 365]}]]
[{'': [-4.2294210461910723e-16, 0.20576656588559486]}, {'': [8.458842092382145e-16, 0.2057665658856247]}, {'': [1.4802973661668755e-15, 0.20576656588561834]}, {'': [1.9032394707859825e-16, 0.20576656588561193]}, {'': [-3.383536836952858e-16, 0.20576656588561512]}, {'': [-5.2867763077388404e-17, 0.20576656588562312]}, {'': [-1.2688263138573217e-16, 0.20576656588560682]}, {'': [2.114710523095536e-17, 0.2057665658856149]}, {'': [-5.551115123125783e-17, 0.20576656588560582]}, {'': [3.9650822308041306e-17, 0.20576656588562112]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.00814893509951222;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else return 0.1701106575875458;  // std dev = 0.463, 1,045.000 (wgt'ed) examples reached here.  /* #neg=719 #pos=326 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.023286549778411467;  // std dev = 3.877, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.006257844561504622;  // std dev = 2.630, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.67e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14625412298793056;  // std dev = 0.462, 1,078.000 (wgt'ed) examples reached here.  /* #neg=744 #pos=334 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.14100485471134952;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.026310186705551287;  // std dev = 3.943, 109.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1410910075619421;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0043635378926032845;  // std dev = 2.615, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.53e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12524893188361327;  // std dev = 0.462, 1,078.000 (wgt'ed) examples reached here.  /* #neg=744 #pos=334 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2198809134592083;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09098039854839658;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.05631236732468648;  // std dev = 1.758, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.002008116004746141;  // std dev = 4.330, 149.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583103;  // std dev = 1.26e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10565026642140678;  // std dev = 0.462, 1,078.000 (wgt'ed) examples reached here.  /* #neg=744 #pos=334 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18510365612662136;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.07843276917199182;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04883799708047415;  // std dev = 1.758, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.0017580852445927837;  // std dev = 4.330, 149.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08794762654108865;  // std dev = 0.462, 1,078.000 (wgt'ed) examples reached here.  /* #neg=744 #pos=334 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0146070874381633;  // std dev = 3.455, 86.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=15 */
%   | | | else return 0.052033196496776776;  // std dev = 2.512, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else return -0.006127380940799757;  // std dev = 0.342, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07239426267827216;  // std dev = 0.462, 1,078.000 (wgt'ed) examples reached here.  /* #neg=744 #pos=334 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.10046339248278853;  // std dev = 1.689, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.012283417221540176;  // std dev = 3.914, 109.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=19 */
%   | | else return -0.00538371729567198;  // std dev = 0.342, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253584;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05903968723948419;  // std dev = 0.462, 1,078.000 (wgt'ed) examples reached here.  /* #neg=744 #pos=334 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.14576009329621242;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06294141738655967;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.02527795361262826;  // std dev = 1.744, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -8.316497125548106E-4;  // std dev = 4.330, 149.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.11256570787014183;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.022904539747025214;  // std dev = 1.964, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.04870624570448423;  // std dev = 0.463, 1,049.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=326 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11715075152903247;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.05318103474982935;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.021451110419150446;  // std dev = 1.744, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -7.265621824411888E-4;  // std dev = 4.330, 149.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.09020278899655906;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.018511907335010794;  // std dev = 1.964, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.039179491354445914;  // std dev = 0.463, 1,049.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=326 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.09279668147740065;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.04463838580136038;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004968289581269235;  // std dev = 3.857, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.00493482432015878;  // std dev = 2.630, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.028025552686344372;  // std dev = 14.525, 993.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=305 */
%   | | | else return 0.02020298611908123;  // std dev = 3.550, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.13442517458455114;  // std dev = 1.683, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.03840728284706908;  // std dev = 4.202, 117.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.005013962095040518;  // std dev = 3.016, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return 0.08317857886109437;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.23989864122384794;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.582611
   AUC PR    = 0.715822
   CLL	      = -0.796966
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 95.447 seconds
Total inference time: 2.148 seconds
AUC ROC: 0.582611


Results scoring model
   AUC ROC   = 0.648633
   AUC PR    = 0.566244
   CLL	      = -0.564788
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.187082
   F1        = 0.315197


Total scoring time: 3.297 seconds
Refined model CLL: -0.564788


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.582611
   AUC PR    = 0.715822
   CLL	      = -0.796966
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 103.565 seconds
Total inference time: 2.148 seconds
AUC ROC: 0.582611
Total revision time: 103.565
Best scored revision CLL: -0.564788


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 15:33:47
{'AUC ROC': 0.582611, 'AUC PR': 0.715822, 'CLL': -0.796966, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 103.565, 'Inference time': 2.148, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.809983, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 3.059, 'Inference time': 1.187}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.05e-06, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.14771656699161356;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.12876705604360505;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.65e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.11062333335444799;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583093;  // std dev = 4.17e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.09378948347676741;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.77e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.07860015551796497;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.06521925886532715;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.73e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.0536664533195254;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.043856290372084404;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.035637747638596465;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else return 0.028827190635989052;  // std dev = 22.773, 2,521.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=730 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.810126
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.477 seconds
Total inference time: 1.157 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.593541
   AUC PR    = 0.529199
   CLL	      = -0.57337
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.187082
   F1        = 0.315197


Total scoring time: 2.185 seconds
Parameter learned model CLL: -0.57337


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 168], 'false': [22.773, 1, 730]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 168], 'false': [22.773, 1, 730]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.65e-07, 0, 168], 'false': [22.773, 1, 730]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.17e-07, 0, 168], 'false': [22.773, 1, 730]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 168], 'false': [22.773, 1, 730]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 168], 'false': [22.773, 1, 730]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 168], 'false': [22.773, 1, 730]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 168], 'false': [22.773, 1, 730]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 168], 'false': [22.773, 1, 730]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.66e-08, 0, 168], 'false': [22.773, 1, 730]}]]
[{'': [6.5133084111342514e-15, 0.20571821845252883]}, {'': [-2.960594732333751e-15, 0.20571821845253654]}, {'': [1.9032394707859826e-15, 0.20571821845248986]}, {'': [1.0362081563168128e-15, 0.20571821845249585]}, {'': [8.458842092382145e-16, 0.20571821845251287]}, {'': [-2.6433881538694203e-16, 0.20571821845249644]}, {'': [4.440892098500626e-16, 0.20571821845249771]}, {'': [-3.2249335477206927e-16, 0.20571821845249222]}, {'': [-2.484784864637255e-16, 0.20571821845250426]}, {'': [5.551115123125783e-17, 0.20571821845252053]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.05e-06, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16861463364732904;  // std dev = 20.676, 1,997.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=620 */
%   | | | else return 0.10304689428318518;  // std dev = 4.257, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.41697246451127695;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.274815601766179;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.014547039364914393;  // std dev = 5.276, 211.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=33 */
%   | | | else return -0.015866812931983724;  // std dev = 3.740, 127.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1468250302512933;  // std dev = 20.676, 1,997.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=620 */
%   | | | else return 0.09003433310697653;  // std dev = 4.257, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3583003250108236;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.23796730798362156;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.07046389357187512;  // std dev = 4.310, 110.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=24 */
%   | | | else return -0.010423367888248878;  // std dev = 3.840, 128.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.13993056212795232;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.008190285946032966;  // std dev = 3.729, 121.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.65e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12572610316362098;  // std dev = 20.676, 1,997.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=620 */
%   | | | else return 0.07788111812495907;  // std dev = 4.257, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.29471590880166004;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.20034244703153603;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.18085835459156352;  // std dev = 2.297, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.005793988707943348;  // std dev = 5.260, 214.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=33 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009456114371934202;  // std dev = 3.732, 124.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=16 */
%   | | | else return -0.13575297908979425;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583093;  // std dev = 4.17e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10626545188640713;  // std dev = 20.625, 1,989.000 (wgt'ed) examples reached here.  /* #neg=1,372 #pos=617 */
%   | | | else return 0.06541934864200376;  // std dev = 4.496, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23363128206423614;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.16445940647707033;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.055974290143617655;  // std dev = 4.290, 110.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=24 */
%   | | | else return -0.01039133035021378;  // std dev = 3.843, 128.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008332048836165526;  // std dev = 3.732, 124.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=16 */
%   | | | else return -0.12060203274354718;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.77e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08847174005676724;  // std dev = 20.625, 1,989.000 (wgt'ed) examples reached here.  /* #neg=1,372 #pos=617 */
%   | | | else return 0.05518699653739273;  // std dev = 4.497, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.04505842065106939;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1716849260662984;  // std dev = 3.667, 55.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14885744431084186;  // std dev = 2.291, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.002642845137856495;  // std dev = 5.258, 214.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=33 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11941097590537406;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.004022938152510567;  // std dev = 3.724, 121.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07283904347599492;  // std dev = 20.674, 1,997.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=620 */
%   | | | else return 0.043898091103135556;  // std dev = 4.263, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.0345196945551528;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13270212926520078;  // std dev = 3.666, 55.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.043410497539503684;  // std dev = 4.273, 110.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=24 */
%   | | | else return -0.008841752731416465;  // std dev = 3.737, 126.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007271508136788648;  // std dev = 3.838, 126.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
%   | | | else return -0.10637214784984184;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.73e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05948685232996583;  // std dev = 20.624, 1,989.000 (wgt'ed) examples reached here.  /* #neg=1,372 #pos=617 */
%   | | | else return 0.036699974749028925;  // std dev = 4.500, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1148177104909317;  // std dev = 2.878, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.06643662315761277;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17185463363686995;  // std dev = 2.070, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.03928939448019912;  // std dev = 0.951, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -7.84394346858247E-4;  // std dev = 5.246, 217.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=33 */
%   | | | else return -0.007873451305559147;  // std dev = 3.723, 121.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04813804242085687;  // std dev = 20.673, 1,997.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=620 */
%   | | | else return 0.029149149604723135;  // std dev = 4.266, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09063394210036592;  // std dev = 2.849, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.048672838780505136;  // std dev = 2.447, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11796676050672365;  // std dev = 2.276, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.0010978548640348186;  // std dev = 5.241, 214.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=33 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10560921793021866;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0024181980449527836;  // std dev = 3.725, 121.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03879752938897037;  // std dev = 20.623, 1,989.000 (wgt'ed) examples reached here.  /* #neg=1,372 #pos=617 */
%   | | | else return 0.02376734804723069;  // std dev = 4.503, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07029241268218012;  // std dev = 2.882, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.03197125613411735;  // std dev = 2.407, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14225304712141662;  // std dev = 2.060, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.034777497535524275;  // std dev = 0.951, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.01959664018821297;  // std dev = 2.240, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.006414404299737331;  // std dev = 6.020, 305.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.031036827194203045;  // std dev = 20.673, 1,997.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=620 */
%   | | | else return 0.019039113373071178;  // std dev = 4.268, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.08535584999507446;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.04791745577724841;  // std dev = 3.659, 55.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11648523480192641;  // std dev = 2.058, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.031008689801897405;  // std dev = 0.951, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.016608758435270127;  // std dev = 2.239, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.005626191445572921;  // std dev = 6.020, 305.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=42 */


Results
   AUC ROC   = 0.567178
   AUC PR    = 0.701403
   CLL	      = -0.791244
   Precision = 0.959016 at threshold = 0.5
   Recall    = 0.151751
   F1        = 0.262038


Total learning time: 526.019 seconds
Total inference time: 3.403 seconds
AUC ROC: 0.567178


Results scoring model
   AUC ROC   = 0.648406
   AUC PR    = 0.566649
   CLL	      = -0.561087
   Precision = 0.934673 at threshold = 0.5
   Recall    = 0.207127
   F1        = 0.339107


Total scoring time: 13.938 seconds
Refined model CLL: -0.561087


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.567178
   AUC PR    = 0.701403
   CLL	      = -0.791244
   Precision = 0.959016 at threshold = 0.5
   Recall    = 0.151751
   F1        = 0.262038


Total learning time: 546.619 seconds
Total inference time: 3.403 seconds
AUC ROC: 0.567178
Total revision time: 546.619
Best scored revision CLL: -0.561087


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 15:42:59
{'AUC ROC': 0.567178, 'AUC PR': 0.701403, 'CLL': -0.791244, 'Precision': [0.959016, 0.5], 'Recall': 0.151751, 'F1': 0.262038, 'Learning time': 546.619, 'Inference time': 3.403, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.810126, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.477, 'Inference time': 1.157}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.1494418110889531;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.1302593529682874;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.11187535747838888;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.09481004170487303;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.60e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.0794100623987406;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.07e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.06584629222503531;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.05414079821513536;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1.26e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.044207197203225086;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.035891519855448;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.88e-08, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.029006268945711913;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.807983
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 6.254 seconds
Total inference time: 1.218 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.5902
   AUC PR    = 0.523766
   CLL	      = -0.575886
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.180401
   F1        = 0.30566


Total scoring time: 2.279 seconds
Parameter learned model CLL: -0.575886


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.06e-07, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-07, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.88e-08, 0, 243], 'false': [27.972, 2, 1]}]]
[{'': [4.795432455335656e-15, 0.2064413363872692]}, {'': [-4.269104502920767e-15, 0.20644133638725962]}, {'': [1.052655904829778e-15, 0.20644133638721834]}, {'': [-2.3392353440661737e-16, 0.20644133638720372]}, {'': [2.777841971078581e-16, 0.20644133638727485]}, {'': [3.8743585386096e-16, 0.20644133638720888]}, {'': [3.50885301609926e-16, 0.20644133638728474]}, {'': [6.579099405186112e-17, 0.20644133638723228]}, {'': [-1.7178759557985962e-16, 0.20644133638726542]}, {'': [2.5585386575723773e-17, 0.20644133638722958]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.39148226843284567;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.04458961306561406;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else return 0.17183115451943154;  // std dev = 0.464, 3,172.000 (wgt'ed) examples reached here.  /* #neg=2,177 #pos=995 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1914822684328457;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.013488740924754791;  // std dev = 6.367, 309.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=48 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.016851064900487878;  // std dev = 4.387, 176.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1493239101028375;  // std dev = 0.464, 3,261.000 (wgt'ed) examples reached here.  /* #neg=2,239 #pos=1,022 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.166538824564882;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.07267949355831561;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.061790188728089564;  // std dev = 2.673, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.0036425714756467766;  // std dev = 7.188, 434.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=60 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12780632060729902;  // std dev = 0.464, 3,261.000 (wgt'ed) examples reached here.  /* #neg=2,239 #pos=1,022 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.010549765490572018;  // std dev = 5.736, 249.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=39 */
%   | | | else return 0.06230387872662025;  // std dev = 3.994, 96.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=21 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.01400659237502113;  // std dev = 4.388, 176.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=22 */
%   | | | else return -0.12504262358645274;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10771079965224498;  // std dev = 0.464, 3,261.000 (wgt'ed) examples reached here.  /* #neg=2,239 #pos=1,022 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1345457731869216;  // std dev = 2.822, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.06225857489326624;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05270741500943095;  // std dev = 2.673, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.004194709030636755;  // std dev = 7.186, 434.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=60 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.60e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.26902149063003666;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return -0.016087195920118723;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else return 0.08982495683895768;  // std dev = 0.464, 3,172.000 (wgt'ed) examples reached here.  /* #neg=2,177 #pos=995 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11224846727782592;  // std dev = 2.821, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.05542933219365742;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.009031104166918122;  // std dev = 6.358, 307.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=48 */
%   | | | else return -0.0137779653829189;  // std dev = 4.290, 171.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.07e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07353739639996347;  // std dev = 0.463, 3,261.000 (wgt'ed) examples reached here.  /* #neg=2,239 #pos=1,022 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.008631343990588226;  // std dev = 6.508, 311.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=52 */
%   | | | else return 0.0828458075080202;  // std dev = 2.477, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.14501602628566682;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.010353048067388354;  // std dev = 4.386, 179.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19732146959916425;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return -0.025524686559809488;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else return 0.06016966668324284;  // std dev = 0.464, 3,172.000 (wgt'ed) examples reached here.  /* #neg=2,177 #pos=995 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11905161659249953;  // std dev = 2.514, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return -0.08459585673542139;  // std dev = 0.959, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.03883683014255078;  // std dev = 2.926, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return -0.004696426319206658;  // std dev = 7.181, 434.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=60 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1.26e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19963432480959215;  // std dev = 2.746, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return -0.0375362519828589;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else return 0.04833109750910659;  // std dev = 0.463, 3,177.000 (wgt'ed) examples reached here.  /* #neg=2,181 #pos=996 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.08309979303029569;  // std dev = 2.817, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.05346679090809669;  // std dev = 0.967, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.0373745343438316;  // std dev = 2.650, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.004122408129596371;  // std dev = 7.181, 434.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=60 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03877499198310035;  // std dev = 0.463, 3,261.000 (wgt'ed) examples reached here.  /* #neg=2,239 #pos=1,022 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.004017305852060539;  // std dev = 6.482, 311.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=52 */
%   | | | else return 0.07153251921676619;  // std dev = 2.482, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.13745000241500976;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.008112826842580034;  // std dev = 4.386, 179.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.88e-08, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.030991943279559415;  // std dev = 0.463, 3,261.000 (wgt'ed) examples reached here.  /* #neg=2,239 #pos=1,022 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1990240547736359;  // std dev = 1.133, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.01491528031606845;  // std dev = 2.751, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.032849064911287244;  // std dev = 2.647, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.004267970751035738;  // std dev = 7.178, 434.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=60 */


Results
   AUC ROC   = 0.580507
   AUC PR    = 0.711094
   CLL	      = -0.790396
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 179.921 seconds
Total inference time: 1.594 seconds
AUC ROC: 0.580507


Results scoring model
   AUC ROC   = 0.639619
   AUC PR    = 0.555424
   CLL	      = -0.565401
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.180401
   F1        = 0.30566


Total scoring time: 3.152 seconds
Refined model CLL: -0.565401


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.580507
   AUC PR    = 0.711094
   CLL	      = -0.790396
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 191.60599999999997 seconds
Total inference time: 1.594 seconds
AUC ROC: 0.580507
Total revision time: 191.60599999999997
Best scored revision CLL: -0.565401


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 15:46:14
{'AUC ROC': 0.580507, 'AUC PR': 0.711094, 'CLL': -0.790396, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 191.60599999999997, 'Inference time': 1.594, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.807983, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 6.254, 'Inference time': 1.218}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.1487015197697389;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.12961905118985192;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.11133823660896186;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.09437233773022899;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.07906283183052;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.06557758831314339;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.0539376372427349;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.83e-07, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.044057000137207133;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.03578297938875598;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else return 0.028929743021121695;  // std dev = 32.261, 5,049.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,467 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.808901
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 7.755 seconds
Total inference time: 1.124 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.591592
   AUC PR    = 0.526016
   CLL	      = -0.574823
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.183185
   F1        = 0.309647


Total scoring time: 2.202 seconds
Parameter learned model CLL: -0.574823


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 329], 'false': [32.261, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 329], 'false': [32.261, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 329], 'false': [32.261, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 329], 'false': [32.261, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 329], 'false': [32.261, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.91e-07, 0, 329], 'false': [32.261, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 329], 'false': [32.261, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 329], 'false': [32.261, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 329], 'false': [32.261, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 329], 'false': [32.261, 3, 1]}]]
[{'': [3.282750633298943e-15, 0.20613178021162365]}, {'': [-5.0969022990694116e-15, 0.20613178021165604]}, {'': [-5.18329047362991e-16, 0.20613178021168224]}, {'': [-9.71866963805608e-16, 0.2061317802116669]}, {'': [-6.695083528438634e-16, 0.20613178021171774]}, {'': [4.643364382626794e-16, 0.20613178021166303]}, {'': [1.8897413185109048e-16, 0.20613178021168535]}, {'': [2.42966740951402e-16, 0.20613178021168474]}, {'': [-2.2676895822130855e-16, 0.20613178021167716]}, {'': [-2.1327080594623068e-16, 0.20613178021167783]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.35814893509951196;  // std dev = 3.162, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.10490218185275908;  // std dev = 3.783, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | else return 0.1696709834636608;  // std dev = 0.463, 4,218.000 (wgt'ed) examples reached here.  /* #neg=2,904 #pos=1,314 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.031401214734770796;  // std dev = 6.865, 329.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=57 */
%   | | | else return 0.006297083247660402;  // std dev = 4.128, 135.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=20 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.014267078559427037;  // std dev = 5.588, 237.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=37 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2769991604334086;  // std dev = 3.255, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.050242334369561006;  // std dev = 3.547, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.17476574936200168;  // std dev = 4.891, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
%   | | | else return 0.1479693905965223;  // std dev = 29.692, 4,109.000 (wgt'ed) examples reached here.  /* #neg=2,828 #pos=1,281 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return 0.03309064594963914;  // std dev = 5.664, 220.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=39 */
%   | | | else return 0.011223217102902002;  // std dev = 5.592, 239.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=37 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.011615296921084;  // std dev = 5.659, 242.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=38 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1268729003632225;  // std dev = 0.463, 4,335.000 (wgt'ed) examples reached here.  /* #neg=2,982 #pos=1,353 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3535850502497072;  // std dev = 1.413, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.044268905967666784;  // std dev = 2.981, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0072632380418138996;  // std dev = 7.242, 403.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=62 */
%   | | | else return 0.005709838711998732;  // std dev = 5.595, 245.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=37 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10695882856194369;  // std dev = 0.463, 4,335.000 (wgt'ed) examples reached here.  /* #neg=2,982 #pos=1,353 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3036751067839215;  // std dev = 1.413, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.03868361919179983;  // std dev = 2.981, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0063523305378778185;  // std dev = 7.242, 403.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=62 */
%   | | | else return 0.004999564600692916;  // std dev = 5.595, 245.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=37 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0889701232639114;  // std dev = 0.463, 4,335.000 (wgt'ed) examples reached here.  /* #neg=2,982 #pos=1,353 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1361376603192535;  // std dev = 3.015, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.0907104390394429;  // std dev = 0.970, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05272196531882234;  // std dev = 3.270, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return -8.611046605477273E-4;  // std dev = 8.563, 586.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=86 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0731709504748284;  // std dev = 0.463, 4,335.000 (wgt'ed) examples reached here.  /* #neg=2,982 #pos=1,353 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.09814160911836632;  // std dev = 3.051, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.00345081653652765;  // std dev = 7.344, 416.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=64 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.006606496345486201;  // std dev = 5.569, 237.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=37 */
%   | | | else return -0.11333161386885887;  // std dev = 0.024, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.024377264456884012;  // std dev = 4.690, 113.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=31 */
%   | | | else return 0.5492050212985229;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.059977985669837905;  // std dev = 0.463, 4,217.000 (wgt'ed) examples reached here.  /* #neg=2,899 #pos=1,318 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.22889126060845316;  // std dev = 1.407, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.016598682891131332;  // std dev = 2.967, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.051682635388715814;  // std dev = 3.170, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return -0.0011797293245604922;  // std dev = 8.561, 586.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=86 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.83e-07, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04818592032357706;  // std dev = 0.463, 4,335.000 (wgt'ed) examples reached here.  /* #neg=2,982 #pos=1,353 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07744733556192598;  // std dev = 3.043, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.08008957608553129;  // std dev = 1.182, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0023338133995659377;  // std dev = 7.225, 403.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=62 */
%   | | | else return 0.005008247021338209;  // std dev = 5.591, 245.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=37 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17814733087618267;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return -0.016845475971909836;  // std dev = 3.781, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | else return 0.03841356255731968;  // std dev = 0.463, 4,218.000 (wgt'ed) examples reached here.  /* #neg=2,904 #pos=1,314 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10765917564112096;  // std dev = 2.998, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.08622049829490235;  // std dev = 0.971, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0016238120556917887;  // std dev = 7.262, 412.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=63 */
%   | | | else return 0.005283703566077444;  // std dev = 5.574, 238.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=37 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #pos=329 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.030926926150252054;  // std dev = 0.463, 4,335.000 (wgt'ed) examples reached here.  /* #neg=2,982 #pos=1,353 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.06503030369247631;  // std dev = 3.037, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.06824061542171028;  // std dev = 1.188, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.0356443665796546;  // std dev = 3.152, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return -0.0015889021748488842;  // std dev = 8.561, 586.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=86 */


Results
   AUC ROC   = 0.580388
   AUC PR    = 0.711064
   CLL	      = -0.794017
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 238.239 seconds
Total inference time: 1.895 seconds
AUC ROC: 0.580388


Results scoring model
   AUC ROC   = 0.638963
   AUC PR    = 0.556528
   CLL	      = -0.565661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.183742
   F1        = 0.310442


Total scoring time: 4.235 seconds
Refined model CLL: -0.565661


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.580388
   AUC PR    = 0.711064
   CLL	      = -0.794017
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 252.431 seconds
Total inference time: 1.895 seconds
AUC ROC: 0.580388
Total revision time: 252.431
Best scored revision CLL: -0.565661


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 15:50:30
{'AUC ROC': 0.580388, 'AUC PR': 0.711064, 'CLL': -0.794017, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 252.431, 'Inference time': 1.895, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.808901, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 7.755, 'Inference time': 1.124}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 9.607 seconds
Total inference time: 1.178 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 2.571 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14911870422593296;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.11697060028902616;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5793848079313582;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.28301269830657416;  // std dev = 5.657, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05972507874716161;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004025416587008417;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006091220688644286;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12764853140692325;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117945;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.47177128074187585;  // std dev = 1.226, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23568743619292068;  // std dev = 5.655, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12665148708505042;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -8.202473232937875E-6;  // std dev = 8.034, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007686096898990583;  // std dev = 6.182, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.14036627861562068;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10767405144022597;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.0839553463664928;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.40535200959628015;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.18762580914033553;  // std dev = 5.643, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11040642993300619;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07126349373771189;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04776060847181048;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0027319639983421663;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117468;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.07049037196827351;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19293605211767756;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.10950185962134855;  // std dev = 3.699, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09505452120879378;  // std dev = 3.505, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06264206027908668;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.041276192228154804;  // std dev = 3.635, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002397051786657508;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07369162312032768;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.0574502846558328;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15910721108071932;  // std dev = 4.437, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07076559530768528;  // std dev = 3.668, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08315414576432675;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06495958953017465;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -7.168110858388802E-4;  // std dev = 7.967, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006263770270775247;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06002025943316856;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.04741904647039107;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23312035226933572;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.08416165642312767;  // std dev = 5.625, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08097620752649648;  // std dev = 3.496, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.057230978312225005;  // std dev = 1.366, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0025815796666051076;  // std dev = 7.961, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006557866451655044;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048549832200982614;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.038186054196640874;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09926747855859869;  // std dev = 4.433, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.03187036033729426;  // std dev = 3.662, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19566956269440858;  // std dev = 1.583, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00981809272497166;  // std dev = 3.392, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0022542126636898234;  // std dev = 7.961, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005761433212237305;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03899906934798499;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03115348690401457;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08315414093052399;  // std dev = 4.445, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.01284938999894609;  // std dev = 3.637, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19312343172188387;  // std dev = 1.577, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00819803662719736;  // std dev = 3.395, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0030575502524702223;  // std dev = 7.958, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006005303990192094;  // std dev = 6.112, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031204273276859776;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.02475672970229034;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06387194900975682;  // std dev = 4.446, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.008318420792838946;  // std dev = 3.635, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0633896126570691;  // std dev = 3.483, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0575506887690996;  // std dev = 1.343, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002619378210655767;  // std dev = 7.959, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.004923879303910485;  // std dev = 6.113, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */


Results
   AUC ROC   = 0.566463
   AUC PR    = 0.701226
   CLL	      = -0.791104
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1172.907 seconds
Total inference time: 3.714 seconds
AUC ROC: 0.566463


Results scoring model
   AUC ROC   = 0.638805
   AUC PR    = 0.55385
   CLL	      = -0.566895
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 35.864 seconds
Refined model CLL: -0.566895


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566463
   AUC PR    = 0.701226
   CLL	      = -0.791104
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1220.949 seconds
Total inference time: 3.714 seconds
AUC ROC: 0.566463
Total revision time: 1220.949
Best scored revision CLL: -0.566895


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 16:10:57
{'AUC ROC': 0.566463, 'AUC PR': 0.701226, 'CLL': -0.791104, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1220.949, 'Inference time': 3.714, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 9.607, 'Inference time': 1.178}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995126;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.2873028596662761;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.19e-07, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.24861450354426898;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 2.86e-07, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.20888203486456458;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.17092623088853157;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.13686111666285544;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.10776872377260349;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.08382702640999823;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.06463816481344617;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367066;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.0495381397499753;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.71e-08, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else return 0.03780395077364771;  // std dev = 15.502, 981.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=421 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.567338
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 2.599 seconds
Total inference time: 1.644 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.567762
   AUC PR    = 0.598288
   CLL	      = -0.64962
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.135524
   F1        = 0.238698


Total scoring time: 1.458 seconds
Parameter learned model CLL: -0.64962


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 66], 'false': [15.502, 560, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.19e-07, 0, 66], 'false': [15.502, 560, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 66], 'false': [15.502, 560, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 66], 'false': [15.502, 560, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 66], 'false': [15.502, 560, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 66], 'false': [15.502, 560, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 66], 'false': [15.502, 560, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 66], 'false': [15.502, 560, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 66], 'false': [15.502, 560, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.71e-08, 0, 66], 'false': [15.502, 560, 421]}]]
[{'': [-9.689219124001365e-16, 0.24498083359569622]}, {'': [2.153159805333637e-16, 0.24498083359570152]}, {'': [1.2380668880668413e-15, 0.24498083359572123]}, {'': [-1.0765799026668185e-16, 0.24498083359570075]}, {'': [-2.8260222445003984e-16, 0.2449808335957068]}, {'': [-4.0371746350005693e-17, 0.24498083359571599]}, {'': [-6.728624391667616e-17, 0.24498083359570666]}, {'': [-6.7286243916676156e-18, 0.2449808335957016]}, {'': [4.0371746350005693e-17, 0.24498083359571377]}, {'': [3.364312195833808e-17, 0.2449808335957131]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995126;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3094124730056448;  // std dev = 0.498, 831.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=375 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.47719655414713136;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.09624417319475047;  // std dev = 3.381, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0010060779566551672;  // std dev = 2.268, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.19e-07, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2674299786963516;  // std dev = 0.498, 831.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=375 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.40869536777561244;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.3411827428099923;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.08411986922925806;  // std dev = 3.381, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.36887697659770574;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.058026421759193994;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0030450574739805405;  // std dev = 2.261, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 2.86e-07, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.22388227978068417;  // std dev = 0.498, 831.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=375 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3328876855252501;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.2815735770744797;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.17728898230948212;  // std dev = 2.594, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.03474491779086417;  // std dev = 2.530, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.05080991429250285;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.002670881725395101;  // std dev = 2.261, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.18217960181962906;  // std dev = 0.498, 831.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=375 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.32283763631639334;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23920690503282557;  // std dev = 2.734, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06029609291257971;  // std dev = 3.372, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.266567707909721;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.09371521485104417;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.0013717572740443295;  // std dev = 2.266, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14488302111417245;  // std dev = 0.498, 831.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=375 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2469894953330191;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1836980985166362;  // std dev = 2.734, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.49561780155921104;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.01955157185742794;  // std dev = 1.234, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.09720105998926964;  // std dev = 1.681, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.021511077978841244;  // std dev = 3.676, 89.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1132619682850048;  // std dev = 0.498, 831.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=375 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1550537111821152;  // std dev = 2.230, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.12418398729622654;  // std dev = 1.789, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.12073184761522011;  // std dev = 2.575, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.013398487733218445;  // std dev = 2.515, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.0668603017414483;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.005606816054327636;  // std dev = 2.240, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08747325041557816;  // std dev = 0.498, 831.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=375 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.49553464639016304;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07020288525329299;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.09826852133328996;  // std dev = 2.573, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.011360582451482063;  // std dev = 2.515, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 4.5139318988404975E-4;  // std dev = 0.354, 46.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06699692176142301;  // std dev = 0.498, 831.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=375 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0890667047228662;  // std dev = 2.200, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.06831617581251898;  // std dev = 1.766, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.4108295746055188;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0023678950805297748;  // std dev = 1.208, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028089903963813598;  // std dev = 3.234, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return -0.0059373316621580356;  // std dev = 2.396, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367066;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05102720993950597;  // std dev = 0.498, 831.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=375 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3557024681704252;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03255120392108526;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.023360521433743415;  // std dev = 3.340, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.14320128865604834;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.053491071901302166;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.00984089006537435;  // std dev = 2.213, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.71e-08, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.34037047838825435;  // std dev = 9.743, 516.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=386 */
%   | | | else return -0.36559502791529197;  // std dev = 3.475, 382.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=11 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.06925858685126851;  // std dev = 1.483, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.06014364138978941;  // std dev = 2.005, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0671794182758461;  // std dev = 2.846, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.18841153848970907;  // std dev = 0.000201, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.3801787964571473;  // std dev = 0.363, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.895736
   AUC PR    = 0.778534
   CLL	      = -0.45717
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 359.867 seconds
Total inference time: 3.279 seconds
AUC ROC: 0.895736


Results scoring model
   AUC ROC   = 0.860089
   AUC PR    = 0.827524
   CLL	      = -0.538693
   Precision = 0.909091 at threshold = 0.5
   Recall    = 0.184805
   F1        = 0.307167


Total scoring time: 4.448 seconds
Refined model CLL: -0.538693


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.895736
   AUC PR    = 0.778534
   CLL	      = -0.45717
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 368.372 seconds
Total inference time: 3.279 seconds
AUC ROC: 0.895736
Total revision time: 368.372
Best scored revision CLL: -0.538693


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 16:17:11
{'AUC ROC': 0.895736, 'AUC PR': 0.778534, 'CLL': -0.45717, 'Precision': [0.903509, 0.5], 'Recall': 0.177281, 'F1': 0.296403, 'Learning time': 368.372, 'Inference time': 3.279, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.567338, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 2.599, 'Inference time': 1.644}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995102;  // std dev = 8.26e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.2855517980851924;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109558;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.24712235775870525;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4.99e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.2076874958587322;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.13e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.17002429011242665;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.31e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.13621338428891586;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 1.58e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.10732210003407953;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253529;  // std dev = 2.27e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.08352909795070823;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.06444509733542411;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.04941661281362996;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.96e-08, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else return 0.03773005622863344;  // std dev = 21.879, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=836 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.565818
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.704 seconds
Total inference time: 1.392 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.570842
   AUC PR    = 0.602831
   CLL	      = -0.647546
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.141684
   F1        = 0.248201


Total scoring time: 1.971 seconds
Parameter learned model CLL: -0.647546


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.26e-07, 0, 138], 'false': [21.879, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 138], 'false': [21.879, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.99e-07, 0, 138], 'false': [21.879, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.13e-07, 0, 138], 'false': [21.879, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.31e-07, 0, 138], 'false': [21.879, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-07, 0, 138], 'false': [21.879, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.27e-07, 0, 138], 'false': [21.879, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 138], 'false': [21.879, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 138], 'false': [21.879, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 138], 'false': [21.879, 1, 836]}]]
[{'': [4.942905987896349e-15, 0.24472965569734872]}, {'': [-2.059544161623479e-15, 0.2447296556972938]}, {'': [1.802101141420544e-15, 0.24472965569735325]}, {'': [1.2357264969740872e-15, 0.2447296556973326]}, {'': [3.8616453030440226e-16, 0.24472965569731017]}, {'': [1.802101141420544e-16, 0.2447296556973228]}, {'': [3.732923792942555e-16, 0.2447296556973198]}, {'': [-2.831873222232283e-16, 0.24472965569732896]}, {'': [-3.8616453030440226e-17, 0.24472965569731167]}, {'': [2.5744302020293485e-17, 0.2447296556973382]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995102;  // std dev = 8.26e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3063835251653362;  // std dev = 0.497, 1,671.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=749 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.45814893509951155;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.11224729575524883;  // std dev = 4.809, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0268236338946931;  // std dev = 3.412, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109558;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2648550553554503;  // std dev = 0.497, 1,671.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=749 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.39279418357704904;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.27849027391233155;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23676590352240023;  // std dev = 3.822, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | | else return 0.03497396739275461;  // std dev = 3.367, 73.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023526937412561955;  // std dev = 3.412, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4.99e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2218363102581804;  // std dev = 0.497, 1,671.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=749 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.31178608900103266;  // std dev = 3.109, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | | else return 0.23278415324893473;  // std dev = 2.393, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.20140994830885944;  // std dev = 3.816, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | | else return 0.03029547641051611;  // std dev = 3.367, 73.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020583278020184104;  // std dev = 3.412, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.13e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.46123800784993263;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.22831225363758917;  // std dev = 3.315, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.1803806173354379;  // std dev = 20.414, 1,686.000 (wgt'ed) examples reached here.  /* #neg=928 #pos=758 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06550177882867872;  // std dev = 4.767, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return 0.3293599637681438;  // std dev = 1.730, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017967630504578547;  // std dev = 3.412, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.31e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.31603271592021115;  // std dev = 2.629, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return -0.004724235699126926;  // std dev = 1.933, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.14279823261981692;  // std dev = 20.061, 1,628.000 (wgt'ed) examples reached here.  /* #neg=900 #pos=728 */
%   | | | else return 0.16249600375737525;  // std dev = 3.771, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.3098529204515282;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.16617187182443469;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.06050362656496636;  // std dev = 4.679, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | | | else return 0.007722493945347341;  // std dev = 3.300, 82.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 1.58e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22735167964471006;  // std dev = 2.822, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return -0.05390903459661337;  // std dev = 1.620, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11174875728333852;  // std dev = 20.061, 1,628.000 (wgt'ed) examples reached here.  /* #neg=900 #pos=728 */
%   | | | else return 0.12461302088758862;  // std dev = 3.769, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.25185787904294277;  // std dev = 1.933, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.03840998089260599;  // std dev = 4.656, 130.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1370984170893804;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.01367080144723746;  // std dev = 3.355, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253529;  // std dev = 2.27e-07, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08638690101100101;  // std dev = 0.497, 1,671.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=749 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1530782797321707;  // std dev = 2.909, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.06964461769366978;  // std dev = 2.608, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03309506377592727;  // std dev = 4.698, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return 0.23526081996638532;  // std dev = 1.725, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008142206561183786;  // std dev = 3.396, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.08841565434566505;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23027599675346336;  // std dev = 2.471, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return -0.112888067423092;  // std dev = 1.820, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06596721605385725;  // std dev = 20.063, 1,632.000 (wgt'ed) examples reached here.  /* #neg=901 #pos=731 */
%   | | | else return 0.07517188596909351;  // std dev = 3.795, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02204463945971074;  // std dev = 4.619, 130.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=32 */
%   | | | else return 0.2144141525253791;  // std dev = 1.911, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.002374443633683715;  // std dev = 3.366, 73.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | | else return -0.08155284524049972;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.36493701122618455;  // std dev = 13.540, 1,015.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=770 */
%   | | | else return -0.3559898164819392;  // std dev = 4.574, 780.000 (wgt'ed) examples reached here.  /* #neg=761 #pos=19 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.21392566883435932;  // std dev = 1.910, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return -0.07057320678781265;  // std dev = 2.932, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04854030375757233;  // std dev = 3.936, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | | else return -0.23025255161526717;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.412416457526152;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07565616529715657;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.96e-08, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2760855110581157;  // std dev = 13.540, 1,015.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=770 */
%   | | | else return -0.2774158856276658;  // std dev = 4.489, 780.000 (wgt'ed) examples reached here.  /* #neg=761 #pos=19 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.024582786016143575;  // std dev = 3.426, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return -0.19445366169069014;  // std dev = 0.864, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04008558680717838;  // std dev = 3.934, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | | else return -0.1929046688175876;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.31725810497701357;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07053802226816548;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.915483
   AUC PR    = 0.798099
   CLL	      = -0.392811
   Precision = 0.806324 at threshold = 0.5
   Recall    = 0.702238
   F1        = 0.75069


Total learning time: 1090.606 seconds
Total inference time: 3.83 seconds
AUC ROC: 0.915483


Results scoring model
   AUC ROC   = 0.888298
   AUC PR    = 0.855683
   CLL	      = -0.476146
   Precision = 0.790718 at threshold = 0.5
   Recall    = 0.927105
   F1        = 0.853497


Total scoring time: 9.695 seconds
Refined model CLL: -0.476146


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.915483
   AUC PR    = 0.798099
   CLL	      = -0.392811
   Precision = 0.806324 at threshold = 0.5
   Recall    = 0.702238
   F1        = 0.75069


Total learning time: 1105.9759999999999 seconds
Total inference time: 3.83 seconds
AUC ROC: 0.915483
Total revision time: 1105.9759999999999
Best scored revision CLL: -0.476146


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 16:35:43
{'AUC ROC': 0.915483, 'AUC PR': 0.798099, 'CLL': -0.392811, 'Precision': [0.806324, 0.5], 'Recall': 0.702238, 'F1': 0.75069, 'Learning time': 1105.9759999999999, 'Inference time': 3.83, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.565818, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.704, 'Inference time': 1.392}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.2820172478567089;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.2441095512527666;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.72e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.20527336778783617;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.16819886437719975;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014955;  // std dev = 3.37e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.13490020760831312;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.10641512811386133;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.08292327144541387;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452776;  // std dev = 4.21e-08, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.06405220131497828;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.04916932761951787;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.46e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.03757990384564812;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.56278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 5.021 seconds
Total inference time: 1.577 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.577002
   AUC PR    = 0.611738
   CLL	      = -0.643363
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154004
   F1        = 0.266904


Total scoring time: 2.12 seconds
Parameter learned model CLL: -0.643363


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.72e-07, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 225], 'false': [26.685, 1, 1]}]]
[{'': [5.179067051762508e-15, 0.24420396619759002]}, {'': [-4.042198674546348e-15, 0.2442039661975947]}, {'': [1.4526651486650938e-15, 0.2442039661975638]}, {'': [0.0, 0.2442039661975327]}, {'': [5.052748343182935e-16, 0.2442039661975663]}, {'': [3.552713678800501e-16, 0.24420396619758516]}, {'': [4.026408835973901e-16, 0.24420396619755386]}, {'': [7.894919286223335e-18, 0.2442039661975751]}, {'': [-1.5000346643824338e-16, 0.24420396619756227]}, {'': [9.473903143468003e-17, 0.2442039661975795]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29965534535591754;  // std dev = 0.497, 2,496.000 (wgt'ed) examples reached here.  /* #neg=1,394 #pos=1,102 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.48079044453347347;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | | else return 0.3581489350995117;  // std dev = 3.240, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2803711573217334;  // std dev = 4.686, 90.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=38 */
%   | | | else return 0.05259337954395656;  // std dev = 4.113, 108.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.034619523334806265;  // std dev = 4.159, 119.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=21 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2591322848411906;  // std dev = 0.497, 2,496.000 (wgt'ed) examples reached here.  /* #neg=1,394 #pos=1,102 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.411691676523635;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | | else return 0.3087411357856348;  // std dev = 3.240, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2427060415104393;  // std dev = 4.686, 90.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=38 */
%   | | | else return 0.04606984681068866;  // std dev = 4.113, 108.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.030352835297128445;  // std dev = 4.159, 119.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=21 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.72e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2172813845330232;  // std dev = 0.497, 2,496.000 (wgt'ed) examples reached here.  /* #neg=1,394 #pos=1,102 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.33364026649458606;  // std dev = 3.730, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | | | else return 0.25036576327085497;  // std dev = 3.004, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.20414773607348916;  // std dev = 4.686, 90.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=38 */
%   | | | else return 0.040153689049072225;  // std dev = 4.113, 108.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026524969827465623;  // std dev = 4.159, 119.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=21 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17724401040394724;  // std dev = 0.497, 2,496.000 (wgt'ed) examples reached here.  /* #neg=1,394 #pos=1,102 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.27231709239814267;  // std dev = 3.543, 53.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | | else return 0.19403472333630006;  // std dev = 3.214, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1673465203856692;  // std dev = 4.686, 90.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=38 */
%   | | | else return 0.0348411986099748;  // std dev = 4.113, 108.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023112561218445425;  // std dev = 4.159, 119.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=21 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014955;  // std dev = 3.37e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14137810862539008;  // std dev = 0.497, 2,496.000 (wgt'ed) examples reached here.  /* #neg=1,394 #pos=1,102 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3543788478390101;  // std dev = 1.276, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.16728976935713213;  // std dev = 4.590, 87.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=48 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05969306148112895;  // std dev = 5.848, 179.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=49 */
%   | | | else return 0.24488506020018244;  // std dev = 2.150, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06966123688770681;  // std dev = 0.954, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.0224077470797839;  // std dev = 4.047, 114.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.35615638837405983;  // std dev = 3.133, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
%   | | | else return -0.13349780527730878;  // std dev = 1.889, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10910049722213265;  // std dev = 24.473, 2,431.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=1,069 */
%   | | | else return 0.12821704999453604;  // std dev = 4.672, 90.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.11383615369644177;  // std dev = 4.667, 90.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=38 */
%   | | | else return 0.02148978683910495;  // std dev = 4.114, 108.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01821323225138873;  // std dev = 4.156, 119.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=21 */
%   | | | else return -0.09269394553695948;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2728257171578869;  // std dev = 3.134, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
%   | | | else return -0.10430949541048003;  // std dev = 1.892, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10529740491930516;  // std dev = 3.949, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | | | else return 0.0844414470896296;  // std dev = 24.599, 2,458.000 (wgt'ed) examples reached here.  /* #neg=1,369 #pos=1,089 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.038026914210855516;  // std dev = 5.837, 179.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=49 */
%   | | | else return 0.16823359346747954;  // std dev = 2.143, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.01577210610932866;  // std dev = 4.156, 119.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=21 */
%   | | | else return -0.08518791142320814;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452776;  // std dev = 4.21e-08, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06561944131302057;  // std dev = 0.495, 2,496.000 (wgt'ed) examples reached here.  /* #neg=1,394 #pos=1,102 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.23886042118009992;  // std dev = 1.333, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.07138493663343555;  // std dev = 4.586, 87.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=48 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.009735759300898351;  // std dev = 5.685, 186.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=45 */
%   | | | else return 0.28288017500308693;  // std dev = 2.302, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.16874591378304554;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.019266734158838807;  // std dev = 4.090, 108.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.20035122287969526;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=30 */
%   | | | else return -0.08538472731119372;  // std dev = 2.045, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04934297881277296;  // std dev = 24.473, 2,431.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=1,069 */
%   | | | else return 0.05511809986558865;  // std dev = 4.668, 90.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20887521352287253;  // std dev = 2.184, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.16696193873182189;  // std dev = 0.196, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.025887042853888965;  // std dev = 5.745, 173.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=50 */
%   | | | else return 0.005699470549735042;  // std dev = 4.067, 121.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.46e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3479667148397077;  // std dev = 16.707, 1,508.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=1,127 */
%   | | | else return -0.3627716513851638;  // std dev = 5.663, 1,170.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=29 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.14382508684569775;  // std dev = 2.334, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.011934844238295201;  // std dev = 3.808, 62.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05302846587067954;  // std dev = 4.797, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return -0.20140229031200763;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.4545611778700902;  // std dev = 2.11e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0776798875588494;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.896538
   AUC PR    = 0.783415
   CLL	      = -0.449742
   Precision = 0.943925 at threshold = 0.5
   Recall    = 0.173838
   F1        = 0.293605


Total learning time: 893.254 seconds
Total inference time: 3.286 seconds
AUC ROC: 0.896538


Results scoring model
   AUC ROC   = 0.874687
   AUC PR    = 0.846133
   CLL	      = -0.533113
   Precision = 0.927114 at threshold = 0.5
   Recall    = 0.217659
   F1        = 0.35255


Total scoring time: 9.756 seconds
Refined model CLL: -0.533113


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.896538
   AUC PR    = 0.783415
   CLL	      = -0.449742
   Precision = 0.943925 at threshold = 0.5
   Recall    = 0.173838
   F1        = 0.293605


Total learning time: 910.151 seconds
Total inference time: 3.286 seconds
AUC ROC: 0.896538
Total revision time: 910.151
Best scored revision CLL: -0.533113


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 16:50:59
{'AUC ROC': 0.896538, 'AUC PR': 0.783415, 'CLL': -0.449742, 'Precision': [0.943925, 0.5], 'Recall': 0.173838, 'F1': 0.293605, 'Learning time': 910.151, 'Inference time': 3.286, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.56278, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 5.021, 'Inference time': 1.577}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.03e-06, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.2806805154037093;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.24296982968530217;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.20435934660761482;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.16750681343799245;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.13440157037132894;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.10607019568728863;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.08269257137261464;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.06390246822835972;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.049075084012144395;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.03752274185209332;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.561641
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 6.362 seconds
Total inference time: 1.65 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.579312
   AUC PR    = 0.61502
   CLL	      = -0.641783
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158624
   F1        = 0.273815


Total scoring time: 2.118 seconds
Parameter learned model CLL: -0.641783


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-06, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.67e-07, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}]]
[{'': [3.4032467602749133e-15, 0.24399864394978876]}, {'': [-4.966900677157982e-15, 0.24399864394988544]}, {'': [-2.299491054239806e-16, 0.24399864394983883]}, {'': [-8.048218689839323e-16, 0.24399864394981632]}, {'': [-3.5642111340717e-16, 0.2439986439498552]}, {'': [4.369033003055632e-16, 0.2439986439497987]}, {'': [2.0695419488158259e-16, 0.2439986439498101]}, {'': [2.0695419488158259e-16, 0.24399864394980642]}, {'': [-2.1270292251718208e-16, 0.24399864394983445]}, {'': [-1.6958746525018573e-16, 0.24399864394983062]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.03e-06, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29687813328407603;  // std dev = 0.496, 3,305.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,450 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.42372270559131664;  // std dev = 5.475, 122.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=69 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2684053453559234;  // std dev = 5.320, 117.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=48 */
%   | | | else return 0.06834001790205903;  // std dev = 5.105, 157.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=33 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06327714022771645;  // std dev = 5.043, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25676882817972685;  // std dev = 0.496, 3,305.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,450 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3981626784883122;  // std dev = 4.320, 78.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=47 */
%   | | | else return 0.343506392217905;  // std dev = 3.611, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2324959216809856;  // std dev = 5.320, 117.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=48 */
%   | | | else return 0.05981570982883144;  // std dev = 5.105, 157.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=33 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.055398534330777946;  // std dev = 5.043, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2153971144852526;  // std dev = 0.496, 3,305.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,450 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3259058772207418;  // std dev = 4.319, 78.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=47 */
%   | | | else return 0.28218315096964997;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19593967245742167;  // std dev = 5.320, 117.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=48 */
%   | | | else return 0.05201263845316251;  // std dev = 5.105, 157.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=33 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0482080191348623;  // std dev = 5.043, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1758303778582362;  // std dev = 0.496, 3,305.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,450 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3937633349915797;  // std dev = 1.260, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23201570020188433;  // std dev = 5.467, 122.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=69 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.16110796055770213;  // std dev = 5.320, 117.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=48 */
%   | | | else return 0.04496299154866505;  // std dev = 5.105, 157.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=33 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.041724299521406855;  // std dev = 5.043, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14037043440717115;  // std dev = 0.496, 3,305.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,450 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.19901883994309325;  // std dev = 4.319, 78.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=47 */
%   | | | else return 0.1688484307541768;  // std dev = 3.593, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06087199177665538;  // std dev = 6.930, 249.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=68 */
%   | | | else return 0.24387229502382035;  // std dev = 2.478, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.035940063672065745;  // std dev = 5.043, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
%   | | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11018021122402409;  // std dev = 0.496, 3,305.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,450 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2857798129227291;  // std dev = 1.197, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.13219010710720103;  // std dev = 5.474, 123.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=70 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0435782279776095;  // std dev = 6.786, 245.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=65 */
%   | | | else return 0.247017689739641;  // std dev = 2.617, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.029661370657984576;  // std dev = 5.107, 157.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=33 */
%   | | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0854314707427664;  // std dev = 0.496, 3,305.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,450 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.20925881352528328;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.0990073063159629;  // std dev = 5.461, 122.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=69 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03969217236890657;  // std dev = 6.894, 249.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=68 */
%   | | | else return 0.18316696720563738;  // std dev = 2.474, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.024261240125678978;  // std dev = 5.045, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
%   | | | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2776370042282346;  // std dev = 3.762, 63.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=42 */
%   | | | else return -0.19683930244427508;  // std dev = 2.027, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06435036991348908;  // std dev = 28.145, 3,219.000 (wgt'ed) examples reached here.  /* #neg=1,811 #pos=1,408 */
%   | | | else return 0.07339941621465884;  // std dev = 5.473, 123.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02743949742525077;  // std dev = 6.766, 245.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=65 */
%   | | | else return 0.1850602734571072;  // std dev = 2.614, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.01901006109706176;  // std dev = 5.108, 157.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=33 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05014186396185141;  // std dev = 0.496, 3,305.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,450 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.14473399002427972;  // std dev = 1.230, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.05513138096577479;  // std dev = 5.472, 123.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=70 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02257873695024377;  // std dev = 6.766, 245.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=65 */
%   | | | else return 0.1419871413081307;  // std dev = 2.613, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016053627075133588;  // std dev = 5.108, 157.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=33 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03816834258545383;  // std dev = 0.496, 3,305.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,450 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.1382436458092793;  // std dev = 1.266, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.038834376351147185;  // std dev = 5.460, 122.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=69 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.017939755048049642;  // std dev = 6.856, 249.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=68 */
%   | | | else return 0.12955225152453362;  // std dev = 2.472, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012661727442292275;  // std dev = 5.048, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
%   | | | else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.622759
   AUC PR    = 0.420896
   CLL	      = -0.545754
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 682.112 seconds
Total inference time: 2.474 seconds
AUC ROC: 0.622759


Results scoring model
   AUC ROC   = 0.632937
   AUC PR    = 0.653674
   CLL	      = -0.628699
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.197639
   F1        = 0.322446


Total scoring time: 6.156 seconds
Refined model CLL: -0.628699


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622759
   AUC PR    = 0.420896
   CLL	      = -0.545754
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 696.7479999999999 seconds
Total inference time: 2.474 seconds
AUC ROC: 0.622759
Total revision time: 696.7479999999999
Best scored revision CLL: -0.628699


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 17:02:41
{'AUC ROC': 0.622759, 'AUC PR': 0.420896, 'CLL': -0.545754, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 696.7479999999999, 'Inference time': 2.474, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.561641, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 6.362, 'Inference time': 1.65}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 7.138 seconds
Total inference time: 1.617 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 2.527 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4245825015330777;  // std dev = 5.926, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5398498420741675;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.36468758839338117;  // std dev = 5.926, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.492721975126494;  // std dev = 1.222, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.29558330991403675;  // std dev = 5.916, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2550182221908243;  // std dev = 4.672, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.22368610722900764;  // std dev = 3.847, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.19913406289997124;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1677139133951411;  // std dev = 3.845, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598655;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11049163082472004;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2758642235568057;  // std dev = 1.223, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.13295372120226326;  // std dev = 5.912, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04103392149496015;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22840304079157903;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07342398208298012;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021515757896624955;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08563819689605111;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1159892169856432;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09234067510291952;  // std dev = 3.832, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03444964905968146;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971410384811948;  // std dev = 2.936, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07538104039726029;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.019654783955741027;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06581034510906802;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.09019654971508996;  // std dev = 4.677, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.06485032741366457;  // std dev = 3.826, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02690950454736117;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1720922999304555;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06822949779761049;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013844095690902159;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.23753410286725496;  // std dev = 4.037, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.2161482028557133;  // std dev = 2.213, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08484931662201393;  // std dev = 4.963, 100.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return 0.048952465355505605;  // std dev = 31.680, 4,076.000 (wgt'ed) examples reached here.  /* #neg=2,272 #pos=1,804 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.022286657367566985;  // std dev = 7.501, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13248684136526043;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.010039948414087877;  // std dev = 5.413, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08509700566691913;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1800218716785746;  // std dev = 4.036, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.16619288187174375;  // std dev = 2.212, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.037768197875767476;  // std dev = 31.518, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.04117885488397646;  // std dev = 5.909, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13277178767297976;  // std dev = 2.863, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.015558392195555359;  // std dev = 7.508, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07082283628761575;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01042552793496762;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */


Results
   AUC ROC   = 0.623057
   AUC PR    = 0.42138
   CLL	      = -0.544332
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 818.493 seconds
Total inference time: 2.517 seconds
AUC ROC: 0.623057


Results scoring model
   AUC ROC   = 0.634559
   AUC PR    = 0.654799
   CLL	      = -0.625486
   Precision = 0.883212 at threshold = 0.5
   Recall    = 0.198686
   F1        = 0.324397


Total scoring time: 6.995 seconds
Refined model CLL: -0.625486


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.623057
   AUC PR    = 0.42138
   CLL	      = -0.544332
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 835.153 seconds
Total inference time: 2.517 seconds
AUC ROC: 0.623057
Total revision time: 835.153
Best scored revision CLL: -0.625486


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 17:16:41
{'AUC ROC': 0.623057, 'AUC PR': 0.42138, 'CLL': -0.544332, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 835.153, 'Inference time': 2.517, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 7.138, 'Inference time': 1.617}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.18865740967577865;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.1641061785785437;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.14008122522998087;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.11754520085707272;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.09717977779350173;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.07934754388125384;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.06413147260257634;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.05141267980675043;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936707;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.04095187803698655;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else return 0.03245548586939775;  // std dev = 16.159, 1,180.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=390 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.635651
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 2.772 seconds
Total inference time: 1.245 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.570485
   AUC PR    = 0.517447
   CLL	      = -0.60987
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.140969
   F1        = 0.247104


Total scoring time: 1.479 seconds
Parameter learned model CLL: -0.60987


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 64], 'false': [16.159, 790, 390]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.43e-08, 0, 64], 'false': [16.159, 790, 390]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 64], 'false': [16.159, 790, 390]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 64], 'false': [16.159, 790, 390]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 64], 'false': [16.159, 790, 390]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 64], 'false': [16.159, 790, 390]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 64], 'false': [16.159, 790, 390]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 64], 'false': [16.159, 790, 390]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.47e-08, 0, 64], 'false': [16.159, 790, 390]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.47e-08, 0, 64], 'false': [16.159, 790, 390]}]]
[{'': [-8.881784197001252e-16, 0.2212726228095207]}, {'': [1.1102230246251565e-16, 0.2212726228095374]}, {'': [4.440892098500626e-16, 0.22127262280955157]}, {'': [-3.0531133177191805e-16, 0.22127262280953]}, {'': [-2.498001805406602e-16, 0.22127262280953913]}, {'': [-2.7755575615628914e-17, 0.22127262280954607]}, {'': [-5.551115123125783e-17, 0.22127262280953747]}, {'': [-1.3877787807814457e-17, 0.22127262280954324]}, {'': [3.122502256758253e-17, 0.2212726228095359]}, {'': [3.122502256758253e-17, 0.22127262280953022]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20844247717387152;  // std dev = 0.477, 1,022.000 (wgt'ed) examples reached here.  /* #neg=664 #pos=358 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, H), haswordauthor(I, H) )
%   | | | then return 0.05133075328133056;  // std dev = 3.703, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   | | | else return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.041822404487267484;  // std dev = 2.711, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4123272905362935;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.020593508901655226;  // std dev = 2.005, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else return 0.183061843434122;  // std dev = 0.478, 988.000 (wgt'ed) examples reached here.  /* #neg=640 #pos=348 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04496669464463762;  // std dev = 3.703, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   | | | else return 0.14443085832463678;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03665473934841199;  // std dev = 2.711, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4416210639830904;  // std dev = 1.781, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.03452936298563543;  // std dev = 2.149, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else return 0.1535641776460442;  // std dev = 0.477, 986.000 (wgt'ed) examples reached here.  /* #neg=641 #pos=345 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1843613151564695;  // std dev = 1.625, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.15213655309978513;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.1542424283280688;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.021934618468086614;  // std dev = 4.238, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3116422226376832;  // std dev = 1.687, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.0033227306966518667;  // std dev = 2.009, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.13258095333145467;  // std dev = 2.804, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.13004311651230885;  // std dev = 14.735, 952.000 (wgt'ed) examples reached here.  /* #neg=617 #pos=335 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.384629189311922;  // std dev = 1.476, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.1682740117022455;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.02919678698781119;  // std dev = 3.700, 89.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | | else return 0.00928009517382638;  // std dev = 2.562, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.026466826937552285;  // std dev = 2.435, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.4950332255550246;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.10684952464730144;  // std dev = 0.477, 988.000 (wgt'ed) examples reached here.  /* #neg=640 #pos=348 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.3231810335678055;  // std dev = 1.472, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.14604861580736742;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.025201279614626367;  // std dev = 3.700, 89.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | | else return 0.008069291591762484;  // std dev = 2.561, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2839737901885877;  // std dev = 1.986, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return -0.03959668435542631;  // std dev = 1.879, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04643358716115281;  // std dev = 2.525, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.08648117359275627;  // std dev = 14.735, 952.000 (wgt'ed) examples reached here.  /* #neg=617 #pos=335 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.2607790948369121;  // std dev = 1.468, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.12877968370637632;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.04629476695822975;  // std dev = 1.515, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.01311069200611941;  // std dev = 4.236, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06848103350131986;  // std dev = 0.475, 1,026.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=360 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.20395507161811627;  // std dev = 1.466, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.11502396939815548;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.03974565273804039;  // std dev = 1.514, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.011304832117290187;  // std dev = 4.236, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.054429504714491685;  // std dev = 0.475, 1,026.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=360 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.15627894903584755;  // std dev = 1.465, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.10383499849596393;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.018012318094047696;  // std dev = 3.701, 89.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | | else return 0.0016233452372509088;  // std dev = 2.557, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936707;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04297816574464876;  // std dev = 0.475, 1,026.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=360 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12703427069826492;  // std dev = 1.528, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.19081124496944685;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.017685750084993013;  // std dev = 3.893, 97.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=20 */
%   | | | else return -0.011030967159350136;  // std dev = 2.154, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.18311846906230758;  // std dev = 1.669, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.05487840915255729;  // std dev = 1.924, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else return 0.034284007918768726;  // std dev = 0.477, 988.000 (wgt'ed) examples reached here.  /* #neg=640 #pos=348 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.014725004066040765;  // std dev = 3.215, 79.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | | else return 0.10516989446858778;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02334202462095734;  // std dev = 2.865, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return -0.10883845924106021;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.599925
   AUC PR    = 0.583198
   CLL	      = -0.629022
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 79.168 seconds
Total inference time: 2.505 seconds
AUC ROC: 0.599925


Results scoring model
   AUC ROC   = 0.631673
   AUC PR    = 0.563546
   CLL	      = -0.5949
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.143172
   F1        = 0.250482


Total scoring time: 2.312 seconds
Refined model CLL: -0.5949


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.599925
   AUC PR    = 0.583198
   CLL	      = -0.629022
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 85.73100000000001 seconds
Total inference time: 2.505 seconds
AUC ROC: 0.599925
Total revision time: 85.73100000000001
Best scored revision CLL: -0.5949


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 17:18:11
{'AUC ROC': 0.599925, 'AUC PR': 0.583198, 'CLL': -0.629022, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 85.73100000000001, 'Inference time': 2.505, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.635651, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 2.772, 'Inference time': 1.245}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 8.92e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.18366088049199875;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.15980157604428152;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5.13e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.13651447515863682;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.38e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.11469748985396605;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.56e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.09498276457710009;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.07770496241076204;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2.38e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.06293892405612102;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.05057142896114745;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.0403762395373649;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6.32e-08, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.03207532983632858;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637113
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.96 seconds
Total inference time: 1.387 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.579846
   AUC PR    = 0.532898
   CLL	      = -0.603014
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159692
   F1        = 0.275404


Total scoring time: 2.085 seconds
Parameter learned model CLL: -0.603014


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.92e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.13e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.38e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.56e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.32e-08, 0, 145], 'false': [22.686, 1, 763]}]]
[{'': [5.488330096905601e-15, 0.21955391879931177]}, {'': [-2.2541355755148008e-15, 0.21955391879930236]}, {'': [1.8131090498706005e-15, 0.21955391879926411]}, {'': [1.3230795769326004e-15, 0.21955391879929514]}, {'': [4.532772624676501e-16, 0.2195539187992893]}, {'': [-1.4700884188140004e-16, 0.21955391879927225]}, {'': [3.920235783504001e-16, 0.21955391879928715]}, {'': [-2.9401768376280007e-16, 0.21955391879929398]}, {'': [-3.675221047035001e-17, 0.21955391879929642]}, {'': [2.7564157852762507e-17, 0.21955391879930175]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 8.92e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20599653529742912;  // std dev = 0.476, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,318 #pos=703 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.08542166237223835;  // std dev = 5.201, 154.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=35 */
%   | | | else return 0.01069130798086828;  // std dev = 2.762, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01814893509951238;  // std dev = 3.666, 100.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.46451195052767447;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return -0.009730473714750337;  // std dev = 2.426, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else return 0.1788930496545345;  // std dev = 0.476, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,270 #pos=677 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.2789979856746434;  // std dev = 2.260, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.07411577059709842;  // std dev = 0.957, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03848594511660628;  // std dev = 5.328, 186.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | | else return 0.004079994873613813;  // std dev = 3.573, 102.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5.13e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15230248555029305;  // std dev = 0.476, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,318 #pos=703 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.23995920585382163;  // std dev = 2.258, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.06514670313417222;  // std dev = 0.957, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.033521878422420284;  // std dev = 5.328, 186.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | | else return 0.0035793992357420284;  // std dev = 3.573, 102.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.38e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12723915778067185;  // std dev = 0.476, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,318 #pos=703 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.0310424388212292;  // std dev = 5.314, 183.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=36 */
%   | | | else return 0.11188503200485828;  // std dev = 2.427, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01381477376107228;  // std dev = 3.652, 100.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | | | else return -0.12847706712390705;  // std dev = 0.073, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.56e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2923993459974184;  // std dev = 2.732, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return -0.03283879529877928;  // std dev = 2.644, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else return 0.10473708672580279;  // std dev = 0.476, 1,948.000 (wgt'ed) examples reached here.  /* #neg=1,270 #pos=678 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.19573853558397433;  // std dev = 2.255, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.05765234020046928;  // std dev = 0.955, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0659508189142556;  // std dev = 2.167, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.010389052914809425;  // std dev = 6.027, 260.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08479588633875769;  // std dev = 0.475, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,318 #pos=703 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.050096550309404485;  // std dev = 5.118, 154.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=35 */
%   | | | else return -0.014091974015344939;  // std dev = 2.767, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.008599328525907978;  // std dev = 3.644, 100.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | | | else return -0.11752275882008992;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2.38e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3097436482005629;  // std dev = 2.583, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return -0.09513383499465485;  // std dev = 2.400, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else return 0.06800428108894951;  // std dev = 0.476, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,270 #pos=677 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.016355044288545652;  // std dev = 5.282, 183.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=36 */
%   | | | else return 0.09572188563605415;  // std dev = 2.430, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007493416941122145;  // std dev = 3.644, 100.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | | | else return -0.1059685299053132;  // std dev = 0.089, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0539808590207567;  // std dev = 0.475, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,318 #pos=703 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.14928148876032063;  // std dev = 2.246, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.052877579538086236;  // std dev = 0.952, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.055054891142875144;  // std dev = 2.165, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.0029111501878549676;  // std dev = 6.015, 260.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2269391292640135;  // std dev = 2.588, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return -0.08796451216870044;  // std dev = 2.385, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else return 0.04278593801361774;  // std dev = 0.476, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,270 #pos=677 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordvenue(A, J) )
%   | | | then return -0.21941360948341343;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08715888138365;  // std dev = 2.409, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.012508829625900438;  // std dev = 5.313, 186.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | | else return -0.0033621138421055475;  // std dev = 3.560, 102.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=15 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6.32e-08, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.43246939795363115;  // std dev = 12.788, 870.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=646 */
%   | | | else return -0.26862366963859335;  // std dev = 5.964, 1,157.000 (wgt'ed) examples reached here.  /* #neg=1,122 #pos=35 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.07051900460471122;  // std dev = 4.763, 136.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=30 */
%   | | | else return 0.12405821501908963;  // std dev = 2.997, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.3308050598318383;  // std dev = 1.964, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.2165966608203263;  // std dev = 1.062, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03584738496385652;  // std dev = 4.248, 106.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
%   | | | else return -0.0946671665574948;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.889788
   AUC PR    = 0.844855
   CLL	      = -0.523739
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.280783


Total learning time: 506.991 seconds
Total inference time: 2.818 seconds
AUC ROC: 0.889788


Results scoring model
   AUC ROC   = 0.879536
   AUC PR    = 0.822074
   CLL	      = -0.500789
   Precision = 0.993865 at threshold = 0.5
   Recall    = 0.178414
   F1        = 0.302521


Total scoring time: 7.086 seconds
Refined model CLL: -0.500789


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.889788
   AUC PR    = 0.844855
   CLL	      = -0.523739
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.280783


Total learning time: 520.122 seconds
Total inference time: 2.818 seconds
AUC ROC: 0.889788
Total revision time: 520.122
Best scored revision CLL: -0.500789


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 17:26:56
{'AUC ROC': 0.889788, 'AUC PR': 0.844855, 'CLL': -0.523739, 'Precision': [1.0, 0.5], 'Recall': 0.16332, 'F1': 0.280783, 'Learning time': 520.122, 'Inference time': 2.818, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637113, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.96, 'Inference time': 1.387}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.18159445706185745;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.15802063925724213;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.59e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.13503705970394453;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.11351559438692228;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.26e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.09406850589237775;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.07701920026729761;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.06243916265398453;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527755;  // std dev = 5.96e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.0502173594294861;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.04013274749402321;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.03191355467153652;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.63775
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 5.216 seconds
Total inference time: 1.409 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539121
   CLL	      = -0.600167
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.058 seconds
Parameter learned model CLL: -0.600167


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.59e-07, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 228], 'false': [27.699, 2, 1]}]]
[{'': [5.11092143266037e-15, 0.21882851628487887]}, {'': [-4.175996780344449e-15, 0.21882851628484645]}, {'': [1.3712228233966845e-15, 0.21882851628488548]}, {'': [-3.1164155077197375e-17, 0.2188285162848423]}, {'': [4.674623261579606e-16, 0.2188285162848251]}, {'': [3.505967446184705e-16, 0.2188285162848631]}, {'': [3.739698609263685e-16, 0.2188285162848435]}, {'': [1.5582077538598687e-17, 0.21882851628487077]}, {'': [-1.5192525600133721e-16, 0.21882851628485542]}, {'': [4.285071323114639e-17, 0.21882851628485792]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20436631204037276;  // std dev = 0.476, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,979 #pos=1,048 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.034178897646328456;  // std dev = 6.223, 267.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=47 */
%   | | | else return 0.022783081440975177;  // std dev = 4.749, 164.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17762462475498117;  // std dev = 0.476, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,979 #pos=1,048 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4460663175051681;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05270566595198712;  // std dev = 2.630, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.029967176738548165;  // std dev = 6.223, 267.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=47 */
%   | | | else return 0.019987017769804383;  // std dev = 4.749, 164.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.59e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1512434875204119;  // std dev = 0.476, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,979 #pos=1,048 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.01797973868445633;  // std dev = 6.086, 264.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=45 */
%   | | | else return 0.14221059818952086;  // std dev = 2.916, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.037080708528672485;  // std dev = 4.833, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.14683860274651314;  // std dev = 0.033, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3655544187273913;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return -0.019811434931145296;  // std dev = 3.347, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | else return 0.12655344847079308;  // std dev = 0.476, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,906 #pos=1,010 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1590723091405557;  // std dev = 2.664, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.08071912167094505;  // std dev = 0.917, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02944505914821825;  // std dev = 2.712, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | | else return 0.017377522590234118;  // std dev = 7.326, 381.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=65 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.26e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10390361053601035;  // std dev = 0.475, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,979 #pos=1,048 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.011542017702944931;  // std dev = 6.072, 264.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=45 */
%   | | | else return 0.12007999084210953;  // std dev = 2.919, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.029265770872243167;  // std dev = 4.825, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.13040501266265908;  // std dev = 0.058, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08432543574445733;  // std dev = 0.475, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,979 #pos=1,048 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 7.546923131362018E-4;  // std dev = 5.794, 248.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=41 */
%   | | | else return 0.07474625949684319;  // std dev = 3.039, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.041710205025868835;  // std dev = 5.083, 161.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=33 */
%   | | | else return -0.11633737046397136;  // std dev = 0.053, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return -0.2500495640874346;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.23022776745849963;  // std dev = 0.962, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.06791108228217907;  // std dev = 0.475, 3,019.000 (wgt'ed) examples reached here.  /* #neg=1,973 #pos=1,046 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11472735807180015;  // std dev = 2.767, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.16664055086861262;  // std dev = 0.143, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05136185000670538;  // std dev = 2.664, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.00877262225302995;  // std dev = 7.306, 381.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=65 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527755;  // std dev = 5.96e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24035007191760827;  // std dev = 3.150, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return -0.061148997388273695;  // std dev = 3.331, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | else return 0.05403021144769211;  // std dev = 0.476, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,906 #pos=1,010 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09876996529165968;  // std dev = 2.764, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.14494537393151716;  // std dev = 0.129, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04353870376812855;  // std dev = 2.661, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.007580684426203473;  // std dev = 7.306, 381.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=65 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3635576944587547;  // std dev = 2.946, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return -0.11536163523664608;  // std dev = 3.082, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04470479463503654;  // std dev = 4.591, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | | else return 0.04163140102590513;  // std dev = 25.253, 2,821.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=974 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.3460326954536688;  // std dev = 1.029, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.014512384078427634;  // std dev = 2.564, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.007920777915360645;  // std dev = 6.191, 267.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=47 */
%   | | | else return 0.0053706537639130695;  // std dev = 4.701, 164.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.281813348526807;  // std dev = 2.947, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return -0.09183057876720248;  // std dev = 3.083, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | else return 0.03284735475391317;  // std dev = 0.475, 2,923.000 (wgt'ed) examples reached here.  /* #neg=1,913 #pos=1,010 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0052722312850729544;  // std dev = 5.747, 248.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=41 */
%   | | | else return 0.06069530103030193;  // std dev = 3.041, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02848897313721372;  // std dev = 5.063, 161.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=33 */
%   | | | else return -0.10805751049147275;  // std dev = 0.043, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.597532
   AUC PR    = 0.580928
   CLL	      = -0.630372
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 180.001 seconds
Total inference time: 1.987 seconds
AUC ROC: 0.597532


Results scoring model
   AUC ROC   = 0.643352
   AUC PR    = 0.582739
   CLL	      = -0.586611
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 3.16 seconds
Refined model CLL: -0.586611


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.597532
   AUC PR    = 0.580928
   CLL	      = -0.630372
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 190.435 seconds
Total inference time: 1.987 seconds
AUC ROC: 0.597532
Total revision time: 190.435
Best scored revision CLL: -0.586611


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 17:30:11
{'AUC ROC': 0.597532, 'AUC PR': 0.580928, 'CLL': -0.630372, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 190.435, 'Inference time': 1.987, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.63775, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 5.216, 'Inference time': 1.409}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.18157139499255529;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.1580007611009044;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.13502056356726946;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.11350239022429054;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.09405828374232125;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.63e-07, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.07701152550571913;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.06243356325223747;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2.46e-07, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.050213387271847196;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.040130011779682825;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else return 0.031911733804282784;  // std dev = 31.984, 4,675.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,512 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637758
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.694 seconds
Total inference time: 1.461 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.5391
   CLL	      = -0.600153
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.364 seconds
Parameter learned model CLL: -0.600153


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 304], 'false': [31.984, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 304], 'false': [31.984, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 304], 'false': [31.984, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 304], 'false': [31.984, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 304], 'false': [31.984, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 304], 'false': [31.984, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 304], 'false': [31.984, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 304], 'false': [31.984, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 304], 'false': [31.984, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 304], 'false': [31.984, 3, 1]}]]
[{'': [3.552713678800501e-15, 0.21882037232972432]}, {'': [-4.861608192042791e-15, 0.21882037232975127]}, {'': [-1.4023869784738819e-16, 0.21882037232984644]}, {'': [-7.946859544685331e-16, 0.21882037232974616]}, {'': [-3.1553707015662343e-16, 0.21882037232976495]}, {'': [4.324026516961136e-16, 0.2188203723297475]}, {'': [2.0451476769410778e-16, 0.21882037232976378]}, {'': [1.9867148861713328e-16, 0.21882037232977206]}, {'': [-2.0743640723259504e-16, 0.21882037232981366]}, {'': [-1.5776853507831172e-16, 0.21882037232980295]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.43879409638983374;  // std dev = 3.885, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.04655473220096165;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.23910131605189394;  // std dev = 5.451, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
%   | | | else return 0.20384429933791778;  // std dev = 29.221, 3,775.000 (wgt'ed) examples reached here.  /* #neg=2,470 #pos=1,305 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.13721870254137283;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.09639651944594235;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.01962202291820932;  // std dev = 6.913, 353.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=57 */
%   | | | else return 0.03592671287728928;  // std dev = 5.735, 225.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=40 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17885397699282485;  // std dev = 0.476, 4,032.000 (wgt'ed) examples reached here.  /* #neg=2,630 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13365562782168497;  // std dev = 2.930, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.09673388101998945;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.018617051604112735;  // std dev = 7.081, 366.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=60 */
%   | | | else return 0.02716264591139003;  // std dev = 5.521, 214.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=37 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1522529045215603;  // std dev = 0.476, 4,032.000 (wgt'ed) examples reached here.  /* #neg=2,630 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11625117427099153;  // std dev = 2.929, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.08503229793740089;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.032988556499751166;  // std dev = 2.968, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.017462802347161476;  // std dev = 8.474, 521.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=86 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12720239011386136;  // std dev = 0.476, 4,032.000 (wgt'ed) examples reached here.  /* #neg=2,630 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09978194780740313;  // std dev = 2.928, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.07540580816535158;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.028660476534109407;  // std dev = 2.968, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.015252145822373353;  // std dev = 8.474, 521.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=86 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10456915950776406;  // std dev = 0.476, 4,032.000 (wgt'ed) examples reached here.  /* #neg=2,630 #pos=1,402 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10670239166048336;  // std dev = 2.918, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.1001045068009578;  // std dev = 0.983, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.009533347143789476;  // std dev = 6.914, 353.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=57 */
%   | | | else return 0.02192824154585094;  // std dev = 5.702, 225.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=40 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.63e-07, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.32748756923315975;  // std dev = 3.337, 48.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=30 */
%   | | | else return -0.02471140715064277;  // std dev = 3.739, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | else return 0.08416264250496769;  // std dev = 0.476, 3,901.000 (wgt'ed) examples reached here.  /* #neg=2,548 #pos=1,353 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09095879560556484;  // std dev = 2.916, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.08810345674947762;  // std dev = 0.983, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008301305152496476;  // std dev = 6.914, 353.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=57 */
%   | | | else return 0.01902896013125709;  // std dev = 5.701, 225.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=40 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28644079752268764;  // std dev = 3.908, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | | | else return -0.06547906554407376;  // std dev = 3.537, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | | else return 0.06697222696582839;  // std dev = 0.475, 3,895.000 (wgt'ed) examples reached here.  /* #neg=2,545 #pos=1,350 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07668518362011052;  // std dev = 2.915, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.07824304946815293;  // std dev = 0.982, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007221833678543321;  // std dev = 6.914, 353.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=57 */
%   | | | else return 0.016477773323327106;  // std dev = 5.701, 225.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=40 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2.46e-07, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.054033507115305295;  // std dev = 0.475, 4,032.000 (wgt'ed) examples reached here.  /* #neg=2,630 #pos=1,402 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06403605232836393;  // std dev = 2.914, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.07001624224570123;  // std dev = 0.982, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.006277682137955395;  // std dev = 6.914, 353.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=57 */
%   | | | else return 0.014242024807800091;  // std dev = 5.701, 225.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=40 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04271358995544841;  // std dev = 0.475, 4,032.000 (wgt'ed) examples reached here.  /* #neg=2,630 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.25015377381395526;  // std dev = 1.269, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -2.8968608269940515E-4;  // std dev = 2.758, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.008970920095735122;  // std dev = 7.380, 392.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=66 */
%   | | | else return 0.0017664894776479407;  // std dev = 5.084, 188.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #pos=304 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033594459244928467;  // std dev = 0.475, 4,032.000 (wgt'ed) examples reached here.  /* #neg=2,630 #pos=1,402 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.004733226194162968;  // std dev = 6.811, 353.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=56 */
%   | | | else return 0.08453461366449223;  // std dev = 3.379, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.021198263062175773;  // std dev = 5.567, 208.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=39 */
%   | | | else return -0.15908282846631608;  // std dev = 0.147, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.602929
   AUC PR    = 0.586357
   CLL	      = -0.629807
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 173.909 seconds
Total inference time: 2.103 seconds
AUC ROC: 0.602929


Results scoring model
   AUC ROC   = 0.64214
   AUC PR    = 0.581281
   CLL	      = -0.587797
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 3.118 seconds
Refined model CLL: -0.587797


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602929
   AUC PR    = 0.586357
   CLL	      = -0.629807
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 186.08499999999998 seconds
Total inference time: 2.103 seconds
AUC ROC: 0.602929
Total revision time: 186.08499999999998
Best scored revision CLL: -0.587797


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 17:33:21
{'AUC ROC': 0.602929, 'AUC PR': 0.586357, 'CLL': -0.629807, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 186.08499999999998, 'Inference time': 2.103, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637758, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.694, 'Inference time': 1.461}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 8.611 seconds
Total inference time: 1.395 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.388 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.41979277071595067;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.06245001036832955;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.22656998773109246;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.20479294529491923;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.36066811573482954;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.05467667644457017;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.17857635589174936;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12470259009449204;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015535706605315773;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.036705573117142544;  // std dev = 6.441, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.152193291559793;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11129760586668029;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0672563474679131;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.012251745206846248;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03330421130868604;  // std dev = 6.439, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.31381817704302173;  // std dev = 3.526, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return 0.03389334870911607;  // std dev = 4.478, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | else return 0.12699647149554205;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.00793807800466127;  // std dev = 7.691, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.08155395303428119;  // std dev = 3.727, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.038712363116221;  // std dev = 6.517, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.15282213481115228;  // std dev = 0.064, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10446288558191662;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09439808887265376;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.058327279177661215;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.04154889535491505;  // std dev = 3.639, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.011233356354635772;  // std dev = 9.403, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08473919142196401;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09495798084103882;  // std dev = 3.482, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0815947512941003;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.004417461185505349;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025693121547367036;  // std dev = 6.412, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06800434600306227;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0768954016274818;  // std dev = 3.489, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05530962743593103;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.004459238461156334;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02047809721838502;  // std dev = 6.415, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05411397846296524;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07787635855583563;  // std dev = 3.473, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07448077677014467;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0020709995871413074;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020118518640059556;  // std dev = 6.405, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04277822069739662;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.061864218257068025;  // std dev = 3.479, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05200624148955783;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.002317845384734134;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015949567169719195;  // std dev = 6.406, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03364587909508529;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1960730317832805;  // std dev = 1.553, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.001792817901307453;  // std dev = 3.377, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 4.7472801075159606E-4;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015720234929022425;  // std dev = 6.399, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */


Results
   AUC ROC   = 0.603248
   AUC PR    = 0.586953
   CLL	      = -0.629794
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 220.605 seconds
Total inference time: 1.814 seconds
AUC ROC: 0.603248


Results scoring model
   AUC ROC   = 0.633548
   AUC PR    = 0.571293
   CLL	      = -0.588735
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 3.655 seconds
Refined model CLL: -0.588735


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.603248
   AUC PR    = 0.586953
   CLL	      = -0.629794
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 235.259 seconds
Total inference time: 1.814 seconds
AUC ROC: 0.603248
Total revision time: 235.259
Best scored revision CLL: -0.588735


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 17:37:21
{'AUC ROC': 0.603248, 'AUC PR': 0.586953, 'CLL': -0.629794, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 235.259, 'Inference time': 1.814, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 8.611, 'Inference time': 1.395}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.1758847841561112;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.69e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.15309773577158037;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.15e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.1309478377875883;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.11023724291193439;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.09152508795018865;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.07510457286203133;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06103796597757267;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 2.11e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.0492198348589414;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.03944289201242138;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.031452103791215436;  // std dev = 16.948, 1,325.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=421 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.72238
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.039 seconds
Total inference time: 1.192 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.573022
   AUC PR    = 0.511266
   CLL	      = -0.60088
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.146045
   F1        = 0.254867


Total scoring time: 1.763 seconds
Parameter learned model CLL: -0.60088


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.15e-07, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.83e-08, 0, 72], 'false': [16.948, 904, 421]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.94e-08, 0, 72], 'false': [16.948, 904, 421]}]]
[{'': [-1.282924384011292e-15, 0.21677977928086614]}, {'': [3.9474596431116675e-16, 0.2167797792808697]}, {'': [6.41462192005646e-16, 0.21677977928086653]}, {'': [-9.868649107779169e-17, 0.21677977928089034]}, {'': [-3.4540271877227093e-16, 0.21677977928089495]}, {'': [-1.2335811384723961e-17, 0.2167797792808878]}, {'': [-8.635067969306773e-17, 0.21677977928087094]}, {'': [6.1679056923619804e-18, 0.2167797792808844]}, {'': [6.47630097698008e-17, 0.21677977928088565]}, {'': [3.39234813079909e-17, 0.21677977928088832]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19317431581016736;  // std dev = 0.472, 1,182.000 (wgt'ed) examples reached here.  /* #neg=786 #pos=396 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.07126368919787303;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.05988385178573361;  // std dev = 2.142, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.69e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16799558858323868;  // std dev = 0.472, 1,182.000 (wgt'ed) examples reached here.  /* #neg=786 #pos=396 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.062365463271554525;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.21423003928420992;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.05274937743147206;  // std dev = 2.142, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.15e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1432988003735745;  // std dev = 0.472, 1,182.000 (wgt'ed) examples reached here.  /* #neg=786 #pos=396 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.15890863909622224;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.09948892933852606;  // std dev = 3.797, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04671809835063147;  // std dev = 2.142, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12010732744929321;  // std dev = 0.472, 1,182.000 (wgt'ed) examples reached here.  /* #neg=786 #pos=396 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.04322879186815899;  // std dev = 3.188, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.1643211449789515;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.04157005283354148;  // std dev = 2.142, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7641240236717103;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04983830938599624;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0.09832091486341676;  // std dev = 0.472, 1,158.000 (wgt'ed) examples reached here.  /* #neg=771 #pos=387 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.14405009949437184;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07297050377335981;  // std dev = 3.788, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03713900381219305;  // std dev = 2.142, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08076516823952647;  // std dev = 0.472, 1,182.000 (wgt'ed) examples reached here.  /* #neg=786 #pos=396 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.19040018376993256;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07366354489922382;  // std dev = 3.745, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return -0.03446694080325324;  // std dev = 2.143, 63.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4549268382053382;  // std dev = 10.061, 510.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=368 */
%   | | | else return -0.2351715096986847;  // std dev = 4.047, 685.000 (wgt'ed) examples reached here.  /* #neg=669 #pos=16 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06814469691747597;  // std dev = 2.810, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | | else return 0.1346399910662426;  // std dev = 2.086, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.5636712874301043;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05015935398288396;  // std dev = 2.733, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return -0.08253692021559704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 2.11e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3577457792356254;  // std dev = 10.052, 510.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=368 */
%   | | | else return -0.19300502807054465;  // std dev = 4.017, 685.000 (wgt'ed) examples reached here.  /* #neg=669 #pos=16 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.11830404188316995;  // std dev = 1.610, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.03832742579824541;  // std dev = 3.104, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.4398435804684237;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.042023353686979514;  // std dev = 2.733, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return -0.07649834053536295;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2721564208321972;  // std dev = 10.047, 510.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=368 */
%   | | | else return -0.17061804236290207;  // std dev = 3.332, 686.000 (wgt'ed) examples reached here.  /* #neg=675 #pos=11 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.11539477979932702;  // std dev = 3.414, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return -0.0376985127713992;  // std dev = 1.757, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.331539095230521;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.03502114963004678;  // std dev = 2.733, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return -0.07126607440971561;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2047331430228732;  // std dev = 10.045, 510.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=368 */
%   | | | else return -0.1462285249114076;  // std dev = 3.316, 686.000 (wgt'ed) examples reached here.  /* #neg=675 #pos=11 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.06918576956507237;  // std dev = 3.833, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return -0.1931767335362868;  // std dev = 0.209, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.2494547239663584;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.029056219032986108;  // std dev = 2.733, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return -0.06669089799446573;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.93212
   AUC PR    = 0.92234
   CLL	      = -0.421415
   Precision = 0.897623 at threshold = 0.5
   Recall    = 0.892727
   F1        = 0.895169


Total learning time: 1021.455 seconds
Total inference time: 2.91 seconds
AUC ROC: 0.93212


Results scoring model
   AUC ROC   = 0.918737
   AUC PR    = 0.833241
   CLL	      = -0.38038
   Precision = 0.765921 at threshold = 0.5
   Recall    = 0.902637
   F1        = 0.828678


Total scoring time: 12.801 seconds
Refined model CLL: -0.38038


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.93212
   AUC PR    = 0.92234
   CLL	      = -0.421415
   Precision = 0.897623 at threshold = 0.5
   Recall    = 0.892727
   F1        = 0.895169


Total learning time: 1039.058 seconds
Total inference time: 2.91 seconds
AUC ROC: 0.93212
Total revision time: 1039.058
Best scored revision CLL: -0.38038


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 17:54:45
{'AUC ROC': 0.93212, 'AUC PR': 0.92234, 'CLL': -0.421415, 'Precision': [0.897623, 0.5], 'Recall': 0.892727, 'F1': 0.895169, 'Learning time': 1039.058, 'Inference time': 2.91, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.72238, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 3.039, 'Inference time': 1.192}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9.23e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.17433652965321375;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.1517623058874275;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.26e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.12983721432335804;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.54e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.10934505673021659;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.80e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.0908310182008945;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.07458033682082046;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.46e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.060652801026387995;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.0489443912132384;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.03925140240272693;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else return 0.031323203975737623;  // std dev = 23.910, 2,644.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=836 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.723631
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.516 seconds
Total inference time: 1.157 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.576065
   AUC PR    = 0.516414
   CLL	      = -0.598677
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15213
   F1        = 0.264085


Total scoring time: 1.871 seconds
Parameter learned model CLL: -0.598677


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.23e-07, 0, 150], 'false': [23.91, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 150], 'false': [23.91, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.26e-07, 0, 150], 'false': [23.91, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.54e-07, 0, 150], 'false': [23.91, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 150], 'false': [23.91, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 150], 'false': [23.91, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 150], 'false': [23.91, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 150], 'false': [23.91, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 150], 'false': [23.91, 1, 836]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.66e-08, 0, 150], 'false': [23.91, 1, 836]}]]
[{'': [5.684341886080802e-15, 0.21621299960407245]}, {'': [-2.4632148173016807e-15, 0.21621299960402987]}, {'': [1.8474111129762605e-15, 0.21621299960405121]}, {'': [1.3737159558028603e-15, 0.2162129996040741]}, {'': [5.210646728907401e-16, 0.2162129996040189]}, {'': [-1.6579330501069005e-16, 0.21621299960405765]}, {'': [4.026408835973901e-16, 0.21621299960404228]}, {'': [-3.019806626980426e-16, 0.21621299960403823]}, {'': [-3.552713678800501e-17, 0.21621299960402576]}, {'': [2.960594732333751e-17, 0.21621299960403087]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9.23e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19178906395362602;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.07366617647882205;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.5248156017661781;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.37666745361803083;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03745927992709797;  // std dev = 4.619, 145.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=26 */
%   | | | else return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03904732658273066;  // std dev = 3.142, 107.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16680297909540862;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.06446011651349152;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4482956062419621;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.32437884151130014;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03283792679134288;  // std dev = 4.619, 145.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=26 */
%   | | | else return 0.1215686723676004;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03436026422541613;  // std dev = 3.142, 107.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.26e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14231271580789434;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.05600660698794328;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.362363346322623;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.2685825285923573;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02868474513689362;  // std dev = 4.619, 145.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=26 */
%   | | | else return 0.10457401954231127;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.030344189698696046;  // std dev = 3.142, 107.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.54e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11932280308416246;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.048354038058499096;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.28075385369658523;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.21495192589405884;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.15433234891268666;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.05040508245372441;  // std dev = 5.239, 165.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=35 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.026880697512418297;  // std dev = 3.142, 107.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.80e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09854701390837066;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.04151344525872211;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21248070121827126;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.16769453154858402;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02041775595105575;  // std dev = 4.608, 145.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=26 */
%   | | | else return 0.08089118761972736;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.02387685258152199;  // std dev = 3.142, 107.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08036594228011526;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.03546588965795498;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15948988228171201;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.1286166480029106;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.13765170315704636;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.03865364909730045;  // std dev = 5.236, 165.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=35 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.021258755148596726;  // std dev = 3.142, 107.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.46e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06486765831378927;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.030170424868076803;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09828809883972608;  // std dev = 2.835, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.12238596814343078;  // std dev = 2.715, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.12211157357859025;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.03305704557838286;  // std dev = 5.236, 165.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=35 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01896694750972185;  // std dev = 3.142, 107.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=11 */
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.051929442755792976;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.025571581624746965;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09130051527582432;  // std dev = 2.941, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.07217600433358047;  // std dev = 2.599, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.10345411572767323;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028312904534815782;  // std dev = 5.147, 164.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=34 */
%   | | | else return -0.017642701103550526;  // std dev = 3.141, 110.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04130346720213382;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.021605749506803912;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.054756682288210866;  // std dev = 2.837, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.07090122805676127;  // std dev = 2.713, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08939454393125058;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024137041532808715;  // std dev = 5.147, 164.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=34 */
%   | | | else return -0.015825277263228382;  // std dev = 3.141, 110.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03268608559616247;  // std dev = 21.980, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=725 */
%   | | | else return 0.018206208735185143;  // std dev = 4.429, 116.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.053320539395939656;  // std dev = 2.940, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.03974053725838161;  // std dev = 2.601, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.11483823051881624;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07801866085229012;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.012134647118956008;  // std dev = 6.020, 262.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=45 */


Results
   AUC ROC   = 0.682467
   AUC PR    = 0.722643
   CLL	      = -0.708828
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 581.59 seconds
Total inference time: 2.732 seconds
AUC ROC: 0.682467


Results scoring model
   AUC ROC   = 0.631001
   AUC PR    = 0.558526
   CLL	      = -0.584104
   Precision = 0.931217 at threshold = 0.5
   Recall    = 0.178499
   F1        = 0.299574


Total scoring time: 16.659 seconds
Refined model CLL: -0.584104


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682467
   AUC PR    = 0.722643
   CLL	      = -0.708828
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 604.6360000000001 seconds
Total inference time: 2.732 seconds
AUC ROC: 0.682467
Total revision time: 604.6360000000001
Best scored revision CLL: -0.584104


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 18:04:54
{'AUC ROC': 0.682467, 'AUC PR': 0.722643, 'CLL': -0.708828, 'Precision': [0.978261, 0.5], 'Recall': 0.163636, 'F1': 0.280374, 'Learning time': 604.6360000000001, 'Inference time': 2.732, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.723631, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.516, 'Inference time': 1.157}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.17096555110761255;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.14885394102631017;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.92e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.12741645981358057;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.10739776486827975;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.53e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.0893133280678476;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.07e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.0734313926075896;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.05980638505205149;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452774;  // std dev = 1.30e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.04833721505831056;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.03882776634513907;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else return 0.031036796506367714;  // std dev = 29.132, 3,948.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,235 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726396
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 6.06 seconds
Total inference time: 1.177 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.58277
   AUC PR    = 0.527632
   CLL	      = -0.593827
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165541
   F1        = 0.284058


Total scoring time: 2.262 seconds
Parameter learned model CLL: -0.593827


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 245], 'false': [29.132, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 245], 'false': [29.132, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.92e-07, 0, 245], 'false': [29.132, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 245], 'false': [29.132, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 245], 'false': [29.132, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-07, 0, 245], 'false': [29.132, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 245], 'false': [29.132, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.3e-07, 0, 245], 'false': [29.132, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 245], 'false': [29.132, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.66e-08, 0, 245], 'false': [29.132, 2, 1]}]]
[{'': [4.640279090678205e-15, 0.214962380757369]}, {'': [-4.29225815887734e-15, 0.21496238075738175]}, {'': [9.860593067691186e-16, 0.21496238075734714]}, {'': [-2.6101569885064907e-16, 0.21496238075730797]}, {'': [2.6101569885064907e-16, 0.2149623807573246]}, {'': [3.842731121967889e-16, 0.21496238075731117]}, {'': [3.407704957216807e-16, 0.21496238075731483]}, {'': [6.887914275225461e-17, 0.2149623807573544]}, {'': [-1.7763568394002506e-16, 0.2149623807573539]}, {'': [1.8126090197961738e-17, 0.21496238075738092]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18788699365112507;  // std dev = 26.780, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,175 #pos=1,070 */
%   | | | else return 0.1111609832922826;  // std dev = 5.601, 166.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4117203636709398;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   | | | else return 0.45814893509951143;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02114452981316777;  // std dev = 5.565, 227.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=37 */
%   | | | else return 0.0826387310178797;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.01446252986864062;  // std dev = 4.178, 157.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16344260147824313;  // std dev = 26.780, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,175 #pos=1,070 */
%   | | | else return 0.09708346644804931;  // std dev = 5.601, 166.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35388888343005076;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   | | | else return 0.39279418357704854;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.018551076837156358;  // std dev = 5.565, 227.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=37 */
%   | | | else return 0.07227843473319008;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.012711118033908089;  // std dev = 4.178, 157.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.92e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13953178220916682;  // std dev = 26.780, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,175 #pos=1,070 */
%   | | | else return 0.0838750015395263;  // std dev = 5.601, 166.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2913376775012404;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   | | | else return 0.32092546969114233;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09675222078323568;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.09668565064253841;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.01988576282654963;  // std dev = 7.409, 401.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=66 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11710703913405383;  // std dev = 26.780, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,175 #pos=1,070 */
%   | | | else return 0.07175894004175715;  // std dev = 5.601, 166.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2312345472440194;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   | | | else return 0.25206564481433025;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.08504649656033389;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.032422432849986166;  // std dev = 6.185, 256.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=47 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.013405281070434302;  // std dev = 4.177, 157.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=20 */
%   | | | else return -0.1143143540985283;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.53e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09684227295978233;  // std dev = 26.780, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,175 #pos=1,070 */
%   | | | else return 0.060865389921920116;  // std dev = 5.601, 166.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19256227097672454;  // std dev = 3.493, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.1757624223832485;  // std dev = 3.353, 45.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01312803775643288;  // std dev = 5.550, 227.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=37 */
%   | | | else return 0.05581724638035176;  // std dev = 2.920, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.01179145764773454;  // std dev = 4.177, 157.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=20 */
%   | | | else return -0.10324070345294133;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.07e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07910032013385396;  // std dev = 26.776, 3,252.000 (wgt'ed) examples reached here.  /* #neg=2,183 #pos=1,069 */
%   | | | else return 0.049919275781837004;  // std dev = 5.622, 159.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1457694829652819;  // std dev = 3.492, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.1336041478961084;  // std dev = 3.353, 45.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.07686406744649471;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.02531467714709685;  // std dev = 6.184, 256.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=47 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.010384763431617148;  // std dev = 4.177, 157.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=20 */
%   | | | else return -0.09406640853393303;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06405445393718083;  // std dev = 26.779, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,175 #pos=1,070 */
%   | | | else return 0.04108088803302032;  // std dev = 5.604, 166.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10170517064776195;  // std dev = 3.724, 56.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   | | | else return 0.11069872534136793;  // std dev = 3.093, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.09257272353921796;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06859121163058571;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.013300501768994999;  // std dev = 7.395, 401.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=66 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452774;  // std dev = 1.30e-07, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05142956843895223;  // std dev = 26.774, 3,252.000 (wgt'ed) examples reached here.  /* #neg=2,183 #pos=1,069 */
%   | | | else return 0.03219686451953732;  // std dev = 5.626, 159.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0827683653113649;  // std dev = 3.490, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.07509553351767584;  // std dev = 3.355, 45.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06160700878945043;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.02100119351495378;  // std dev = 6.180, 256.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=47 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.010589759506319475;  // std dev = 4.176, 157.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=20 */
%   | | | else return -0.08740570157441743;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04100945407649011;  // std dev = 26.774, 3,252.000 (wgt'ed) examples reached here.  /* #neg=2,183 #pos=1,069 */
%   | | | else return 0.02632883249708257;  // std dev = 5.627, 159.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.062124559938630426;  // std dev = 3.490, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.05634451517848078;  // std dev = 3.355, 45.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05564320579820873;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018124455120863626;  // std dev = 6.179, 256.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=47 */
%   | | | else return -0.012794282230175601;  // std dev = 4.181, 165.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 245.000 (wgt'ed) examples reached here.  /* #pos=245 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.032558831350827246;  // std dev = 26.778, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,175 #pos=1,070 */
%   | | | else return 0.021470318319917837;  // std dev = 5.608, 166.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04249254337746645;  // std dev = 3.726, 56.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   | | | else return 0.04758788570921613;  // std dev = 3.091, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08553152990107521;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017339313404827163;  // std dev = 6.173, 258.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=47 */
%   | | | else return -0.010089019258428509;  // std dev = 4.179, 163.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=20 */


Results
   AUC ROC   = 0.685329
   AUC PR    = 0.724739
   CLL	      = -0.711644
   Precision = 0.961538 at threshold = 0.5
   Recall    = 0.181818
   F1        = 0.30581


Total learning time: 893.338 seconds
Total inference time: 2.577 seconds
AUC ROC: 0.685329


Results scoring model
   AUC ROC   = 0.635026
   AUC PR    = 0.565842
   CLL	      = -0.581731
   Precision = 0.879765 at threshold = 0.5
   Recall    = 0.202703
   F1        = 0.329489


Total scoring time: 24.695 seconds
Refined model CLL: -0.581731


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.685329
   AUC PR    = 0.724739
   CLL	      = -0.711644
   Precision = 0.961538 at threshold = 0.5
   Recall    = 0.181818
   F1        = 0.30581


Total learning time: 926.355 seconds
Total inference time: 2.577 seconds
AUC ROC: 0.685329
Total revision time: 926.355
Best scored revision CLL: -0.581731


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 18:20:25
{'AUC ROC': 0.685329, 'AUC PR': 0.724739, 'CLL': -0.711644, 'Precision': [0.961538, 0.5], 'Recall': 0.181818, 'F1': 0.30581, 'Learning time': 926.355, 'Inference time': 2.577, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726396, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 6.06, 'Inference time': 1.177}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.05e-06, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.17037559416016507;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.14834483870626777;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.1269924330329915;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.10705629745220542;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.08904679673554275;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.07322924791357159;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.05965714509338304;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.83e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.048229890580625136;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.03875266686669422;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else return 0.03098584679078052;  // std dev = 33.605, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,642 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726886
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 8.607 seconds
Total inference time: 1.16 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583882
   AUC PR    = 0.529443
   CLL	      = -0.592999
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167765
   F1        = 0.287326


Total scoring time: 2.897 seconds
Parameter learned model CLL: -0.592999


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 331], 'false': [33.605, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [33.605, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [33.605, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [33.605, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [33.605, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.91e-07, 0, 331], 'false': [33.605, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 331], 'false': [33.605, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 331], 'false': [33.605, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [33.605, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 331], 'false': [33.605, 3, 1]}]]
[{'': [3.34878147367298e-15, 0.21474117243242055]}, {'': [-5.0661053063257895e-15, 0.21474117243247134]}, {'': [-5.151971497958431e-16, 0.21474117243245047]}, {'': [-9.874612037753659e-16, 0.21474117243250573]}, {'': [-6.86929533061124e-16, 0.2147411724324597]}, {'': [4.615307800254427e-16, 0.21474117243244673]}, {'': [1.878322941964011e-16, 0.21474117243247573]}, {'': [2.4149866396680143e-16, 0.2147411724325076]}, {'': [-2.2808207152420137e-16, 0.21474117243245722]}, {'': [-2.1466547908160128e-16, 0.21474117243247542]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.05e-06, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18787243740365464;  // std dev = 30.970, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,909 #pos=1,431 */
%   | | | else return 0.1210597332215787;  // std dev = 6.425, 213.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3884519654025414;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.3675828973636622;  // std dev = 3.639, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.017384603889321074;  // std dev = 6.484, 314.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=50 */
%   | | | else return 0.11901850031690368;  // std dev = 3.648, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.014300044492324773;  // std dev = 4.670, 196.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16343006331766968;  // std dev = 30.970, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,909 #pos=1,431 */
%   | | | else return 0.10567495209284218;  // std dev = 6.425, 213.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.33431302482021075;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.3167116112657528;  // std dev = 3.639, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015255182790311711;  // std dev = 6.484, 314.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=50 */
%   | | | else return 0.10390401933018605;  // std dev = 3.648, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.012568208698381439;  // std dev = 4.670, 196.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=25 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13952139922005646;  // std dev = 30.970, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,909 #pos=1,431 */
%   | | | else return 0.09115940470410036;  // std dev = 6.425, 213.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.27627340837932696;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.26262522285397644;  // std dev = 3.639, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013364749347530016;  // std dev = 6.484, 314.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=50 */
%   | | | else return 0.0896597848420155;  // std dev = 3.648, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0110607557704332;  // std dev = 4.670, 196.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=25 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11709875724995002;  // std dev = 30.970, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,909 #pos=1,431 */
%   | | | else return 0.0778012533917989;  // std dev = 6.425, 213.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.22048316970840073;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.21064686189562248;  // std dev = 3.639, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07857844434312579;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03173052607656742;  // std dev = 7.307, 354.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=66 */
%   | | | else return -0.013347386456147463;  // std dev = 4.677, 204.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09694221026156948;  // std dev = 30.964, 4,345.000 (wgt'ed) examples reached here.  /* #neg=2,915 #pos=1,430 */
%   | | | else return 0.06280933909080036;  // std dev = 6.451, 208.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1723338445501552;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.16315510392697466;  // std dev = 3.526, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07181305886323354;  // std dev = 0.272, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0689664156305607;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.017149153563417667;  // std dev = 8.569, 533.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=89 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07921673883899212;  // std dev = 30.964, 4,345.000 (wgt'ed) examples reached here.  /* #neg=2,915 #pos=1,430 */
%   | | | else return 0.05217506498948713;  // std dev = 6.452, 208.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13222497862586652;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.12490545089722652;  // std dev = 3.526, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008427831428445049;  // std dev = 6.473, 314.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=50 */
%   | | | else return 0.06929209649827636;  // std dev = 3.647, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.010091927931240637;  // std dev = 4.670, 196.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=25 */
%   | | | else return -0.1019438599020985;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06412261169174424;  // std dev = 30.968, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,909 #pos=1,431 */
%   | | | else return 0.042638556066203516;  // std dev = 6.432, 213.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10148228563319582;  // std dev = 4.056, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.09363686003021397;  // std dev = 3.638, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06192447493336981;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022958220632900785;  // std dev = 7.300, 354.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=66 */
%   | | | else return -0.012195830107885122;  // std dev = 4.676, 204.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=25 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.83e-07, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05148033571904424;  // std dev = 30.963, 4,345.000 (wgt'ed) examples reached here.  /* #neg=2,915 #pos=1,430 */
%   | | | else return 0.03376262198874759;  // std dev = 6.456, 208.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07674396167152987;  // std dev = 4.154, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.0700012992177956;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05503964877814414;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06657503595171582;  // std dev = 1.358, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.012148823111545057;  // std dev = 8.560, 533.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=89 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04104063429909665;  // std dev = 30.962, 4,345.000 (wgt'ed) examples reached here.  /* #neg=2,915 #pos=1,430 */
%   | | | else return 0.027560938022740757;  // std dev = 6.457, 208.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05848109089231734;  // std dev = 4.056, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.051971041667979334;  // std dev = 3.637, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04918347770394813;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018747802942459372;  // std dev = 7.297, 354.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=66 */
%   | | | else return -0.012107608371204424;  // std dev = 4.675, 204.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=25 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #pos=331 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0325904198727901;  // std dev = 30.967, 4,340.000 (wgt'ed) examples reached here.  /* #neg=2,909 #pos=1,431 */
%   | | | else return 0.021890776095651147;  // std dev = 6.436, 213.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.044238803592898876;  // std dev = 4.155, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.03827202516645152;  // std dev = 3.524, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.003184199748680617;  // std dev = 6.464, 314.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=50 */
%   | | | else return 0.04966928543026374;  // std dev = 3.646, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.007387231745585647;  // std dev = 4.669, 196.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=25 */
%   | | | else return -0.09196216616806653;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.686113
   AUC PR    = 0.724907
   CLL	      = -0.71262
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1315.108 seconds
Total inference time: 2.501 seconds
AUC ROC: 0.686113


Results scoring model
   AUC ROC   = 0.631554
   AUC PR    = 0.562082
   CLL	      = -0.582741
   Precision = 0.966102 at threshold = 0.5
   Recall    = 0.17334
   F1        = 0.293941


Total scoring time: 38.655 seconds
Refined model CLL: -0.582741


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.686113
   AUC PR    = 0.724907
   CLL	      = -0.71262
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1365.2669999999998 seconds
Total inference time: 2.501 seconds
AUC ROC: 0.686113
Total revision time: 1365.2669999999998
Best scored revision CLL: -0.582741


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 18:43:15
{'AUC ROC': 0.686113, 'AUC PR': 0.724907, 'CLL': -0.71262, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1365.2669999999998, 'Inference time': 2.501, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726886, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 8.607, 'Inference time': 1.16}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 10.769 seconds
Total inference time: 1.135 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 2.598 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16281165607612214;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.11705241862532777;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06261940488996087;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06323004872688665;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.025921138191458425;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1390268379046684;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.10051288053749483;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26507324162691553;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05559667967238913;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.055084618573868996;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.022691409711711318;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11683219078218114;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.08298829629729197;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611727;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2030841315177579;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.048734191123617925;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02733169391866797;  // std dev = 8.050, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0037736065018017777;  // std dev = 5.545, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09665825156236615;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068729;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16750919730103575;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566578;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008672590053361325;  // std dev = 7.208, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07769639674183355;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0040235781144893;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.13044701690204677;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07907700488650458;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.0558863706641964;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12986669782561078;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224823;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007574868356870877;  // std dev = 7.208, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06740070385088068;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0035035606342219573;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11634989991049127;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06396870506991867;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.04604740227441127;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180404;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.0916685149520168;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.053703462155937194;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.04596569664964112;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.014846387978926047;  // std dev = 9.616, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05138426195928961;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.03655677066814333;  // std dev = 7.313, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07571056108472919;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.06819952394789884;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.03460647156679576;  // std dev = 6.050, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.004133981000484829;  // std dev = 5.537, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004838754663282684;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1063135108176487;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04096665694210108;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.029779817532989708;  // std dev = 7.313, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05701581049807259;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.05139607927611458;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004517729748541199;  // std dev = 7.203, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.051306811483035605;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004210866889324207;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09662710189042877;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03254059057397934;  // std dev = 34.597, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.023261103854103873;  // std dev = 7.315, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04397811944449321;  // std dev = 4.698, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.03714691937067903;  // std dev = 4.051, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.04928268209040069;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.01597859568019958;  // std dev = 8.028, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0036661677587200912;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.08851498736345625;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.684922
   AUC PR    = 0.724545
   CLL	      = -0.712647
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1644.928 seconds
Total inference time: 2.457 seconds
AUC ROC: 0.684922


Results scoring model
   AUC ROC   = 0.628984
   AUC PR    = 0.560099
   CLL	      = -0.583783
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 38.555 seconds
Refined model CLL: -0.583783


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.684922
   AUC PR    = 0.724545
   CLL	      = -0.712647
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1696.8500000000001 seconds
Total inference time: 2.457 seconds
AUC ROC: 0.684922
Total revision time: 1696.8500000000001
Best scored revision CLL: -0.583783


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 19:11:36
{'AUC ROC': 0.684922, 'AUC PR': 0.724545, 'CLL': -0.712647, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1696.8500000000001, 'Inference time': 2.457, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 10.769, 'Inference time': 1.135}}


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.20159093661580765;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.17523791384838794;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.26e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.14927707281271563;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.12485062235191884;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.10277815813164795;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.0834990904294648;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.06711730515638646;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.05349653183904019;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.042360337533998225;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.03337199436074511;  // std dev = 17.246, 1,319.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=453 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555889
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 3.14 seconds
Total inference time: 1.133 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.571834
   AUC PR    = 0.53204
   CLL	      = -0.616637
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.143667
   F1        = 0.25124


Total scoring time: 1.846 seconds
Parameter learned model CLL: -0.616637


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [17.246, 866, 453]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 76], 'false': [17.246, 866, 453]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 76], 'false': [17.246, 866, 453]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [17.246, 866, 453]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [17.246, 866, 453]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [17.246, 866, 453]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [17.246, 866, 453]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 76], 'false': [17.246, 866, 453]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 76], 'false': [17.246, 866, 453]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 76], 'false': [17.246, 866, 453]}]]
[{'': [-1.3088945132422897e-15, 0.22548959311076253]}, {'': [5.609547913895527e-16, 0.22548959311079037]}, {'': [1.402386978473882e-15, 0.2254895931107764]}, {'': [-9.349246523159212e-17, 0.22548959311076505]}, {'': [-3.8565641908031755e-16, 0.22548959311076602]}, {'': [-1.1686558153949016e-17, 0.22548959311079192]}, {'': [-9.933574430856664e-17, 0.22548959311078656]}, {'': [1.1686558153949016e-17, 0.2254895931107814]}, {'': [7.596262800066861e-17, 0.225489593110774]}, {'': [3.7981314000334304e-17, 0.22548959311077835]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2164130163552785;  // std dev = 15.780, 1,083.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=388 */
%   | | | else return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.6081489350995123;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.12203782398840121;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.01685106490048774;  // std dev = 1.871, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02481560176617901;  // std dev = 2.415, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18797600387388755;  // std dev = 15.780, 1,083.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=388 */
%   | | | else return 0.12992741117034426;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3555557392714991;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.5170719622367218;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return -0.0069854920010730326;  // std dev = 0.918, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.14003524648779356;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.07468653338351078;  // std dev = 4.114, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | | else return 0.019701603009075797;  // std dev = 2.416, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.26e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1597505747597735;  // std dev = 15.780, 1,083.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=388 */
%   | | | else return 0.11159692245093909;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2926148461096878;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.41257245288266015;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.09698030744505276;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.023094702353946;  // std dev = 1.869, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.020664061732625156;  // std dev = 2.412, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return -0.12427162842719106;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13310671723739206;  // std dev = 15.780, 1,083.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=388 */
%   | | | else return 0.0945831648926329;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.213425447100424;  // std dev = 1.989, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.3432523593975921;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.08305699362545889;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.020204823639189635;  // std dev = 1.869, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.018069156464547733;  // std dev = 2.411, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return -0.11137138108717504;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10903978935017723;  // std dev = 15.780, 1,083.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=388 */
%   | | | else return 0.07923010499398037;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16198836736279715;  // std dev = 1.986, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.264121784333917;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07042670171757259;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.01771509151367017;  // std dev = 1.869, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015769021314978628;  // std dev = 2.411, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return -0.10082054206190741;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08808494364749692;  // std dev = 15.780, 1,083.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=388 */
%   | | | else return 0.06570705557323099;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1072152124314813;  // std dev = 2.075, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.22172839613025178;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05920058593133569;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.015561522870268726;  // std dev = 1.869, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.14776464632146802;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.01272869554287006;  // std dev = 2.407, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.18269311488118423;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.17678400930182214;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07185663535805854;  // std dev = 15.907, 1,103.000 (wgt'ed) examples reached here.  /* #neg=709 #pos=394 */
%   | | | else return 0.11520861888220797;  // std dev = 2.571, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return -0.028179403207282874;  // std dev = 0.897, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.11831968201391331;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.034181050575568125;  // std dev = 4.091, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | | else return 0.013323761413321217;  // std dev = 2.405, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.22865532130607388;  // std dev = 1.743, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.026278826965026814;  // std dev = 2.003, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.006586514455954077;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.23276911752497706;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.056989460442301555;  // std dev = 15.907, 1,103.000 (wgt'ed) examples reached here.  /* #neg=709 #pos=394 */
%   | | | else return 0.08690592024107592;  // std dev = 2.571, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.008286837851551581;  // std dev = 3.488, 86.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=15 */
%   | | | else return 0.048163560308848996;  // std dev = 2.971, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.043842899915568945;  // std dev = 15.750, 1,083.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=388 */
%   | | | else return 0.02996187949568931;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.028141215316721042;  // std dev = 1.970, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.12214019176314321;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009163670071791481;  // std dev = 3.804, 88.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=19 */
%   | | | else return 0.100377373877245;  // std dev = 1.700, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.011840577863130261;  // std dev = 2.405, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return -0.0964431013348267;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6902059665653684;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.29261150699340366;  // std dev = 0.134, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.3245499054902013;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.027122703079766327;  // std dev = 1.988, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.031776235386088036;  // std dev = 15.873, 1,107.000 (wgt'ed) examples reached here.  /* #neg=716 #pos=391 */
%   | | | else return 0.033941188276411335;  // std dev = 2.523, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02339604824386307;  // std dev = 4.078, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | | else return 0.010296410984152267;  // std dev = 2.402, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */


Results
   AUC ROC   = 0.679917
   AUC PR    = 0.622868
   CLL	      = -0.550697
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 244.234 seconds
Total inference time: 2.263 seconds
AUC ROC: 0.679917


Results scoring model
   AUC ROC   = 0.635893
   AUC PR    = 0.586353
   CLL	      = -0.599694
   Precision = 0.896226 at threshold = 0.5
   Recall    = 0.179584
   F1        = 0.299213


Total scoring time: 7.382 seconds
Refined model CLL: -0.599694


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.679917
   AUC PR    = 0.622868
   CLL	      = -0.550697
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 256.602 seconds
Total inference time: 2.263 seconds
AUC ROC: 0.679917
Total revision time: 256.602
Best scored revision CLL: -0.599694


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 19:15:57
{'AUC ROC': 0.679917, 'AUC PR': 0.622868, 'CLL': -0.550697, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 256.602, 'Inference time': 2.263, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555889, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 3.14, 'Inference time': 1.133}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.97e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.19946402441915756;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.1734083711031708;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.14776845801871816;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.42e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.12365575854629551;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.15e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.1018662109458089;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.08282615076142033;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.63e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.06663606020502794;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.0531628183992441;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.04213644558101428;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.03322759635862705;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555607
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.612 seconds
Total inference time: 1.11 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.576015
   AUC PR    = 0.538973
   CLL	      = -0.613674
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15203
   F1        = 0.263934


Total scoring time: 2.058 seconds
Parameter learned model CLL: -0.613674


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.97e-07, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.53e-07, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.15e-07, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 161], 'false': [24.321, 1, 898]}]]
[{'': [6.178632484870436e-15, 0.22481909912239448]}, {'': [-2.7362515290140504e-15, 0.22481909912234552]}, {'': [1.897722834638777e-15, 0.2248190991224029]}, {'': [1.2136599523852642e-15, 0.22481909912236928]}, {'': [6.178632484870436e-16, 0.2248190991224101]}, {'': [-2.3169871818264136e-16, 0.22481909912236167]}, {'': [4.3029761948204827e-16, 0.2248190991223506]}, {'': [-3.1444826039072757e-16, 0.22481909912236556]}, {'': [-2.372153543298471e-16, 0.2248190991223595]}, {'': [5.516636147205747e-17, 0.22481909912237213]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.97e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.19148226843284524;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.21978553870707437;  // std dev = 0.480, 2,273.000 (wgt'ed) examples reached here.  /* #neg=1,451 #pos=822 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.026466449515872396;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.05142624602388162;  // std dev = 6.092, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1908940865266422;  // std dev = 0.480, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,493 #pos=846 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03601800670854125;  // std dev = 4.949, 164.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=30 */
%   | | | else return 0.1023707842054611;  // std dev = 2.448, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.017041492213804122;  // std dev = 3.417, 85.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16214215329868845;  // std dev = 0.480, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,493 #pos=846 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03144679735108873;  // std dev = 4.949, 164.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=30 */
%   | | | else return 0.08901961171718376;  // std dev = 2.447, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.014883840905805391;  // std dev = 3.417, 85.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.42e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13498291059947234;  // std dev = 0.480, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,493 #pos=846 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.012583093620407368;  // std dev = 1.587, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.14636560206579488;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04032586200310318;  // std dev = 5.285, 175.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=35 */
%   | | | else return 0.008886299303086563;  // std dev = 3.419, 90.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.15e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11045427267824802;  // std dev = 0.480, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,493 #pos=846 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.025925636452067025;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.10538407300686735;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03241415224814975;  // std dev = 5.294, 179.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=35 */
%   | | | else return 0.012021991517636907;  // std dev = 3.417, 85.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08911404181208102;  // std dev = 0.480, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,493 #pos=846 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.008098897579442405;  // std dev = 1.585, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.13240960455355966;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.025881333240317918;  // std dev = 1.591, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.028164468666208965;  // std dev = 6.084, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.63e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07109371219199555;  // std dev = 0.480, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,493 #pos=846 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.00706628640487326;  // std dev = 1.585, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.11792540865103043;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.027214818840135012;  // std dev = 5.284, 175.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=35 */
%   | | | else return 0.004340047045835119;  // std dev = 3.414, 90.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.056224603157007384;  // std dev = 0.480, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,493 #pos=846 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.02219874479568057;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.09447986948864372;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.02179007351941763;  // std dev = 5.288, 179.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=35 */
%   | | | else return 0.0066156637319997255;  // std dev = 3.415, 85.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.044169127562570853;  // std dev = 0.480, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,493 #pos=846 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.004254782459860241;  // std dev = 1.584, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.1081121134547573;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.023991183736692994;  // std dev = 1.585, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.019000141830052365;  // std dev = 6.083, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03452273355124599;  // std dev = 0.480, 2,339.000 (wgt'ed) examples reached here.  /* #neg=1,493 #pos=846 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.032663073386181504;  // std dev = 4.607, 131.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=27 */
%   | | | else return -0.016637728939052854;  // std dev = 3.010, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0021904065035096955;  // std dev = 3.408, 90.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | | else return -0.13584330771425093;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.680501
   AUC PR    = 0.62421
   CLL	      = -0.542958
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 93.791 seconds
Total inference time: 1.439 seconds
AUC ROC: 0.680501


Results scoring model
   AUC ROC   = 0.613093
   AUC PR    = 0.559383
   CLL	      = -0.604547
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15203
   F1        = 0.263934


Total scoring time: 2.681 seconds
Refined model CLL: -0.604547


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.680501
   AUC PR    = 0.62421
   CLL	      = -0.542958
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 103.142 seconds
Total inference time: 1.439 seconds
AUC ROC: 0.680501
Total revision time: 103.142
Best scored revision CLL: -0.604547


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 19:17:44
{'AUC ROC': 0.680501, 'AUC PR': 0.62421, 'CLL': -0.542958, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 103.142, 'Inference time': 1.439, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555607, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.612, 'Inference time': 1.11}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.19975440483868165;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.17365817738523195;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.14797450871888657;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.12381904009235062;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.73e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.10199091678893075;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.01e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.0829182493171927;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.06670198576660145;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.0532085823241524;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.042167186362325616;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.42e-08, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.03324745125688461;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555644
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 6.418 seconds
Total inference time: 1.146 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575519
   AUC PR    = 0.538189
   CLL	      = -0.614047
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151038
   F1        = 0.262438


Total scoring time: 2.171 seconds
Parameter learned model CLL: -0.614047


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.06e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.15e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 240], 'false': [29.802, 2, 1]}]]
[{'': [4.736951571734001e-15, 0.22491117278344738]}, {'': [-4.263256414560601e-15, 0.2249111727834422]}, {'': [1.0658141036401502e-15, 0.2249111727834472]}, {'': [-1.7763568394002506e-16, 0.22491117278343734]}, {'': [3.108624468950438e-16, 0.22491117278341546]}, {'': [3.774758283725532e-16, 0.22491117278342052]}, {'': [3.552713678800501e-16, 0.22491117278348094]}, {'': [5.551115123125783e-17, 0.22491117278342548]}, {'': [-1.7023419710919068e-16, 0.2249111727834187]}, {'': [3.700743415417188e-17, 0.22491117278346087]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.337315601766178;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.09451257146314873;  // std dev = 3.151, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else return 0.2208187519925964;  // std dev = 0.481, 3,386.000 (wgt'ed) examples reached here.  /* #neg=2,158 #pos=1,228 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0359267128772898;  // std dev = 6.282, 270.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=48 */
%   | | | else return 0.16926004621062346;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026032146778344114;  // std dev = 4.375, 137.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1914046375981103;  // std dev = 0.481, 3,489.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,264 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03149685479984773;  // std dev = 6.282, 270.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=48 */
%   | | | else return 0.14738209092488688;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.022833630349484997;  // std dev = 4.375, 137.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=23 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.162559596395854;  // std dev = 0.481, 3,489.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,264 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.027519455373274306;  // std dev = 6.282, 270.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=48 */
%   | | | else return 0.12619034151790243;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.07649248737529546;  // std dev = 0.962, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.022969087440747653;  // std dev = 4.268, 130.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10440913010805054;  // std dev = 4.648, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | | else return 0.7802158380364358;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.12034876470029528;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   | | | else return 0.1360918599041052;  // std dev = 27.588, 3,291.000 (wgt'ed) examples reached here.  /* #neg=2,096 #pos=1,195 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.2782276605943016;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.025233409329972492;  // std dev = 2.400, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.029629109674350118;  // std dev = 6.509, 277.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=53 */
%   | | | else return 0.012566000931812206;  // std dev = 4.287, 137.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.73e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11068291810599823;  // std dev = 0.480, 3,489.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,264 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.11249467146713815;  // std dev = 2.415, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.024598905249163524;  // std dev = 6.456, 278.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=52 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.013298218511773197;  // std dev = 4.542, 145.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=25 */
%   | | | else return -0.11378214388251247;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.01e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08927864432766808;  // std dev = 0.480, 3,489.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,264 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.09656043748212609;  // std dev = 2.416, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.021234262065858205;  // std dev = 6.456, 278.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=52 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.011511702380954406;  // std dev = 4.542, 145.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=25 */
%   | | | else return -0.10280513196270401;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24145351692072647;  // std dev = 3.325, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | | else return -0.10141160632081261;  // std dev = 2.995, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | else return 0.07200497027370975;  // std dev = 0.481, 3,384.000 (wgt'ed) examples reached here.  /* #neg=2,155 #pos=1,229 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.013156610973707586;  // std dev = 6.263, 270.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=48 */
%   | | | else return 0.09275485639342049;  // std dev = 3.111, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07530630727925991;  // std dev = 0.968, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.01197112112640378;  // std dev = 4.258, 130.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05625786944283567;  // std dev = 0.480, 3,489.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,264 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.07935134507576436;  // std dev = 2.419, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.014914905672568753;  // std dev = 6.445, 278.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=52 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.007964758715694615;  // std dev = 4.543, 145.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=25 */
%   | | | else return -0.09303263495364197;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04418659759964878;  // std dev = 0.480, 3,489.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,264 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.00894088704301014;  // std dev = 6.259, 270.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=48 */
%   | | | else return 0.07331390357605373;  // std dev = 3.114, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.005608061771234148;  // std dev = 4.366, 137.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=23 */
%   | | | else return -0.08547812366095817;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.42e-08, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034530022368337604;  // std dev = 0.480, 3,489.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,264 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.00768348281332827;  // std dev = 6.259, 270.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=48 */
%   | | | else return 0.059777629053120666;  // std dev = 3.114, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.06763681839756726;  // std dev = 0.969, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.008046953426190955;  // std dev = 4.255, 130.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=22 */


Results
   AUC ROC   = 0.681524
   AUC PR    = 0.624936
   CLL	      = -0.542011
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 194.868 seconds
Total inference time: 1.591 seconds
AUC ROC: 0.681524


Results scoring model
   AUC ROC   = 0.623501
   AUC PR    = 0.569921
   CLL	      = -0.604234
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151668
   F1        = 0.263388


Total scoring time: 3.698 seconds
Refined model CLL: -0.604234


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.681524
   AUC PR    = 0.624936
   CLL	      = -0.542011
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 207.155 seconds
Total inference time: 1.591 seconds
AUC ROC: 0.681524
Total revision time: 207.155
Best scored revision CLL: -0.604234


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 19:21:14
{'AUC ROC': 0.681524, 'AUC PR': 0.624936, 'CLL': -0.542011, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 207.155, 'Inference time': 1.591, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555644, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 6.418, 'Inference time': 1.146}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.20039898252883745;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.17421266186486709;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.1484317984467849;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.12418131723017924;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.10226750814507442;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.08312243313050253;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.06684807312659365;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.053309937552682006;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.042235227013489286;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.0332913648372661;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555729
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 8.007 seconds
Total inference time: 1.183 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.574328
   AUC PR    = 0.536253
   CLL	      = -0.614912
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.148655
   F1        = 0.258833


Total scoring time: 2.526 seconds
Parameter learned model CLL: -0.614912


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.72e-07, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}]]
[{'': [3.5188783104309725e-15, 0.22511495246389432]}, {'': [-4.962520694197525e-15, 0.2251149524639738]}, {'': [-3.1579677144893343e-16, 0.22511495246392188]}, {'': [-8.797195776077431e-16, 0.22511495246387936]}, {'': [-4.2858133268069536e-16, 0.22511495246391852]}, {'': [4.3985978880387156e-16, 0.2251149524639026]}, {'': [1.9737298215558337e-16, 0.22511495246393426]}, {'': [2.1992989440193578e-16, 0.22511495246392266]}, {'': [-2.1711028037114172e-16, 0.22511495246394211]}, {'': [-1.8327491200161313e-16, 0.22511495246398097]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4005218164554434;  // std dev = 3.827, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   | | | else return 0.06296821220794611;  // std dev = 3.677, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.22216939318267373;  // std dev = 0.481, 4,497.000 (wgt'ed) examples reached here.  /* #neg=2,860 #pos=1,637 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.047338124288702106;  // std dev = 7.534, 370.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=70 */
%   | | | else return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023042552120788172;  // std dev = 5.088, 188.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=31 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3780038599288913;  // std dev = 3.861, 60.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   | | | else return 0.08443288187263982;  // std dev = 3.857, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.18597104481970214;  // std dev = 5.349, 129.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=46 */
%   | | | else return 0.19197187079935019;  // std dev = 31.793, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,784 #pos=1,587 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.13135799528784167;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.043333091160025206;  // std dev = 7.774, 389.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=75 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.020214382651756273;  // std dev = 5.088, 188.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=31 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3123785496440482;  // std dev = 3.839, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   | | | else return 0.0315940046526541;  // std dev = 3.677, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.16379717925328827;  // std dev = 0.481, 4,497.000 (wgt'ed) examples reached here.  /* #neg=2,860 #pos=1,637 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03457002513019881;  // std dev = 7.528, 370.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=70 */
%   | | | else return 0.1095842061703472;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017694899718153554;  // std dev = 5.088, 188.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=31 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2890767126007801;  // std dev = 3.823, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.04319405931618902;  // std dev = 3.881, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | else return 0.13533208837127722;  // std dev = 0.480, 4,500.000 (wgt'ed) examples reached here.  /* #neg=2,867 #pos=1,633 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.10922585049638077;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.03143370399539989;  // std dev = 7.768, 389.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=75 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.09465012095167111;  // std dev = 0.972, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.019890432556287925;  // std dev = 4.986, 180.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2230758740569243;  // std dev = 3.841, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   | | | else return 0.007996395087179638;  // std dev = 3.677, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1322889277423765;  // std dev = 5.332, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | | else return 0.1108401702897164;  // std dev = 31.793, 4,371.000 (wgt'ed) examples reached here.  /* #neg=2,784 #pos=1,587 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.024411161427423268;  // std dev = 7.523, 370.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=70 */
%   | | | else return 0.08926503928604462;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.014271725242176198;  // std dev = 5.083, 188.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=31 */
%   | | | else return -0.10173473401867188;  // std dev = 0.013, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08940319511945195;  // std dev = 0.480, 4,639.000 (wgt'ed) examples reached here.  /* #neg=2,953 #pos=1,686 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.08954435113575289;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.022122575806434834;  // std dev = 7.763, 389.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=75 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.08405457160703932;  // std dev = 0.972, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.016141930437403914;  // std dev = 4.983, 180.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=30 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07129097226035332;  // std dev = 0.480, 4,639.000 (wgt'ed) examples reached here.  /* #neg=2,953 #pos=1,686 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.016663994637271064;  // std dev = 7.519, 370.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=70 */
%   | | | else return 0.07188355222587069;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.011463548205641421;  // std dev = 5.079, 188.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=31 */
%   | | | else return -0.09291309835359936;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05635657583347542;  // std dev = 0.480, 4,639.000 (wgt'ed) examples reached here.  /* #neg=2,953 #pos=1,686 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.10521036846358545;  // std dev = 3.052, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.08405141098516214;  // std dev = 1.355, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.009657886520059607;  // std dev = 7.459, 378.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=69 */
%   | | | else return 0.0184561846946712;  // std dev = 5.243, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.044255871523237296;  // std dev = 0.480, 4,639.000 (wgt'ed) examples reached here.  /* #neg=2,953 #pos=1,686 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.07116237495025811;  // std dev = 2.930, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.012405469658343334;  // std dev = 7.752, 389.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=75 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.008218716948288825;  // std dev = 5.079, 188.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=31 */
%   | | | else return -0.0848256373656009;  // std dev = 0.021, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034578719332082876;  // std dev = 0.480, 4,639.000 (wgt'ed) examples reached here.  /* #neg=2,953 #pos=1,686 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.08755852759812659;  // std dev = 3.046, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.07476018008136619;  // std dev = 1.357, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.005939215932435456;  // std dev = 7.455, 378.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=69 */
%   | | | else return 0.014087793416056552;  // std dev = 5.243, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */


Results
   AUC ROC   = 0.680912
   AUC PR    = 0.623785
   CLL	      = -0.54219
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 302.558 seconds
Total inference time: 1.898 seconds
AUC ROC: 0.680912


Results scoring model
   AUC ROC   = 0.621492
   AUC PR    = 0.567555
   CLL	      = -0.604314
   Precision = 0.996835 at threshold = 0.5
   Recall    = 0.148655
   F1        = 0.258727


Total scoring time: 4.597 seconds
Refined model CLL: -0.604314


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.680912
   AUC PR    = 0.623785
   CLL	      = -0.54219
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 317.688 seconds
Total inference time: 1.898 seconds
AUC ROC: 0.680912
Total revision time: 317.688
Best scored revision CLL: -0.604314


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 19:26:36
{'AUC ROC': 0.680912, 'AUC PR': 0.623785, 'CLL': -0.54219, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 317.688, 'Inference time': 1.898, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555729, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 8.007, 'Inference time': 1.183}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 10.479 seconds
Total inference time: 1.226 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 2.626 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43157550852608434;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027534;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.1318875444333154;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36841857951468715;  // std dev = 4.779, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4033801023113015;  // std dev = 3.650, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1413166583955482;  // std dev = 3.366, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03792704271485758;  // std dev = 8.509, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16051920012347065;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.11289879459957759;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5691705856824335;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2997973422135981;  // std dev = 5.903, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13590836049502247;  // std dev = 3.360, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03177575488726619;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03152189158325852;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359515;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.09262066068403083;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4409588514077069;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.23642329521857655;  // std dev = 5.902, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.046395179406870886;  // std dev = 7.655, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.016974827785749592;  // std dev = 5.024, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.027323483948747528;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10964998699963206;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.07715451667816071;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3671537701102618;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.18006436484926844;  // std dev = 5.895, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04311190460819151;  // std dev = 7.655, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.011496215074635217;  // std dev = 5.019, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021347363261766974;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809335;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.061407742638899504;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.27536552090073113;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13654793355619846;  // std dev = 5.896, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10874461640749088;  // std dev = 3.358, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019290854772936992;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017972612321618085;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367405;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.050179477894514476;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09049319239433233;  // std dev = 4.734, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.13691565616486395;  // std dev = 3.628, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10536490980147815;  // std dev = 3.352, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.015196823663660724;  // std dev = 8.489, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07530636271194484;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.018981833056580404;  // std dev = 5.767, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05614201621630105;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03947145161643905;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06678554376655763;  // std dev = 4.735, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.10505966755843345;  // std dev = 3.627, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015463526630709771;  // std dev = 8.387, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.05725791077932824;  // std dev = 3.617, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.10666967800902953;  // std dev = 0.956, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01545526966656617;  // std dev = 5.842, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04415728299393082;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03185889646502919;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.046076024341933315;  // std dev = 4.729, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.08596403363751183;  // std dev = 3.632, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0894671735618228;  // std dev = 3.343, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08097856789340227;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011529674000567038;  // std dev = 8.477, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.014164630719423728;  // std dev = 5.767, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03460159906773513;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.024640335297715237;  // std dev = 7.480, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.161936940241106;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.040210132930772136;  // std dev = 5.889, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08519076563236547;  // std dev = 3.339, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.007714473277151145;  // std dev = 8.478, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009549465199747071;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.07794293354663065;  // std dev = 0.032, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.677677
   AUC PR    = 0.622264
   CLL	      = -0.546014
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1356.721 seconds
Total inference time: 2.807 seconds
AUC ROC: 0.677677


Results scoring model
   AUC ROC   = 0.624928
   AUC PR    = 0.573592
   CLL	      = -0.603339
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 37.022 seconds
Refined model CLL: -0.603339


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677677
   AUC PR    = 0.622264
   CLL	      = -0.546014
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1406.848 seconds
Total inference time: 2.807 seconds
AUC ROC: 0.677677
Total revision time: 1406.848
Best scored revision CLL: -0.603339


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 19:50:08
{'AUC ROC': 0.677677, 'AUC PR': 0.622264, 'CLL': -0.546014, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1406.848, 'Inference time': 2.807, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 10.479, 'Inference time': 1.226}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.15342452565068854;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.13370326924355203;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.31e-07, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.11476206802714815;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.09715941513273911;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.08127053505888701;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.06728285391364543;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.05522411769673861;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.045005667226984285;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.03646650117798828;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else return 0.029409960627456398;  // std dev = 16.256, 1,270.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=375 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.803103
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 3.171 seconds
Total inference time: 1.197 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.582405
   AUC PR    = 0.510861
   CLL	      = -0.581697
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164811
   F1        = 0.282983


Total scoring time: 1.753 seconds
Parameter learned model CLL: -0.581697


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 74], 'false': [16.256, 895, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 74], 'false': [16.256, 895, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.31e-07, 0, 74], 'false': [16.256, 895, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 74], 'false': [16.256, 895, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 74], 'false': [16.256, 895, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 74], 'false': [16.256, 895, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 74], 'false': [16.256, 895, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 74], 'false': [16.256, 895, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 74], 'false': [16.256, 895, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 74], 'false': [16.256, 895, 375]}]]
[{'': [-1.4402893292434464e-15, 0.2080879161758141]}, {'': [4.800964430811488e-16, 0.208087916175841]}, {'': [7.201446646217232e-16, 0.20808791617582245]}, {'': [-9.601928861622976e-17, 0.2080879161758324]}, {'': [-3.720747433878903e-16, 0.20808791617583502]}, {'': [-1.200241107702872e-17, 0.20808791617583836]}, {'': [-9.601928861622976e-17, 0.20808791617582506]}, {'': [1.200241107702872e-17, 0.20808791617583458]}, {'': [7.201446646217232e-17, 0.2080879161758336]}, {'': [3.600723323108616e-17, 0.20808791617582456]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.17971382059569072;  // std dev = 0.467, 1,048.000 (wgt'ed) examples reached here.  /* #neg=711 #pos=337 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02481560176617905;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.04040178953816886;  // std dev = 2.508, 69.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15590162727423362;  // std dev = 0.467, 1,081.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.021767884192405756;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return 0.30874113578563506;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.1355588878103311;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.031663546084557855;  // std dev = 2.501, 67.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.31e-07, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1332773016150037;  // std dev = 0.467, 1,081.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.01904987294481072;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return 0.2564123687585864;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.12044531975563594;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.027982699718914265;  // std dev = 2.501, 67.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11210571910312404;  // std dev = 0.467, 1,081.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.016636776392289734;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return 0.2061374073445397;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.10825870799862905;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.024800259136239126;  // std dev = 2.502, 67.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09297586210195233;  // std dev = 0.467, 1,081.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.014502864105143273;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return 0.16162857548414666;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.11216079236540542;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.023033101920222666;  // std dev = 2.501, 69.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07619787582118735;  // std dev = 0.467, 1,081.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=347 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.004189349384739994;  // std dev = 1.329, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.13945539342507518;  // std dev = 0.070, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015256252001854298;  // std dev = 3.364, 108.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=14 */
%   | | | else return 0.054839748184961554;  // std dev = 3.078, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11860669151062299;  // std dev = 2.949, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.2592581705657954;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.06074686470697033;  // std dev = 0.466, 1,041.000 (wgt'ed) examples reached here.  /* #neg=708 #pos=333 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.003651579417191011;  // std dev = 1.329, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.12360466976403106;  // std dev = 0.063, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013419071660121414;  // std dev = 3.365, 108.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=14 */
%   | | | else return 0.04763797323017224;  // std dev = 3.078, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04977231085696313;  // std dev = 0.467, 1,081.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.00895630686189107;  // std dev = 3.854, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return 0.1304450823348425;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.09458491315682774;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.015410974748246046;  // std dev = 2.500, 67.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.08494741670640285;  // std dev = 2.949, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.22109206562666403;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -6.009089549246562E-4;  // std dev = 2.393, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.040106225365305774;  // std dev = 14.854, 1,012.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=325 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.11534475621360431;  // std dev = 1.703, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.08679295279440334;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.022589190385112926;  // std dev = 3.261, 105.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=13 */
%   | | | else return 0.01890767347782643;  // std dev = 2.978, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03166062089315188;  // std dev = 0.467, 1,081.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=347 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.0024283187108078354;  // std dev = 1.336, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.11495949294370718;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.01107096613772032;  // std dev = 3.346, 108.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=14 */
%   | | | else return 0.03696539400398632;  // std dev = 3.075, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */


Results
   AUC ROC   = 0.579714
   AUC PR    = 0.711021
   CLL	      = -0.780278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 66.355 seconds
Total inference time: 1.735 seconds
AUC ROC: 0.579714


Results scoring model
   AUC ROC   = 0.637074
   AUC PR    = 0.543732
   CLL	      = -0.568113
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164811
   F1        = 0.282983


Total scoring time: 2.094 seconds
Refined model CLL: -0.568113


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.579714
   AUC PR    = 0.711021
   CLL	      = -0.780278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 73.37299999999999 seconds
Total inference time: 1.735 seconds
AUC ROC: 0.579714
Total revision time: 73.37299999999999
Best scored revision CLL: -0.568113


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 19:51:25
{'AUC ROC': 0.579714, 'AUC PR': 0.711021, 'CLL': -0.780278, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 73.37299999999999, 'Inference time': 1.735, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.803103, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 3.171, 'Inference time': 1.197}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.39e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.15247517623425902;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.13288248375023445;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.33e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.11407442374772431;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.58e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.0966002339623776;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.80e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.08082822129405268;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.06694180543680435;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.48e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.05496736379115387;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.04481679537055378;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.036330804591786725;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else return 0.029314947652613135;  // std dev = 22.959, 2,538.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=747 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.804258
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.614 seconds
Total inference time: 1.253 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.584076
   AUC PR    = 0.513559
   CLL	      = -0.580383
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168151
   F1        = 0.287893


Total scoring time: 2.048 seconds
Parameter learned model CLL: -0.580383


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.39e-07, 0, 151], 'false': [22.959, 1, 747]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 151], 'false': [22.959, 1, 747]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.33e-07, 0, 151], 'false': [22.959, 1, 747]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 151], 'false': [22.959, 1, 747]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 151], 'false': [22.959, 1, 747]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 151], 'false': [22.959, 1, 747]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.48e-07, 0, 151], 'false': [22.959, 1, 747]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 151], 'false': [22.959, 1, 747]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 151], 'false': [22.959, 1, 747]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.66e-08, 0, 151], 'false': [22.959, 1, 747]}]]
[{'': [5.834920479089564e-15, 0.20769830491426464]}, {'': [-2.5410137570228748e-15, 0.20769830491425062]}, {'': [1.882232412609537e-15, 0.2076983049142215]}, {'': [1.3881464042995335e-15, 0.20769830491422428]}, {'': [5.176139134676226e-16, 0.2076983049142507]}, {'': [-1.882232412609537e-16, 0.207698304914261]}, {'': [4.058563639689314e-16, 0.207698304914249]}, {'': [-2.9998079075964495e-16, 0.20769830491424018]}, {'': [-3.8232845881131217e-17, 0.20769830491423186]}, {'': [2.9409881447024017e-17, 0.20769830491425684]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.39e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.171835248785821;  // std dev = 20.761, 2,002.000 (wgt'ed) examples reached here.  /* #neg=1,374 #pos=628 */
%   | | | else return 0.11478610324110418;  // std dev = 4.643, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.38592671287729;  // std dev = 2.995, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | | else return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04682818038253037;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | | else return -0.04851773156715435;  // std dev = 2.519, 75.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06306696788639699;  // std dev = 4.458, 122.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14960438664540274;  // std dev = 20.761, 2,002.000 (wgt'ed) examples reached here.  /* #neg=1,374 #pos=628 */
%   | | | else return 0.10023087141462513;  // std dev = 4.643, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5544076131018676;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2606618814373994;  // std dev = 3.711, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.18556963331809784;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.06149729316153862;  // std dev = 0.955, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0027600085598797806;  // std dev = 4.985, 206.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=29 */
%   | | | else return 0.04984708162915664;  // std dev = 4.380, 121.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.33e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1281661146951396;  // std dev = 20.744, 2,000.000 (wgt'ed) examples reached here.  /* #neg=1,373 #pos=627 */
%   | | | else return 0.08509803617337842;  // std dev = 4.716, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.28151761981881124;  // std dev = 2.980, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | | else return 0.16187476969412276;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16064464506991286;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.016859091359870463;  // std dev = 5.311, 205.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=34 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.13899828122829222;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.012796137586013792;  // std dev = 4.097, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.58e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10802620062626342;  // std dev = 20.759, 2,002.000 (wgt'ed) examples reached here.  /* #neg=1,374 #pos=628 */
%   | | | else return 0.0718893662229255;  // std dev = 4.646, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7406937939808363;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15979389303166988;  // std dev = 3.695, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13647652131385038;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.052759465342886946;  // std dev = 0.952, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.003948130456824702;  // std dev = 4.983, 206.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=29 */
%   | | | else return 0.041510790821786436;  // std dev = 4.378, 121.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.80e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08995204414510881;  // std dev = 20.742, 2,000.000 (wgt'ed) examples reached here.  /* #neg=1,373 #pos=627 */
%   | | | else return 0.05897982041532934;  // std dev = 4.720, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18727570030546825;  // std dev = 2.959, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | | else return 0.09230034636741302;  // std dev = 2.310, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11400582508780266;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.04667946539920336;  // std dev = 0.952, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0034602459449955066;  // std dev = 4.983, 206.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=29 */
%   | | | else return 0.03594509072158062;  // std dev = 4.378, 121.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07395265782758267;  // std dev = 20.742, 2,000.000 (wgt'ed) examples reached here.  /* #neg=1,373 #pos=627 */
%   | | | else return 0.04931691449781861;  // std dev = 4.721, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15560296584081723;  // std dev = 2.699, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.07615180794915517;  // std dev = 2.601, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1958075632566637;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.03303900534068788;  // std dev = 1.911, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007676142700384127;  // std dev = 5.192, 207.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=33 */
%   | | | else return 0.03271690819555017;  // std dev = 4.369, 118.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.48e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.060271837041600385;  // std dev = 20.757, 2,002.000 (wgt'ed) examples reached here.  /* #neg=1,374 #pos=628 */
%   | | | else return 0.03979068307539546;  // std dev = 4.652, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5083262533939877;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0673861111334212;  // std dev = 3.679, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09211473059837505;  // std dev = 2.308, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.04393640590673059;  // std dev = 0.954, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.003534408842086907;  // std dev = 4.985, 206.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=29 */
%   | | | else return 0.026763504286521668;  // std dev = 4.370, 121.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.048731159900438144;  // std dev = 20.741, 2,000.000 (wgt'ed) examples reached here.  /* #neg=1,373 #pos=627 */
%   | | | else return 0.03270257515175923;  // std dev = 4.723, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3842972338198997;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.051676787015554816;  // std dev = 3.678, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.18350795191371105;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06440481630201576;  // std dev = 2.470, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0030986544778063194;  // std dev = 4.985, 206.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=29 */
%   | | | else return 0.022927892963657884;  // std dev = 4.370, 121.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03916542576326859;  // std dev = 20.757, 2,002.000 (wgt'ed) examples reached here.  /* #neg=1,374 #pos=628 */
%   | | | else return 0.026190771693950923;  // std dev = 4.654, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.298765587188967;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.039467822056484865;  // std dev = 3.678, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.15835623553968367;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05353590850875111;  // std dev = 2.468, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002717524651735121;  // std dev = 4.985, 206.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=29 */
%   | | | else return 0.019588599557709217;  // std dev = 4.370, 121.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.04147639390866912;  // std dev = 3.459, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return -0.16521782571300875;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03252730236315578;  // std dev = 20.953, 2,046.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=639 */
%   | | | else return 0.02603687586478595;  // std dev = 3.569, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.02382362397567937;  // std dev = 1.837, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return -0.08535360917787423;  // std dev = 0.918, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.044222111476323045;  // std dev = 2.467, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.004704463490492518;  // std dev = 6.304, 293.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=48 */


Results
   AUC ROC   = 0.578653
   AUC PR    = 0.710995
   CLL	      = -0.790246
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 467.872 seconds
Total inference time: 3.752 seconds
AUC ROC: 0.578653


Results scoring model
   AUC ROC   = 0.637419
   AUC PR    = 0.549377
   CLL	      = -0.569671
   Precision = 0.993671 at threshold = 0.5
   Recall    = 0.174833
   F1        = 0.297348


Total scoring time: 15.23 seconds
Refined model CLL: -0.569671


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.578653
   AUC PR    = 0.710995
   CLL	      = -0.790246
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 489.764 seconds
Total inference time: 3.752 seconds
AUC ROC: 0.578653
Total revision time: 489.764
Best scored revision CLL: -0.569671


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 19:59:40
{'AUC ROC': 0.578653, 'AUC PR': 0.710995, 'CLL': -0.790246, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 489.764, 'Inference time': 3.752, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.804258, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.614, 'Inference time': 1.253}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.14813043126657036;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.12912506408059246;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.62e-07, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.11092376354617497;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.09403445964696011;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2.06e-07, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.07879466183518886;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.06536993846456395;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.86e-07, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.053780523781915245;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.04394074775195604;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.03569888640772586;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else return 0.02887038442057165;  // std dev = 27.909, 3,783.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,097 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.809611
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 5.726 seconds
Total inference time: 1.29 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.592799
   AUC PR    = 0.528023
   CLL	      = -0.573953
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.185598
   F1        = 0.313087


Total scoring time: 2.027 seconds
Parameter learned model CLL: -0.573953


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 250], 'false': [27.909, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 250], 'false': [27.909, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.62e-07, 0, 250], 'false': [27.909, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 250], 'false': [27.909, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 250], 'false': [27.909, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 250], 'false': [27.909, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 250], 'false': [27.909, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 250], 'false': [27.909, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 250], 'false': [27.909, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 250], 'false': [27.909, 2, 1]}]]
[{'': [4.6611603465862574e-15, 0.2058922280478007]}, {'': [-4.320099833421409e-15, 0.2058922280477719]}, {'': [8.526512829121202e-16, 0.20589222804779972]}, {'': [-3.1263880373444406e-16, 0.20589222804774582]}, {'': [1.7053025658242405e-16, 0.20589222804776144]}, {'': [3.836930773104541e-16, 0.20589222804777868]}, {'': [3.268496584496461e-16, 0.20589222804775797]}, {'': [-2.4868995751603507e-17, 0.20589222804775276]}, {'': [-1.5987211554602254e-16, 0.20589222804774732]}, {'': [0.0, 0.2058922280478152]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16923037702207064;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.1066696451586831;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.30686688381745975;  // std dev = 4.393, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.013993090943667916;  // std dev = 6.365, 308.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=48 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002813631745407899;  // std dev = 4.731, 187.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14735648405535856;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.09318234207652475;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.34499791825272963;  // std dev = 3.234, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | | else return 0.24017920360459108;  // std dev = 3.194, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11690238620380397;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.012281169665356308;  // std dev = 6.365, 308.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=48 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.00247147522580839;  // std dev = 4.731, 187.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=26 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.62e-07, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12616900367246012;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.08055978100175708;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5427226109913317;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.22543284216610965;  // std dev = 4.418, 80.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10064383971716812;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.010764547349834666;  // std dev = 6.365, 308.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=48 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0021714961250488556;  // std dev = 4.731, 187.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=26 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10639287432405406;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.06899854768289557;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23394937654647457;  // std dev = 3.199, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | | else return 0.15883344541146;  // std dev = 3.191, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08562072804319101;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.009424296663480904;  // std dev = 6.365, 308.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=48 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07749292049720591;  // std dev = 0.967, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 2.5781125279837234E-4;  // std dev = 4.631, 179.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2.06e-07, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08852862565350236;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.05860988040699143;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4341242971886133;  // std dev = 0.892, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1300103912409692;  // std dev = 4.366, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009957860629432621;  // std dev = 6.448, 307.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=50 */
%   | | | else return 0.05239835274676194;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.1312744624484578;  // std dev = 0.048, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.0010030152707416324;  // std dev = 4.720, 186.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=26 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07283593549930913;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.04942882950322424;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1469274526090684;  // std dev = 3.599, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | | | else return 0.074974447112554;  // std dev = 2.669, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07045956129392528;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.006453658542715286;  // std dev = 6.364, 308.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=48 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -6.815022639393599E-4;  // std dev = 4.726, 187.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=26 */
%   | | | else return -0.09763324463226478;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.86e-07, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.059366493427257555;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.04142984526635658;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2932055511038145;  // std dev = 0.893, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07407831565521308;  // std dev = 4.362, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.018450152695121295;  // std dev = 5.909, 247.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=42 */
%   | | | else return -0.01244120261084141;  // std dev = 3.376, 90.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -5.996193035575628E-4;  // std dev = 4.726, 187.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=26 */
%   | | | else return -0.08936511804540372;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.048020641599750995;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.034544316794615226;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.27161595036872954;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05777694798940371;  // std dev = 4.361, 80.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.059558638430025825;  // std dev = 2.409, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.004142765348474649;  // std dev = 6.362, 308.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=48 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11408528834093654;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.0016181968396742012;  // std dev = 4.718, 186.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=26 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03860605909705279;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.028676901525856422;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.20401615272925575;  // std dev = 0.893, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.040103016557408305;  // std dev = 4.352, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.007662452417063333;  // std dev = 6.171, 317.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=45 */
%   | | | else return 0.07863237094402184;  // std dev = 2.147, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.0922126377762428;  // std dev = 0.927, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.01712200070903181;  // std dev = 4.986, 180.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=30 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #pos=250 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.030886230757748958;  // std dev = 25.339, 2,996.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=932 */
%   | | | else return 0.02371896183280977;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.15971088533188715;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.03044109129460133;  // std dev = 4.352, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0066938774079622195;  // std dev = 6.171, 317.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=45 */
%   | | | else return 0.06821017407540546;  // std dev = 2.147, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.014502073065542334;  // std dev = 5.072, 181.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=31 */
%   | | | else return -0.08030134769541271;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.567025
   AUC PR    = 0.701365
   CLL	      = -0.791933
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 766.577 seconds
Total inference time: 3.571 seconds
AUC ROC: 0.567025


Results scoring model
   AUC ROC   = 0.642535
   AUC PR    = 0.561404
   CLL	      = -0.562922
   Precision = 0.992337 at threshold = 0.5
   Recall    = 0.192279
   F1        = 0.322139


Total scoring time: 19.389 seconds
Refined model CLL: -0.562922


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.567025
   AUC PR    = 0.701365
   CLL	      = -0.791933
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 793.719 seconds
Total inference time: 3.571 seconds
AUC ROC: 0.567025
Total revision time: 793.719
Best scored revision CLL: -0.562922


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 20:13:00
{'AUC ROC': 0.567025, 'AUC PR': 0.701365, 'CLL': -0.791933, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 793.719, 'Inference time': 3.571, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.809611, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 5.726, 'Inference time': 1.29}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.15038367131764588;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.13107392562473896;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.11255847796146304;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.09536646655804987;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.07985119690912133;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.06618739605436154;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.05439845895959095;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.044397479497454734;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.03602885450836017;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else return 0.029102951119397615;  // std dev = 32.354, 5,061.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,479 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806821
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 7.764 seconds
Total inference time: 1.28 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.588252
   AUC PR    = 0.520515
   CLL	      = -0.577302
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.176503
   F1        = 0.300047


Total scoring time: 2.2 seconds
Parameter learned model CLL: -0.577302


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 317], 'false': [32.354, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [32.354, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [32.354, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [32.354, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [32.354, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 317], 'false': [32.354, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 317], 'false': [32.354, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 317], 'false': [32.354, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [32.354, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 317], 'false': [32.354, 3, 1]}]]
[{'': [3.4070187960736666e-15, 0.20683359516559766]}, {'': [-5.0208698047401405e-15, 0.20683359516563485]}, {'': [-3.5863355748143857e-16, 0.2068335951656212]}, {'': [-8.965838937035964e-16, 0.20683359516561217]}, {'': [-4.707065441943882e-16, 0.20683359516565009]}, {'': [4.482919468517982e-16, 0.20683359516563718]}, {'': [1.961277267476617e-16, 0.2068335951656845]}, {'': [2.1854232409025163e-16, 0.20683359516565525]}, {'': [-2.2134414875807538e-16, 0.20683359516563013]}, {'': [-1.8492042807636678e-16, 0.20683359516565014]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.17133574828632037;  // std dev = 29.347, 4,004.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,254 */
%   | | | else return 0.10927001133269673;  // std dev = 6.476, 223.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.33928101057121135;  // std dev = 5.144, 106.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15602127552504427;  // std dev = 3.135, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.05094197399139689;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0017085470857606802;  // std dev = 7.123, 421.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=59 */
%   | | | else return 0.018322095272671573;  // std dev = 5.574, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14917338566398114;  // std dev = 29.347, 4,004.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,254 */
%   | | | else return 0.09544121259912955;  // std dev = 6.476, 223.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6045267906174348;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2927746931855645;  // std dev = 5.144, 106.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1359479367489864;  // std dev = 3.135, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.04485324549538034;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0015006940149951647;  // std dev = 7.123, 421.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=59 */
%   | | | else return 0.01607708969200281;  // std dev = 5.574, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12768247990199466;  // std dev = 29.347, 4,004.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,254 */
%   | | | else return 0.08247997248450734;  // std dev = 6.476, 223.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.30912355257918145;  // std dev = 3.888, 63.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=35 */
%   | | | else return 0.1940742852018262;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11664152673823952;  // std dev = 3.135, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.03967602222259859;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0013183371206311363;  // std dev = 7.123, 421.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=59 */
%   | | | else return 0.014082896127161878;  // std dev = 5.574, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10761193313705893;  // std dev = 29.347, 4,004.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,254 */
%   | | | else return 0.07059817463403684;  // std dev = 6.476, 223.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=56 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4119672084626488;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.19395545394700747;  // std dev = 5.134, 106.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07352012778232095;  // std dev = 2.766, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.006179011443946265;  // std dev = 7.370, 419.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=65 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008028288224884597;  // std dev = 5.610, 244.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=37 */
%   | | | else return -0.14242844279747638;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08948043605815152;  // std dev = 29.347, 4,004.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,254 */
%   | | | else return 0.0599178228203251;  // std dev = 6.476, 223.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20192133674529733;  // std dev = 3.867, 63.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=35 */
%   | | | else return 0.11263658387868958;  // std dev = 3.487, 50.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.22791624305105923;  // std dev = 1.568, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.025909864189348736;  // std dev = 3.011, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0027733282864351666;  // std dev = 7.119, 421.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=59 */
%   | | | else return 0.01204335061147982;  // std dev = 5.571, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07355807535760413;  // std dev = 29.347, 4,004.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,254 */
%   | | | else return 0.05048005877005653;  // std dev = 6.476, 223.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1551316546995393;  // std dev = 3.866, 63.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=35 */
%   | | | else return 0.08767919262676017;  // std dev = 3.487, 50.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06324171483330204;  // std dev = 2.755, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.004030355459348281;  // std dev = 7.362, 419.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=65 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006464657583763802;  // std dev = 5.612, 244.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=37 */
%   | | | else return -0.12759070082204682;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.060012164402808675;  // std dev = 29.309, 4,001.000 (wgt'ed) examples reached here.  /* #neg=2,751 #pos=1,250 */
%   | | | else return 0.04050742095902701;  // std dev = 6.645, 226.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12370987106591061;  // std dev = 4.028, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | | | else return 0.056222362709218474;  // std dev = 3.291, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08728924900628923;  // std dev = 3.125, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.04124024289716099;  // std dev = 1.316, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003771673521461037;  // std dev = 7.117, 421.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=59 */
%   | | | else return 0.0103904443374292;  // std dev = 5.569, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048523029263889406;  // std dev = 29.309, 4,001.000 (wgt'ed) examples reached here.  /* #neg=2,751 #pos=1,250 */
%   | | | else return 0.03338491245184901;  // std dev = 6.645, 226.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.21304078990704203;  // std dev = 0.892, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.06350279058881952;  // std dev = 5.118, 106.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.18360799550894275;  // std dev = 1.577, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.012933981985345115;  // std dev = 2.990, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0033076918954191765;  // std dev = 7.117, 421.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=59 */
%   | | | else return 0.00906291121029895;  // std dev = 5.569, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03899182868038331;  // std dev = 29.309, 4,001.000 (wgt'ed) examples reached here.  /* #neg=2,751 #pos=1,250 */
%   | | | else return 0.027397890345075025;  // std dev = 6.645, 226.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.16599829809793087;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04804419050642197;  // std dev = 5.117, 106.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.2042808057399625;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.049735561533390316;  // std dev = 3.360, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.003074789693483837;  // std dev = 7.146, 410.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=60 */
%   | | | else return 0.007699308470267153;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #pos=317 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.031188010551821133;  // std dev = 29.346, 4,004.000 (wgt'ed) examples reached here.  /* #neg=2,750 #pos=1,254 */
%   | | | else return 0.022128814886428018;  // std dev = 6.478, 223.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06592024898418576;  // std dev = 3.869, 63.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=35 */
%   | | | else return 0.012270088136688834;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.17362654272021724;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04179089375674473;  // std dev = 3.357, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0032524898900937954;  // std dev = 7.116, 421.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=59 */
%   | | | else return 0.00824897136951811;  // std dev = 5.570, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */


Results
   AUC ROC   = 0.566393
   AUC PR    = 0.701209
   CLL	      = -0.79091
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 974.829 seconds
Total inference time: 3.522 seconds
AUC ROC: 0.566393


Results scoring model
   AUC ROC   = 0.641231
   AUC PR    = 0.556679
   CLL	      = -0.565874
   Precision = 0.996914 at threshold = 0.5
   Recall    = 0.179844
   F1        = 0.304717


Total scoring time: 25.082 seconds
Refined model CLL: -0.565874


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566393
   AUC PR    = 0.701209
   CLL	      = -0.79091
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1009.875 seconds
Total inference time: 3.522 seconds
AUC ROC: 0.566393
Total revision time: 1009.875
Best scored revision CLL: -0.565874


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 20:29:55
{'AUC ROC': 0.566393, 'AUC PR': 0.701209, 'CLL': -0.79091, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1009.875, 'Inference time': 3.522, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806821, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 7.764, 'Inference time': 1.28}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 9.802 seconds
Total inference time: 1.158 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 2.61 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2967454263275814;  // std dev = 3.746, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14911870422593324;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.11697060028902616;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5879828100125667;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2825983350750409;  // std dev = 5.663, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05972507874716161;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06486143067461066;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020235307543291247;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12764853140692314;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117945;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2893727671155677;  // std dev = 4.480, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1971599658912092;  // std dev = 3.711, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11967205735959607;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07906321825760067;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.047348082321735915;  // std dev = 3.638, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017764187555891259;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10767405144022592;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.08395534636649284;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23507729486681622;  // std dev = 4.484, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.15581521792006794;  // std dev = 3.697, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10375804508590274;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06909236069048687;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 7.655092227652981E-4;  // std dev = 7.971, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.00614562431095862;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117472;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.07049037196827358;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4222333309960916;  // std dev = 1.229, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.14053005523747394;  // std dev = 5.630, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0888915023777788;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.060826971616041926;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 5.233626806295483E-4;  // std dev = 8.025, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005807986179216928;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07369162312032766;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.05745028465583279;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3229714025760041;  // std dev = 1.226, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.10861548361535038;  // std dev = 5.629, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08937785296900794;  // std dev = 3.499, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06276884993788567;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03259179931347456;  // std dev = 3.626, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0022126154749006893;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0600202594331685;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.04741904647039107;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.28230104817709073;  // std dev = 1.214, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.08043156269512358;  // std dev = 5.619, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1993786254389578;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.013701334189440497;  // std dev = 3.404, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.02787566517612082;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019421322345909839;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048549832200982655;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03818605419664083;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.21266973591379326;  // std dev = 1.215, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.06120928949227585;  // std dev = 5.618, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07068436673412347;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06117935726730697;  // std dev = 1.341, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0021674489000664235;  // std dev = 7.959, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006094571154137134;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03899906934798503;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.031153486904014545;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.19007408930749248;  // std dev = 1.206, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04441475237789801;  // std dev = 5.614, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.16706552660113844;  // std dev = 1.586, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005417990365749773;  // std dev = 3.387, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.02383122433597986;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018247245806099007;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031204273276859772;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.024756729702290203;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06961595631702353;  // std dev = 4.445, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 7.644877301316022E-5;  // std dev = 3.627, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.18895226832947;  // std dev = 1.578, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -2.3015601518084602E-4;  // std dev = 3.387, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0030396446611772663;  // std dev = 7.956, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0063458527831994375;  // std dev = 6.112, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */


Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791263
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1201.83 seconds
Total inference time: 3.74 seconds
AUC ROC: 0.566386


Results scoring model
   AUC ROC   = 0.638786
   AUC PR    = 0.553844
   CLL	      = -0.566907
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 38.325 seconds
Refined model CLL: -0.566907


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791263
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1252.567 seconds
Total inference time: 3.74 seconds
AUC ROC: 0.566386
Total revision time: 1252.567
Best scored revision CLL: -0.566907


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 20:50:54
{'AUC ROC': 0.566386, 'AUC PR': 0.701208, 'CLL': -0.791263, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1252.567, 'Inference time': 3.74, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 9.802, 'Inference time': 1.158}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.2837899607405332;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.69e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.24562073711264043;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.15e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.20648463567301964;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.16911519632031524;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.13555977552561857;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.10687092715696377;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.08322786883908372;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 2.11e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06424979481073347;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.049293690009504024;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.03765538472714858;  // std dev = 15.439, 975.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=415 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.564299
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 2.689 seconds
Total inference time: 1.588 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.573922
   AUC PR    = 0.607317
   CLL	      = -0.645461
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.147844
   F1        = 0.257603


Total scoring time: 1.582 seconds
Parameter learned model CLL: -0.645461


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [15.439, 560, 415]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 72], 'false': [15.439, 560, 415]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.15e-07, 0, 72], 'false': [15.439, 560, 415]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [15.439, 560, 415]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [15.439, 560, 415]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [15.439, 560, 415]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [15.439, 560, 415]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 72], 'false': [15.439, 560, 415]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.83e-08, 0, 72], 'false': [15.439, 560, 415]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.94e-08, 0, 72], 'false': [15.439, 560, 415]}]]
[{'': [-1.282924384011292e-15, 0.2444707429322685]}, {'': [3.9474596431116675e-16, 0.24447074293228535]}, {'': [6.41462192005646e-16, 0.2444707429322943]}, {'': [-9.868649107779169e-17, 0.24447074293227772]}, {'': [-3.4540271877227093e-16, 0.24447074293227966]}, {'': [-1.2335811384723961e-17, 0.24447074293228593]}, {'': [-8.635067969306773e-17, 0.24447074293227772]}, {'': [6.1679056923619804e-18, 0.2444707429322844]}, {'': [6.47630097698008e-17, 0.24447074293228752]}, {'': [3.39234813079909e-17, 0.244470742932288]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30808713040235064;  // std dev = 0.497, 809.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=364 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4652917922423695;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.27920156667845974;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.04963829680164004;  // std dev = 2.698, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0023161811795574592;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.69e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.26630340556337395;  // std dev = 0.497, 809.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=364 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.43578937304034204;  // std dev = 1.974, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.38834550795938866;  // std dev = 1.887, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.24170865544729092;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.04348777920712789;  // std dev = 2.698, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0020344677904384025;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.15e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2229873993818959;  // std dev = 0.497, 809.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=364 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.435610964181089;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3223531920424416;  // std dev = 2.581, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.20334742822531968;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.03791973975617936;  // std dev = 2.698, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0017874043143749462;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.181511990693703;  // std dev = 0.497, 809.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=364 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2843376748177519;  // std dev = 1.978, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.23839122350847372;  // std dev = 1.875, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06805845970649145;  // std dev = 3.776, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0.30124297283082746;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0015706412914361775;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1444101224805876;  // std dev = 0.497, 809.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=364 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.26782120568969503;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19064904785566764;  // std dev = 2.578, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.14223350157660172;  // std dev = 3.027, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.023632899464305877;  // std dev = 2.698, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.14091527880441232;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.00419040889808815;  // std dev = 2.270, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11293995853861288;  // std dev = 0.497, 809.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=364 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.17073386214717176;  // std dev = 1.993, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.12838414306295107;  // std dev = 1.854, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.37046480408854837;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.16912324873997675;  // std dev = 0.149, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03773776362886435;  // std dev = 3.664, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.0037040681094586488;  // std dev = 2.270, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08726027824621445;  // std dev = 0.497, 809.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=364 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.16436768853765601;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10602025968898578;  // std dev = 2.575, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03072068916494186;  // std dev = 3.704, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0.1999589845168385;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -9.203344363784714E-4;  // std dev = 2.267, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | | else return -0.1078512697139214;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 2.11e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0668591887122382;  // std dev = 0.497, 809.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=364 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.10234318584347095;  // std dev = 1.987, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.065879502597405;  // std dev = 1.858, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.28069210551862744;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.14822028422331548;  // std dev = 0.143, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02089743686435558;  // std dev = 3.649, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.002528438228842711;  // std dev = 2.269, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05093987589353494;  // std dev = 0.497, 809.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=364 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08149800956698228;  // std dev = 2.001, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.04475389140397635;  // std dev = 1.842, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.015454598833957582;  // std dev = 3.662, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0.14790144496554555;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0888985270519355;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.0036615939549013727;  // std dev = 2.264, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2853470458446024;  // std dev = 1.860, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return -0.25216822797378524;  // std dev = 1.133, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03827886301213156;  // std dev = 13.920, 783.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=352 */
%   | | | else return 0.026169647103341544;  // std dev = 2.675, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20859750071354913;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.1321456551589691;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0103487447761226;  // std dev = 3.639, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.0017147354006893981;  // std dev = 2.267, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */


Results
   AUC ROC   = 0.622781
   AUC PR    = 0.4209
   CLL	      = -0.55138
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 175.697 seconds
Total inference time: 2.385 seconds
AUC ROC: 0.622781


Results scoring model
   AUC ROC   = 0.650757
   AUC PR    = 0.662596
   CLL	      = -0.621684
   Precision = 0.867257 at threshold = 0.5
   Recall    = 0.201232
   F1        = 0.326667


Total scoring time: 2.701 seconds
Refined model CLL: -0.621684


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622781
   AUC PR    = 0.4209
   CLL	      = -0.55138
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 182.66899999999998 seconds
Total inference time: 2.385 seconds
AUC ROC: 0.622781
Total revision time: 182.66899999999998
Best scored revision CLL: -0.621684


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 20:54:01
{'AUC ROC': 0.622781, 'AUC PR': 0.4209, 'CLL': -0.55138, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 182.66899999999998, 'Inference time': 2.385, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.564299, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 2.689, 'Inference time': 1.588}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9.00e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.28290497002503373;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.24486634552624648;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.20e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.20588005814630142;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.42e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.1686579404889869;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.63e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.1352307416902692;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949034;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.10664361078138723;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.42e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.08307599546691881;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.06415128798956163;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.04923169154922733;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.32e-08, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else return 0.03761774753150647;  // std dev = 21.811, 1,947.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=827 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.563539
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.743 seconds
Total inference time: 1.657 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.575462
   AUC PR    = 0.609534
   CLL	      = -0.644414
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150924
   F1        = 0.262266


Total scoring time: 1.98 seconds
Parameter learned model CLL: -0.644414


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9e-07, 0, 147], 'false': [21.811, 1, 827]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 147], 'false': [21.811, 1, 827]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.2e-07, 0, 147], 'false': [21.811, 1, 827]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 147], 'false': [21.811, 1, 827]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 147], 'false': [21.811, 1, 827]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 147], 'false': [21.811, 1, 827]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.42e-07, 0, 147], 'false': [21.811, 1, 827]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 147], 'false': [21.811, 1, 827]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 147], 'false': [21.811, 1, 827]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.32e-08, 0, 147], 'false': [21.811, 1, 827]}]]
[{'': [5.5103314201803686e-15, 0.2443383457198953]}, {'': [-2.3201395453391025e-15, 0.24433834571985144]}, {'': [1.836777140060123e-15, 0.24433834571990032]}, {'': [1.3292466145171943e-15, 0.24433834571987223]}, {'': [4.712783451470053e-16, 0.24433834571985705]}, {'': [-1.570927817156684e-16, 0.24433834571988594]}, {'': [3.9877398435515827e-16, 0.24433834571987081]}, {'': [-3.021015032993623e-16, 0.24433834571988028]}, {'': [-3.6252180395923476e-17, 0.24433834571986623]}, {'': [2.718913529694261e-17, 0.2443383457198834]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9.00e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3022576964288125;  // std dev = 0.497, 1,655.000 (wgt'ed) examples reached here.  /* #neg=920 #pos=735 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4344201215401891;  // std dev = 3.796, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2581489350995111;  // std dev = 4.099, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   | | | else return 0.06648226843284571;  // std dev = 3.446, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004490398514146492;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.26134626865167454;  // std dev = 0.497, 1,655.000 (wgt'ed) examples reached here.  /* #neg=920 #pos=735 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3729362641053732;  // std dev = 3.796, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.10850530681160427;  // std dev = 4.961, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.3862336544841059;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003942905690172599;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.20e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21904483036497474;  // std dev = 0.497, 1,655.000 (wgt'ed) examples reached here.  /* #neg=920 #pos=735 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3024706517563307;  // std dev = 2.809, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | | else return 0.33675262648080523;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1967051456026093;  // std dev = 4.072, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   | | | else return 0.043818578222196494;  // std dev = 3.446, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0034607140222230703;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.42e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1785650865287423;  // std dev = 0.497, 1,655.000 (wgt'ed) examples reached here.  /* #neg=920 #pos=735 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3515260801318943;  // std dev = 1.159, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.23743411492640631;  // std dev = 3.625, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07590273929768386;  // std dev = 4.943, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.28540396957170167;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003036370752495087;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.63e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.142318258183217;  // std dev = 0.497, 1,655.000 (wgt'ed) examples reached here.  /* #neg=920 #pos=735 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.4120989436206755;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.180885828490258;  // std dev = 3.790, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06381976911229345;  // std dev = 4.942, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.22478827954484737;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1351804360038182;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.005772158361165051;  // std dev = 3.191, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949034;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11151294786989391;  // std dev = 0.497, 1,655.000 (wgt'ed) examples reached here.  /* #neg=920 #pos=735 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.13036853289657793;  // std dev = 2.794, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | | else return 0.16423752923925264;  // std dev = 2.576, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.30751236094034934;  // std dev = 1.838, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.08428544406467453;  // std dev = 0.947, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.041530195141276594;  // std dev = 4.826, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | | else return 0.005074243323591965;  // std dev = 3.191, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.42e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08631549415045404;  // std dev = 0.497, 1,655.000 (wgt'ed) examples reached here.  /* #neg=920 #pos=735 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.28958255548936845;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1006254083430641;  // std dev = 3.789, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.10054808557781258;  // std dev = 3.992, 70.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=28 */
%   | | | else return 0.012375529026550048;  // std dev = 3.444, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0011894958343737806;  // std dev = 3.202, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.09064139802164493;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.2939297896899794;  // std dev = 2.333, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return 0.26284855292569353;  // std dev = 2.098, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.220749105966002;  // std dev = 1.019, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.21465115990190592;  // std dev = 0.980, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.06377017230087222;  // std dev = 19.981, 1,619.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=715 */
%   | | | else return 0.07417285041685212;  // std dev = 3.615, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02324465042140344;  // std dev = 4.820, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | | else return 0.004771752941344415;  // std dev = 3.190, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22457655359373513;  // std dev = 2.600, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return -0.22485161291164518;  // std dev = 1.383, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05013009981497043;  // std dev = 19.922, 1,612.000 (wgt'ed) examples reached here.  /* #neg=897 #pos=715 */
%   | | | else return 0.052268400367667375;  // std dev = 3.785, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.024086852749041668;  // std dev = 4.831, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.13287886696045417;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -5.880129487277745E-4;  // std dev = 3.208, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.08164353174307977;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.32e-08, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.18943998557197306;  // std dev = 2.252, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.2208859527285395;  // std dev = 2.133, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.17908522241366187;  // std dev = 1.026, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.18322384133477942;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.044389426471897794;  // std dev = 3.037, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | | else return 0.03643077795191798;  // std dev = 20.059, 1,632.000 (wgt'ed) examples reached here.  /* #neg=905 #pos=727 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01190487559152074;  // std dev = 4.720, 134.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=32 */
%   | | | else return 0.0016099964438177374;  // std dev = 3.320, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */


Results
   AUC ROC   = 0.622169
   AUC PR    = 0.420374
   CLL	      = -0.545535
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 289.044 seconds
Total inference time: 3.021 seconds
AUC ROC: 0.622169


Results scoring model
   AUC ROC   = 0.642808
   AUC PR    = 0.659278
   CLL	      = -0.625111
   Precision = 0.866953 at threshold = 0.5
   Recall    = 0.207392
   F1        = 0.334714


Total scoring time: 4.096 seconds
Refined model CLL: -0.625111


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622169
   AUC PR    = 0.420374
   CLL	      = -0.545535
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 298.863 seconds
Total inference time: 3.021 seconds
AUC ROC: 0.622169
Total revision time: 298.863
Best scored revision CLL: -0.625111


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 20:59:05
{'AUC ROC': 0.622169, 'AUC PR': 0.420374, 'CLL': -0.545535, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 298.863, 'Inference time': 3.021, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.563539, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.743, 'Inference time': 1.657}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.2802335584225206;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.24258870867606122;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.20405360450046797;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.1672752078502477;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.1342345963238403;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.95e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.10595462430465478;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.082615236526277;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9.42e-08, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.06385225937354938;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.04904348052702292;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else return 0.03750357996688415;  // std dev = 26.629, 2,907.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,227 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.561261
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 4.564 seconds
Total inference time: 1.717 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.580082
   AUC PR    = 0.616107
   CLL	      = -0.641254
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.160164
   F1        = 0.276106


Total scoring time: 2.004 seconds
Parameter learned model CLL: -0.641254


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 234], 'false': [26.629, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 234], 'false': [26.629, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.33e-07, 0, 234], 'false': [26.629, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 234], 'false': [26.629, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 234], 'false': [26.629, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.95e-07, 0, 234], 'false': [26.629, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 234], 'false': [26.629, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 234], 'false': [26.629, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 234], 'false': [26.629, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 234], 'false': [26.629, 1, 1]}]]
[{'': [4.8584118684451296e-15, 0.24392919407730862]}, {'': [-4.12965008817836e-15, 0.24392919407727764]}, {'': [1.2146029671112824e-15, 0.2439291940772876]}, {'': [-1.2146029671112825e-16, 0.24392919407726818]}, {'': [3.795634272222757e-16, 0.2439291940772675]}, {'': [3.7197215867783024e-16, 0.24392919407728422]}, {'': [3.643808901333847e-16, 0.24392919407727304]}, {'': [3.7956342722227575e-17, 0.24392919407724908]}, {'': [-1.6321227370557858e-16, 0.24392919407726038]}, {'': [4.175197699445033e-17, 0.24392919407726743]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29851960391497867;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.46790503266048855;  // std dev = 4.417, 82.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=50 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26675108563714556;  // std dev = 4.741, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
%   | | | else return 0.03763611458669163;  // std dev = 4.151, 117.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.02481560176617902;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25816583703726026;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.38471669343967296;  // std dev = 3.699, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | | | else return 0.4571228650938018;  // std dev = 2.705, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23108332249387512;  // std dev = 4.741, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
%   | | | else return 0.032992652509364395;  // std dev = 4.151, 117.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.021767884192405756;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21651110304762053;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.31350650442366423;  // std dev = 3.698, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | | | else return 0.371538712035337;  // std dev = 2.704, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19480137353793692;  // std dev = 4.741, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
%   | | | else return 0.028819155867311475;  // std dev = 4.151, 117.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.01904987294481075;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17666637877387928;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.36706714285622843;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2513762192291982;  // std dev = 4.409, 82.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=50 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.16023954430914514;  // std dev = 4.741, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
%   | | | else return 0.025094005083418365;  // std dev = 4.151, 117.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015674968582822423;  // std dev = 3.976, 117.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=19 */
%   | | | else return -0.1318673049794244;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1409665655753369;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.557490645068122;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17386743514204508;  // std dev = 4.488, 84.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=50 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.24267576083032658;  // std dev = 2.250, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.049044611243429015;  // std dev = 5.874, 188.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=48 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.09952892843395991;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.015419084052670154;  // std dev = 3.976, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.95e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11058851612140955;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.13561716789570005;  // std dev = 3.666, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | | | else return 0.17569136025602808;  // std dev = 2.672, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.11114764621754349;  // std dev = 4.711, 93.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=38 */
%   | | | else return 0.014195905284262482;  // std dev = 4.156, 117.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.012446737637283494;  // std dev = 3.973, 117.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=19 */
%   | | | else return -0.11573719456326559;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08570249100055151;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.38259751500847644;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0937075678582925;  // std dev = 4.487, 84.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=50 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17339397119334665;  // std dev = 2.223, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.030575384768938965;  // std dev = 5.866, 188.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=48 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0894641551003332;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.012442716738728425;  // std dev = 3.973, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452775;  // std dev = 9.42e-08, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06585192339516456;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.297482510297092;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0703525320350311;  // std dev = 4.487, 84.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=50 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.024344852764073346;  // std dev = 5.701, 189.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=47 */
%   | | | else return 0.16447314246520625;  // std dev = 2.260, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.19419512613808812;  // std dev = 0.097, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.011582811376120182;  // std dev = 4.138, 118.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05030295157483203;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.23947374974635727;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.052883851034513436;  // std dev = 4.487, 84.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=50 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13593716396261657;  // std dev = 2.191, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.019201046689464648;  // std dev = 5.848, 188.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=48 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.08007513296806275;  // std dev = 0.958, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.009630022098666712;  // std dev = 3.854, 111.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03827113223453775;  // std dev = 0.496, 2,482.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=1,093 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.1987410741311617;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03981838202407786;  // std dev = 4.487, 84.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=50 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.015928851374615898;  // std dev = 5.681, 189.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=47 */
%   | | | else return 0.12408818465892074;  // std dev = 2.258, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.17799922987370187;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.0073311533321386005;  // std dev = 4.138, 118.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=21 */


Results
   AUC ROC   = 0.622875
   AUC PR    = 0.42091
   CLL	      = -0.547677
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 584.017 seconds
Total inference time: 2.889 seconds
AUC ROC: 0.622875


Results scoring model
   AUC ROC   = 0.630468
   AUC PR    = 0.650723
   CLL	      = -0.624966
   Precision = 0.895062 at threshold = 0.5
   Recall    = 0.198494
   F1        = 0.32493


Total scoring time: 5.0 seconds
Refined model CLL: -0.624966


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622875
   AUC PR    = 0.42091
   CLL	      = -0.547677
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 595.585 seconds
Total inference time: 2.889 seconds
AUC ROC: 0.622875
Total revision time: 595.585
Best scored revision CLL: -0.624966


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 21:09:06
{'AUC ROC': 0.622875, 'AUC PR': 0.42091, 'CLL': -0.547677, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 595.585, 'Inference time': 2.889, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.561261, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 4.564, 'Inference time': 1.717}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.03e-06, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.2806805154037093;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.24296982968530217;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.20435934660761482;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.16750681343799245;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.13440157037132894;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.10607019568728863;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.08269257137261464;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.06390246822835972;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.049075084012144395;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else return 0.03752274185209332;  // std dev = 30.765, 3,879.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,639 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.561641
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 5.911 seconds
Total inference time: 1.767 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.579312
   AUC PR    = 0.61502
   CLL	      = -0.641783
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158624
   F1        = 0.273815


Total scoring time: 2.131 seconds
Parameter learned model CLL: -0.641783


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-06, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.67e-07, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 309], 'false': [30.765, 2, 1]}]]
[{'': [3.4032467602749133e-15, 0.24399864394978876]}, {'': [-4.966900677157982e-15, 0.24399864394988544]}, {'': [-2.299491054239806e-16, 0.24399864394983883]}, {'': [-8.048218689839323e-16, 0.24399864394981632]}, {'': [-3.5642111340717e-16, 0.2439986439498552]}, {'': [4.369033003055632e-16, 0.2439986439497987]}, {'': [2.0695419488158259e-16, 0.2439986439498101]}, {'': [2.0695419488158259e-16, 0.24399864394980642]}, {'': [-2.1270292251718208e-16, 0.24399864394983445]}, {'': [-1.6958746525018573e-16, 0.24399864394983062]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.03e-06, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.299369847761943;  // std dev = 0.497, 3,309.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,460 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.4107805140468817;  // std dev = 5.309, 114.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=63 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2800239350995134;  // std dev = 5.587, 128.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=54 */
%   | | | else return 0.041693238896979935;  // std dev = 4.866, 158.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.029201566678459162;  // std dev = 4.642, 152.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2588893550189792;  // std dev = 0.497, 3,309.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,460 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6189976143448207;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3530991882425949;  // std dev = 5.309, 114.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=63 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2424099560005788;  // std dev = 5.587, 128.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=54 */
%   | | | else return 0.03654177093012029;  // std dev = 4.866, 158.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025609567519458563;  // std dev = 4.642, 152.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21708779252242982;  // std dev = 0.497, 3,309.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,460 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.48744028374252046;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2888278735500715;  // std dev = 5.248, 113.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.20391018950702006;  // std dev = 5.587, 128.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=54 */
%   | | | else return 0.0319003423559889;  // std dev = 4.866, 158.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.022397580818842196;  // std dev = 4.642, 152.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17709886955120474;  // std dev = 0.497, 3,309.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,460 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3796682441893715;  // std dev = 1.208, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.22873451901657121;  // std dev = 5.247, 113.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06376664714345484;  // std dev = 6.878, 256.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=66 */
%   | | | else return 0.31525537568065354;  // std dev = 2.695, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1452725217542584;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.020236339316384973;  // std dev = 4.635, 154.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=26 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14127472760312335;  // std dev = 0.497, 3,309.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,460 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.18734150638047795;  // std dev = 4.259, 76.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=44 */
%   | | | else return 0.1807544764777865;  // std dev = 3.308, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.14309401773571573;  // std dev = 5.548, 128.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=54 */
%   | | | else return 0.018941297693408226;  // std dev = 4.867, 158.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12818053724744716;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.017660739832730685;  // std dev = 4.634, 154.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=26 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11079943694895977;  // std dev = 0.497, 3,309.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,460 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.143193099357181;  // std dev = 4.191, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   | | | else return 0.1364035688397538;  // std dev = 3.393, 48.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.11350877676456538;  // std dev = 5.546, 128.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=54 */
%   | | | else return 0.016301219743687454;  // std dev = 4.634, 152.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.15010853073798588;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.02041155820517021;  // std dev = 4.850, 157.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3001388547255133;  // std dev = 3.512, 56.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   | | | else return -0.16411385548744845;  // std dev = 1.973, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10346628869885834;  // std dev = 4.499, 84.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=40 */
%   | | | else return 0.08461115708731833;  // std dev = 28.357, 3,263.000 (wgt'ed) examples reached here.  /* #neg=1,817 #pos=1,446 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.03392929237817477;  // std dev = 6.663, 249.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=65 */
%   | | | else return 0.1637653518786873;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return -0.1320429679765099;  // std dev = 0.082, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.017593792857940802;  // std dev = 4.849, 157.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.53e-07, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06580296235790539;  // std dev = 0.496, 3,309.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,460 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08399713412717591;  // std dev = 4.198, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   | | | else return 0.08095001636869914;  // std dev = 3.387, 48.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.023201965251005863;  // std dev = 6.823, 256.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=66 */
%   | | | else return 0.18734290613358057;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009619535006094611;  // std dev = 4.634, 152.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
%   | | | else return -0.09785645127655182;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05025600996271453;  // std dev = 0.496, 3,309.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,460 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06325136323356423;  // std dev = 4.198, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   | | | else return 0.06082663049470263;  // std dev = 3.387, 48.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.019167964396692674;  // std dev = 6.823, 256.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=66 */
%   | | | else return 0.14254915938206483;  // std dev = 2.681, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008313693130726411;  // std dev = 4.634, 152.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
%   | | | else return -0.08956651398864479;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #pos=309 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.038229498231368036;  // std dev = 0.496, 3,309.000 (wgt'ed) examples reached here.  /* #neg=1,849 #pos=1,460 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.21410732464809143;  // std dev = 0.932, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.03515790272906236;  // std dev = 5.291, 114.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=63 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1463938910289825;  // std dev = 2.432, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.013294067328668314;  // std dev = 6.743, 253.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=68 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.006629662347727625;  // std dev = 4.859, 158.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=29 */
%   | | | else return -0.08253850561170277;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.623202
   AUC PR    = 0.421406
   CLL	      = -0.545873
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 640.673 seconds
Total inference time: 2.329 seconds
AUC ROC: 0.623202


Results scoring model
   AUC ROC   = 0.633325
   AUC PR    = 0.652463
   CLL	      = -0.626512
   Precision = 0.87935 at threshold = 0.5
   Recall    = 0.194559
   F1        = 0.318621


Total scoring time: 5.68 seconds
Refined model CLL: -0.626512


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.623202
   AUC PR    = 0.421406
   CLL	      = -0.545873
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 654.395 seconds
Total inference time: 2.329 seconds
AUC ROC: 0.623202
Total revision time: 654.395
Best scored revision CLL: -0.626512


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 21:20:06
{'AUC ROC': 0.623202, 'AUC PR': 0.421406, 'CLL': -0.545873, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 654.395, 'Inference time': 2.329, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.561641, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 5.911, 'Inference time': 1.767}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 7.302 seconds
Total inference time: 1.437 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 2.273 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.39055105437540644;  // std dev = 4.690, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.35220854356048176;  // std dev = 3.871, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5037114772652433;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2952259901994808;  // std dev = 5.923, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.4307752411499357;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23077371550692646;  // std dev = 5.916, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.19722295071529566;  // std dev = 4.679, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.17045866327969114;  // std dev = 3.845, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0514243422155987;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150809;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11049163082472004;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2798086674292282;  // std dev = 1.238, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.13258985669611878;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751091;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2283906622842639;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09335578437677157;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08563819689605111;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.23849790287837688;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.0980395705003932;  // std dev = 5.910, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830441;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07583294993931636;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.019204361885541255;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06581034510906802;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.18030779201619637;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.07361681193725103;  // std dev = 5.910, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026614411937304627;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17192093335745545;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011338247714681973;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08568087954252014;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05027671515458594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.15668532599151014;  // std dev = 1.223, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.054070939280108955;  // std dev = 5.909, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02203779887415815;  // std dev = 7.501, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13234706229860305;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06832926208411795;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013103692448718906;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22296294809411832;  // std dev = 4.042, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.2301087220202377;  // std dev = 2.196, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03764954802094013;  // std dev = 31.519, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.04061093913715661;  // std dev = 5.909, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.016766875143048917;  // std dev = 7.484, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12737438814193164;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.07112531640221624;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01010122964789892;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */


Results
   AUC ROC   = 0.622753
   AUC PR    = 0.420895
   CLL	      = -0.54537
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 898.11 seconds
Total inference time: 2.198 seconds
AUC ROC: 0.622753


Results scoring model
   AUC ROC   = 0.635339
   AUC PR    = 0.655239
   CLL	      = -0.625996
   Precision = 0.883212 at threshold = 0.5
   Recall    = 0.198686
   F1        = 0.324397


Total scoring time: 6.361 seconds
Refined model CLL: -0.625996


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622753
   AUC PR    = 0.420895
   CLL	      = -0.54537
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 914.046 seconds
Total inference time: 2.198 seconds
AUC ROC: 0.622753
Total revision time: 914.046
Best scored revision CLL: -0.625996


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 21:35:24
{'AUC ROC': 0.622753, 'AUC PR': 0.420895, 'CLL': -0.54537, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 914.046, 'Inference time': 2.198, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 7.302, 'Inference time': 1.437}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.18003734711667485;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.23e-07, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.1566783911383489;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.37e-07, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.13392289219798864;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.11262339021809839;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.09337739699442567;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.07649994978712824;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.06206001095165955;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 2.98e-08, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.04994813739501195;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.30e-08, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.039947123528866944;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.37e-08, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else return 0.03178984058397542;  // std dev = 15.947, 1,165.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=375 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.638243
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 2.89 seconds
Total inference time: 1.415 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.587004
   AUC PR    = 0.544593
   CLL	      = -0.597849
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174009
   F1        = 0.296435


Total scoring time: 1.742 seconds
Parameter learned model CLL: -0.597849


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 79], 'false': [15.947, 790, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 79], 'false': [15.947, 790, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 79], 'false': [15.947, 790, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 79], 'false': [15.947, 790, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 79], 'false': [15.947, 790, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 79], 'false': [15.947, 790, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 79], 'false': [15.947, 790, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 79], 'false': [15.947, 790, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.3e-08, 0, 79], 'false': [15.947, 790, 375]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 79], 'false': [15.947, 790, 375]}]]
[{'': [-8.99421184506456e-16, 0.21827626222621635]}, {'': [6.295948291545192e-16, 0.21827626222622584]}, {'': [1.4390738952103295e-15, 0.21827626222623966]}, {'': [0.0, 0.21827626222623583]}, {'': [-3.822540034152438e-16, 0.21827626222623425]}, {'': [-2.2485529612661398e-17, 0.2182762622262414]}, {'': [-8.994211845064559e-17, 0.21827626222623409]}, {'': [1.1242764806330699e-17, 0.21827626222623284]}, {'': [8.713142724906291e-17, 0.21827626222622407]}, {'': [3.653898562057477e-17, 0.21827626222623805]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return 0.20269531634313648;  // std dev = 0.475, 981.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=338 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.07208362304002264;  // std dev = 1.671, 43.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.06569610491083312;  // std dev = 2.952, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.13814893509951237;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.23e-07, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17436603175135845;  // std dev = 0.474, 1,013.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.06353337216408994;  // std dev = 1.671, 43.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.05750927793249817;  // std dev = 2.952, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.12048633002602775;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.37e-07, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3924094258849766;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.06288673832974342;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return 0.15034507223274496;  // std dev = 0.475, 981.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=338 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.05636272422873308;  // std dev = 1.671, 43.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.05002678873025028;  // std dev = 2.952, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.10366302993845551;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12402679404001371;  // std dev = 0.473, 1,013.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.05028013330131;  // std dev = 1.671, 43.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.043273552250438656;  // std dev = 2.952, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.08809849495361294;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.293860876610214;  // std dev = 1.465, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.09411842330545639;  // std dev = 1.413, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return 0.10379541837796372;  // std dev = 0.475, 981.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=338 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.4726094414025146;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.027073466048243924;  // std dev = 1.506, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.006969843471308537;  // std dev = 3.120, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | | else return 0.035343179955792135;  // std dev = 2.949, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17417112189936274;  // std dev = 1.837, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.13913607524962815;  // std dev = 0.792, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return 0.08431597611264552;  // std dev = 0.475, 981.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=338 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02042281217404273;  // std dev = 3.024, 82.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | | else return 0.1001554749506511;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.07041005859978187;  // std dev = 3.137, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.0954689423017872;  // std dev = 0.000824, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0664997580888307;  // std dev = 0.472, 1,013.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=347 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.32758021259009645;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1648440034367775;  // std dev = 0.137, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.005601200913212934;  // std dev = 3.140, 81.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=12 */
%   | | | else return 0.04770585211487791;  // std dev = 3.148, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 2.98e-08, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05305032231943069;  // std dev = 0.472, 1,013.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.38246890324380556;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.008895913507649978;  // std dev = 1.498, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.016679687314503658;  // std dev = 3.104, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | | else return 0.033489053042792476;  // std dev = 2.914, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.30e-08, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03471126459837854;  // std dev = 14.401, 939.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=315 */
%   | | | else return 0.08047403246003086;  // std dev = 3.603, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | else if ( haswordtitle(E, G), haswordvenue(A, G) )
%   | | | then return -0.04527530544269688;  // std dev = 1.656, 43.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.044622302054011166;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.36532251730851595;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.048479070086628155;  // std dev = 3.101, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.08806741914247518;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.37e-08, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.027188098787252993;  // std dev = 14.355, 933.000 (wgt'ed) examples reached here.  /* #neg=620 #pos=313 */
%   | | | else return 0.06269512619303212;  // std dev = 3.778, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | else if ( haswordtitle(E, G), haswordvenue(A, G) )
%   | | | then return -0.040747108879442016;  // std dev = 1.656, 43.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.037771875682740125;  // std dev = 3.189, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.1175177276104602;  // std dev = 3.296, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return -0.010151285713993477;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.15676271864410427;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.607121
   AUC PR    = 0.593585
   CLL	      = -0.631639
   Precision = 0.945736 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.278539


Total learning time: 132.378 seconds
Total inference time: 2.904 seconds
AUC ROC: 0.607121


Results scoring model
   AUC ROC   = 0.64707
   AUC PR    = 0.592932
   CLL	      = -0.580831
   Precision = 0.988372 at threshold = 0.5
   Recall    = 0.187225
   F1        = 0.314815


Total scoring time: 4.386 seconds
Refined model CLL: -0.580831


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.607121
   AUC PR    = 0.593585
   CLL	      = -0.631639
   Precision = 0.945736 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.278539


Total learning time: 141.396 seconds
Total inference time: 2.904 seconds
AUC ROC: 0.607121
Total revision time: 141.396
Best scored revision CLL: -0.580831


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 21:37:51
{'AUC ROC': 0.607121, 'AUC PR': 0.593585, 'CLL': -0.631639, 'Precision': [0.945736, 0.5], 'Recall': 0.16332, 'F1': 0.278539, 'Learning time': 141.396, 'Inference time': 2.904, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.638243, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 2.89, 'Inference time': 1.415}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 8.92e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.18366088049199875;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.15980157604428152;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5.13e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.13651447515863682;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.38e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.11469748985396605;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.56e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.09498276457710009;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.07770496241076204;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2.38e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.06293892405612102;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.05057142896114745;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.0403762395373649;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6.32e-08, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else return 0.03207532983632858;  // std dev = 22.686, 2,344.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=763 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637113
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 4.522 seconds
Total inference time: 1.426 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.579846
   AUC PR    = 0.532898
   CLL	      = -0.603014
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159692
   F1        = 0.275404


Total scoring time: 2.046 seconds
Parameter learned model CLL: -0.603014


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.92e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.13e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.38e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.56e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 145], 'false': [22.686, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.32e-08, 0, 145], 'false': [22.686, 1, 763]}]]
[{'': [5.488330096905601e-15, 0.21955391879931177]}, {'': [-2.2541355755148008e-15, 0.21955391879930236]}, {'': [1.8131090498706005e-15, 0.21955391879926411]}, {'': [1.3230795769326004e-15, 0.21955391879929514]}, {'': [4.532772624676501e-16, 0.2195539187992893]}, {'': [-1.4700884188140004e-16, 0.21955391879927225]}, {'': [3.920235783504001e-16, 0.21955391879928715]}, {'': [-2.9401768376280007e-16, 0.21955391879929398]}, {'': [-3.675221047035001e-17, 0.21955391879929642]}, {'': [2.7564157852762507e-17, 0.21955391879930175]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 8.92e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.08542166237223964;  // std dev = 2.780, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else return 0.2064865310074357;  // std dev = 0.476, 1,955.000 (wgt'ed) examples reached here.  /* #neg=1,274 #pos=681 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.01685106490048768;  // std dev = 3.102, 88.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | | | else return 0.05142624602388168;  // std dev = 4.308, 119.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.09624417319474973;  // std dev = 4.364, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109561;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17940666910824749;  // std dev = 0.476, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=704 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.014812149378556643;  // std dev = 3.102, 88.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | | | else return 0.04505013127166623;  // std dev = 4.308, 119.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=23 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.08411986922925845;  // std dev = 4.364, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5.13e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3460795524787743;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return -0.05890402173406029;  // std dev = 2.276, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return 0.15509977921996543;  // std dev = 0.477, 1,953.000 (wgt'ed) examples reached here.  /* #neg=1,268 #pos=685 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.013040256218347413;  // std dev = 3.102, 88.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | | | else return 0.03927169110684469;  // std dev = 4.308, 119.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.07284015588610242;  // std dev = 4.364, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.38e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12749299330989283;  // std dev = 0.476, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=704 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.011495970442168607;  // std dev = 3.102, 88.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | | | else return 0.03408525982363221;  // std dev = 4.308, 119.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=23 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06254570224474036;  // std dev = 4.364, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.56e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10478696181709986;  // std dev = 0.476, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=704 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.010146653378486772;  // std dev = 3.102, 88.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=11 */
%   | | | else return 0.02946978078371071;  // std dev = 4.308, 119.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=23 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.05330891312605664;  // std dev = 4.364, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27948965600702846;  // std dev = 2.295, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return -0.0111009884274445;  // std dev = 2.771, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else return 0.08494958485579401;  // std dev = 0.476, 1,955.000 (wgt'ed) examples reached here.  /* #neg=1,274 #pos=681 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.003384039125805487;  // std dev = 4.913, 182.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=29 */
%   | | | else return 0.06467815729736709;  // std dev = 2.004, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04514315923373699;  // std dev = 4.364, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2.38e-07, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06808021657452226;  // std dev = 0.475, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=704 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.14569128782817828;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.011741634762688923;  // std dev = 5.305, 204.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=34 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.038015812824903274;  // std dev = 4.364, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05415802803340241;  // std dev = 0.475, 2,021.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=704 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.018799761342700692;  // std dev = 4.791, 156.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=28 */
%   | | | else return -0.024259780599738264;  // std dev = 2.275, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.03186204894451555;  // std dev = 4.364, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1876576285052528;  // std dev = 2.294, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return -0.03184986767936164;  // std dev = 2.771, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else return 0.042850098881273876;  // std dev = 0.476, 1,955.000 (wgt'ed) examples reached here.  /* #neg=1,274 #pos=681 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -4.8482742317828416E-5;  // std dev = 4.910, 182.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=29 */
%   | | | else return 0.058249677314736736;  // std dev = 2.002, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.026597365610164455;  // std dev = 4.364, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6.32e-08, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.42546584271397203;  // std dev = 13.042, 881.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=647 */
%   | | | else return -0.2687889757617388;  // std dev = 5.982, 1,159.000 (wgt'ed) examples reached here.  /* #neg=1,124 #pos=35 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.10410605579582347;  // std dev = 2.806, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.03240853342990647;  // std dev = 4.622, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.09603881504606177;  // std dev = 4.815, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return -0.07406739814671452;  // std dev = 1.261, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07055886955725366;  // std dev = 0.738, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.14780585708482918;  // std dev = 0.355, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.894789
   AUC PR    = 0.857497
   CLL	      = -0.525179
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28473


Total learning time: 590.261 seconds
Total inference time: 2.999 seconds
AUC ROC: 0.894789


Results scoring model
   AUC ROC   = 0.873004
   AUC PR    = 0.818159
   CLL	      = -0.504295
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174009
   F1        = 0.296435


Total scoring time: 8.375 seconds
Refined model CLL: -0.504295


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.894789
   AUC PR    = 0.857497
   CLL	      = -0.525179
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28473


Total learning time: 605.204 seconds
Total inference time: 2.999 seconds
AUC ROC: 0.894789
Total revision time: 605.204
Best scored revision CLL: -0.504295


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 21:48:01
{'AUC ROC': 0.894789, 'AUC PR': 0.857497, 'CLL': -0.525179, 'Precision': [1.0, 0.5], 'Recall': 0.165997, 'F1': 0.28473, 'Learning time': 605.204, 'Inference time': 2.999, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637113, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 4.522, 'Inference time': 1.426}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.18159445706185745;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.15802063925724213;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.59e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.13503705970394453;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.11351559438692228;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.26e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.09406850589237775;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.07701920026729761;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.06243916265398453;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527755;  // std dev = 5.96e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.0502173594294861;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.04013274749402321;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else return 0.03191355467153652;  // std dev = 27.699, 3,506.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,134 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.63775
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 5.745 seconds
Total inference time: 1.414 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539121
   CLL	      = -0.600167
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.202 seconds
Parameter learned model CLL: -0.600167


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.59e-07, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 228], 'false': [27.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 228], 'false': [27.699, 2, 1]}]]
[{'': [5.11092143266037e-15, 0.21882851628487887]}, {'': [-4.175996780344449e-15, 0.21882851628484645]}, {'': [1.3712228233966845e-15, 0.21882851628488548]}, {'': [-3.1164155077197375e-17, 0.2188285162848423]}, {'': [4.674623261579606e-16, 0.2188285162848251]}, {'': [3.505967446184705e-16, 0.2188285162848631]}, {'': [3.739698609263685e-16, 0.2188285162848435]}, {'': [1.5582077538598687e-17, 0.21882851628487077]}, {'': [-1.5192525600133721e-16, 0.21882851628485542]}, {'': [4.285071323114639e-17, 0.21882851628485792]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.4295775065280828;  // std dev = 3.207, 42.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.2051996895576691;  // std dev = 0.476, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,904 #pos=1,012 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.045382977652703244;  // std dev = 5.980, 235.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=44 */
%   | | | else return -0.026908536164855505;  // std dev = 2.975, 87.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.07105216090596285;  // std dev = 5.096, 155.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=33 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3688769765977062;  // std dev = 3.207, 42.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | | | else return 0.05092203251355422;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.17834115611759216;  // std dev = 0.476, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,904 #pos=1,012 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10905249556463993;  // std dev = 2.577, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.028231298000943646;  // std dev = 1.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.023017960812270952;  // std dev = 6.105, 266.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=45 */
%   | | | else return 0.03118851659178623;  // std dev = 5.045, 175.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=31 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.59e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3027909085849407;  // std dev = 3.207, 42.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | | | else return 0.04434629760466855;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14569181421366106;  // std dev = 4.447, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | | else return 0.1520245903484301;  // std dev = 25.318, 2,828.000 (wgt'ed) examples reached here.  /* #neg=1,846 #pos=982 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.09476618673385878;  // std dev = 2.576, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.024751264901649434;  // std dev = 1.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.042323983329579935;  // std dev = 2.836, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | | else return 0.02036512916902367;  // std dev = 7.394, 389.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=66 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return -0.0674333569789762;  // std dev = 0.306, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.12727772156790734;  // std dev = 0.476, 3,006.000 (wgt'ed) examples reached here.  /* #neg=1,960 #pos=1,046 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.03262733873695043;  // std dev = 5.983, 235.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=44 */
%   | | | else return -0.029109345580902134;  // std dev = 2.975, 87.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05352699335644109;  // std dev = 5.082, 155.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=33 */
%   | | | else return -0.1328175641821279;  // std dev = 0.037, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.26e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10426849507499195;  // std dev = 0.475, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,047 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.028315028096052713;  // std dev = 5.983, 235.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=44 */
%   | | | else return -0.02555720447593422;  // std dev = 2.975, 87.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04622935958626871;  // std dev = 5.082, 155.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=33 */
%   | | | else return -0.118261635399729;  // std dev = 0.034, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08459653508644731;  // std dev = 0.475, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,047 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.0021226323082764423;  // std dev = 6.060, 273.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=44 */
%   | | | else return 0.06569785142512784;  // std dev = 2.808, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03971374515725971;  // std dev = 5.081, 155.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=33 */
%   | | | else return -0.10648290209393241;  // std dev = 0.031, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06790405427167283;  // std dev = 0.475, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,047 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1697462793537601;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.01793956446170368;  // std dev = 2.625, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.007482199069819894;  // std dev = 6.088, 266.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=45 */
%   | | | else return 0.018338450303463472;  // std dev = 5.037, 175.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=31 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527755;  // std dev = 5.96e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05404665540878594;  // std dev = 0.475, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,047 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.021852318176272686;  // std dev = 5.983, 235.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=44 */
%   | | | else return -0.027913070144883284;  // std dev = 2.968, 87.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.03188488453359087;  // std dev = 5.075, 155.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=33 */
%   | | | else return -0.09837392167688486;  // std dev = 0.029, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04273549733433393;  // std dev = 0.475, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,047 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0023674140775026904;  // std dev = 6.057, 273.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=44 */
%   | | | else return 0.05986987020121728;  // std dev = 2.804, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.027113448420396098;  // std dev = 5.075, 155.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=33 */
%   | | | else return -0.08999110285309274;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033620847831314554;  // std dev = 0.475, 3,013.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,047 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.057168920107454176;  // std dev = 2.549, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.042124795529326756;  // std dev = 1.284, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.025427750487836673;  // std dev = 2.825, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | | else return 0.004201775293589759;  // std dev = 7.370, 389.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=66 */


Results
   AUC ROC   = 0.597202
   AUC PR    = 0.580874
   CLL	      = -0.629652
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 197.845 seconds
Total inference time: 1.882 seconds
AUC ROC: 0.597202


Results scoring model
   AUC ROC   = 0.632363
   AUC PR    = 0.569607
   CLL	      = -0.588957
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 3.579 seconds
Refined model CLL: -0.588957


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.597202
   AUC PR    = 0.580874
   CLL	      = -0.629652
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 209.371 seconds
Total inference time: 1.882 seconds
AUC ROC: 0.597202
Total revision time: 209.371
Best scored revision CLL: -0.588957


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 21:51:35
{'AUC ROC': 0.597202, 'AUC PR': 0.580874, 'CLL': -0.629652, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 209.371, 'Inference time': 1.882, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.63775, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 5.745, 'Inference time': 1.414}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.05e-06, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.1822942342448063;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.15862378293796484;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.13553752543970682;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583114;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.11391610656818237;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015083;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.09437848254387425;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.58e-07, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.07725185227871928;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2.83e-07, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.06260883639342261;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527692;  // std dev = 1.79e-07, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.05033767052482873;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.04021556557375953;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080116;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else return 0.03196864328973186;  // std dev = 32.020, 4,680.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,517 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637533
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.983 seconds
Total inference time: 1.368 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582324
   AUC PR    = 0.536872
   CLL	      = -0.601162
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164648
   F1        = 0.282742


Total scoring time: 2.338 seconds
Parameter learned model CLL: -0.601162


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 299], 'false': [32.02, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 299], 'false': [32.02, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 299], 'false': [32.02, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 299], 'false': [32.02, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 299], 'false': [32.02, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 299], 'false': [32.02, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 299], 'false': [32.02, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.79e-07, 0, 299], 'false': [32.02, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 299], 'false': [32.02, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 299], 'false': [32.02, 3, 1]}]]
[{'': [3.707179490922262e-15, 0.21907512418725017]}, {'': [-4.847850103513727e-15, 0.2190751241873355]}, {'': [-4.752794219131105e-17, 0.21907512418727193]}, {'': [-7.604470750609768e-16, 0.21907512418731012]}, {'': [-2.7328566760003855e-16, 0.219075124187312]}, {'': [4.2775147972179945e-16, 0.21907512418730687]}, {'': [2.6734467482612467e-16, 0.2190751241873318]}, {'': [1.0693786993044986e-16, 0.2190751241873052]}, {'': [-2.0793474708698585e-16, 0.21907512418728003]}, {'': [-1.455543229608901e-16, 0.2190751241872693]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.05e-06, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2055225723641256;  // std dev = 0.476, 4,036.000 (wgt'ed) examples reached here.  /* #neg=2,634 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11740819435877163;  // std dev = 3.220, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.05851773156715447;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.0702701472207245;  // std dev = 3.321, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.028148935099512072;  // std dev = 8.399, 500.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=85 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17861875084171752;  // std dev = 0.476, 4,036.000 (wgt'ed) examples reached here.  /* #neg=2,634 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10250668322505709;  // std dev = 3.220, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.05154258263854086;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.022178604636558158;  // std dev = 6.889, 340.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=57 */
%   | | | else return 0.03921270951649075;  // std dev = 5.845, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.39790870550315754;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return 0.025467587299326248;  // std dev = 3.640, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else return 0.1508422126739208;  // std dev = 0.476, 3,900.000 (wgt'ed) examples reached here.  /* #neg=2,550 #pos=1,350 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.038430828439536206;  // std dev = 6.799, 301.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=57 */
%   | | | else return -0.024690728042743932;  // std dev = 3.375, 105.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.05438277832551991;  // std dev = 5.957, 219.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=45 */
%   | | | else return -0.1509947473835112;  // std dev = 0.052, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583114;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.32779342540278084;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return 0.02143389180078421;  // std dev = 3.640, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else return 0.12604230143885525;  // std dev = 0.476, 3,900.000 (wgt'ed) examples reached here.  /* #neg=2,550 #pos=1,350 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09148795896570945;  // std dev = 2.991, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.06354312418839532;  // std dev = 1.343, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012222652702893858;  // std dev = 6.901, 347.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=57 */
%   | | | else return 0.03655158468021827;  // std dev = 5.924, 228.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015083;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10428524545754898;  // std dev = 0.475, 4,036.000 (wgt'ed) examples reached here.  /* #neg=2,634 #pos=1,402 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07890360431248193;  // std dev = 2.990, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.05524252347900081;  // std dev = 1.343, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.010640544383823213;  // std dev = 6.901, 347.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=57 */
%   | | | else return 0.03167423492993533;  // std dev = 5.923, 228.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.58e-07, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08460426220941313;  // std dev = 0.475, 4,036.000 (wgt'ed) examples reached here.  /* #neg=2,634 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07421237707422891;  // std dev = 3.205, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.05674484213629873;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.009654351504942784;  // std dev = 6.881, 340.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=57 */
%   | | | else return 0.025397114346278768;  // std dev = 5.823, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2.83e-07, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0679039081759878;  // std dev = 0.475, 4,036.000 (wgt'ed) examples reached here.  /* #neg=2,634 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06276603346772573;  // std dev = 3.204, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.05005195032355647;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.03722710916623272;  // std dev = 3.290, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.010696742005367054;  // std dev = 8.391, 500.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=85 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527692;  // std dev = 1.79e-07, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.054040433969926846;  // std dev = 0.475, 4,036.000 (wgt'ed) examples reached here.  /* #neg=2,634 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 3.2617682259106906E-4;  // std dev = 6.878, 347.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=57 */
%   | | | else return 0.06795063466515497;  // std dev = 3.187, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.032395968378900464;  // std dev = 5.939, 219.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=45 */
%   | | | else return -0.14256873240448065;  // std dev = 0.083, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0427251049621269;  // std dev = 0.475, 4,036.000 (wgt'ed) examples reached here.  /* #neg=2,634 #pos=1,402 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.023544597029640853;  // std dev = 6.784, 301.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=57 */
%   | | | else return -0.03342946168212654;  // std dev = 3.371, 105.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.02772529705029898;  // std dev = 5.938, 219.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=45 */
%   | | | else return -0.12605720796546413;  // std dev = 0.075, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080116;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #pos=299 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.17658414010376597;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return -0.045145514942035635;  // std dev = 3.640, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.02320967640475463;  // std dev = 4.955, 110.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
%   | | | else return 0.03328403476408666;  // std dev = 29.294, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,477 #pos=1,313 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.05571193247174195;  // std dev = 2.983, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.05584031332789994;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.00280230832189203;  // std dev = 6.895, 347.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=57 */
%   | | | else return 0.015838048984508434;  // std dev = 5.891, 228.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=44 */


Results
   AUC ROC   = 0.597202
   AUC PR    = 0.580874
   CLL	      = -0.629772
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 201.225 seconds
Total inference time: 1.84 seconds
AUC ROC: 0.597202


Results scoring model
   AUC ROC   = 0.63028
   AUC PR    = 0.567808
   CLL	      = -0.590441
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164648
   F1        = 0.282742


Total scoring time: 4.15 seconds
Refined model CLL: -0.590441


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.597202
   AUC PR    = 0.580874
   CLL	      = -0.629772
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 214.696 seconds
Total inference time: 1.84 seconds
AUC ROC: 0.597202
Total revision time: 214.696
Best scored revision CLL: -0.590441


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 21:55:14
{'AUC ROC': 0.597202, 'AUC PR': 0.580874, 'CLL': -0.629772, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 214.696, 'Inference time': 1.84, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637533, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.983, 'Inference time': 1.368}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 8.812 seconds
Total inference time: 1.301 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.516 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20594041938124213;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3928303268904019;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.0354875665427812;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.17851159415457662;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15230763842936773;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11767149769024587;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08788879413761608;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.012866519535122774;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03272964550999358;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.30221160157493004;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.0074771441992413585;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.1269085141607593;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.0955351579873046;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.059531232184166276;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010057372635391226;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03004576049705215;  // std dev = 6.437, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2900234621773525;  // std dev = 3.515, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return 0.011958511098320334;  // std dev = 4.478, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | else return 0.10433062574183012;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09782023613416815;  // std dev = 3.489, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08101939649353403;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00858322695193751;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025520518758283296;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2983237354587204;  // std dev = 4.218, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.055518516445622175;  // std dev = 3.900, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09091623444849309;  // std dev = 5.593, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.08394769797851717;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.20731547834489897;  // std dev = 1.572, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.012217304471028322;  // std dev = 3.401, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0064512953706778306;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023504269821862975;  // std dev = 6.425, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2770672990268724;  // std dev = 3.660, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.022086348624613433;  // std dev = 4.416, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.0729108691381979;  // std dev = 5.584, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.06736756495593878;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.07949511154318409;  // std dev = 3.480, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07438098292562823;  // std dev = 1.369, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.005349427055907277;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020540911436144376;  // std dev = 6.415, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.053976013804097125;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07067583777004356;  // std dev = 3.477, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0658306912003817;  // std dev = 1.340, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0038072307405439;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.018262408307934446;  // std dev = 6.416, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.18500512136435177;  // std dev = 4.181, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.05691905138585207;  // std dev = 3.870, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.0424410218723338;  // std dev = 0.475, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06430874189681599;  // std dev = 3.471, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06815680467176603;  // std dev = 1.370, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003091141896179696;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015903596659912683;  // std dev = 6.408, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1810277188631956;  // std dev = 3.541, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.039066572380307446;  // std dev = 4.380, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0387365424209637;  // std dev = 5.601, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.03324344177872612;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.056916182536375745;  // std dev = 3.468, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.060553026715538624;  // std dev = 1.342, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.0019499690660300852;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.014137663935010848;  // std dev = 6.410, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */


Results
   AUC ROC   = 0.602772
   AUC PR    = 0.586257
   CLL	      = -0.629379
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 265.438 seconds
Total inference time: 2.212 seconds
AUC ROC: 0.602772


Results scoring model
   AUC ROC   = 0.639801
   AUC PR    = 0.57896
   CLL	      = -0.587078
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 5.308 seconds
Refined model CLL: -0.587078


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602772
   AUC PR    = 0.586257
   CLL	      = -0.629379
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 282.07399999999996 seconds
Total inference time: 2.212 seconds
AUC ROC: 0.602772
Total revision time: 282.07399999999996
Best scored revision CLL: -0.587078


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 22:00:00
{'AUC ROC': 0.602772, 'AUC PR': 0.586257, 'CLL': -0.629379, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 282.07399999999996, 'Inference time': 2.212, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 8.812, 'Inference time': 1.301}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.1706964636166177;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.67e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.14862173642168341;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.48e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.12722306899356747;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1.03e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.10724204167163688;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.08919179348679038;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.07333923118832615;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.059738355799827975;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.048288302404377405;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.03879354818120365;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.031013588482347886;  // std dev = 16.809, 1,315.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=411 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726619
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.065 seconds
Total inference time: 1.133 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583164
   AUC PR    = 0.528224
   CLL	      = -0.593494
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166329
   F1        = 0.285217


Total scoring time: 1.738 seconds
Parameter learned model CLL: -0.593494


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [16.809, 904, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 82], 'false': [16.809, 904, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.48e-07, 0, 82], 'false': [16.809, 904, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 82], 'false': [16.809, 904, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [16.809, 904, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [16.809, 904, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [16.809, 904, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 82], 'false': [16.809, 904, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [16.809, 904, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 82], 'false': [16.809, 904, 411]}]]
[{'': [-6.932124251318051e-16, 0.21486157093493935]}, {'': [8.665155314147563e-16, 0.21486157093494765]}, {'': [1.4730764034050857e-15, 0.2148615709349368]}, {'': [1.2997732971221344e-16, 0.21486157093494906]}, {'': [-3.4660621256590254e-16, 0.21486157093495012]}, {'': [-5.415722071342227e-17, 0.21486157093494884]}, {'': [-1.408087738548979e-16, 0.21486157093495512]}, {'': [2.166288828536891e-17, 0.2148615709349623]}, {'': [-5.144935967775116e-17, 0.2148615709349489]}, {'': [4.06179155350667e-17, 0.21486157093496244]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18523422094767994;  // std dev = 15.325, 1,067.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=349 */
%   | | | else return 0.26137474155112406;  // std dev = 3.863, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06648226843284571;  // std dev = 3.446, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return 0.030562728202960583;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else return -0.043811849214213223;  // std dev = 0.297, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.67e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16115728706760613;  // std dev = 15.325, 1,067.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=349 */
%   | | | else return 0.22649059583143222;  // std dev = 3.863, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2557225255975429;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.11856181366859946;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05819515716833955;  // std dev = 3.446, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return 0.026801469463012095;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else return -0.03856187960321784;  // std dev = 0.297, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.48e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14427061782907558;  // std dev = 15.413, 1,068.000 (wgt'ed) examples reached here.  /* #neg=711 #pos=357 */
%   | | | else return 0.07585498733805474;  // std dev = 3.477, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.214562364478699;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.10204228120178861;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05061750232818765;  // std dev = 3.446, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return 0.0234353450742992;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else return -0.034077244313095674;  // std dev = 0.297, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1.03e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11475068824346701;  // std dev = 15.321, 1,067.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=349 */
%   | | | else return 0.17304345890081566;  // std dev = 3.861, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17520344886901457;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.08676907870746632;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.1519741784774219;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04901567932630199;  // std dev = 3.974, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | | else return -0.03021863618703465;  // std dev = 2.124, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10091669413708669;  // std dev = 15.412, 1,068.000 (wgt'ed) examples reached here.  /* #neg=711 #pos=357 */
%   | | | else return 0.03684706530922609;  // std dev = 3.463, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13992299045211237;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.07300063402786537;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.13340586588847084;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.04226861367359054;  // std dev = 3.974, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | else return -0.02687774200178449;  // std dev = 0.297, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08238331251866453;  // std dev = 15.412, 1,068.000 (wgt'ed) examples reached here.  /* #neg=711 #pos=357 */
%   | | | else return 0.03003893662822364;  // std dev = 3.463, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10645872263379763;  // std dev = 2.266, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.04260861513322001;  // std dev = 1.551, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.11872283695724363;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03627139369660477;  // std dev = 3.975, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | | else return -0.023969160773566964;  // std dev = 2.124, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.061167039738669826;  // std dev = 15.314, 1,067.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=349 */
%   | | | else return 0.11766972736801366;  // std dev = 3.860, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08592594908450407;  // std dev = 2.267, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.03386417943510355;  // std dev = 1.549, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.10685240680283468;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.03099171548431258;  // std dev = 3.975, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | else return -0.021424703327512038;  // std dev = 0.297, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.054086693946181465;  // std dev = 15.411, 1,068.000 (wgt'ed) examples reached here.  /* #neg=711 #pos=357 */
%   | | | else return 0.005812028344700346;  // std dev = 3.450, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07949509020155597;  // std dev = 1.992, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.031113371506520653;  // std dev = 1.888, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01489476028859722;  // std dev = 3.566, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return 0.03697335795125346;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else return -0.019189300163198867;  // std dev = 0.297, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03828613071586552;  // std dev = 15.311, 1,067.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=349 */
%   | | | else return 0.0873310242039132;  // std dev = 3.861, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.058078474965245236;  // std dev = 2.271, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.012842675865224815;  // std dev = 1.540, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01269203115076176;  // std dev = 3.566, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return 0.03160601152054669;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else return -0.01721801622172015;  // std dev = 0.297, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03481644002910214;  // std dev = 15.410, 1,068.000 (wgt'ed) examples reached here.  /* #neg=711 #pos=357 */
%   | | | else return -0.00916466958673657;  // std dev = 3.439, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05260152592362309;  // std dev = 1.995, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.016020378986703547;  // std dev = 1.883, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09952003329663305;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020989565984837397;  // std dev = 3.974, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | | else return -0.01547384080450484;  // std dev = 2.124, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */


Results
   AUC ROC   = 0.65796
   AUC PR    = 0.69582
   CLL	      = -0.720977
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 303.887 seconds
Total inference time: 2.979 seconds
AUC ROC: 0.65796


Results scoring model
   AUC ROC   = 0.632637
   AUC PR    = 0.560804
   CLL	      = -0.583341
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166329
   F1        = 0.285217


Total scoring time: 10.909 seconds
Refined model CLL: -0.583341


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.65796
   AUC PR    = 0.69582
   CLL	      = -0.720977
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 319.599 seconds
Total inference time: 2.979 seconds
AUC ROC: 0.65796
Total revision time: 319.599
Best scored revision CLL: -0.583341


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 22:05:25
{'AUC ROC': 0.65796, 'AUC PR': 0.69582, 'CLL': -0.720977, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 319.599, 'Inference time': 2.979, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726619, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 3.065, 'Inference time': 1.133}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.08e-06, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.16728152967344687;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.14567429628458597;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.84e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.12476679930249308;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583095;  // std dev = 3.82e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.10526217605781173;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014917;  // std dev = 3.53e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.08764445752803547;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694888;  // std dev = 3.58e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.0721638499729667;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253506;  // std dev = 3.00e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.05886898997112908;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527825;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.04766177028199562;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936715;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.03835404475352066;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.88e-08, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else return 0.0307145230222964;  // std dev = 23.641, 2,617.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=809 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.729484
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.387 seconds
Total inference time: 1.132 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.589757
   AUC PR    = 0.538933
   CLL	      = -0.588628
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.179513
   F1        = 0.304385


Total scoring time: 2.084 seconds
Parameter learned model CLL: -0.588628


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 177], 'false': [23.641, 1, 809]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 177], 'false': [23.641, 1, 809]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.84e-07, 0, 177], 'false': [23.641, 1, 809]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.82e-07, 0, 177], 'false': [23.641, 1, 809]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.53e-07, 0, 177], 'false': [23.641, 1, 809]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 177], 'false': [23.641, 1, 809]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3e-07, 0, 177], 'false': [23.641, 1, 809]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 177], 'false': [23.641, 1, 809]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 177], 'false': [23.641, 1, 809]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.88e-08, 0, 177], 'false': [23.641, 1, 809]}]]
[{'': [6.58355981156251e-15, 0.2135696335459489]}, {'': [-3.2114925910061025e-15, 0.21356963354589914]}, {'': [1.9268955546036615e-15, 0.21356963354593814]}, {'': [8.229449764453138e-16, 0.21356963354593012]}, {'': [7.02514004282585e-16, 0.21356963354593544]}, {'': [7.225858329763731e-16, 0.21356963354592182]}, {'': [5.068136745181505e-16, 0.2135696335459249]}, {'': [-1.6559258672375216e-16, 0.21356963354592245]}, {'': [-4.516161456102332e-17, 0.21356963354592404]}, {'': [3.512570021412925e-17, 0.21356963354592315]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.08e-06, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1850539209885007;  // std dev = 21.629, 2,126.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=695 */
%   | | | else return 0.1399671169176928;  // std dev = 4.718, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.40814893509951145;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.23314893509951234;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.024815601766178474;  // std dev = 4.655, 156.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=26 */
%   | | | else return 0.07766113022146359;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0134106979280106;  // std dev = 3.493, 109.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16100193838021679;  // std dev = 21.629, 2,126.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=695 */
%   | | | else return 0.12206059898765945;  // std dev = 4.718, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35088759069748027;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.2023342392181077;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.14489878247426088;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.042811887936049516;  // std dev = 5.326, 185.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=35 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.011786050093062557;  // std dev = 3.493, 109.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.84e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1339668370381087;  // std dev = 21.529, 2,120.000 (wgt'ed) examples reached here.  /* #neg=1,435 #pos=685 */
%   | | | else return 0.17141870123739883;  // std dev = 5.151, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28903586629606187;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.17149281961528942;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01810784935572817;  // std dev = 4.646, 156.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=26 */
%   | | | else return 0.06235408067595639;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.010371105084759212;  // std dev = 3.493, 109.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=14 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583095;  // std dev = 3.82e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11594070952303422;  // std dev = 21.629, 2,126.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=695 */
%   | | | else return 0.08093031104403389;  // std dev = 4.711, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22959857014057355;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.14228146899184044;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015803457532943276;  // std dev = 4.646, 156.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=26 */
%   | | | else return 0.053917064330760295;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.009135951516132366;  // std dev = 3.493, 109.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=14 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014917;  // std dev = 3.53e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09276045719646356;  // std dev = 21.526, 2,120.000 (wgt'ed) examples reached here.  /* #neg=1,435 #pos=685 */
%   | | | else return 0.1282144296684672;  // std dev = 5.154, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17769221176505495;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.11591746118730595;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013768379121152327;  // std dev = 4.645, 156.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=26 */
%   | | | else return 0.046332243189464384;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.008055564088163259;  // std dev = 3.493, 109.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=14 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694888;  // std dev = 3.58e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07895964959172247;  // std dev = 21.629, 2,126.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=695 */
%   | | | else return 0.04764799838796331;  // std dev = 4.703, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.096595303378741;  // std dev = 3.192, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.14145456076407406;  // std dev = 2.685, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.13326386304039925;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.027519334662406435;  // std dev = 5.323, 185.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=35 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007108873949719446;  // std dev = 3.493, 109.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=14 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253506;  // std dev = 3.00e-07, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06103390531839111;  // std dev = 21.524, 2,120.000 (wgt'ed) examples reached here.  /* #neg=1,435 #pos=685 */
%   | | | else return 0.09349939273480817;  // std dev = 5.156, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10449703584687056;  // std dev = 3.137, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.07130394199877066;  // std dev = 2.747, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0669214802946066;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11860916878932676;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.014722462643458873;  // std dev = 6.297, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527825;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05179506902532527;  // std dev = 21.629, 2,126.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=695 */
%   | | | else return 0.023716501010492788;  // std dev = 4.695, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05639470438593732;  // std dev = 3.202, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.08372829640547824;  // std dev = 2.670, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05823190072190616;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1067595661692806;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.01280884768712974;  // std dev = 6.297, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936715;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03874292412636048;  // std dev = 21.522, 2,120.000 (wgt'ed) examples reached here.  /* #neg=1,435 #pos=685 */
%   | | | else return 0.06789194878126029;  // std dev = 5.159, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.043457813813474924;  // std dev = 3.203, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.06323389461042654;  // std dev = 2.668, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09699785248403019;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020997728057398104;  // std dev = 5.320, 185.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=35 */
%   | | | else return -0.011275633136326688;  // std dev = 3.495, 112.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.88e-08, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24030982775758503;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.11849533779035819;  // std dev = 2.162, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03273295678943053;  // std dev = 21.922, 2,191.000 (wgt'ed) examples reached here.  /* #neg=1,478 #pos=713 */
%   | | | else return 0.04088543119683047;  // std dev = 4.111, 70.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.08882766185614376;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.018042443798292767;  // std dev = 5.320, 185.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=35 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.00802797355253435;  // std dev = 3.493, 109.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=14 */
%   | | | else return -0.07996455212991065;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.676529
   AUC PR    = 0.711343
   CLL	      = -0.718732
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 560.587 seconds
Total inference time: 2.475 seconds
AUC ROC: 0.676529


Results scoring model
   AUC ROC   = 0.639475
   AUC PR    = 0.573764
   CLL	      = -0.577856
   Precision = 0.955446 at threshold = 0.5
   Recall    = 0.19574
   F1        = 0.324916


Total scoring time: 15.49 seconds
Refined model CLL: -0.577856


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.676529
   AUC PR    = 0.711343
   CLL	      = -0.718732
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 582.548 seconds
Total inference time: 2.475 seconds
AUC ROC: 0.676529
Total revision time: 582.548
Best scored revision CLL: -0.577856


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 22:15:12
{'AUC ROC': 0.676529, 'AUC PR': 0.711343, 'CLL': -0.718732, 'Precision': [0.978261, 0.5], 'Recall': 0.163636, 'F1': 0.280374, 'Learning time': 582.548, 'Inference time': 2.475, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.729484, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.387, 'Inference time': 1.132}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.08e-06, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.16693874401670464;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109576;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.14537837762276484;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.58e-07, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.1245200394770815;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831114;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.1050630699858768;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.08748862906073351;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694879;  // std dev = 3.37e-07, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.07204527327672891;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325348;  // std dev = 2.86e-07, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.05878110467091642;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 8.43e-08, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.047598282527758606;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.03830938549382251;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801129;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else return 0.03068403299636212;  // std dev = 28.944, 3,925.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,212 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.729775
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 5.952 seconds
Total inference time: 1.172 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.590541
   AUC PR    = 0.540249
   CLL	      = -0.588089
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.181081
   F1        = 0.306636


Total scoring time: 2.152 seconds
Parameter learned model CLL: -0.588089


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 268], 'false': [28.944, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 268], 'false': [28.944, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 268], 'false': [28.944, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 268], 'false': [28.944, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 268], 'false': [28.944, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 268], 'false': [28.944, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 268], 'false': [28.944, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.43e-08, 0, 268], 'false': [28.944, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 268], 'false': [28.944, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 268], 'false': [28.944, 2, 1]}]]
[{'': [4.348097338233449e-15, 0.2134386628261042]}, {'': [-4.560199647415568e-15, 0.2134386628261073]}, {'': [4.772301956597688e-16, 0.2134386628261103]}, {'': [-5.037429843075337e-16, 0.2134386628261183]}, {'': [-1.3256394323882466e-17, 0.21343866282607613]}, {'': [4.242046183642389e-16, 0.21343866282606022]}, {'': [3.048970694492967e-16, 0.21343866282605392]}, {'': [2.6512788647764932e-17, 0.2134386628261033]}, {'': [-1.789613233724133e-16, 0.2134386628260872]}, {'': [-5.96537744574711e-17, 0.21343866282604504]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.08e-06, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18321865930155246;  // std dev = 26.608, 3,227.000 (wgt'ed) examples reached here.  /* #neg=2,178 #pos=1,049 */
%   | | | else return 0.14564893509951218;  // std dev = 5.725, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4071685429426485;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.27675358626230306;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02625238337537355;  // std dev = 5.696, 232.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=39 */
%   | | | else return 0.09029179224236951;  // std dev = 3.159, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.015184398233821011;  // std dev = 4.073, 150.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109576;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15942048309167045;  // std dev = 26.608, 3,227.000 (wgt'ed) examples reached here.  /* #neg=2,178 #pos=1,049 */
%   | | | else return 0.1269782425082993;  // std dev = 5.725, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3500634922838995;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.2396206853161997;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.023026553226920612;  // std dev = 5.696, 232.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=39 */
%   | | | else return 0.07894129075367225;  // std dev = 3.159, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.013346044252288154;  // std dev = 4.073, 150.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=19 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.58e-07, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13619841712964514;  // std dev = 26.608, 3,227.000 (wgt'ed) examples reached here.  /* #neg=2,178 #pos=1,049 */
%   | | | else return 0.10912160154478148;  // std dev = 5.725, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28840334139451873;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.2016709747053186;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.020147174333154855;  // std dev = 5.696, 232.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=39 */
%   | | | else return 0.06841752877579256;  // std dev = 3.159, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.01174676570736008;  // std dev = 4.073, 150.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=19 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831114;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11444476551467572;  // std dev = 26.608, 3,227.000 (wgt'ed) examples reached here.  /* #neg=2,178 #pos=1,049 */
%   | | | else return 0.09256411661090742;  // std dev = 5.725, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22914859192591022;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.16546837522188929;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.017589260512661492;  // std dev = 5.696, 232.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=39 */
%   | | | else return 0.05883307359919903;  // std dev = 3.159, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.010351844283254698;  // std dev = 4.073, 150.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=19 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09478738845251294;  // std dev = 26.608, 3,227.000 (wgt'ed) examples reached here.  /* #neg=2,178 #pos=1,049 */
%   | | | else return 0.07762633637432832;  // std dev = 5.725, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17738624563566863;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.1329302916561602;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06220042876133456;  // std dev = 0.288, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02725002214568421;  // std dev = 6.369, 269.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=50 */
%   | | | else return -0.009925548256546348;  // std dev = 4.073, 153.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694879;  // std dev = 3.37e-07, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07755852554838963;  // std dev = 26.608, 3,227.000 (wgt'ed) examples reached here.  /* #neg=2,178 #pos=1,049 */
%   | | | else return 0.06446399029963905;  // std dev = 5.725, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13511081673477524;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.10505067669786712;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012604038994963904;  // std dev = 5.694, 232.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=39 */
%   | | | else return 0.04662096999347894;  // std dev = 3.158, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.12866330823211267;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.008777826557817003;  // std dev = 4.073, 153.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325348;  // std dev = 2.86e-07, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.061734368702009705;  // std dev = 26.557, 3,225.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,043 */
%   | | | else return 0.07507106644857676;  // std dev = 5.956, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10199972425168738;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.08200969000439053;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.0468961280184486;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.020715279784783457;  // std dev = 6.370, 270.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=50 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006578235066247304;  // std dev = 4.072, 150.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=19 */
%   | | | else return -0.0911302671298936;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 8.43e-08, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0496339571561344;  // std dev = 26.557, 3,225.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,043 */
%   | | | else return 0.06090076222331377;  // std dev = 5.957, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07667117701171854;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.06345882477747422;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.04075661403762347;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.01785336430301887;  // std dev = 6.370, 270.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=50 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0058203861119377675;  // std dev = 4.072, 150.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=19 */
%   | | | else return -0.08385834028171785;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04061890615575762;  // std dev = 26.609, 3,227.000 (wgt'ed) examples reached here.  /* #neg=2,178 #pos=1,049 */
%   | | | else return 0.029728714877898476;  // std dev = 5.720, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05753080258210214;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.04879579179800376;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.03558115185300917;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.015355077955663252;  // std dev = 6.370, 270.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=50 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005152893534998563;  // std dev = 4.072, 150.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=19 */
%   | | | else return -0.07763659500535153;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801129;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #pos=268 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03137224536669826;  // std dev = 26.556, 3,225.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,043 */
%   | | | else return 0.042164419962601354;  // std dev = 5.959, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.043149193914442156;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.03735349941138274;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.01710363232380503;  // std dev = 5.495, 204.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=37 */
%   | | | else return -0.005846301682635711;  // std dev = 3.487, 84.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004564332558624148;  // std dev = 4.072, 150.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=19 */
%   | | | else return -0.07225623300027119;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.679375
   AUC PR    = 0.717624
   CLL	      = -0.715381
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 987.324 seconds
Total inference time: 2.705 seconds
AUC ROC: 0.679375


Results scoring model
   AUC ROC   = 0.631429
   AUC PR    = 0.56728
   CLL	      = -0.578879
   Precision = 0.9279 at threshold = 0.5
   Recall    = 0.2
   F1        = 0.329072


Total scoring time: 28.656 seconds
Refined model CLL: -0.578879


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.679375
   AUC PR    = 0.717624
   CLL	      = -0.715381
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 1024.084 seconds
Total inference time: 2.705 seconds
AUC ROC: 0.679375
Total revision time: 1024.084
Best scored revision CLL: -0.578879


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 22:32:20
{'AUC ROC': 0.679375, 'AUC PR': 0.717624, 'CLL': -0.715381, 'Precision': [0.978261, 0.5], 'Recall': 0.163636, 'F1': 0.280374, 'Learning time': 1024.084, 'Inference time': 2.705, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.729775, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 5.952, 'Inference time': 1.172}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.17024478903636528;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.14823195631016722;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.12689840301975885;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.10698056029507744;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.08898766430002714;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.07318438522269684;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.059624010683823093;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.86e-07, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.04820605143268504;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.03873597675490073;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else return 0.030974516505474822;  // std dev = 33.598, 5,258.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,641 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726994
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.878 seconds
Total inference time: 1.199 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584136
   AUC PR    = 0.529858
   CLL	      = -0.592813
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168272
   F1        = 0.288069


Total scoring time: 2.33 seconds
Parameter learned model CLL: -0.592813


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 332], 'false': [33.598, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 332], 'false': [33.598, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 332], 'false': [33.598, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 332], 'false': [33.598, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 332], 'false': [33.598, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.91e-07, 0, 332], 'false': [33.598, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 332], 'false': [33.598, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 332], 'false': [33.598, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 332], 'false': [33.598, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 332], 'false': [33.598, 3, 1]}]]
[{'': [3.2530872239619043e-15, 0.21469203189222438]}, {'': [-5.1364535115187965e-15, 0.21469203189229358]}, {'': [-5.136453511518796e-16, 0.21469203189227792]}, {'': [-9.844869230411027e-16, 0.21469203189224614]}, {'': [-7.062623578338345e-16, 0.214692031892251]}, {'': [4.601406270735589e-16, 0.21469203189227712]}, {'': [1.872665342741228e-16, 0.21469203189230746]}, {'': [2.4612173076027567e-16, 0.21469203189231434]}, {'': [-2.3274554974069545e-16, 0.21469203189225786]}, {'': [-2.1936936872111526e-16, 0.21469203189226357]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18909746960216123;  // std dev = 30.975, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,899 #pos=1,434 */
%   | | | else return 0.1356608968220013;  // std dev = 6.473, 209.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3509025582879169;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | | else return 0.26631220040563447;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06492798797741088;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.04071024300142013;  // std dev = 7.401, 367.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=67 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.010537933587356782;  // std dev = 4.752, 198.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1644851876993348;  // std dev = 30.975, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,899 #pos=1,434 */
%   | | | else return 0.11833157818609201;  // std dev = 6.473, 209.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3026131137104745;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | | else return 0.23070850802372994;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.05720661123539924;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.03568199286478916;  // std dev = 7.401, 367.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=67 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.009259992849467765;  // std dev = 4.752, 198.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=26 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1403949815938648;  // std dev = 30.975, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,899 #pos=1,434 */
%   | | | else return 0.10184830791014343;  // std dev = 6.473, 209.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2516218025460541;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | | else return 0.19449923124087443;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.016150350831734404;  // std dev = 6.643, 320.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=53 */
%   | | | else return 0.06777103791056636;  // std dev = 3.535, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.008144990639979392;  // std dev = 4.752, 198.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=26 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11779532627018822;  // std dev = 30.975, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,899 #pos=1,434 */
%   | | | else return 0.08660986557511936;  // std dev = 6.473, 209.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2026462301319082;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | | else return 0.16000890443007232;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05829424863469683;  // std dev = 0.291, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.027713908210545687;  // std dev = 7.342, 365.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=66 */
%   | | | else return -0.007845650591517367;  // std dev = 4.752, 201.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=26 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0974121629544233;  // std dev = 30.937, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,898 #pos=1,430 */
%   | | | else return 0.07264040878803915;  // std dev = 6.651, 214.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15921339438484552;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | | else return 0.12897087651708916;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.050931605785922866;  // std dev = 0.291, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02408714105375655;  // std dev = 7.342, 365.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=66 */
%   | | | else return -0.006919915417474895;  // std dev = 4.752, 201.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=26 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.91e-07, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0795820622716657;  // std dev = 30.974, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,899 #pos=1,434 */
%   | | | else return 0.05903350132804343;  // std dev = 6.476, 209.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12293684137999579;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | | else return 0.10229351830221181;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04474351075620432;  // std dev = 0.291, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05845941231228002;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.014653560569911819;  // std dev = 8.637, 540.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=90 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06438079650001124;  // std dev = 30.936, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,898 #pos=1,430 */
%   | | | else return 0.04776123169751317;  // std dev = 6.655, 214.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09385734177396857;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | | else return 0.0801548958226061;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008288035649520183;  // std dev = 6.636, 320.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=53 */
%   | | | else return 0.050496531045514714;  // std dev = 3.531, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.00680641265043472;  // std dev = 4.751, 198.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=26 */
%   | | | else return -0.10158610670185667;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.86e-07, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05162394273627972;  // std dev = 30.935, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,898 #pos=1,430 */
%   | | | else return 0.03890840733403373;  // std dev = 6.655, 214.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06320420842374314;  // std dev = 4.008, 64.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=28 */
%   | | | else return 0.07249594495942537;  // std dev = 3.608, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04057650748635669;  // std dev = 0.291, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01719863751124767;  // std dev = 7.338, 365.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=66 */
%   | | | else return -0.006740554934372803;  // std dev = 4.751, 201.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=26 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04115026140496432;  // std dev = 30.972, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,899 #pos=1,434 */
%   | | | else return 0.030851399926551535;  // std dev = 6.480, 209.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05417766638745706;  // std dev = 4.151, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | | else return 0.04741990614365677;  // std dev = 3.442, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.054646010839179464;  // std dev = 0.266, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.016757200228157437;  // std dev = 7.389, 367.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=67 */
%   | | | else return -0.0081009045155744;  // std dev = 4.756, 205.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=26 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #pos=332 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03263595077994207;  // std dev = 30.935, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,898 #pos=1,430 */
%   | | | else return 0.0246922140635112;  // std dev = 6.658, 214.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03648482474756469;  // std dev = 4.010, 64.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=28 */
%   | | | else return 0.041929815050649286;  // std dev = 3.606, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04852695011367546;  // std dev = 0.266, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.03751151224109966;  // std dev = 1.647, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | | else return 0.009311339132802101;  // std dev = 8.631, 540.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=90 */


Results
   AUC ROC   = 0.68514
   AUC PR    = 0.724685
   CLL	      = -0.713867
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1180.887 seconds
Total inference time: 2.431 seconds
AUC ROC: 0.68514


Results scoring model
   AUC ROC   = 0.628589
   AUC PR    = 0.558114
   CLL	      = -0.583756
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168272
   F1        = 0.288069


Total scoring time: 30.392 seconds
Refined model CLL: -0.583756


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.68514
   AUC PR    = 0.724685
   CLL	      = -0.713867
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1221.487 seconds
Total inference time: 2.431 seconds
AUC ROC: 0.68514
Total revision time: 1221.487
Best scored revision CLL: -0.583756


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 22:52:46
{'AUC ROC': 0.68514, 'AUC PR': 0.724685, 'CLL': -0.713867, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1221.487, 'Inference time': 2.431, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726994, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.878, 'Inference time': 1.199}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 10.053 seconds
Total inference time: 1.095 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 2.477 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16281165607612205;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.11705241862532774;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011891393393414452;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0862077043203286;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.004983742099648496;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13902683790466866;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.10051288053749488;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2650732416269154;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06470460236356837;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.029336854937837217;  // std dev = 8.049, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 6.351963875153696E-4;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11683219078218116;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.08298829629729196;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611727;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.20308413151775798;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06794889063559706;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02825280036006072;  // std dev = 8.043, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0025262990747693193;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09665825156236615;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068729;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16750919730103578;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566578;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05972935835417388;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024873773015085823;  // std dev = 8.042, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0026146705941730115;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0790770048865046;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.055886370664196265;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12986669782561072;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224821;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06212812194923441;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02397326896926009;  // std dev = 8.038, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.005057437366105032;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06396870506991845;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.04604740227441136;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180402;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09166851495201699;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05467350413424886;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.020833824837064783;  // std dev = 8.037, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0044173728439632605;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4363307661888433;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.05603722632168818;  // std dev = 4.015, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05007518751086507;  // std dev = 34.950, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.072621826624391;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.057097713521158416;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020790966208944193;  // std dev = 8.033, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007426188620777942;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.041030639599547565;  // std dev = 34.563, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.027527922411707477;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05814208746105878;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.05078107759014437;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0031691139446633483;  // std dev = 7.203, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.056366745191109936;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0030460410225648985;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11019973977073118;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03255037426576461;  // std dev = 34.563, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.02231167431598796;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.044310418626569134;  // std dev = 4.697, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.03737471921399527;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.050801116266202886;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.051140107640884454;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.011561539465408477;  // std dev = 9.609, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */


Results
   AUC ROC   = 0.682851
   AUC PR    = 0.718586
   CLL	      = -0.712011
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 1339.047 seconds
Total inference time: 2.528 seconds
AUC ROC: 0.682851


Results scoring model
   AUC ROC   = 0.634294
   AUC PR    = 0.566285
   CLL	      = -0.58302
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 37.224 seconds
Refined model CLL: -0.58302


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682851
   AUC PR    = 0.718586
   CLL	      = -0.712011
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 1388.801 seconds
Total inference time: 2.528 seconds
AUC ROC: 0.682851
Total revision time: 1388.801
Best scored revision CLL: -0.58302


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 23:15:59
{'AUC ROC': 0.682851, 'AUC PR': 0.718586, 'CLL': -0.712011, 'Precision': [1.0, 0.5], 'Recall': 0.150909, 'F1': 0.262243, 'Learning time': 1388.801, 'Inference time': 2.528, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 10.053, 'Inference time': 1.095}}


