Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( publication(H, J), professor(J) )
%   | | | then return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.6389708529077307;  // std dev = 3.535, 73.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=57 */
%   else return -0.14185106490048804;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then if ( ta(D, A, E) )
%   | | | then return 0.5956597888827743;  // std dev = 1.333, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( publication(F, A), tempadvisedby(G, B) )
%   | | | then return 0.027420125210765922;  // std dev = 1.671, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.5048171937623782;  // std dev = 3.781, 74.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=54 */
%   | else if ( projectmember(H, B) )
%   | | then if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.4281863326033537;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7615196659366871;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return 0.011519665936687067;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2999812043982255;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else return -0.12544463852839144;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(D, F, E), publication(G, F) )
%   | | then if ( ta(H, I, E), publication(C, I) )
%   | | | then return 0.5753465296524162;  // std dev = 1.059, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.15185205397134033;  // std dev = 1.324, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( publication(C, J), ta(K, J, L) )
%   | | | then return 0.6717203337529617;  // std dev = 0.103, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5250756103324572;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( publication(M, B), publication(M, A) )
%   | | then if ( tempadvisedby(N, B), publication(P, N) )
%   | | | then return 0.44425532563517345;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( publication(Q, A), publication(R, B) )
%   | | | then return 0.016148353694156514;  // std dev = 1.664, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.38537179775016406;  // std dev = 3.149, 49.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   else return -0.11231637819360633;  // std dev = 7.88e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4354528449767383;  // std dev = 0.149, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, D, G) )
%   | | | then return 0.3016986329848321;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11960831640785495;  // std dev = 1.181, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return 0.06878641275043103;  // std dev = 2.105, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.2540106664760844;  // std dev = 4.248, 89.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=60 */
%   else return -0.10159632948783646;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then if ( ta(D, A, E) )
%   | | | then return 0.21799238871475518;  // std dev = 1.337, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.32382294350919;  // std dev = 0.059, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( publication(C, F), professor(F) )
%   | | | then return -0.019393575844374303;  // std dev = 2.427, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.4605271649819908;  // std dev = 1.013, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | then if ( ta(H, J, K), publication(L, J) )
%   | | | then return 0.0018995280805314055;  // std dev = 1.995, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.48278274438481883;  // std dev = 0.105, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.3622835547309433;  // std dev = 1.900, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return 0.14370327768303212;  // std dev = 1.523, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.09269127618926089;  // std dev = 5.16e-08, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(F, G, E), publication(C, G) )
%   | | then if ( tempadvisedby(H, B), ta(D, H, I) )
%   | | | then return -0.04663467449278498;  // std dev = 0.929, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3063645424470409;  // std dev = 1.101, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( ta(D, J, K), tempadvisedby(J, L) )
%   | | | then return 0.3852841159001813;  // std dev = 0.171, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.44212822030148047;  // std dev = 0.415, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( projectmember(M, B) )
%   | | then return 0.43888019605245193;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(N, A), publication(N, B) )
%   | | | then return 0.2573266237069192;  // std dev = 0.051, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.0908017857941679;  // std dev = 3.482, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   else return -0.08518475138839678;  // std dev = 6.99e-08, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), tempadvisedby(E, D) )
%   | then if ( publication(F, B) )
%   | | then if ( projectmember(G, B) )
%   | | | then return -0.22337667501882058;  // std dev = 0.995, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14396830719349815;  // std dev = 3.812, 119.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=92 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.4440702204011323;  // std dev = 0.233, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.25162339342478046;  // std dev = 0.741, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(I, B), ta(J, A, K) )
%   | | then return 0.3699101958028057;  // std dev = 0.259, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(L, B) )
%   | | | then return -0.36790380477367063;  // std dev = 0.715, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.02392591689843468;  // std dev = 1.192, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( ta(M, A, N) )
%   | then return -0.0972303676626011;  // std dev = 0.087, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.07486133362513721;  // std dev = 0.047, 147.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, B) )
%   | | then if ( ta(C, F, G), publication(E, F) )
%   | | | then return 0.13388460501853838;  // std dev = 1.413, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.01327504861839599;  // std dev = 3.008, 46.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=30 */
%   | | else if ( projectmember(H, B) )
%   | | | then return -0.4805686940517668;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.013769471506281827;  // std dev = 1.012, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(I, B) )
%   | | then if ( publication(I, J), inphase(J, K) )
%   | | | then return 0.07181281047563863;  // std dev = 3.089, 68.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=48 */
%   | | | else return 0.36347292387556174;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( projectmember(L, B) )
%   | | | then return 0.2664706415653096;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.46309993396313165;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07313924567756439;  // std dev = 0.009, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), ta(E, A, F) )
%   | then if ( ta(G, H, F), publication(D, H) )
%   | | then if ( samecourse(E, G) )
%   | | | then return 0.1427683105546589;  // std dev = 0.993, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.3379269400507902;  // std dev = 0.387, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( ta(E, I, F), publication(J, I) )
%   | | | then return -0.12609222494951652;  // std dev = 1.305, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.184404935268601;  // std dev = 1.313, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( ta(K, A, L), publication(M, A) )
%   | | then if ( publication(M, N), tempadvisedby(N, P) )
%   | | | then return -0.19880494547166214;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.25871578069276135;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( hasposition(Q, C), tempadvisedby(R, Q) )
%   | | | then return 0.0642907371740778;  // std dev = 3.386, 85.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=60 */
%   | | | else return -0.12784955906198966;  // std dev = 1.311, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return -0.0702031574124221;  // std dev = 0.056, 168.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then if ( ta(G, D, H), publication(I, A) )
%   | | then if ( samecourse(E, G) )
%   | | | then return 0.22156197449897175;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.007239102283195696;  // std dev = 0.655, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.3254266202442862;  // std dev = 0.435, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17469753874768718;  // std dev = 1.002, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( student(A), publication(C, A) )
%   | | then if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return 0.17105758303489813;  // std dev = 0.026, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.07775430325033876;  // std dev = 1.350, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( publication(C, N), ta(P, N, Q) )
%   | | | then return 0.03449454240887207;  // std dev = 2.700, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return -0.0572303993221121;  // std dev = 2.245, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   else return -0.07162737253105332;  // std dev = 0.178, 207.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=14 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4587281345839315;  // std dev = 2.048, 76.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 9.31e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4411859121392635;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.1667875827926078;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33681137553624996;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14487762687669622;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 6.14e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23798945785638434;  // std dev = 0.101, 70.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 6.05e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.14762569479094334;  // std dev = 0.151, 66.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.051270227343882355;  // std dev = 0.092, 120.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16370082315244558;  // std dev = 0.988, 73.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07513545998202602;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.09463936653910886;  // std dev = 0.153, 67.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0482468658635661;  // std dev = 0.923, 141.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10378064560493765;  // std dev = 0.140, 80.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0669984740962964;  // std dev = 3.73e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073217
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.071 seconds
Total inference time: 0.806 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084107
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.824 seconds
Parameter learned model CLL: -0.084107


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.49e-08, 0, 65], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.048, 11, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-08, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 65], 'true,false,true': [2.63e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false,true': [0.0, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.101, 5, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.05e-08, 122, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.151, 13, 53], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.092, 108, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.988, 8, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 104, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.153, 14, 53], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.923, 129, 12]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.14, 15, 65], 'true,false': [0.0, 0, 0], 'false': [3.73e-08, 94, 0]}]]
[{'': [0.14580996635154533, 7.12218544099157e-17], 'true': [-8.745141363201234e-16, -1.1895246692412391e-17], 'true,false': [-1.1895246692412391e-17, nan], 'true,false,true': [-1.1895246692412391e-17, nan], 'true,true': [-8.745141363201234e-16, nan]}, {'': [0.06966053414935142, -1.820037745287142e-18], 'true': [0.06966053414935142, nan], 'true,true': [2.1862853408003084e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.055184772173948994, 7.277092094181698e-17], 'true': [0.055184772173948994, nan], 'true,true': [0.055184772173948994, nan], 'true,true,true': [0.055184772173948994, nan]}, {'': [0.05133774590828778, -1.1485065771984378e-17], 'true': [-4.645856349200655e-16, 4.270088556250602e-18], 'true,false': [4.270088556250602e-18, nan]}, {'': [0.03222559653410798, 2.9261692121903353e-17], 'true': [0.03222559653410798, nan], 'true,true': [-1.6397140056002313e-16, -8.540177112501205e-18], 'true,true,false': [-8.540177112501205e-18, nan]}, {'': [0.010294460062602097, 3.0030622797237843e-17], 'true': [0.010294460062602097, nan], 'true,true': [0.010294460062602097, nan]}, {'': [0.022731402268772988, 0.008510774067609339], 'true': [0.022731402268772988, nan], 'true,true': [0.022731402268772988, nan]}, {'': [0.01336543799054576, -1.1742743529689156e-17], 'true': [0.01336543799054576, nan], 'true,true': [0.01336543799054576, nan]}, {'': [0.02331793076727642, 0.0060396748088224214], 'true': [0.02331793076727642, nan], 'true,true': [0.02331793076727642, nan]}, {'': [0.019694209903801097, 1.4763604050866443e-17], 'true': [0.019694209903801097, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.1123163781936062;  // std dev = 8.94e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783638;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014983;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 3.94e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839682;  // std dev = 6.05e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109161;  // std dev = 5.87e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07324622576333717;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4.94e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06842697784420267;  // std dev = 4.71e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13100401682482857;  // std dev = 0.197, 66.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=65 */
%   | else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.042 seconds
Total inference time: 0.826 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064354
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.722 seconds
Refined model CLL: -0.064354


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.6590000000000003 seconds
Total inference time: 0.826 seconds
AUC ROC: 1.0
Total revision time: 3.6590000000000003
Best scored revision CLL: -0.064354


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063438, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.6590000000000003, 'Inference time': 0.826, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073217, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.071, 'Inference time': 0.806}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004884;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.49045282973823806;  // std dev = 2.374, 144.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360678;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4333796971497465;  // std dev = 3.48e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.171243072922846;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783652;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3314897424595051;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14828877877096544;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926058;  // std dev = 5.37e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2034302408184987;  // std dev = 0.140, 153.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19529275795554452;  // std dev = 0.102, 115.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.053656932648999414;  // std dev = 0.087, 272.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.136587319112146;  // std dev = 1.770, 157.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07496977562464995;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13417384900680496;  // std dev = 0.114, 118.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044977765179307044;  // std dev = 1.344, 243.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10678251942803617;  // std dev = 0.133, 158.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=130 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0670640189633165;  // std dev = 1.49e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073574
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.597 seconds
Total inference time: 0.831 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084402
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.053 seconds
Parameter learned model CLL: -0.084402


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.66e-08, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 243, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [0.0, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 262, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.374, 14, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 238, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.48e-07, 0, 130], 'true,false,true': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 222, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [7.45e-09, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 224, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.14, 23, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.3e-08, 223, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.102, 9, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 248, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.77, 27, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 231, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.114, 12, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.344, 219, 24]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.133, 28, 130], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 223, 0]}]]
[{'': [0.10682980277575331, -1.900628717053766e-16], 'true': [4.481884948640632e-15, -3.0839528461809902e-18], 'true,true': [4.481884948640632e-15, nan], 'true,false': [-3.0839528461809902e-18, nan], 'true,false,true': [-3.0839528461809902e-18, nan]}, {'': [0.09915090450905026, -7.457986730306395e-17], 'true': [0.09915090450905026, nan], 'true,true': [-1.7490282726402467e-15, -4.270088556250602e-18], 'true,true,false': [-4.270088556250602e-18, nan]}, {'': [0.03912792348024051, -7.650276304139734e-17], 'true': [0.03912792348024051, nan], 'true,true': [0.03912792348024051, nan], 'true,true,true': [0.03912792348024051, nan]}, {'': [0.053303558984479915, -8.001607384685813e-17], 'true': [9.29171269840131e-16, -3.96508223080413e-18], 'true,false': [-3.96508223080413e-18, nan]}, {'': [0.02756070708982437, 1.2886517250113425e-17], 'true': [0.02756070708982437, nan], 'true,true': [-2.459571008400347e-16, 2.64338815386942e-18], 'true,true,false': [2.64338815386942e-18, nan]}, {'': [0.01973087178332383, 3.086718723173081e-17], 'true': [0.01973087178332383, nan], 'true,true': [0.01973087178332383, nan]}, {'': [0.010441502681935487, 0.007644473892220444], 'true': [0.010441502681935487, nan], 'true,true': [0.010441502681935487, nan]}, {'': [0.019955546982020938, -5.2867763077388404e-17], 'true': [0.019955546982020938, nan], 'true,true': [0.019955546982020938, nan]}, {'': [0.012951749123057405, 0.007437576823943476], 'true': [0.012951749123057405, nan], 'true,true': [0.012951749123057405, nan]}, {'': [0.01774248852122808, 9.957157171526067e-19], 'true': [0.01774248852122808, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048843;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360672;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.10159632948783652;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601497;  // std dev = 2.53e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 7.30e-08, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5.96e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109146;  // std dev = 6.99e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.0732462257633368;  // std dev = 1.18e-07, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06842697784420275;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1310040168248287;  // std dev = 0.278, 132.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=130 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06419184008202625;  // std dev = 1.05e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.361 seconds
Total inference time: 0.833 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.972 seconds
Refined model CLL: -0.06438


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.9830000000000005 seconds
Total inference time: 0.833 seconds
AUC ROC: 1.0
Total revision time: 4.9830000000000005
Best scored revision CLL: -0.06438


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063438, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.9830000000000005, 'Inference time': 0.833, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073574, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.597, 'Inference time': 0.831}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2.42e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46378162584744814;  // std dev = 3.453, 226.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936065;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4399403926790622;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.16749104692740657;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783663;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33596132014857655;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14541737642271793;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.84e-07, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2145677575545686;  // std dev = 0.132, 224.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.15e-07, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17126818848292086;  // std dev = 0.133, 188.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=161 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05563479953570659;  // std dev = 0.083, 428.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15139723397521987;  // std dev = 1.969, 227.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07483272717890697;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1292810800165278;  // std dev = 0.122, 183.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=161 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04917170491220647;  // std dev = 1.604, 413.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11569081165280026;  // std dev = 0.123, 232.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=195 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06668743069179445;  // std dev = 6.66e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073148
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.891 seconds
Total inference time: 0.915 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083936
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.18 seconds
Parameter learned model CLL: -0.083936


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.59e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.42e-07, 372, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false,true': [0.0, 27, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 353, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.453, 31, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 368, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 195], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 325, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false,true': [0.0, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.84e-07, 393, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.132, 29, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.15e-07, 349, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.133, 27, 161], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.083, 394, 34]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.969, 32, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 387, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.122, 22, 161], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.604, 379, 34]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.123, 37, 195], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 345, 0]}]]
[{'': [0.15020745435129484, 1.5758004220486094e-16], 'true': [5.975846598187509e-15, 4.794144879063176e-17], 'true,true': [5.975846598187509e-15, nan], 'true,false': [4.794144879063176e-17, nan], 'true,false,true': [4.794144879063176e-17, nan]}, {'': [0.07626435533091856, -1.1322387786545506e-16], 'true': [0.07626435533091856, nan], 'true,true': [-3.643808901333847e-15, -6.1679056923619804e-18], 'true,true,false': [-6.1679056923619804e-18, nan]}, {'': [0.05276182675929863, -3.137586808723268e-17], 'true': [0.05276182675929863, nan], 'true,true': [0.05276182675929863, nan], 'true,true,true': [0.05276182675929863, nan]}, {'': [0.0426368746639187, -4.5092135154006357e-17], 'true': [-2.0405329847469542e-15, -4.070817756958907e-17], 'true,false': [-4.070817756958907e-17, nan]}, {'': [0.02929653763789825, 8.587984719746758e-17], 'true': [0.02929653763789825, nan], 'true,true': [-1.166018848426831e-15, -4.89804275569922e-17], 'true,true,false': [-4.89804275569922e-17, nan]}, {'': [0.017479055669209074, 3.8173857580234607e-17], 'true': [0.017479055669209074, nan], 'true,true': [0.017479055669209074, nan]}, {'': [0.01776711204082515, 0.00691618636148708], 'true': [0.01776711204082515, nan], 'true,true': [0.01776711204082515, nan]}, {'': [0.017081071363411294, -1.2393187251629654e-16], 'true': [0.017081071363411294, nan], 'true,true': [0.017081071363411294, nan]}, {'': [0.014918675694638787, 0.006228193519195535], 'true': [0.014918675694638787, nan], 'true,true': [0.014918675694638787, nan]}, {'': [0.015119592148260681, 1.2872151010146743e-17], 'true': [0.015119592148260681, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048754;  // std dev = 2.35e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6246356718218437;  // std dev = 0.267, 98.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=87 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5657524681310276;  // std dev = 0.162, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.15437674730340994;  // std dev = 0.309, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.11231637819360668;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.425337877135768;  // std dev = 0.161, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.13014097288864435;  // std dev = 0.246, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.10159632948783628;  // std dev = 1.12e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.33762971792110713;  // std dev = 1.33e-07, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return -0.1677395277472033;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.31675764247547256;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.08692173977142709;  // std dev = 1.05e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 1.62e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25881351468320546;  // std dev = 0.099, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11214023056962795;  // std dev = 0.209, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839678;  // std dev = 1.13e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21233713189809553;  // std dev = 0.086, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09480620811718966;  // std dev = 0.164, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109143;  // std dev = 3.65e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17899273245265926;  // std dev = 0.076, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0975325706299975;  // std dev = 0.172, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07324622576333716;  // std dev = 5.58e-08, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15418522082214314;  // std dev = 0.067, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07509487622789011;  // std dev = 0.122, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420314;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202614;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( movie(D, B), movie(D, A) )
%   | | then return 0.13513430223613399;  // std dev = 0.060, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.08096787515794145;  // std dev = 0.154, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06419184008202593;  // std dev = 1.24e-07, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063896
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.71 seconds
Total inference time: 0.836 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065343
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.139 seconds
Refined model CLL: -0.065343


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063896
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.92 seconds
Total inference time: 0.836 seconds
AUC ROC: 1.0
Total revision time: 5.92
Best scored revision CLL: -0.065343


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:21
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063896, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.92, 'Inference time': 0.836, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073148, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.891, 'Inference time': 0.915}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 1.69e-07, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839127;  // std dev = 3.65e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4663420614209639;  // std dev = 3.931, 300.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360599;  // std dev = 0.000, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4393096170218305;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.16784837244110723;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783591;  // std dev = 2.27e-07, 424.000 (wgt'ed) examples reached here.  /* #neg=424 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33553096614438555;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14569137340357582;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926076;  // std dev = 1.79e-07, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19963738507241943;  // std dev = 0.147, 312.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.40e-07, 446.000 (wgt'ed) examples reached here.  /* #neg=446 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1796381942717066;  // std dev = 0.127, 243.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=212 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05443788726297372;  // std dev = 0.087, 563.000 (wgt'ed) examples reached here.  /* #neg=515 #pos=48 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15101641208635183;  // std dev = 2.323, 304.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07491563493593756;  // std dev = 0.000, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12331119472657705;  // std dev = 0.130, 246.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=212 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04703447012152349;  // std dev = 1.909, 537.000 (wgt'ed) examples reached here.  /* #neg=489 #pos=48 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10686163866781669;  // std dev = 0.138, 317.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=260 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0668900738383912;  // std dev = 1.05e-07, 433.000 (wgt'ed) examples reached here.  /* #neg=433 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.25 seconds
Total inference time: 0.907 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083953
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.331 seconds
Parameter learned model CLL: -0.083953


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.65e-08, 36, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.69e-07, 499, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [3.65e-08, 43, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 495, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.931, 40, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 475, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 260], 'true,false,true': [0.0, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.27e-07, 424, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [0.0, 49, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.79e-07, 453, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.147, 52, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.4e-07, 446, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.127, 31, 212], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 515, 48]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.323, 44, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 453, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.13, 34, 212], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.909, 489, 48]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.138, 57, 260], 'true,false': [0.0, 0, 0], 'false': [1.05e-07, 433, 0]}]]
[{'': [0.10682980277575292, 5.695733352786374e-17], 'true': [4.372570681600617e-15, 3.700743415417188e-17], 'true,true': [4.372570681600617e-15, nan], 'true,false': [3.700743415417188e-17, nan], 'true,false,true': [3.700743415417188e-17, nan]}, {'': [0.08693321144289233, -1.3277818799557427e-16], 'true': [0.08693321144289233, nan], 'true,true': [-4.481884948640632e-15, 3.0982968129074136e-17], 'true,true,false': [3.0982968129074136e-17, nan]}, {'': [0.051514706113411295, -1.1219095827791055e-17], 'true': [0.051514706113411295, nan], 'true,true': [0.051514706113411295, nan], 'true,true,true': [0.051514706113411295, nan]}, {'': [0.0518518159524374, 1.214961045816209e-16], 'true': [-5.192427684400732e-16, -5.44637710193473e-17], 'true,false': [-5.44637710193473e-17, nan]}, {'': [0.030898971906655685, 7.058371547285764e-17], 'true': [0.030898971906655685, nan], 'true,true': [-2.1862853408003084e-16, -4.5315225494904345e-18], 'true,true,false': [-4.5315225494904345e-18, nan]}, {'': [0.021531794773106575, 4.3811491554714695e-17], 'true': [0.021531794773106575, nan], 'true,true': [0.021531794773106575, nan]}, {'': [0.016134474163039154, 0.007577682453890839], 'true': [0.016134474163039154, nan], 'true,true': [0.016134474163039154, nan]}, {'': [0.017750649217634813, -1.0783623197242138e-17], 'true': [0.017750649217634813, nan], 'true,true': [0.017750649217634813, nan]}, {'': [0.016799033399552132, 0.00678366852501924], 'true': [0.016799033399552132, nan], 'true,true': [0.016799033399552132, nan]}, {'': [0.019025031920863657, 2.564025461028075e-17], 'true': [0.019025031920863657, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360608;  // std dev = 0.000, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783553;  // std dev = 3.20e-07, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2810251473186062;  // std dev = 0.122, 125.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=113 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601494;  // std dev = 2.49e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926086;  // std dev = 1.60e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25848219860202243;  // std dev = 0.061, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09651772820636645;  // std dev = 0.111, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.08518475138839679;  // std dev = 1.43e-07, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21209611929999406;  // std dev = 0.053, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09176978171134449;  // std dev = 0.100, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.07877675473109186;  // std dev = 1.67e-07, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17881161254579028;  // std dev = 0.047, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0817122819438145;  // std dev = 0.100, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07324622576333747;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15404495672318663;  // std dev = 0.041, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07545156501997011;  // std dev = 0.094, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.0684269778442034;  // std dev = 0.000, 452.000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13502282283742248;  // std dev = 0.037, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.07597315325949891;  // std dev = 0.078, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.0641918400820255;  // std dev = 2.19e-07, 439.000 (wgt'ed) examples reached here.  /* #neg=439 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063732
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.89 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064934
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.148 seconds
Refined model CLL: -0.064934


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063732
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.619 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0
Total revision time: 6.619
Best scored revision CLL: -0.064934


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063732, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.619, 'Inference time': 0.838, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073221, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.25, 'Inference time': 0.907}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0.000, 574.000 (wgt'ed) examples reached here.  /* #neg=574 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 588.000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4472327160747835;  // std dev = 4.851, 389.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360599;  // std dev = 0.000, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44402188915274615;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.16519618364789618;  // std dev = 4.93e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783531;  // std dev = 3.77e-07, 553.000 (wgt'ed) examples reached here.  /* #neg=553 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3387483555041118;  // std dev = 1.86e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14365494706322754;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926129;  // std dev = 0.000, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20273662826981947;  // std dev = 0.146, 390.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18111461989451905;  // std dev = 0.127, 306.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05484760597094007;  // std dev = 0.087, 700.000 (wgt'ed) examples reached here.  /* #neg=641 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14437512611150957;  // std dev = 2.766, 391.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0748872450294676;  // std dev = 1.55e-07, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12618916847734157;  // std dev = 0.128, 309.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04689769913035945;  // std dev = 2.130, 669.000 (wgt'ed) examples reached here.  /* #neg=610 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10455915072366591;  // std dev = 0.136, 409.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=326 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06687481118570612;  // std dev = 1.07e-07, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073115
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.665 seconds
Total inference time: 0.889 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083695
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.632 seconds
Parameter learned model CLL: -0.083695


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.77e-08, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.14e-08, 61, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 574, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [0.0, 47, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 588, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.851, 63, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 633, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 326], 'true,false,true': [4.93e-09, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.77e-07, 553, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.86e-08, 0, 326], 'true,true,false,true': [0.0, 49, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 573, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.146, 64, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 587, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.127, 39, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 641, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.766, 65, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.55e-07, 591, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.128, 42, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.13, 610, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.136, 83, 326], 'true,false': [0.0, 0, 0], 'false': [1.07e-07, 620, 0]}]]
[{'': [0.13277781116252677, -2.1972358118017035e-16], 'true': [3.400143152717044e-15, 6.188128333976282e-17], 'true,true': [3.400143152717044e-15, nan], 'true,false': [6.188128333976282e-17, nan], 'true,false,true': [6.188128333976282e-17, nan]}, {'': [0.07861890147985734, -1.963659771445855e-16], 'true': [0.07861890147985734, nan], 'true,true': [-5.056623150194578e-15, -3.0708296425802203e-17], 'true,true,false': [-3.0708296425802203e-17, nan]}, {'': [0.06050612546160788, -8.839690433034422e-17], 'true': [0.06050612546160788, nan], 'true,true': [0.06050612546160788, nan], 'true,true,true': [0.06050612546160788, nan]}, {'': [0.044643743745872655, 2.5697748128755885e-16], 'true': [-1.35133894531062e-15, 2.0947604238210502e-17], 'true,false': [2.0947604238210502e-17, nan]}, {'': [0.026434535855228175, -9.300297588482987e-18], 'true': [0.026434535855228175, nan], 'true,true': [3.4873263104790194e-16, -4.0783702945413916e-17], 'true,true,false': [-4.0783702945413916e-17, nan]}, {'': [0.021328308153171997, 3.9340100361504695e-17], 'true': [0.021328308153171997, nan], 'true,true': [0.021328308153171997, nan]}, {'': [0.016118742059238942, 0.007593926160764037], 'true': [0.016118742059238942, nan], 'true,true': [0.016118742059238942, nan]}, {'': [0.01957088071388392, 4.057667907259455e-17], 'true': [0.01957088071388392, nan], 'true,true': [0.01957088071388392, nan]}, {'': [0.0165024964882372, 0.006782257970145165], 'true': [0.0165024964882372, nan], 'true,true': [0.0165024964882372, nan]}, {'': [0.018603860360938248, 1.862309589693811e-17], 'true': [0.018603860360938248, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048857;  // std dev = 0.000, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360568;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.10159632948783533;  // std dev = 3.75e-07, 548.000 (wgt'ed) examples reached here.  /* #neg=548 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.31e-07, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716014906;  // std dev = 3.67e-07, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926139;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 4.09e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253476;  // std dev = 2.80e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109237;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527678;  // std dev = 2.83e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333657;  // std dev = 2.39e-07, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936717;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.0684269778442036;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12984068739350657;  // std dev = 0.519, 333.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return -0.06419184008202528;  // std dev = 2.47e-07, 564.000 (wgt'ed) examples reached here.  /* #neg=564 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.146 seconds
Total inference time: 0.876 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064365
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.309 seconds
Refined model CLL: -0.064365


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.752 seconds
Total inference time: 0.876 seconds
AUC ROC: 1.0
Total revision time: 7.752
Best scored revision CLL: -0.064365


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063441, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.752, 'Inference time': 0.876, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073115, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.665, 'Inference time': 0.889}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5.96e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.05e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.02e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5160909770439374;  // std dev = 1.295, 68.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 7.45e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4270950278035383;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.17491233635052247;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783663;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.327215003118717;  // std dev = 1.71e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15108492412656352;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926089;  // std dev = 6.83e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20206525341709677;  // std dev = 0.139, 75.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5.16e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17279295529004052;  // std dev = 0.128, 61.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05684516043735726;  // std dev = 0.081, 144.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16936263295492984;  // std dev = 0.868, 70.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07474897362692269;  // std dev = 4.59e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1365050207283125;  // std dev = 0.106, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04986787213419142;  // std dev = 0.888, 141.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07942023881787;  // std dev = 0.151, 84.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06657407037329914;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076264
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.013 seconds
Total inference time: 0.845 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.829 seconds
Parameter learned model CLL: -0.083225


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.05e-08, 0, 64], 'true,true,false,true': [5.27e-09, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.02e-08, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.295, 4, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 64], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 101, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.71e-08, 0, 64], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.83e-08, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.139, 11, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 94, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.128, 8, 53], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 133, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.868, 6, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.59e-08, 126, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.106, 5, 53], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.888, 130, 11]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.151, 20, 64], 'true,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}]]
[{'': [0.13296398891966668, 2.9361270072731413e-17], 'true': [-8.881784197001252e-16, -1.1564823173178714e-17], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-1.1564823173178714e-17, nan], 'true,true': [-8.881784197001252e-16, nan]}, {'': [0.08343450839622259, 5.74936923466599e-17], 'true': [0.08343450839622259, nan], 'true,true': [1.1102230246251565e-16, 2.7755575615628915e-18], 'true,true,false': [2.7755575615628915e-18, nan]}, {'': [0.02468098775729048, 5.2867763077388404e-17], 'true': [0.02468098775729048, nan], 'true,true': [0.02468098775729048, nan], 'true,true,true': [0.02468098775729048, nan]}, {'': [0.04235650740636575, -4.83661515678286e-17], 'true': [-5.273559366969494e-16, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan]}, {'': [0.022594648928675957, 3.642919299551295e-17], 'true': [0.022594648928675957, nan], 'true,true': [2.914335439641036e-16, -3.469446951953614e-18], 'true,true,false': [-3.469446951953614e-18, nan]}, {'': [0.01926286745601956, 2.834611977766357e-17], 'true': [0.01926286745601956, nan], 'true,true': [0.01926286745601956, nan]}, {'': [0.016490925022053498, 0.006547757361313775], 'true': [0.016490925022053498, nan], 'true,true': [0.016490925022053498, nan]}, {'': [0.010770965089023818, 1.674145830783966e-17], 'true': [0.010770965089023818, nan], 'true,true': [0.010770965089023818, nan]}, {'': [0.011239952876396831, 0.005595209001156624], 'true': [0.011239952876396831, nan], 'true,true': [0.011239952876396831, nan]}, {'': [0.022828588530047423, -3.828355257328126e-18], 'true': [0.022828588530047423, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360624;  // std dev = 7.88e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783635;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601495;  // std dev = 2.11e-08, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3207118471601495;  // std dev = 2.11e-08, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926103;  // std dev = 2.98e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0851847513883968;  // std dev = 6.14e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109164;  // std dev = 5.37e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333707;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367103;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06842697784420267;  // std dev = 4.59e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return 0.13400703000801095;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06419184008202622;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06419184008202626;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.176 seconds
Total inference time: 0.865 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.799 seconds
Refined model CLL: -0.064203


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.8169999999999997 seconds
Total inference time: 0.865 seconds
AUC ROC: 1.0
Total revision time: 3.8169999999999997
Best scored revision CLL: -0.064203


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.8169999999999997, 'Inference time': 0.865, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076264, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.013, 'Inference time': 0.845}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839166;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4657445823919351;  // std dev = 2.778, 149.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360676;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4394567914034297;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.16776493594144704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3356313689713703;  // std dev = 2.69e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14562740454805895;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 6.66e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20140718341580974;  // std dev = 0.145, 154.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19186302284556445;  // std dev = 0.112, 116.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05188423786539829;  // std dev = 0.090, 260.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15471166383065205;  // std dev = 1.562, 148.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07509280344479297;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1257454102073222;  // std dev = 0.124, 120.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04619492296672196;  // std dev = 1.336, 262.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10335940443363383;  // std dev = 0.135, 160.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=129 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06709108458872277;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076523
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.475 seconds
Total inference time: 0.925 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083596
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.127 seconds
Parameter learned model CLL: -0.083596


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 250, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false,true': [7.45e-09, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 208, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.778, 20, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 245, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 129], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.69e-08, 0, 129], 'true,true,false,true': [0.0, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 236, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.145, 25, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 213, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.112, 11, 105], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 236, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.562, 19, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 267, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.124, 15, 105], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.336, 238, 24]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.135, 31, 129], 'true,false': [0.0, 0, 0], 'false': [0.0, 225, 0]}]]
[{'': [0.13960457856400044, -1.5276668818842153e-16], 'true': [4.40646657835721e-15, 1.708035422500241e-17], 'true,true': [4.40646657835721e-15, nan], 'true,false': [1.708035422500241e-17, nan], 'true,false,true': [1.708035422500241e-17, nan]}, {'': [0.06661701396701764, -3.629575272813012e-17], 'true': [0.06661701396701764, nan], 'true,true': [-1.7625866313428842e-15, 3.7007434154171884e-18], 'true,true,false': [3.7007434154171884e-18, nan]}, {'': [0.05180689521753419, -7.612957883143931e-17], 'true': [0.05180689521753419, nan], 'true,true': [0.05180689521753419, nan], 'true,true,true': [0.05180689521753419, nan]}, {'': [0.03793390270070401, -7.401486830834377e-17], 'true': [-4.4064665783572104e-16, -6.530723674265627e-18], 'true,false': [-6.530723674265627e-18, nan]}, {'': [0.02045516518184344, 1.881733940042638e-17], 'true': [0.02045516518184344, nan], 'true,true': [7.29821027040413e-16, -1.1895246692412391e-17], 'true,true,false': [-1.1895246692412391e-17, nan]}, {'': [0.021083383199748548, 2.9188962149769376e-17], 'true': [0.021083383199748548, nan], 'true,true': [0.021083383199748548, nan]}, {'': [0.012438123280397938, 0.008066930989951189], 'true': [0.012438123280397938, nan], 'true,true': [0.012438123280397938, nan]}, {'': [0.01648431050347873, -3.409673708586623e-17], 'true': [0.01648431050347873, nan], 'true,true': [0.01648431050347873, nan]}, {'': [0.015449523416105369, 0.006811729405477411], 'true': [0.015449523416105369, nan], 'true,true': [0.015449523416105369, nan]}, {'': [0.018256380237733138, -5.2303840271229595e-17], 'true': [0.018256380237733138, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1418510649004884;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360676;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783655;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014994;  // std dev = 1.12e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.2526219209614237;  // std dev = 0.153, 85.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892605;  // std dev = 1.01e-07, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26241278397857853;  // std dev = 0.074, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09825813786560648;  // std dev = 0.067, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 8.02e-08, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21486866891661624;  // std dev = 0.065, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09376749260006177;  // std dev = 0.074, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.07877675473109144;  // std dev = 7.45e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18084191936114313;  // std dev = 0.057, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.0846392951921699;  // std dev = 0.062, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07324622576333667;  // std dev = 1.18e-07, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15558302774259947;  // std dev = 0.050, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07557328997687987;  // std dev = 0.051, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06842697784420261;  // std dev = 5.96e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return 0.1362222432208881;  // std dev = 0.045, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07217437990848195;  // std dev = 0.057, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06419184008202626;  // std dev = 1.05e-08, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.389 seconds
Total inference time: 0.831 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064999
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.95 seconds
Refined model CLL: -0.064999


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.941000000000001 seconds
Total inference time: 0.831 seconds
AUC ROC: 1.0
Total revision time: 4.941000000000001
Best scored revision CLL: -0.064999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064085, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.941000000000001, 'Inference time': 0.831, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076523, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.475, 'Inference time': 0.925}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 2.04e-07, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.47645846770793204;  // std dev = 3.197, 220.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360671;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4368193276356025;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.169266136338537;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3338328619566511;  // std dev = 1.49e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14677739365385956;  // std dev = 1.05e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.86e-07, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2129418878529856;  // std dev = 0.132, 223.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18791701172407885;  // std dev = 0.113, 175.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=158 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.055093801191314684;  // std dev = 0.086, 426.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=36 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14687163135515519;  // std dev = 2.004, 227.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07487019061997197;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13726833628620197;  // std dev = 0.109, 174.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=158 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046902057237417194;  // std dev = 1.644, 391.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=36 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08181568509303673;  // std dev = 0.153, 255.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=194 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.066860241726483;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076296
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.799 seconds
Total inference time: 0.923 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082881
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.378 seconds
Parameter learned model CLL: -0.082881


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.04e-07, 350, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false,true': [0.0, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 353, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.197, 26, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 330, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 194], 'true,false,true': [0.0, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 333, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.49e-08, 0, 194], 'true,true,false,true': [1.05e-08, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-07, 394, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.132, 29, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.17e-07, 377, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.113, 17, 158], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.086, 390, 36]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.004, 33, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 371, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.109, 16, 158], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.644, 355, 36]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.153, 61, 194], 'true,false': [0.0, 0, 0], 'false': [0.0, 322, 0]}]]
[{'': [0.14171962889912165, 1.1926967350258825e-16], 'true': [6.15315358802561e-15, 4.163336342344337e-17], 'true,true': [6.15315358802561e-15, nan], 'true,false': [4.163336342344337e-17, nan], 'true,false,true': [4.163336342344337e-17, nan]}, {'': [0.08480619231536606, -1.1322387786545506e-16], 'true': [0.08480619231536606, nan], 'true,true': [-3.516087764586063e-15, -8.953411488912552e-18], 'true,true,false': [-8.953411488912552e-18, nan]}, {'': [0.04645902731096085, -4.0371746350005693e-17], 'true': [0.04645902731096085, nan], 'true,true': [0.04645902731096085, nan], 'true,true,true': [0.04645902731096085, nan]}, {'': [0.04849715867771077, -3.600723323108616e-17], 'true': [-2.087677110222975e-15, -3.700743415417188e-17], 'true,false': [-3.700743415417188e-17, nan]}, {'': [0.02613220578196943, 8.791613799062154e-17], 'true': [0.02613220578196943, nan], 'true,true': [2.0144252817940985e-16, 3.828355257328126e-18], 'true,true,false': [3.828355257328126e-18, nan]}, {'': [0.017512292852202106, 3.651661937759136e-17], 'true': [0.017512292852202106, nan], 'true,true': [0.017512292852202106, nan]}, {'': [0.012671397624642563, 0.0073803336305746], 'true': [0.012671397624642563, nan], 'true,true': [0.012671397624642563, nan]}, {'': [0.017697442541095135, -2.2743113172914257e-17], 'true': [0.017697442541095135, nan], 'true,true': [0.017697442541095135, nan]}, {'': [0.01182000242230263, 0.006914723449199741], 'true': [0.01182000242230263, nan], 'true,true': [0.01182000242230263, nan]}, {'': [0.023453687467258233, -6.344131569286608e-17], 'true': [0.023453687467258233, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048757;  // std dev = 2.19e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5699303943809813;  // std dev = 0.322, 113.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=93 */
%   | | else return 0.6102167677187976;  // std dev = 0.284, 116.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=101 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5868386245543983;  // std dev = 0.068, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.2047022382094632;  // std dev = 0.018, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360649;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4413048508511604;  // std dev = 0.069, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.17380924331075773;  // std dev = 0.016, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.10159632948783612;  // std dev = 1.69e-07, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.33690202108661443;  // std dev = 0.063, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.1502007461344217;  // std dev = 0.015, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.62e-07, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2661969980637053;  // std dev = 0.055, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1326218694699926;  // std dev = 0.013, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21751937430573176;  // std dev = 0.048, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11840764257244059;  // std dev = 0.011, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07877675473109147;  // std dev = 3.65e-08, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1827708239405929;  // std dev = 0.042, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10664053306629719;  // std dev = 0.010, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.073246225763337;  // std dev = 9.54e-08, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15703629910732372;  // std dev = 0.037, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09638994701238482;  // std dev = 0.009, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420328;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13735016624789642;  // std dev = 0.033, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.08863948763769425;  // std dev = 0.009, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.06419184008202618;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202584;  // std dev = 1.41e-07, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064544
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.564 seconds
Total inference time: 0.844 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06611
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.092 seconds
Refined model CLL: -0.06611


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064544
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.833 seconds
Total inference time: 0.844 seconds
AUC ROC: 1.0
Total revision time: 5.833
Best scored revision CLL: -0.06611


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064544, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.833, 'Inference time': 0.844, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076296, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.799, 'Inference time': 0.923}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004872;  // std dev = 2.95e-07, 455.000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4602990160760333;  // std dev = 4.055, 302.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360597;  // std dev = 0.000, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44079866145529345;  // std dev = 9.00e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.16700600166824417;  // std dev = 6.18e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783548;  // std dev = 3.32e-07, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3365470396352776;  // std dev = 1.54e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14504526138829887;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926071;  // std dev = 1.90e-07, 444.000 (wgt'ed) examples reached here.  /* #neg=444 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20544658115563463;  // std dev = 0.142, 306.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.41e-07, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17368003122821893;  // std dev = 0.133, 239.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=205 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050733009688364944;  // std dev = 0.094, 535.000 (wgt'ed) examples reached here.  /* #neg=481 #pos=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14127594884562092;  // std dev = 2.529, 314.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07517279982451433;  // std dev = 0.000, 445.000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11463286220047704;  // std dev = 0.140, 246.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=205 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.041905119026528104;  // std dev = 2.007, 497.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12203244093095982;  // std dev = 0.125, 306.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=259 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06742741087777035;  // std dev = 2.43e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076612
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.218 seconds
Total inference time: 0.958 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083802
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.415 seconds
Parameter learned model CLL: -0.083802


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.8e-08, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.95e-07, 455, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false,true': [0.0, 46, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 459, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.055, 43, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 478, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [9e-07, 0, 259], 'true,false,true': [6.18e-09, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.32e-07, 495, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.54e-08, 0, 259], 'true,true,false,true': [0.0, 49, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.9e-07, 444, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.142, 47, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.41e-07, 463, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.133, 34, 205], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 481, 54]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.529, 55, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 445, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.14, 41, 205], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.007, 443, 54]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.125, 47, 259], 'true,false': [0.0, 0, 0], 'false': [2.43e-07, 491, 0]}]]
[{'': [0.10937500000000422, 1.9129996732002698e-16], 'true': [4.499189523731908e-15, 3.900783600034334e-17], 'true,true': [4.499189523731908e-15, nan], 'true,false': [3.900783600034334e-17, nan], 'true,false,true': [3.900783600034334e-17, nan]}, {'': [0.09142965772114972, -1.2771192963008336e-16], 'true': [0.09142965772114972, nan], 'true,true': [-4.499189523731908e-15, -3.137586808723268e-17], 'true,true,false': [-3.137586808723268e-17, nan]}, {'': [0.05443706856929301, -9.290569243725159e-18], 'true': [0.05443706856929301, nan], 'true,true': [0.05443706856929301, nan], 'true,true,true': [0.05443706856929301, nan]}, {'': [0.04585590182916659, 2.224931798844758e-16], 'true': [3.127485400642912e-15, 4.0371746350005693e-17], 'true,false': [4.0371746350005693e-17, nan]}, {'': [0.03102797851288397, 8.101627476994385e-17], 'true': [0.03102797851288397, nan], 'true,true': [2.4690674215601937e-16, -4.5315225494904345e-18], 'true,true,false': [-4.5315225494904345e-18, nan]}, {'': [0.02017282271763015, 4.316201823596721e-17], 'true': [0.02017282271763015, nan], 'true,true': [0.02017282271763015, nan]}, {'': [0.017667077875826446, 0.008915477050668214], 'true': [0.017667077875826446, nan], 'true,true': [0.017667077875826446, nan]}, {'': [0.02036620265262275, -1.896111233067683e-17], 'true': [0.02036620265262275, nan], 'true,true': [0.02036620265262275, nan]}, {'': [0.01955175761971328, 0.008103075780515868], 'true': [0.01955175761971328, nan], 'true,true': [0.01955175761971328, nan]}, {'': [0.015550597793742084, 1.2029300389013917e-16], 'true': [0.015550597793742084, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048752;  // std dev = 1.63e-07, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.12544463852839122;  // std dev = 5.27e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360646;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360589;  // std dev = 0.000, 503.000 (wgt'ed) examples reached here.  /* #neg=503 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783627;  // std dev = 2.98e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783583;  // std dev = 2.48e-07, 432.000 (wgt'ed) examples reached here.  /* #neg=432 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601497;  // std dev = 1.19e-07, 124.000 (wgt'ed) examples reached here.  /* #pos=124 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716014955;  // std dev = 1.93e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | | | else return -0.09269127618926101;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 1.52e-07, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 508.000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07877675473109147;  // std dev = 2.14e-07, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4.21e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333759;  // std dev = 0.000, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936717;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420347;  // std dev = 0.000, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202612;  // std dev = 3.73e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06419184008202548;  // std dev = 2.24e-07, 445.000 (wgt'ed) examples reached here.  /* #neg=445 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.914 seconds
Total inference time: 0.791 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.184 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.731 seconds
Total inference time: 0.791 seconds
AUC ROC: 1.0
Total revision time: 6.731
Best scored revision CLL: -0.064223


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.731, 'Inference time': 0.791, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076612, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.218, 'Inference time': 0.958}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004882;  // std dev = 0.000, 572.000 (wgt'ed) examples reached here.  /* #neg=572 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4510409969119246;  // std dev = 4.751, 384.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360593;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44308195388940025;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.16572203981092914;  // std dev = 1.86e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783519;  // std dev = 4.09e-07, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33810614957549495;  // std dev = 1.39e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1440592175513579;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926144;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21706997794343189;  // std dev = 0.131, 371.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17473118947974042;  // std dev = 0.131, 307.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05315725402552974;  // std dev = 0.089, 657.000 (wgt'ed) examples reached here.  /* #neg=598 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14341162810997443;  // std dev = 2.727, 388.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07500443535185311;  // std dev = 1.79e-07, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12984718722946298;  // std dev = 0.123, 302.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046704581745686945;  // std dev = 2.107, 656.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10638729326889959;  // std dev = 0.136, 398.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=324 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.066985115893185;  // std dev = 1.87e-07, 566.000 (wgt'ed) examples reached here.  /* #neg=566 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076276
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.491 seconds
Total inference time: 0.923 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083209
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.602 seconds
Parameter learned model CLL: -0.083209


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.87e-08, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.05e-08, 48, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 572, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false,true': [0.0, 57, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 593, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.751, 60, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 616, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 324], 'true,false,true': [1.86e-09, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.09e-07, 584, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.39e-08, 0, 324], 'true,true,false,true': [0.0, 63, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 605, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.131, 47, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.55e-07, 594, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.131, 42, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.089, 598, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.727, 64, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.79e-07, 578, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.123, 37, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.107, 597, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.136, 74, 324], 'true,false': [0.0, 0, 0], 'false': [1.87e-07, 566, 0]}]]
[{'': [0.1123829344432914, -2.142808075500302e-16], 'true': [3.333410365294297e-15, 5.3198186596622086e-17], 'true,true': [3.333410365294297e-15, nan], 'true,false': [5.3198186596622086e-17, nan], 'true,false,true': [5.3198186596622086e-17, nan]}, {'': [0.09082367930922605, -2.2167016208367376e-16], 'true': [0.09082367930922605, nan], 'true,true': [-5.000115547941446e-15, -3.895519384649672e-17], 'true,true,false': [-3.895519384649672e-17, nan]}, {'': [0.058772505941813456, -7.497610036429629e-17], 'true': [0.058772505941813456, nan], 'true,true': [0.058772505941813456, nan], 'true,true,true': [0.058772505941813456, nan]}, {'': [0.04478093578893073, 2.859204501774376e-16], 'true': [-1.907938827503973e-15, 4.1895208476421e-18], 'true,false': [4.1895208476421e-18, nan]}, {'': [0.031685141804573824, -3.229739708000455e-17], 'true': [0.031685141804573824, nan], 'true,true': [1.9737298215558337e-16, -3.52451753849256e-17], 'true,true,false': [-3.52451753849256e-17, nan]}, {'': [0.017191979788842255, 4.0371746350005693e-17], 'true': [0.017191979788842255, nan], 'true,true': [0.017191979788842255, nan]}, {'': [0.01705407156394489, 0.007859999560245193], 'true': [0.01705407156394489, nan], 'true,true': [0.01705407156394489, nan]}, {'': [0.019167615193753037, 5.531907112319119e-17], 'true': [0.019167615193753037, nan], 'true,true': [0.019167615193753037, nan]}, {'': [0.015124248364102501, 0.006767753802993716], 'true': [0.015124248364102501, nan], 'true,true': [0.015124248364102501, nan]}, {'': [0.018391699517145664, 6.198418300027375e-17], 'true': [0.018391699517145664, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.14185106490048843;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109562;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109566;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360626;  // std dev = 4.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.11231637819360572;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583133;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783631;  // std dev = 1.83e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.10159632948783513;  // std dev = 4.26e-07, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2480255837140987;  // std dev = 0.157, 182.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=150 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601491;  // std dev = 3.32e-07, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926126;  // std dev = 0.000, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26168089971750735;  // std dev = 0.126, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0973104990466667;  // std dev = 0.114, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21435544690569283;  // std dev = 0.110, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09203471372345383;  // std dev = 0.115, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.07877675473109237;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18046804525584226;  // std dev = 0.097, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08323988390717982;  // std dev = 0.097, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333654;  // std dev = 2.48e-07, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15530108392617095;  // std dev = 0.086, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07687089644671112;  // std dev = 0.090, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420364;  // std dev = 0.000, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1335618505481067;  // std dev = 0.405, 328.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=324 */
%   | else return -0.06683326595347473;  // std dev = 0.069, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202536;  // std dev = 2.44e-07, 513.000 (wgt'ed) examples reached here.  /* #neg=513 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.165 seconds
Total inference time: 0.809 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065078
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.291 seconds
Refined model CLL: -0.065078


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.5489999999999995 seconds
Total inference time: 0.809 seconds
AUC ROC: 1.0
Total revision time: 7.5489999999999995
Best scored revision CLL: -0.065078


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063646, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.5489999999999995, 'Inference time': 0.809, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076276, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.491, 'Inference time': 0.923}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5235720169872418;  // std dev = 0.921, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6.32e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42526553690066243;  // std dev = 7.88e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.17599461219552046;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5.27e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.32597205795410206;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1519074521291716;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23140171377539678;  // std dev = 0.100, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 4.71e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1898031446832509;  // std dev = 0.098, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07503403183215782;  // std dev = 0.033, 79.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=1 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18747854097495031;  // std dev = 0.043, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07350069248810288;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13246374950665576;  // std dev = 0.098, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06788001298084527;  // std dev = 0.309, 62.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12138578421393996;  // std dev = 0.087, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06443466754726765;  // std dev = 3.16e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100869
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.873 seconds
Total inference time: 0.94 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074401
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.832 seconds
Parameter learned model CLL: -0.074401


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.94e-08, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 88, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [0.921, 2, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [7.88e-08, 0, 40], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-08, 70, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 69, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.1, 3, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 79, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.098, 3, 39], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.033, 78, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.043, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 64, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.098, 3, 39], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.309, 61, 1]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.087, 3, 40], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 83, 0]}]]
[{'': [0.045351473922903854, 7.216449660063518e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,true': [1.5099033134902129e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04633119604965933, -1.766263902812749e-17], 'true': [0.04633119604965933, nan], 'true,true': [-8.881784197001252e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.020217702556284307, 5.190653102143589e-17], 'true': [0.020217702556284307, nan], 'true,true': [0.020217702556284307, nan], 'true,true,true': [0.020217702556284307, nan]}, {'': [0.02987717081745175, 3.9650822308041306e-17], 'true': [1.554312234475219e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014821124466680026, 0.0], 'true': [0.014821124466680026, nan], 'true,true': [-8.881784197001253e-17, -4.625929269271485e-18], 'true,true,false': [-4.625929269271485e-18, nan]}, {'': [0.009978489576646123, 2.810691201582675e-17], 'true': [0.009978489576646123, nan], 'true,true': [0.009978489576646123, nan]}, {'': [0.009543954983491905, 0.0010926220264599203], 'true': [0.009543954983491905, nan], 'true,true': [0.009543954983491905, nan]}, {'': [4.617247582137107e-05, 0.0], 'true': [4.617247582137107e-05, nan], 'true,true': [4.617247582137107e-05, nan]}, {'': [0.009581590593158693, 0.001537699558877951], 'true': [0.009581590593158693, nan], 'true,true': [0.009581590593158693, nan]}, {'': [0.007604854634129129, 1.203856291762218e-17], 'true': [0.007604854634129129, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.6649625702277709;  // std dev = 0.208, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5650936136414111;  // std dev = 0.038, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.2204398266984711;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360624;  // std dev = 6.05e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4247876411914917;  // std dev = 0.038, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.18282433333040393;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3170193744901784;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3127374490529087;  // std dev = 0.087, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2608157646177621;  // std dev = 0.032, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.20718621050228672;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839679;  // std dev = 1.67e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21367263157361457;  // std dev = 0.028, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else return -0.17667229296436077;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07494279669102516;  // std dev = 0.293, 77.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=1 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18120233549625486;  // std dev = 0.054, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.147886618095225;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07350690569158903;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15475771886018314;  // std dev = 0.021, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else return -0.13247163475356488;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06543082562733989;  // std dev = 0.266, 83.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1306786689137669;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.13145935158437155;  // std dev = 0.048, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06458760561673406;  // std dev = 1.05e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.846 seconds
Total inference time: 0.918 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067514
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.699 seconds
Refined model CLL: -0.067514


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.25 seconds
Total inference time: 0.918 seconds
AUC ROC: 1.0
Total revision time: 3.25
Best scored revision CLL: -0.067514


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.082491, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.25, 'Inference time': 0.918, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100869, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.873, 'Inference time': 0.94}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048813;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109537;  // std dev = 2.98e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839113;  // std dev = 7.30e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4885981552522948;  // std dev = 1.900, 90.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360626;  // std dev = 9.06e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43383519038454604;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.17098002006015012;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783644;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33179988010412753;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1480878707153805;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926078;  // std dev = 6.83e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2398706770591132;  // std dev = 0.092, 86.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 6.66e-08, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19220847617523526;  // std dev = 0.097, 85.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=79 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0749105198354411;  // std dev = 0.037, 133.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14393399796627165;  // std dev = 1.173, 92.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0735091038932184;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.14024390256442903;  // std dev = 0.097, 85.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=79 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06560836873285467;  // std dev = 0.402, 148.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12520958716373334;  // std dev = 0.088, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06457869696954606;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099494
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.113 seconds
Total inference time: 1.036 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07361
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.069 seconds
Parameter learned model CLL: -0.07361


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 161, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [2.98e-08, 0, 81], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.3e-08, 138, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.9, 9, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.06e-08, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [2.63e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 149, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.83e-08, 138, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.092, 5, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 154, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.097, 6, 79], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.037, 131, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.173, 11, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 158, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.097, 6, 79], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.402, 146, 2]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.088, 7, 81], 'true,false': [0.0, 0, 0], 'false': [0.0, 135, 0]}]]
[{'': [0.06420927467300822, -1.4067422175374654e-16], 'true': [-7.894919286223335e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-7.894919286223335e-16, nan]}, {'': [0.058401522544810125, 3.8616453030440226e-17], 'true': [0.058401522544810125, nan], 'true,true': [7.894919286223335e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.040122030722945984, 5.36970613217396e-17], 'true': [0.040122030722945984, nan], 'true,true': [0.040122030722945984, nan], 'true,true,true': [0.040122030722945984, nan]}, {'': [0.02992543016448006, -5.215812867366507e-17], 'true': [-3.9474596431116675e-16, 6.938893903907228e-18], 'true,false': [6.938893903907228e-18, nan]}, {'': [0.007930983216120005, 3.37893964016352e-17], 'true': [0.007930983216120005, nan], 'true,true': [-3.0702463890868525e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008461230420234066, 2.883696167857549e-17], 'true': [0.008461230420234066, nan], 'true,true': [0.008461230420234066, nan]}, {'': [0.009423977649843242, 0.0013677672385318444], 'true': [0.009423977649843242, nan], 'true,true': [0.009423977649843242, nan]}, {'': [0.014968001383194067, -2.1080184011870062e-17], 'true': [0.014968001383194067, nan], 'true,true': [0.014968001383194067, nan]}, {'': [0.009344822299232067, 0.0010892077911576609], 'true': [0.009344822299232067, nan], 'true,true': [0.009344822299232067, nan]}, {'': [0.007793861209662323, -2.7961172472040977e-17], 'true': [0.007793861209662323, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004881;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839124;  // std dev = 5.96e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360625;  // std dev = 9.31e-08, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783648;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926072;  // std dev = 7.74e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839678;  // std dev = 6.99e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07476933153159672;  // std dev = 0.405, 144.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17821560476481263;  // std dev = 0.063, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07327650292012992;  // std dev = 0.000257, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07351872017447293;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1525990871800841;  // std dev = 8.02e-08, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.0684250478603412;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0654133918895381;  // std dev = 0.368, 161.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1356132336027391;  // std dev = 0.097, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0641901372530148;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06459842603279484;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.116 seconds
Total inference time: 0.893 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063959
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.87 seconds
Refined model CLL: -0.063959


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.168 seconds
Total inference time: 0.893 seconds
AUC ROC: 1.0
Total revision time: 4.168
Best scored revision CLL: -0.063959


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067121, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.168, 'Inference time': 0.893, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099494, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.113, 'Inference time': 1.036}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5047844053114429;  // std dev = 2.030, 132.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936067;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42986382762165054;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.1732865873737351;  // std dev = 3.23e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.329097319217666;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14984746807424656;  // std dev = 1.49e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 5.77e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23114160332183412;  // std dev = 0.104, 132.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18597268831078345;  // std dev = 0.107, 127.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07097925104573465;  // std dev = 0.048, 229.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16215689408724357;  // std dev = 1.154, 132.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07377729429698986;  // std dev = 3.65e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1296594738036059;  // std dev = 0.110, 128.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06152586425244346;  // std dev = 0.658, 222.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1099231984168688;  // std dev = 0.119, 137.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=122 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06504817538868389;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099715
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.437 seconds
Total inference time: 0.973 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074572
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.129 seconds
Parameter learned model CLL: -0.074572


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.14e-08, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 211, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false,true': [5.27e-09, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 229, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.03, 10, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 217, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 122], 'true,false,true': [3.23e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 238, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false,true': [1.49e-08, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 224, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.104, 10, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.69e-08, 231, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.107, 11, 116], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.048, 223, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.154, 10, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 239, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.11, 12, 116], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.658, 216, 6]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.119, 15, 122], 'true,false': [0.0, 0, 0], 'false': [0.0, 247, 0]}]]
[{'': [0.0639822854146069, -2.3572507821425126e-16], 'true': [3.843919718046444e-15, -9.25185853854297e-18], 'true,true': [3.843919718046444e-15, nan], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan]}, {'': [0.05820504868840508, -6.981315089345963e-17], 'true': [0.05820504868840508, nan], 'true,true': [-1.3395477805313363e-15, 2.3129646346357427e-18], 'true,true,false': [2.3129646346357427e-18, nan]}, {'': [0.03121421122971916, -6.139482163825751e-17], 'true': [0.03121421122971916, nan], 'true,true': [0.03121421122971916, nan], 'true,true,true': [0.03121421122971916, nan]}, {'': [0.03359396856997972, -7.650276304139734e-17], 'true': [-6.40653286341074e-16, 1.1895246692412391e-17], 'true,false': [1.1895246692412391e-17, nan]}, {'': [0.019962114749449145, 1.486905836551549e-17], 'true': [0.019962114749449145, nan], 'true,true': [-4.076884549443198e-16, 1.708035422500241e-17], 'true,true,false': [1.708035422500241e-17, nan]}, {'': [0.010793799244552607, 3.2681889902385563e-17], 'true': [0.010793799244552607, nan], 'true,true': [0.010793799244552607, nan]}, {'': [0.011383496400493947, 0.00225977286837719], 'true': [0.011383496400493947, nan], 'true,true': [0.011383496400493947, nan]}, {'': [0.01008024756646683, 5.5743415462350955e-18], 'true': [0.01008024756646683, nan], 'true,true': [0.01008024756646683, nan]}, {'': [0.0121531124944411, 0.0019531621122203468], 'true': [0.0121531124944411, nan], 'true,true': [0.0121531124944411, nan]}, {'': [0.014131960693245408, -4.315036856842714e-17], 'true': [0.014131960693245408, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1418510649004884;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109551;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6408763842352008;  // std dev = 0.245, 86.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=78 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5677149438024643;  // std dev = 0.102, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.17445699599085251;  // std dev = 0.210, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360689;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4267851184456217;  // std dev = 0.102, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.15610003228163719;  // std dev = 0.147, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783656;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3270355098846373;  // std dev = 0.091, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.1555922347423128;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926051;  // std dev = 7.30e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25950094791826117;  // std dev = 0.080, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1345219099311091;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839678;  // std dev = 9.19e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21302889064218417;  // std dev = 0.067, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else return -0.11853657373513815;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07187687010199274;  // std dev = 0.698, 243.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.181536907617215;  // std dev = 0.116, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09586064635688808;  // std dev = 0.105, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07371597967446915;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15430222649060876;  // std dev = 0.052, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else return -0.08127637283771802;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.06883800397895846;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else if ( female(A) )
%   | | then return 0.18719826662860317;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06530707867505603;  // std dev = 0.268, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13522708681184042;  // std dev = 0.232, 123.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=122 */
%   | else return -0.08609595537960057;  // std dev = 0.090, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06455436507662381;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069627
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.472 seconds
Total inference time: 0.935 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.033 seconds
Refined model CLL: -0.06477


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069627
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.071 seconds
Total inference time: 0.935 seconds
AUC ROC: 1.0
Total revision time: 5.071
Best scored revision CLL: -0.06477


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069627, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.071, 'Inference time': 0.935, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099715, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.437, 'Inference time': 0.973}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 9.42e-08, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4856632857360745;  // std dev = 2.754, 182.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360668;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4345561990361608;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.17056441609598202;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878365;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33229089500142794;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14777032727083125;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926049;  // std dev = 1.59e-07, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22791463548079194;  // std dev = 0.112, 179.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9.88e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19845111904064772;  // std dev = 0.090, 166.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=156 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07282602169934392;  // std dev = 0.042, 353.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15175561988780786;  // std dev = 1.553, 182.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07365119598460153;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1506262563998224;  // std dev = 0.076, 163.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=156 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06266927883288094;  // std dev = 0.724, 317.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12039377421697235;  // std dev = 0.103, 177.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=163 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06487420730925918;  // std dev = 7.88e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099736
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.618 seconds
Total inference time: 1.0 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074268
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.28 seconds
Parameter learned model CLL: -0.074268


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [8.02e-08, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.42e-08, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false,true': [7.45e-09, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 339, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.754, 19, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 319, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 163], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 326, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false,true': [0.0, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.59e-07, 306, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.112, 16, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.88e-08, 279, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.09, 10, 156], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.042, 346, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.553, 19, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 313, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.076, 7, 156], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.724, 310, 7]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.103, 14, 163], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 298, 0]}]]
[{'': [0.049587614926993887, 2.9704963869569404e-17], 'true': [6.3643705166242106e-15, -9.25185853854297e-18], 'true,true': [6.3643705166242106e-15, nan], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan]}, {'': [0.05810730078677613, -9.693982751889272e-17], 'true': [0.05810730078677613, nan], 'true,true': [-2.7898610483832155e-15, 3.469446951953614e-18], 'true,true,false': [3.469446951953614e-18, nan]}, {'': [0.04168106681592658, -5.011665064138638e-17], 'true': [0.04168106681592658, nan], 'true,true': [0.04168106681592658, nan], 'true,true,true': [0.04168106681592658, nan]}, {'': [0.02338711495595291, -2.0433552600463003e-17], 'true': [-1.0897894720246935e-16, -1.850371707708594e-17], 'true,false': [-1.850371707708594e-17, nan]}, {'': [0.01875835619218558, 8.272249987403127e-17], 'true': [0.01875835619218558, nan], 'true,true': [-3.923242099288897e-16, -6.938893903907228e-18], 'true,true,false': [-6.938893903907228e-18, nan]}, {'': [0.012582400841375211, 3.501778715663576e-17], 'true': [0.012582400841375211, nan], 'true,true': [0.012582400841375211, nan]}, {'': [0.0081515941383078, 0.0017503261958336498], 'true': [0.0081515941383078, nan], 'true,true': [0.0081515941383078, nan]}, {'': [0.01325506162618102, -4.75303147922591e-17], 'true': [0.01325506162618102, nan], 'true,true': [0.01325506162618102, nan]}, {'': [0.005852196661483609, 0.0016543933708431744], 'true': [0.005852196661483609, nan], 'true,true': [0.005852196661483609, nan]}, {'': [0.010557530883606472, 2.086325146946603e-17], 'true': [0.010557530883606472, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048807;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839202;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360671;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.10159632948783662;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926046;  // std dev = 1.38e-07, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839678;  // std dev = 1.07e-07, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253517;  // std dev = 2.53e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07185983249634696;  // std dev = 0.754, 292.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17902132786530142;  // std dev = 0.116, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07328903642517758;  // std dev = 0.000449, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.0737171430435831;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15249492618765736;  // std dev = 7.88e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.06842424894068985;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.06883902151389902;  // std dev = 1.28e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   | else if ( female(A) )
%   | | then return 0.19254647387861024;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06184915171732206;  // std dev = 0.320, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1354698088075764;  // std dev = 0.103, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06535228811011959;  // std dev = 0.011, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06455526223553716;  // std dev = 1.15e-07, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068185
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.501 seconds
Total inference time: 0.897 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064002
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.169 seconds
Refined model CLL: -0.064002


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068185
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.568 seconds
Total inference time: 0.897 seconds
AUC ROC: 1.0
Total revision time: 5.568
Best scored revision CLL: -0.064002


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068185, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.568, 'Inference time': 0.897, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099736, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.618, 'Inference time': 1.0}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048732;  // std dev = 3.01e-07, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5040062202124451;  // std dev = 2.645, 221.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 0.000, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43005455633970285;  // std dev = 5.13e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.17317513420543215;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.101596329487836;  // std dev = 1.97e-07, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.32922703806747994;  // std dev = 1.79e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14976255078488446;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926062;  // std dev = 1.92e-07, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.232418076841035;  // std dev = 0.102, 220.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.28e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17386370815278254;  // std dev = 0.122, 220.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07112984471550465;  // std dev = 0.047, 389.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14855712549994093;  // std dev = 1.838, 231.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07376700425876667;  // std dev = 1.49e-07, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13652414898509402;  // std dev = 0.105, 212.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06176787636978447;  // std dev = 0.857, 386.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1269743474690789;  // std dev = 0.097, 220.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=204 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.065024927992158;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099819
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.029 seconds
Total inference time: 0.958 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074517
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.409 seconds
Parameter learned model CLL: -0.074517


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.01e-07, 406, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 204], 'true,true,false,true': [0.0, 27, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 361, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.645, 17, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 402, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [5.13e-07, 0, 204], 'true,false,true': [0.0, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.97e-07, 387, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.79e-08, 0, 204], 'true,true,false,true': [0.0, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.92e-07, 390, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.102, 16, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.28e-07, 384, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.122, 26, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.047, 379, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.838, 27, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-07, 401, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.105, 18, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.857, 376, 10]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.097, 16, 204], 'true,false': [0.0, 0, 0], 'false': [0.0, 389, 0]}]]
[{'': [0.060095951519237904, 2.2313842071283937e-16], 'true': [5.712206307091002e-15, -1.1895246692412391e-17], 'true,true': [5.712206307091002e-15, nan], 'true,false': [-1.1895246692412391e-17, nan], 'true,false,true': [-1.1895246692412391e-17, nan]}, {'': [0.07368840371541026, -1.2055607358810565e-16], 'true': [0.07368840371541026, nan], 'true,true': [-3.692035783851501e-15, -4.11193712824132e-18], 'true,true,false': [-4.11193712824132e-18, nan]}, {'': [0.03165446210883469, -1.9884591485823698e-17], 'true': [0.03165446210883469, nan], 'true,true': [0.03165446210883469, nan], 'true,true,true': [0.03165446210883469, nan]}, {'': [0.03313383514977942, 9.983400841590555e-17], 'true': [1.2887294717217503e-15, -1.4481169886415085e-17], 'true,false': [-1.4481169886415085e-17, nan]}, {'': [0.01629096044229312, 9.451129337834666e-17], 'true': [0.01629096044229312, nan], 'true,true': [3.134747363647501e-16, -3.2653618371328133e-18], 'true,true,false': [-3.2653618371328133e-18, nan]}, {'': [0.010397172263356494, 4.2789845740761244e-17], 'true': [0.010397172263356494, nan], 'true,true': [0.010397172263356494, nan]}, {'': [0.01499188098253559, 0.002216211322607798], 'true': [0.01499188098253559, nan], 'true,true': [0.01499188098253559, nan]}, {'': [0.014618412339846353, 5.537271943267614e-17], 'true': [0.014618412339846353, nan], 'true,true': [0.014618412339846353, nan]}, {'': [0.011072639443123741, 0.001903301740325282], 'true': [0.011072639443123741, nan], 'true,true': [0.011072639443123741, nan]}, {'': [0.009393416625497484, -1.712426259061938e-18], 'true': [0.009393416625497484, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048754;  // std dev = 2.33e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109542;  // std dev = 2.38e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.6501144677472777;  // std dev = 0.232, 134.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=123 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5656494722944443;  // std dev = 0.119, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.21555901878262332;  // std dev = 1.49e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360628;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42522381839853035;  // std dev = 0.118, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.17070744872363258;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.10159632948783617;  // std dev = 1.49e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3259687480397808;  // std dev = 0.106, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( female(A) )
%   | | | then return -0.08704037781818492;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.15736007714384412;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892607;  // std dev = 1.76e-07, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25877087186179026;  // std dev = 0.093, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( female(A) )
%   | | then return -0.080367822237967;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1376006090974016;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21242622963021074;  // std dev = 0.078, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( female(A) )
%   | | then return -0.07462470710927642;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12207090689014545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.07877675473109143;  // std dev = 1.19e-07, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
%   | else if ( actor(A) )
%   | | then return 0.20996161470922609;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1789683155929302;  // std dev = 0.071, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( female(A) )
%   | | then return -0.07310715994101101;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11484241775547802;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333716;  // std dev = 5.96e-08, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15424452458202592;  // std dev = 0.061, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( female(A) )
%   | | then return -0.06504253489831979;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09886702426486911;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.06842697784420328;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
%   | else if ( female(A) )
%   | | then return 0.1490381241665938;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06115471191394665;  // std dev = 0.336, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1353524074789288;  // std dev = 0.063, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( female(A) )
%   | | then return -0.0651673720990032;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09302290267195862;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06419184008202566;  // std dev = 1.83e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071184
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.846 seconds
Total inference time: 0.977 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064402
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.453 seconds
Refined model CLL: -0.064402


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071184
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.737 seconds
Total inference time: 0.977 seconds
AUC ROC: 1.0
Total revision time: 6.737
Best scored revision CLL: -0.064402


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071184, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.737, 'Inference time': 0.977, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099819, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.029, 'Inference time': 0.958}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048796;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5177505035102337;  // std dev = 1.297, 71.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.94e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4266890160097461;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1751519651319604;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3269391074908156;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15126712798445566;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926103;  // std dev = 2.98e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19161721718735963;  // std dev = 0.148, 81.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 5.48e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.181329306839888;  // std dev = 0.121, 62.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.051512114943963676;  // std dev = 0.092, 122.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1402669227713539;  // std dev = 1.247, 80.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07511865291036796;  // std dev = 1.05e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12029624149289972;  // std dev = 0.131, 64.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04561293781820648;  // std dev = 0.944, 125.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11329562109190042;  // std dev = 0.128, 80.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06714920752759768;  // std dev = 4.08e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.051 seconds
Total inference time: 0.735 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084095
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.818 seconds
Parameter learned model CLL: -0.084095


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 142, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.74e-08, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.297, 4, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true': [2.63e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 132, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [0.0, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.98e-08, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.148, 14, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.48e-08, 127, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.121, 7, 55], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.092, 110, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.247, 13, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 130, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.131, 9, 55], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.944, 113, 12]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.128, 13, 67], 'true,false': [0.0, 0, 0], 'false': [4.08e-08, 121, 0]}]]
[{'': [0.09528888888888787, -6.567516483698109e-17], 'true': [-9.544603913195376e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.06802545256557097, 5.16827959739297e-17], 'true': [0.06802545256557097, nan], 'true,true': [3.1815346377317917e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.023700553756418254, 6.661338147750939e-17], 'true': [0.023700553756418254, nan], 'true,true': [0.023700553756418254, nan], 'true,true,true': [0.023700553756418254, nan]}, {'': [0.04666221815920788, -3.1960965860421176e-17], 'true': [3.1815346377317917e-16, 4.625929269271485e-18], 'true,false': [4.625929269271485e-18, nan]}, {'': [0.025841863120893385, 7.859986015045356e-18], 'true': [0.025841863120893385, nan], 'true,true': [-1.193075489149422e-16, -2.7755575615628915e-18], 'true,true,false': [-2.7755575615628915e-18, nan]}, {'': [0.021999013680008762, 2.3603166665259235e-17], 'true': [0.021999013680008762, nan], 'true,true': [0.021999013680008762, nan]}, {'': [0.014527243629294329, 0.008491469705391046], 'true': [0.014527243629294329, nan], 'true,true': [0.014527243629294329, nan]}, {'': [0.01944911622783643, 8.540177112501205e-19], 'true': [0.01944911622783643, nan], 'true,true': [0.01944911622783643, nan]}, {'': [0.017187416724841052, 0.007125431201809681], 'true': [0.017187416724841052, nan], 'true,true': [0.017187416724841052, nan]}, {'': [0.01639152477216368, 1.376309534659285e-17], 'true': [0.01639152477216368, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048777;  // std dev = 2.98e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6138586558685363;  // std dev = 0.279, 40.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | else return 0.6255936287954715;  // std dev = 0.266, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.579905360784723;  // std dev = 0.012, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.21090981585845955;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360622;  // std dev = 8.69e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43597454774085337;  // std dev = 0.012, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.17798012547816733;  // std dev = 0.003, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783634;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.33325792601612464;  // std dev = 0.011, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.15294917725762802;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 4.94e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2637162092121768;  // std dev = 0.009, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.134318912342505;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0851847513883968;  // std dev = 6.75e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21577553108421055;  // std dev = 0.008, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11955292976337568;  // std dev = 0.002, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109162;  // std dev = 5.77e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18149803265606423;  // std dev = 0.007, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10756407003570904;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07324622576333707;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15607484478020708;  // std dev = 0.006, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09746668758475403;  // std dev = 0.002, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06842697784420267;  // std dev = 5.05e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13660221899489983;  // std dev = 0.006, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08746728209245618;  // std dev = 0.024, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06419184008202626;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065332
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.15 seconds
Total inference time: 0.679 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066165
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.779 seconds
Refined model CLL: -0.066165


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065332
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7979999999999996 seconds
Total inference time: 0.679 seconds
AUC ROC: 1.0
Total revision time: 3.7979999999999996
Best scored revision CLL: -0.066165


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065332, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.7979999999999996, 'Inference time': 0.679, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080068, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.051, 'Inference time': 0.735}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048832;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.464906184399588;  // std dev = 2.845, 155.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360679;  // std dev = 0.000, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4396633282419207;  // std dev = 2.98e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.16764791153272182;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783659;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.335772277867278;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1455376741430365;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926058;  // std dev = 5.16e-08, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22109130782055847;  // std dev = 0.124, 151.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.20225999901241878;  // std dev = 0.089, 119.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=112 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.057517060472907895;  // std dev = 0.084, 278.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15313269281098635;  // std dev = 1.503, 153.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07470251724478262;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11172587989899785;  // std dev = 0.135, 132.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=112 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0515434679761359;  // std dev = 1.293, 299.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09821422139420208;  // std dev = 0.136, 168.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0664312217911359;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079408
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.52 seconds
Total inference time: 0.734 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082689
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.036 seconds
Parameter learned model CLL: -0.082689


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 247, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 237, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.845, 21, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 255, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [2.98e-07, 0, 134], 'true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 271, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 27, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 215, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.124, 17, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.69e-08, 240, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.089, 7, 112], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.084, 256, 22]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.503, 19, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 249, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.135, 20, 112], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.293, 277, 22]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.136, 34, 134], 'true,false': [0.0, 0, 0], 'false': [0.0, 227, 0]}]]
[{'': [0.11712799167534296, -1.6181388213160176e-16], 'true': [4.772301956597688e-15, 5.28677630773884e-18], 'true,true': [4.772301956597688e-15, nan], 'true,false': [5.28677630773884e-18, nan], 'true,false,true': [5.28677630773884e-18, nan]}, {'': [0.08067194524399665, -5.0592441628488145e-17], 'true': [0.08067194524399665, nan], 'true,true': [-1.908920782639075e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.05221569867238869, -8.011021040432502e-17], 'true': [0.05221569867238869, nan], 'true,true': [0.05221569867238869, nan], 'true,true,true': [0.05221569867238869, nan]}, {'': [0.0401142036918084, -6.55482228560978e-17], 'true': [6.628197161941233e-16, -5.843279076974508e-18], 'true,false': [-5.843279076974508e-18, nan]}, {'': [0.032334525616807885, 1.2393187251629654e-17], 'true': [0.032334525616807885, nan], 'true,true': [-5.302557729552986e-16, -2.05596856412066e-17], 'true,true,false': [-2.05596856412066e-17, nan]}, {'': [0.015491984554039296, 3.14563190310461e-17], 'true': [0.015491984554039296, nan], 'true,true': [0.015491984554039296, nan]}, {'': [0.007985526201822126, 0.00704160563016765], 'true': [0.007985526201822126, nan], 'true,true': [0.007985526201822126, nan]}, {'': [0.014764586869823631, -1.5159671822190893e-17], 'true': [0.014764586869823631, nan], 'true,true': [0.014764586869823631, nan]}, {'': [0.018215546943352486, 0.005587245174112818], 'true': [0.018215546943352486, nan], 'true,true': [0.018215546943352486, nan]}, {'': [0.01852428817562967, -2.7388761840973025e-17], 'true': [0.01852428817562967, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048838;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6395487317356106;  // std dev = 0.247, 74.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=67 */
%   | | else return 0.6293488201320905;  // std dev = 0.261, 75.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5762505787457831;  // std dev = 0.014, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.2130785078682317;  // std dev = 0.004, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360682;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4331902867003432;  // std dev = 0.014, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1790702023953014;  // std dev = 0.003, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.10159632948783658;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3302314279718;  // std dev = 1.03e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.1551913810620301;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.33249132416481914;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.1538587993514771;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 7.30e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26242620836226976;  // std dev = 0.009, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.13531391590258632;  // std dev = 0.002, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21486906339189432;  // std dev = 0.008, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12008756278760913;  // std dev = 0.002, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07877675473109141;  // std dev = 4.94e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18083652896540559;  // std dev = 0.007, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10804818818142888;  // std dev = 0.002, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333674;  // std dev = 1.24e-07, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15557521900905605;  // std dev = 0.006, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09828651940095243;  // std dev = 0.002, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06842697784420283;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13472911940138182;  // std dev = 0.200, 135.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=134 */
%   | else return -0.0861730326816798;  // std dev = 0.048, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06419184008202625;  // std dev = 1.49e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065355
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.47 seconds
Total inference time: 0.678 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06616
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.03 seconds
Refined model CLL: -0.06616


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065355
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.056 seconds
Total inference time: 0.678 seconds
AUC ROC: 1.0
Total revision time: 5.056
Best scored revision CLL: -0.06616


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065355, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.056, 'Inference time': 0.678, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079408, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.52, 'Inference time': 0.734}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 2.06e-07, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839144;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46902814171095203;  // std dev = 3.412, 232.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4386480988874553;  // std dev = 2.53e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.16822388630393367;  // std dev = 5.59e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783608;  // std dev = 1.84e-07, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3350797405417597;  // std dev = 3.99e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14597919446921012;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.80e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2111202423889159;  // std dev = 0.135, 234.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19651087736055964;  // std dev = 0.102, 181.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=167 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.056434454746498504;  // std dev = 0.085, 430.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=35 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14108447472283278;  // std dev = 2.146, 240.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0747773836365748;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12510250516006055;  // std dev = 0.125, 191.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=167 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.047666204532801945;  // std dev = 1.632, 402.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=35 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10104123192098918;  // std dev = 0.141, 248.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06673482287175418;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079581
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.876 seconds
Total inference time: 0.726 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081863
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.29 seconds
Parameter learned model CLL: -0.081863


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.34e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.06e-07, 350, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 373, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.412, 30, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 372, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [2.53e-07, 0, 202], 'true,false,true': [5.59e-09, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.84e-07, 396, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.99e-08, 0, 202], 'true,true,false,true': [0.0, 24, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.8e-07, 364, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.135, 32, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.21e-07, 371, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.102, 14, 167], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.085, 395, 35]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.146, 38, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 340, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.125, 24, 167], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.632, 367, 35]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.141, 46, 202], 'true,false': [0.0, 0, 0], 'false': [0.0, 377, 0]}]]
[{'': [0.14025639722942496, 1.218073261303029e-16], 'true': [5.768762805181012e-15, 4.603363760640893e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [4.603363760640893e-17, nan], 'true,false,true': [4.603363760640893e-17, nan]}, {'': [0.08803096394015085, -1.1905876939679963e-16], 'true': [0.08803096394015085, nan], 'true,true': [-3.728590593592605e-15, -1.6326809185664067e-17], 'true,true,false': [-1.6326809185664067e-17, nan]}, {'': [0.050192294676695046, -2.6263340367476823e-17], 'true': [0.050192294676695046, nan], 'true,true': [0.050192294676695046, nan], 'true,true,true': [0.050192294676695046, nan]}, {'': [0.04541511937706156, 8.522924229445646e-17], 'true': [3.165784466257872e-16, 2.6122894697062506e-17], 'true,false': [2.6122894697062506e-17, nan]}, {'': [0.021965561213260668, 8.90618470303697e-17], 'true': [0.021965561213260668, nan], 'true,true': [1.6004799246081465e-15, -1.850371707708594e-17], 'true,true,false': [-1.850371707708594e-17, nan]}, {'': [0.018293893844027714, 3.9501196563482657e-17], 'true': [0.018293893844027714, nan], 'true,true': [0.018293893844027714, nan]}, {'': [0.010316452293100646, 0.007243187311321601], 'true': [0.010316452293100646, nan], 'true,true': [0.010316452293100646, nan]}, {'': [0.019185450099280688, -4.310277625015314e-17], 'true': [0.019185450099280688, nan], 'true,true': [0.019185450099280688, nan]}, {'': [0.015530372866656669, 0.006626114763418308], 'true': [0.015530372866656669, nan], 'true,true': [0.015530372866656669, nan]}, {'': [0.019883510390503296, -2.1792176080175486e-17], 'true': [0.019883510390503296, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.14185106490048754;  // std dev = 2.33e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6099469982262241;  // std dev = 0.284, 108.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=94 */
%   | | else return 0.6349816071370201;  // std dev = 0.253, 120.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5789603274855236;  // std dev = 0.043, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.21220990247622223;  // std dev = 0.008, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360638;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43525775510916154;  // std dev = 0.044, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.17788954459247927;  // std dev = 0.010, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.10159632948783621;  // std dev = 1.37e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3327723220761709;  // std dev = 0.039, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.15344043583317188;  // std dev = 0.009, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.74e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2633877621609022;  // std dev = 0.034, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.13475719206794687;  // std dev = 0.008, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2155458316489985;  // std dev = 0.030, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11945259022687031;  // std dev = 0.006, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07877675473109148;  // std dev = 5.58e-08, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18133110139115455;  // std dev = 0.026, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10766372987733365;  // std dev = 0.007, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07324622576333767;  // std dev = 0.000, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15594922009700093;  // std dev = 0.023, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09748210909162613;  // std dev = 0.006, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0684269778442032;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202615;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13650481873318412;  // std dev = 0.021, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.08944494127851249;  // std dev = 0.007, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06419184008202579;  // std dev = 1.52e-07, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065316
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.588 seconds
Total inference time: 0.672 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065911
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.095 seconds
Refined model CLL: -0.065911


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065316
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.848999999999999 seconds
Total inference time: 0.672 seconds
AUC ROC: 1.0
Total revision time: 5.848999999999999
Best scored revision CLL: -0.065911


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065316, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.848999999999999, 'Inference time': 0.672, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079581, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.876, 'Inference time': 0.726}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.141851064900488;  // std dev = 0.000, 548.000 (wgt'ed) examples reached here.  /* #neg=548 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.44546833366611416;  // std dev = 4.443, 322.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360576;  // std dev = 0.000, 542.000 (wgt'ed) examples reached here.  /* #neg=542 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.444457498887136;  // std dev = 7.25e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.16495300772609764;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878356;  // std dev = 3.04e-07, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3390460615469379;  // std dev = 2.33e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1434679123972173;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 1.33e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21329461729690763;  // std dev = 0.136, 312.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.50e-07, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18099657068884467;  // std dev = 0.125, 251.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=220 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.054427808403683296;  // std dev = 0.087, 572.000 (wgt'ed) examples reached here.  /* #neg=523 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15151913097316858;  // std dev = 2.331, 314.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07491633343696359;  // std dev = 1.86e-07, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13374336072383827;  // std dev = 0.117, 247.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=220 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046528171109136506;  // std dev = 1.918, 545.000 (wgt'ed) examples reached here.  /* #neg=496 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10555967938874795;  // std dev = 0.135, 330.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06692226756427909;  // std dev = 0.000, 442.000 (wgt'ed) examples reached here.  /* #neg=442 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07965
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.461 seconds
Total inference time: 0.732 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081817
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.435 seconds
Parameter learned model CLL: -0.081817


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.94e-08, 38, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 548, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 41, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 494, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.443, 53, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 542, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [7.25e-07, 0, 269], 'true,false,true': [0.0, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.04e-07, 473, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.33e-08, 0, 269], 'true,true,false,true': [0.0, 36, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.33e-07, 478, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.136, 43, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.5e-07, 511, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.125, 31, 220], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 523, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.331, 45, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-07, 473, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.117, 27, 220], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.918, 496, 49]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.135, 61, 269], 'true,false': [0.0, 0, 0], 'false': [0.0, 442, 0]}]]
[{'': [0.10845738416323118, -1.3614413732629657e-16], 'true': [4.226276495227362e-15, 4.0902953538821554e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [4.0902953538821554e-17, nan], 'true,false,true': [4.0902953538821554e-17, nan]}, {'': [0.08192980588947166, -1.1686558153949016e-16], 'true': [0.08192980588947166, nan], 'true,true': [-4.5432472323694135e-15, -2.4370749321040022e-17], 'true,true,false': [-2.4370749321040022e-17, nan]}, {'': [0.06129948176050187, -6.55482228560978e-18], 'true': [0.06129948176050187, nan], 'true,true': [0.06129948176050187, nan], 'true,true,true': [0.06129948176050187, nan]}, {'': [0.04185190081314362, 1.9528658699537637e-16], 'true': [1.9546528790426548e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.02423677843845836, 3.7162276974900636e-17], 'true': [0.02423677843845836, nan], 'true,true': [5.414916759510057e-16, -3.0839528461809902e-18], 'true,true,false': [-3.0839528461809902e-18, nan]}, {'': [0.018480736389412257, 4.4322015073098223e-17], 'true': [0.018480736389412257, nan], 'true,true': [0.018480736389412257, nan]}, {'': [0.01564972794269573, 0.007608474986925778], 'true': [0.01564972794269573, nan], 'true,true': [0.01564972794269573, nan]}, {'': [0.01730728184242131, 7.323247012326614e-17], 'true': [0.01730728184242131, nan], 'true,true': [0.01730728184242131, nan]}, {'': [0.013694288084325202, 0.0067475824888703516], 'true': [0.013694288084325202, nan], 'true,true': [0.013694288084325202, nan]}, {'': [0.018278556728278456, -4.119379548382934e-17], 'true': [0.018278556728278456, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.1418510649004874;  // std dev = 2.23e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6045185753756701;  // std dev = 0.290, 147.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=127 */
%   | | else return 0.5973165855980381;  // std dev = 0.297, 166.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=142 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5844657625087268;  // std dev = 0.014, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.20721629421223178;  // std dev = 0.004, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.11231637819360582;  // std dev = 0.000, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4394657169874022;  // std dev = 0.015, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.17540907977787557;  // std dev = 0.003, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783529;  // std dev = 3.86e-07, 555.000 (wgt'ed) examples reached here.  /* #neg=555 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.33563775745721275;  // std dev = 0.013, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.15134781123288846;  // std dev = 0.003, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926111;  // std dev = 1.03e-07, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2653329560458692;  // std dev = 0.011, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.13286934294316488;  // std dev = 0.003, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.08518475138839679;  // std dev = 1.38e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21691014621719445;  // std dev = 0.010, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11846052769464407;  // std dev = 0.002, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109211;  // std dev = 1.12e-07, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18232502815894927;  // std dev = 0.009, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10655185585435092;  // std dev = 0.002, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333728;  // std dev = 0.000, 524.000 (wgt'ed) examples reached here.  /* #neg=524 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15669880684542956;  // std dev = 0.008, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09686503916729525;  // std dev = 0.002, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420343;  // std dev = 0.000, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202618;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13708710816018163;  // std dev = 0.007, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.08871529473836418;  // std dev = 0.002, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0641918400820254;  // std dev = 2.45e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065271
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.926 seconds
Total inference time: 0.659 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.31 seconds
Refined model CLL: -0.065847


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065271
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.132 seconds
Total inference time: 0.659 seconds
AUC ROC: 1.0
Total revision time: 7.132
Best scored revision CLL: -0.065847


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065271, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.132, 'Inference time': 0.659, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07965, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.461, 'Inference time': 0.732}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048863;  // std dev = 0.000, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 642.000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4631544878799038;  // std dev = 4.555, 391.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360606;  // std dev = 0.000, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44009492080153023;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.16740361842558737;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783509;  // std dev = 4.38e-07, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33606676347141784;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14535031893422556;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926164;  // std dev = 0.000, 644.000 (wgt'ed) examples reached here.  /* #neg=644 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21385754323184727;  // std dev = 0.133, 388.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1835376928035811;  // std dev = 0.120, 313.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05406277960920741;  // std dev = 0.087, 682.000 (wgt'ed) examples reached here.  /* #neg=623 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15332291922038485;  // std dev = 2.491, 389.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07494163527317516;  // std dev = 2.11e-08, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13375959357797343;  // std dev = 0.114, 310.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05006147955994645;  // std dev = 2.112, 746.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11109288036622995;  // std dev = 0.129, 402.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06672312418923876;  // std dev = 3.59e-07, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079756
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.94 seconds
Total inference time: 0.745 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082019
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.552 seconds
Parameter learned model CLL: -0.082019


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.66e-08, 65, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 632, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 57, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 642, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.555, 54, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 635, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.04e-06, 0, 337], 'true,false,true': [0.0, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.38e-07, 620, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [3.94e-08, 58, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 644, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.133, 51, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.6e-07, 636, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.12, 35, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 623, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.491, 52, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 614, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.114, 32, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.112, 687, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.129, 65, 337], 'true,false': [0.0, 0, 0], 'false': [3.59e-07, 636, 0]}]]
[{'': [0.1355473874409079, -3.822540034152438e-16], 'true': [3.204821834882351e-15, 6.832141690000964e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [6.832141690000964e-17, nan], 'true,false,true': [6.832141690000964e-17, nan]}, {'': [0.08833676478357609, -2.9882638419817296e-16], 'true': [0.08833676478357609, nan], 'true,true': [-5.144582419153248e-15, -3.895519384649672e-17], 'true,true,false': [-3.895519384649672e-17, nan]}, {'': [0.05306529007646066, -1.063016691294638e-16], 'true': [0.05306529007646066, nan], 'true,true': [0.05306529007646066, nan], 'true,true,true': [0.05306529007646066, nan]}, {'': [0.035687870463654126, 3.094299010568178e-16], 'true': [3.204821834882351e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.02903398821827012, -6.482047472966752e-17], 'true': [0.02903398821827012, nan], 'true,true': [-1.7500013966791786e-15, 2.6798486801296883e-17], 'true,true,false': [2.6798486801296883e-17, nan]}, {'': [0.01770758906181874, 4.0498701527206965e-17], 'true': [0.01770758906181874, nan], 'true,true': [0.01770758906181874, nan]}, {'': [0.014349779256737576, 0.00755196458921717], 'true': [0.014349779256737576, nan], 'true,true': [0.014349779256737576, nan]}, {'': [0.015952870741014362, 7.2327232874603035e-19], 'true': [0.015952870741014362, nan], 'true,true': [0.015952870741014362, nan]}, {'': [0.013072520416793097, 0.005981840546247712], 'true': [0.013072520416793097, nan], 'true,true': [0.013072520416793097, nan]}, {'': [0.01654376361970307, 2.0319176111064186e-16], 'true': [0.01654376361970307, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1418510649004884;  // std dev = 0.000, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6007281726475884;  // std dev = 0.294, 185.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=159 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5690946120236454;  // std dev = 0.267, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.151095595252306;  // std dev = 0.327, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.11231637819360607;  // std dev = 0.000, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4278961116033176;  // std dev = 0.266, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.13638475392352029;  // std dev = 0.348, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.10159632948783502;  // std dev = 4.52e-07, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32783706166618;  // std dev = 0.240, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.13046136525946184;  // std dev = 0.279, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926139;  // std dev = 0.000, 561.000 (wgt'ed) examples reached here.  /* #neg=561 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26007430547478366;  // std dev = 0.210, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.113153703535218;  // std dev = 0.262, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21324223681351895;  // std dev = 0.183, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10495844649466847;  // std dev = 0.229, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0787767547310925;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17966548849029196;  // std dev = 0.161, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08858482127835379;  // std dev = 0.220, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07324622576333646;  // std dev = 2.65e-07, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15470142673913176;  // std dev = 0.143, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08073887763062845;  // std dev = 0.191, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420364;  // std dev = 0.000, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13204746777773688;  // std dev = 0.501, 343.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=337 */
%   | else return -0.08170439536658998;  // std dev = 0.199, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.0641918400820252;  // std dev = 2.49e-07, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063813
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.199 seconds
Total inference time: 0.674 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065155
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.329 seconds
Refined model CLL: -0.065155


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063813
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.02 seconds
Total inference time: 0.674 seconds
AUC ROC: 1.0
Total revision time: 8.02
Best scored revision CLL: -0.065155


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063813, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.02, 'Inference time': 0.674, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079756, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.94, 'Inference time': 0.745}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.49220725154926726;  // std dev = 1.681, 74.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360617;  // std dev = 9.66e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4329489287442246;  // std dev = 1.79e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.17149220213482816;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3311964806368883;  // std dev = 1.12e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14847899671821874;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 5.58e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22039602250058152;  // std dev = 0.121, 75.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.23e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18396963010494735;  // std dev = 0.114, 60.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05035764962044472;  // std dev = 0.091, 132.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12667388987995762;  // std dev = 1.362, 83.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07519889971251283;  // std dev = 2.58e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12434556233669321;  // std dev = 0.126, 62.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04840855130243359;  // std dev = 0.991, 149.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10276211657157376;  // std dev = 0.138, 83.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0670414593281165;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074451
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.051 seconds
Total inference time: 0.761 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080786
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.828 seconds
Parameter learned model CLL: -0.080786


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 117, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [5.27e-09, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.681, 7, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.66e-08, 127, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.79e-07, 0, 67], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 141, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.12e-08, 0, 67], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.121, 8, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.23e-08, 118, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.114, 6, 54], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 119, 13]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.362, 16, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 133, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.126, 8, 54], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.991, 136, 13]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.138, 16, 67], 'true,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}]]
[{'': [0.1288255087325739, 5.3138879811118606e-17], 'true': [-9.544603913195376e-16, -1.1564823173178714e-17], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-1.1564823173178714e-17, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.08067194524399914, -3.469446951953614e-18], 'true': [0.08067194524399914, nan], 'true,true': [3.1815346377317917e-16, 2.7755575615628915e-18], 'true,true,false': [2.7755575615628915e-18, nan]}, {'': [0.038181219886903005, 7.34320740696954e-17], 'true': [0.038181219886903005, nan], 'true,true': [0.038181219886903005, nan], 'true,true,true': [0.038181219886903005, nan]}, {'': [0.0275605799288307, -4.2519179666495357e-17], 'true': [4.772301956597688e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan]}, {'': [0.012232440991535065, 2.5069552168955147e-17], 'true': [0.012232440991535065, nan], 'true,true': [1.4582033756270713e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.014715988309778561, 3.293034395074617e-17], 'true': [0.014715988309778561, nan], 'true,true': [0.014715988309778561, nan]}, {'': [0.01297875496215597, 0.008193280680402691], 'true': [0.01297875496215597, nan], 'true,true': [0.01297875496215597, nan]}, {'': [0.022347571127487018, 5.008524923121007e-18], 'true': [0.022347571127487018, nan], 'true,true': [0.022347571127487018, nan]}, {'': [0.015931885717434674, 0.00658649307113823], 'true': [0.015931885717434674, nan], 'true,true': [0.015931885717434674, nan]}, {'': [0.018962909008799964, -2.7755575615628914e-17], 'true': [0.018962909008799964, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1418510649004879;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5824596742532225;  // std dev = 0.311, 37.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   | | else return 0.4953114803821483;  // std dev = 0.373, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8.43e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.6001353486828279;  // std dev = 0.085, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.19842300518428196;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.11231637819360618;  // std dev = 9.19e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.45169467307858174;  // std dev = 0.088, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1671996251860275;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783634;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.344045498275472;  // std dev = 0.080, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.14471678442652025;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926085;  // std dev = 7.45e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2710650685678098;  // std dev = 0.070, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12624712481998007;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0851847513883968;  // std dev = 6.32e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2209400966254925;  // std dev = 0.061, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11328433367007429;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07877675473109168;  // std dev = 4.83e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18526595400442303;  // std dev = 0.054, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10413656345144687;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333711;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1589200068828918;  // std dev = 0.047, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09294667684050666;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420267;  // std dev = 5.05e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13881490425960694;  // std dev = 0.042, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07733588433570854;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064698
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.138 seconds
Total inference time: 0.708 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065737
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.78 seconds
Refined model CLL: -0.065737


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064698
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7969999999999997 seconds
Total inference time: 0.708 seconds
AUC ROC: 1.0
Total revision time: 3.7969999999999997
Best scored revision CLL: -0.065737


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064698, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.7969999999999997, 'Inference time': 0.708, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074451, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.051, 'Inference time': 0.761}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.45394626232503354;  // std dev = 3.012, 158.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360671;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44236516865304804;  // std dev = 3.04e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.1661241069003285;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3376165624193612;  // std dev = 9.86e-09, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1443681524195225;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 7.60e-08, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21328096242168149;  // std dev = 0.135, 155.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19134408517670368;  // std dev = 0.111, 117.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04925562954358266;  // std dev = 0.094, 275.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=28 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16167238185954153;  // std dev = 1.465, 151.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.075275574511233;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11916893130149772;  // std dev = 0.130, 123.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04150434488403038;  // std dev = 1.398, 268.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=28 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12380058709048368;  // std dev = 0.116, 155.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06753913421479432;  // std dev = 1.26e-07, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07501
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.621 seconds
Total inference time: 0.782 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.071 seconds
Parameter learned model CLL: -0.082387


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 237, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [5.27e-09, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 226, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.012, 24, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 229, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.04e-07, 0, 134], 'true,false,true': [0.0, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 250, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [9.86e-09, 0, 134], 'true,true,false,true': [0.0, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 267, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.135, 21, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.56e-08, 236, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.111, 11, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 247, 28]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.465, 17, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 245, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.13, 17, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.398, 240, 28]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.116, 21, 134], 'true,false': [0.0, 0, 0], 'false': [1.26e-07, 273, 0]}]]
[{'': [0.1130038792376502, -2.0611735478272948e-16], 'true': [4.772301956597688e-15, 2.7755575615628915e-18], 'true,true': [4.772301956597688e-15, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.05385295140007322, -6.484488462412419e-17], 'true': [0.05385295140007322, nan], 'true,true': [-1.908920782639075e-15, 2.3129646346357427e-18], 'true,true,false': [2.3129646346357427e-18, nan]}, {'': [0.057430455769640155, -6.593464251048965e-17], 'true': [0.057430455769640155, nan], 'true,true': [0.057430455769640155, nan], 'true,true,true': [0.057430455769640155, nan]}, {'': [0.04184072574979433, -7.105427357601002e-17], 'true': [6.893325048418883e-16, -1.6653345369377347e-17], 'true,false': [-1.6653345369377347e-17, nan]}, {'': [0.026251848166077948, 2.1622321078842e-17], 'true': [0.026251848166077948, nan], 'true,true': [1.0605115459105973e-16, -2.7755575615628915e-18], 'true,true,false': [-2.7755575615628915e-18, nan]}, {'': [0.018192665930180072, 3.104861001070353e-17], 'true': [0.018192665930180072, nan], 'true,true': [0.018192665930180072, nan]}, {'': [0.012311233999936019, 0.008774377477954093], 'true': [0.012311233999936019, nan], 'true,true': [0.012311233999936019, nan]}, {'': [0.014217775970595212, -6.3441315692866086e-18], 'true': [0.014217775970595212, nan], 'true,true': [0.014217775970595212, nan]}, {'': [0.016815892853602094, 0.0072963432402993285], 'true': [0.016815892853602094, nan], 'true,true': [0.016815892853602094, nan]}, {'': [0.013432953024918875, 5.856121448572254e-17], 'true': [0.013432953024918875, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048838;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360686;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.10159632948783655;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.99e-08, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.75e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109143;  // std dev = 6.32e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2076204232594714;  // std dev = 0.287, 135.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17740818746685127;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07324622576333674;  // std dev = 1.22e-07, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15298026492830882;  // std dev = 7.88e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06850709436961652;  // std dev = 0.021, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12942040295400203;  // std dev = 0.373, 137.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=134 */
%   | else return -0.06419023590482197;  // std dev = 1.30e-05, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.06418702755041361;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.34 seconds
Total inference time: 0.678 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064407
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.946 seconds
Refined model CLL: -0.064407


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.978 seconds
Total inference time: 0.678 seconds
AUC ROC: 1.0
Total revision time: 4.978
Best scored revision CLL: -0.064407


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063782, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.978, 'Inference time': 0.678, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07501, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.621, 'Inference time': 0.782}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 1.86e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4740833114492526;  // std dev = 3.311, 230.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360644;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43740372297973834;  // std dev = 3.58e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1689324157858315;  // std dev = 7.90e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 1.38e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.334231224991166;  // std dev = 2.17e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1465219212277086;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.72e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19798286239712487;  // std dev = 0.147, 243.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.13e-07, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17693313983972592;  // std dev = 0.129, 195.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=169 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05596233900098317;  // std dev = 0.084, 414.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14836725796155326;  // std dev = 2.066, 238.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0748100538655169;  // std dev = 8.69e-08, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1376026989094492;  // std dev = 0.113, 188.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=169 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050220788183560794;  // std dev = 1.596, 426.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=33 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11083129663113692;  // std dev = 0.127, 245.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06660321000924087;  // std dev = 1.01e-07, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074031
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.99 seconds
Total inference time: 0.77 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.36 seconds
Parameter learned model CLL: -0.081879


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.58e-08, 29, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.86e-07, 353, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 28, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 357, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.311, 28, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 367, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.58e-07, 0, 202], 'true,false,true': [7.9e-09, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.38e-07, 370, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.17e-08, 0, 202], 'true,true,false,true': [0.0, 28, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.72e-07, 366, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.147, 41, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.13e-07, 341, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.129, 26, 169], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.084, 381, 33]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.066, 36, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.69e-08, 359, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.113, 19, 169], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.596, 393, 33]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.127, 43, 202], 'true,false': [0.0, 0, 0], 'false': [1.01e-07, 349, 0]}]]
[{'': [0.1097805513389984, 9.812736081672771e-17], 'true': [5.768762805181012e-15, 2.2970131543968756e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [2.2970131543968756e-17, nan], 'true,false,true': [2.2970131543968756e-17, nan]}, {'': [0.07632782825147176, -1.144431577204643e-16], 'true': [0.07632782825147176, nan], 'true,true': [-3.728590593592605e-15, -5.9476233462061954e-18], 'true,true,false': [-5.9476233462061954e-18, nan]}, {'': [0.047664399447382676, -2.9041256229976844e-17], 'true': [0.047664399447382676, nan], 'true,true': [0.047664399447382676, nan], 'true,true,true': [0.047664399447382676, nan]}, {'': [0.03823587881326305, 5.1610367631223496e-17], 'true': [6.331568932515744e-16, 6.167905692361981e-17], 'true,false': [6.167905692361981e-17, nan]}, {'': [0.024711436889639293, 8.129501928949234e-17], 'true': [0.024711436889639293, nan], 'true,true': [4.748676699386808e-16, -1.9825411154020653e-17], 'true,true,false': [-1.9825411154020653e-17, nan]}, {'': [0.02171848970811729, 3.776711755323113e-17], 'true': [0.02171848970811729, nan], 'true,true': [0.02171848970811729, nan]}, {'': [0.016754676343036783, 0.007086699405430544], 'true': [0.016754676343036783, nan], 'true,true': [0.016754676343036783, nan]}, {'': [0.017934591208332025, 2.102929405975227e-17], 'true': [0.017934591208332025, nan], 'true,true': [0.017934591208332025, nan]}, {'': [0.012824891706934195, 0.005977005710471876], 'true': [0.012824891706934195, nan], 'true,true': [0.012824891706934195, nan]}, {'': [0.016130915433106838, 2.926662414484653e-17], 'true': [0.016130915433106838, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1418510649004875;  // std dev = 2.56e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.1254446385283914;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360635;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783621;  // std dev = 1.35e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.71e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07877675473109148;  // std dev = 3.65e-08, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527794;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333768;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420318;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.11336131437363241;  // std dev = 0.061, 96.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=86 */
%   | | else return 0.10362618130807842;  // std dev = 0.071, 137.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=116 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.0641918400820257;  // std dev = 1.71e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064233
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.644 seconds
Total inference time: 0.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065007
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.116 seconds
Refined model CLL: -0.065007


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064233
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.109999999999999 seconds
Total inference time: 0.693 seconds
AUC ROC: 1.0
Total revision time: 6.109999999999999
Best scored revision CLL: -0.065007


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064233, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.109999999999999, 'Inference time': 0.693, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074031, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.99, 'Inference time': 0.77}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048727;  // std dev = 2.70e-07, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 492.000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.48837484996301617;  // std dev = 3.469, 299.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360592;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4338900399351531;  // std dev = 1.46e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.17094836978702355;  // std dev = 6.72e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783555;  // std dev = 3.17e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33183722926844317;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14806369356069557;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926112;  // std dev = 8.94e-08, 516.000 (wgt'ed) examples reached here.  /* #neg=516 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21076026068012318;  // std dev = 0.133, 310.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.48e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1674756297944026;  // std dev = 0.135, 269.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=229 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05727143529160368;  // std dev = 0.082, 520.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1632834669202195;  // std dev = 1.983, 300.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0747194971348293;  // std dev = 1.58e-07, 441.000 (wgt'ed) examples reached here.  /* #neg=441 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12182930223321227;  // std dev = 0.128, 264.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=229 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05262432982391881;  // std dev = 1.742, 557.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09812000653399602;  // std dev = 0.136, 337.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06637838845192669;  // std dev = 0.000, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073876
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.368 seconds
Total inference time: 0.745 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082504
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.414 seconds
Parameter learned model CLL: -0.082504


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.94e-08, 38, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.7e-07, 470, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 45, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 492, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.469, 30, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 493, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.46e-07, 0, 269], 'true,false,true': [6.72e-09, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.17e-07, 486, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 47, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 516, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.133, 41, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.48e-07, 491, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.135, 40, 229], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.082, 480, 40]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.983, 31, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-07, 441, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.128, 35, 229], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.742, 517, 40]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.136, 68, 269], 'true,false': [0.0, 0, 0], 'false': [0.0, 510, 0]}]]
[{'': [0.10845738416323118, 1.549587881178942e-16], 'true': [4.226276495227362e-15, 4.0902953538821554e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [4.0902953538821554e-17, nan], 'true,false,true': [4.0902953538821554e-17, nan]}, {'': [0.08764651946722757, -1.3178257040266086e-16], 'true': [0.08764651946722757, nan], 'true,true': [-4.5432472323694135e-15, -2.960594732333751e-17], 'true,true,false': [-2.960594732333751e-17, nan]}, {'': [0.040241258541001766, -5.404736833875001e-18], 'true': [0.040241258541001766, nan], 'true,true': [0.040241258541001766, nan], 'true,true,true': [0.040241258541001766, nan]}, {'': [0.04835257908454307, 2.0651062021834187e-16], 'true': [7.924268428551303e-17, 4.4408920985006264e-17], 'true,false': [4.4408920985006264e-17, nan]}, {'': [0.029159437557511138, 1.5491484064537068e-17], 'true': [0.029159437557511138, nan], 'true,true': [-1.5848536857102606e-15, -2.362176648138631e-17], 'true,true,false': [-2.362176648138631e-17, nan]}, {'': [0.017733820819859674, 4.431847511741969e-17], 'true': [0.017733820819859674, nan], 'true,true': [0.017733820819859674, nan]}, {'': [0.018293846314740916, 0.006727670909443234], 'true': [0.018293846314740916, nan], 'true,true': [0.018293846314740916, nan]}, {'': [0.013103146396698169, 5.639228061588096e-17], 'true': [0.013103146396698169, nan], 'true,true': [0.013103146396698169, nan]}, {'': [0.01630820514074929, 0.00544592707107382], 'true': [0.01630820514074929, nan], 'true,true': [0.01630820514074929, nan]}, {'': [0.018568437085182285, -2.1769078914218755e-17], 'true': [0.018568437085182285, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 516.000 (wgt'ed) examples reached here.  /* #neg=516 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.11231637819360592;  // std dev = 0.000, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783555;  // std dev = 3.18e-07, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014983;  // std dev = 4.21e-08, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | | else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716014933;  // std dev = 2.67e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 1.07e-07, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.37e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.08518475138839678;  // std dev = 1.44e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2.89e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109166;  // std dev = 2.01e-07, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527716;  // std dev = 1.46e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07324622576333743;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936717;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420353;  // std dev = 0.000, 524.000 (wgt'ed) examples reached here.  /* #neg=524 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080113;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.0641918400820254;  // std dev = 2.45e-07, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.025 seconds
Total inference time: 0.707 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.219 seconds
Refined model CLL: -0.064083


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.026000000000001 seconds
Total inference time: 0.707 seconds
AUC ROC: 1.0
Total revision time: 7.026000000000001
Best scored revision CLL: -0.064083


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.026000000000001, 'Inference time': 0.707, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073876, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.368, 'Inference time': 0.745}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.44053155456988846;  // std dev = 5.083, 407.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360592;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44567679570471114;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.16427412272120873;  // std dev = 1.07e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783506;  // std dev = 4.38e-07, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.339879624184338;  // std dev = 3.53e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14294547552127437;  // std dev = 4.94e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926151;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2011631039289261;  // std dev = 0.148, 406.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19039684201070517;  // std dev = 0.117, 322.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05589349346240922;  // std dev = 0.082, 650.000 (wgt'ed) examples reached here.  /* #neg=601 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1410967944739675;  // std dev = 2.847, 406.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07481481904635678;  // std dev = 0.000, 556.000 (wgt'ed) examples reached here.  /* #neg=556 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1323786481455254;  // std dev = 0.121, 327.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05047780173555226;  // std dev = 1.957, 677.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10612952381818468;  // std dev = 0.135, 413.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06659121689130164;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073852
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.706 seconds
Total inference time: 0.798 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.629 seconds
Parameter learned model CLL: -0.082269


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.94e-08, 46, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 590, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 60, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 586, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [5.083, 70, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 617, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 337], 'true,false,true': [1.07e-08, 69, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.38e-07, 603, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.53e-08, 0, 337], 'true,true,false,true': [4.94e-08, 69, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 620, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.148, 69, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-07, 615, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.117, 34, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.082, 601, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.847, 69, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 556, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.121, 39, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.957, 628, 49]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.135, 76, 337], 'true,false': [0.0, 0, 0], 'false': [0.0, 609, 0]}]]
[{'': [0.10567936246071934, -2.7398046167020814e-16], 'true': [3.204821834882351e-15, 5.3097622916855314e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [5.3097622916855314e-17, nan], 'true,false,true': [5.3097622916855314e-17, nan]}, {'': [0.09158604700268083, -1.9703616819286054e-16], 'true': [0.09158604700268083, nan], 'true,true': [-5.144582419153248e-15, -4.070817756958907e-17], 'true,true,false': [-4.070817756958907e-17, nan]}, {'': [0.06348622722035833, -7.053604953858369e-17], 'true': [0.06348622722035833, nan], 'true,true': [0.06348622722035833, nan], 'true,true,true': [0.06348622722035833, nan]}, {'': [0.05248276455099926, 3.1815346377317917e-16], 'true': [-1.8975918759171815e-15, 1.1584935909132068e-16], 'true,false': [1.1584935909132068e-16, nan]}, {'': [0.032885663012261916, -4.1543829308554246e-17], 'true': [0.032885663012261916, nan], 'true,true': [1.2650612506114544e-15, 3.539841527790354e-17], 'true,true,false': [3.539841527790354e-17, nan]}, {'': [0.02195691114677625, 4.0437391466021965e-17], 'true': [0.02195691114677625, nan], 'true,true': [0.02195691114677625, nan]}, {'': [0.01369736040176178, 0.006723572281459675], 'true': [0.01369736040176178, nan], 'true,true': [0.01369736040176178, nan]}, {'': [0.019964451671356985, -1.102235808620659e-16], 'true': [0.019964451671356985, nan], 'true,true': [0.019964451671356985, nan]}, {'': [0.01474546899537047, 0.005656014814335446], 'true': [0.01474546899537047, nan], 'true,true': [0.01474546899537047, nan]}, {'': [0.018295721345320586, -7.365026304574109e-17], 'true': [0.018295721345320586, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1418510649004886;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6227659244757294;  // std dev = 0.269, 166.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=147 */
%   | | else return 0.6075892867705863;  // std dev = 0.286, 219.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5811843388356454;  // std dev = 0.034, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.20966261168920952;  // std dev = 0.009, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360586;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4369526090985902;  // std dev = 0.034, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.17695216405110062;  // std dev = 0.009, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.10159632948783506;  // std dev = 4.44e-07, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.33392500605663783;  // std dev = 0.031, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.15260484250284262;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926154;  // std dev = 0.000, 642.000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26416988102005085;  // std dev = 0.027, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.13403553959722025;  // std dev = 0.007, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21609426525828423;  // std dev = 0.023, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11911710675756698;  // std dev = 0.006, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109252;  // std dev = 0.000, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18173058207010673;  // std dev = 0.021, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10708290095707754;  // std dev = 0.006, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07324622576333659;  // std dev = 2.38e-07, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15625045362614925;  // std dev = 0.018, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09737720010013685;  // std dev = 0.005, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420362;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13673878950497764;  // std dev = 0.016, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0889638712611488;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.06419184008202608;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.0641918400820252;  // std dev = 2.49e-07, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064699
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.181 seconds
Total inference time: 0.674 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06599
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.444 seconds
Refined model CLL: -0.06599


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064699
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.96 seconds
Total inference time: 0.674 seconds
AUC ROC: 1.0
Total revision time: 7.96
Best scored revision CLL: -0.06599


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064699, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.96, 'Inference time': 0.674, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073852, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.706, 'Inference time': 0.798}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 4.71e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8.30e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4663420614209653;  // std dev = 1.966, 75.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 8.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4393096170218279;  // std dev = 1.63e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.1678483724411073;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783667;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33553096614438516;  // std dev = 6.45e-09, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14569137340357588;  // std dev = 1.18e-08, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 4.47e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21737329153319923;  // std dev = 0.129, 74.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 5.58e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.20610472717111608;  // std dev = 0.083, 60.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06459829298832916;  // std dev = 0.070, 150.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1431660890689608;  // std dev = 1.144, 76.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07421451963614856;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11871868346693894;  // std dev = 0.129, 66.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050884042215409306;  // std dev = 0.775, 117.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11197689001871776;  // std dev = 0.117, 78.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06606416354875488;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072684
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.038 seconds
Total inference time: 0.963 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083768
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.83 seconds
Parameter learned model CLL: -0.083768


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 125, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.49e-08, 0, 65], 'true,true,false,true': [7.45e-09, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.3e-08, 125, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.966, 10, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.63e-07, 0, 65], 'true,false,true': [2.63e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [6.45e-09, 0, 65], 'true,true,false,true': [1.18e-08, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.47e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.129, 9, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 128, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.083, 3, 57], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.07, 142, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.144, 11, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.129, 9, 57], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.775, 109, 8]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.117, 13, 65], 'true,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}]]
[{'': [0.05461037597143363, 1.7763568394002505e-17], 'true': [-8.745141363201234e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.745141363201234e-16, nan]}, {'': [0.09915090450905271, 5.5067062021407764e-17], 'true': [0.09915090450905271, nan], 'true,true': [2.1862853408003084e-16, 4.270088556250602e-18], 'true,true,false': [4.270088556250602e-18, nan]}, {'': [0.05151470611341082, 6.167905692361981e-17], 'true': [0.05151470611341082, nan], 'true,true': [0.05151470611341082, nan], 'true,true,true': [0.05151470611341082, nan]}, {'': [0.0484971905635971, -3.469446951953614e-17], 'true': [4.099285014000578e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02866621921004317, 1.6653345369377347e-17], 'true': [0.02866621921004317, nan], 'true,true': [2.7328566760003855e-17, 1.2616170734376778e-17], 'true,true,false': [1.2616170734376778e-17, nan]}, {'': [0.01656170920093555, 2.42861286636753e-17], 'true': [0.01656170920093555, nan], 'true,true': [0.01656170920093555, nan]}, {'': [0.006856967098587267, 0.004878181199116567], 'true': [0.006856967098587267, nan], 'true,true': [0.006856967098587267, nan]}, {'': [0.017213266681685414, -1.6702470281971383e-17], 'true': [0.017213266681685414, nan], 'true,true': [0.017213266681685414, nan]}, {'': [0.016671565997507656, 0.005138596209238839], 'true': [0.016671565997507656, nan], 'true,true': [0.016671565997507656, nan]}, {'': [0.013613002196333367, -1.0527976957652346e-17], 'true': [0.013613002196333367, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004879;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.1123163781936062;  // std dev = 8.82e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.10159632948783637;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2667897006363134;  // std dev = 0.139, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2615617598869452;  // std dev = 0.041, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.0999632019098081;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839682;  // std dev = 5.48e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21426660837998052;  // std dev = 0.035, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09770818342515179;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109161;  // std dev = 5.87e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18039997981000244;  // std dev = 0.031, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08636807358844166;  // std dev = 0.058, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07324622576333718;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15524754017775494;  // std dev = 0.028, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07837605130117845;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420267;  // std dev = 4.94e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13596014003441484;  // std dev = 0.025, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.07939661685062231;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.079 seconds
Total inference time: 0.826 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065057
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.759 seconds
Refined model CLL: -0.065057


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.706 seconds
Total inference time: 0.826 seconds
AUC ROC: 1.0
Total revision time: 3.706
Best scored revision CLL: -0.065057


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06372, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.706, 'Inference time': 0.826, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072684, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.038, 'Inference time': 0.963}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4549958175069528;  // std dev = 2.952, 153.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360668;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44210628192652207;  // std dev = 3.26e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.1662695494662748;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.337439766660708;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14447986973756358;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 5.96e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21862806553660627;  // std dev = 0.129, 148.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9.42e-08, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1766208052501601;  // std dev = 0.128, 123.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=107 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05668883325659446;  // std dev = 0.086, 280.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1413897563141119;  // std dev = 1.748, 156.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0747597861781064;  // std dev = 1.04e-07, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11369632619675249;  // std dev = 0.139, 128.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=107 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04919742576821867;  // std dev = 1.337, 273.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08380172637989447;  // std dev = 0.153, 174.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=130 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06662479372766276;  // std dev = 1.14e-07, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072792
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.489 seconds
Total inference time: 0.905 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083663
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.052 seconds
Parameter learned model CLL: -0.083663


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.66e-08, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 248, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [0.0, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 250, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.952, 23, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 220, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.26e-07, 0, 130], 'true,false,true': [0.0, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 225, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [0.0, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.129, 18, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 267, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.128, 16, 107], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.086, 257, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.748, 26, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.04e-07, 241, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.139, 21, 107], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.337, 250, 23]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.153, 44, 130], 'true,false': [0.0, 0, 0], 'false': [1.14e-07, 217, 0]}]]
[{'': [0.12772865137340791, -1.68324135991556e-16], 'true': [4.481884948640632e-15, 9.654113257610057e-18], 'true,true': [4.481884948640632e-15, nan], 'true,false': [9.654113257610057e-18, nan], 'true,false,true': [9.654113257610057e-18, nan]}, {'': [0.0854747677307963, -5.861977570020827e-17], 'true': [0.0854747677307963, nan], 'true,true': [-1.7490282726402467e-15, -2.64338815386942e-18], 'true,true,false': [-2.64338815386942e-18, nan]}, {'': [0.05694147638449158, -6.055761952500853e-17], 'true': [0.05694147638449158, nan], 'true,true': [0.05694147638449158, nan], 'true,true,true': [0.05694147638449158, nan]}, {'': [0.051405715586511226, -8.092292268378919e-17], 'true': [8.198570028001156e-16, -1.708035422500241e-17], 'true,false': [-1.708035422500241e-17, nan]}, {'': [0.017967893080546065, 1.518253708889103e-17], 'true': [0.017967893080546065, nan], 'true,true': [-4.919142016800694e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.016590435084911478, 3.3265109352064617e-17], 'true': [0.016590435084911478, nan], 'true,true': [0.016590435084911478, nan]}, {'': [0.01633443559409294, 0.007366065868021608], 'true': [0.01633443559409294, nan], 'true,true': [0.01633443559409294, nan]}, {'': [0.019588600709907752, 4.514599851172836e-17], 'true': [0.019588600709907752, nan], 'true,true': [0.019588600709907752, nan]}, {'': [0.019310914968944194, 0.0065457265297725565], 'true': [0.019310914968944194, nan], 'true,true': [0.019310914968944194, nan]}, {'': [0.023289982656295005, 6.037157461095321e-17], 'true': [0.023289982656295005, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.1418510649004885;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6255936287954715;  // std dev = 0.266, 63.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109541;  // std dev = 2.06e-07, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5652937092853744;  // std dev = 0.130, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.17013944319478358;  // std dev = 0.239, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.1123163781936068;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42499151505367444;  // std dev = 0.130, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1404509798778546;  // std dev = 0.176, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783653;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2315691652521624;  // std dev = 0.205, 71.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=56 */
%   | | else return 0.25689185917213164;  // std dev = 0.143, 87.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=74 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926061;  // std dev = 5.16e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2743493799428993;  // std dev = 0.134, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.16196901749013862;  // std dev = 0.200, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22324829211319094;  // std dev = 0.117, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.13568987150173473;  // std dev = 0.168, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07877675473109144;  // std dev = 5.96e-08, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18694917415341494;  // std dev = 0.103, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12337747721389321;  // std dev = 0.175, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333663;  // std dev = 1.30e-07, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.160190432506566;  // std dev = 0.091, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09972887103829887;  // std dev = 0.164, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420261;  // std dev = 5.96e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13980259717860996;  // std dev = 0.081, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.09396745747640502;  // std dev = 0.130, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202625;  // std dev = 2.58e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.466 seconds
Total inference time: 0.877 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066992
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.906 seconds
Refined model CLL: -0.066992


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.913 seconds
Total inference time: 0.877 seconds
AUC ROC: 1.0
Total revision time: 4.913
Best scored revision CLL: -0.066992


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064491, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.913, 'Inference time': 0.877, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072792, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.489, 'Inference time': 0.905}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2.46e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839144;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46124374917766375;  // std dev = 3.501, 227.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360656;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44056580232003745;  // std dev = 4.38e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.16713746955967954;  // std dev = 4.17e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.336388108687664;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14514614119146926;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.83e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20590267488058847;  // std dev = 0.141, 230.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.16955988589362667;  // std dev = 0.137, 190.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=161 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05336585786299502;  // std dev = 0.090, 375.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1446903680250623;  // std dev = 2.125, 233.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0749899639572113;  // std dev = 2.11e-08, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12153240045714456;  // std dev = 0.133, 189.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=161 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050425817390948924;  // std dev = 1.640, 413.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11372883496681735;  // std dev = 0.128, 237.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=195 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06674082726927585;  // std dev = 1.42e-07, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073039
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.787 seconds
Total inference time: 0.9 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083907
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.179 seconds
Parameter learned model CLL: -0.083907


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.71e-08, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.46e-07, 380, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false,true': [0.0, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 352, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.501, 32, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 351, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.38e-07, 0, 195], 'true,false,true': [4.17e-09, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 335, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false,true': [0.0, 35, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-07, 385, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.141, 35, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.19e-07, 380, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.137, 29, 161], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 341, 34]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.125, 38, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 356, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.133, 28, 161], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.64, 379, 34]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.128, 42, 195], 'true,false': [0.0, 0, 0], 'false': [1.42e-07, 340, 0]}]]
[{'': [0.1523437500000055, 1.5893719089370662e-16], 'true': [5.975846598187509e-15, 4.9343245538895844e-17], 'true,true': [5.975846598187509e-15, nan], 'true,false': [4.9343245538895844e-17, nan], 'true,false,true': [4.9343245538895844e-17, nan]}, {'': [0.09025509768394857, -1.13545536609391e-16], 'true': [0.09025509768394857, nan], 'true,true': [-3.643808901333847e-15, -1.6326809185664067e-17], 'true,true,false': [-1.6326809185664067e-17, nan]}, {'': [0.05398502067038599, -3.542591987407907e-17], 'true': [0.05398502067038599, nan], 'true,true': [0.05398502067038599, nan], 'true,true,true': [0.05398502067038599, nan]}, {'': [0.041621691105797796, -4.242046183642389e-17], 'true': [9.838284033601388e-16, 1.5313421029312504e-17], 'true,false': [1.5313421029312504e-17, nan]}, {'': [0.029915850108325377, 8.651088503572649e-17], 'true': [0.029915850108325377, nan], 'true,true': [-7.287617802667694e-16, -1.2688263138573217e-17], 'true,true,false': [-1.2688263138573217e-17, nan]}, {'': [0.020016872853462046, 3.739698609263685e-17], 'true': [0.020016872853462046, nan], 'true,true': [0.020016872853462046, nan]}, {'': [0.01872339408742989, 0.008042297642654416], 'true': [0.01872339408742989, nan], 'true,true': [0.01872339408742989, nan]}, {'': [0.019375875664399383, 1.247441600702423e-18], 'true': [0.019375875664399383, nan], 'true,true': [0.019375875664399383, nan]}, {'': [0.017768321590890236, 0.006512593636351795], 'true': [0.017768321590890236, nan], 'true,true': [0.017768321590890236, nan]}, {'': [0.016308377714242244, 5.94295854358172e-17], 'true': [0.016308377714242244, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048777;  // std dev = 1.43e-07, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109541;  // std dev = 2.67e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 5.40e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.11231637819360649;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583128;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783628;  // std dev = 2.69e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.10159632948783649;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716015017;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716015;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.52e-07, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694884;  // std dev = 2.35e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 2.76e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109148;  // std dev = 3.65e-08, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452777;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07324622576333707;  // std dev = 7.88e-08, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420307;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13100401682482854;  // std dev = 0.341, 198.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=195 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06419184008202572;  // std dev = 1.68e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.732 seconds
Total inference time: 0.86 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06434
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.078 seconds
Refined model CLL: -0.06434


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.776000000000001 seconds
Total inference time: 0.86 seconds
AUC ROC: 1.0
Total revision time: 5.776000000000001
Best scored revision CLL: -0.06434


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063438, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.776000000000001, 'Inference time': 0.86, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073039, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.787, 'Inference time': 0.9}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2.80e-07, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 443.000 (wgt'ed) examples reached here.  /* #neg=443 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4625098863241786;  // std dev = 4.015, 302.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936059;  // std dev = 0.000, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44025376408960504;  // std dev = 4.46e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.16731379334921925;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878356;  // std dev = 3.05e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.336175157348616;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14528141615917886;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1.46e-07, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2032423412845756;  // std dev = 0.144, 309.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.44e-07, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17359978871260698;  // std dev = 0.133, 245.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=210 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04916293183133361;  // std dev = 0.095, 483.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=50 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15050033912038613;  // std dev = 2.329, 306.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07528202737538955;  // std dev = 0.000, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1276843956706464;  // std dev = 0.126, 241.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=210 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04624847965257446;  // std dev = 1.947, 522.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=50 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08882172254042255;  // std dev = 0.150, 341.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=260 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06724638172533681;  // std dev = 2.04e-07, 438.000 (wgt'ed) examples reached here.  /* #neg=438 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.333 seconds
Total inference time: 0.928 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084118
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.411 seconds
Parameter learned model CLL: -0.084118


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.58e-08, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.8e-07, 470, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [0.0, 50, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 443, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.015, 42, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 498, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.46e-07, 0, 260], 'true,false,true': [0.0, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.05e-07, 474, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [0.0, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 480, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.144, 49, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.44e-07, 495, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.133, 35, 210], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.095, 433, 50]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.329, 46, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 491, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.126, 31, 210], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.947, 472, 50]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.15, 81, 260], 'true,false': [0.0, 0, 0], 'false': [2.04e-07, 438, 0]}]]
[{'': [0.14065673835601467, 1.662972360289596e-16], 'true': [4.372570681600617e-15, 5.86532918669894e-17], 'true,true': [4.372570681600617e-15, nan], 'true,false': [5.86532918669894e-17, nan], 'true,false,true': [5.86532918669894e-17, nan]}, {'': [0.09657153654575588, -1.2630979783545798e-16], 'true': [0.09657153654575588, nan], 'true,true': [-4.481884948640632e-15, -3.3306690738754695e-17], 'true,true,false': [-3.3306690738754695e-17, nan]}, {'': [0.05337638401514586, -5.35047240783208e-18], 'true': [0.05337638401514586, nan], 'true,true': [0.05337638401514586, nan], 'true,true,true': [0.05337638401514586, nan]}, {'': [0.053199075001121934, 1.9674838411078722e-16], 'true': [7.651998692801079e-16, -2.0185873175002847e-17], 'true,false': [-2.0185873175002847e-17, nan]}, {'': [0.028694132445344956, 4.4408920985006264e-17], 'true': [0.028694132445344956, nan], 'true,true': [-1.9129996732002698e-16, -4.5418214643756407e-17], 'true,true,false': [-4.5418214643756407e-17, nan]}, {'': [0.0206974999536699, 4.2166046187783724e-17], 'true': [0.0206974999536699, nan], 'true,true': [0.0206974999536699, nan]}, {'': [0.017737393501622706, 0.009021708250596562], 'true': [0.017737393501622706, nan], 'true,true': [0.017737393501622706, nan]}, {'': [0.017725477165973058, -4.6127392469151106e-17], 'true': [0.017725477165973058, nan], 'true,true': [0.017725477165973058, nan]}, {'': [0.015793060640907255, 0.0072628948220279915], 'true': [0.015793060640907255, nan], 'true,true': [0.015793060640907255, nan]}, {'': [0.022479688901363305, 9.479986557301565e-17], 'true': [0.022479688901363305, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048724;  // std dev = 2.95e-07, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5816499003882247;  // std dev = 0.312, 141.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=118 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.719473412210956;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5706713511236078;  // std dev = 0.271, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.15100742304905393;  // std dev = 0.280, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.11231637819360601;  // std dev = 0.000, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4291269870617018;  // std dev = 0.271, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12629189113989392;  // std dev = 0.260, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783566;  // std dev = 2.87e-07, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.328700911237585;  // std dev = 0.245, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.11860228619769868;  // std dev = 0.251, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926089;  // std dev = 1.58e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26067839892562816;  // std dev = 0.214, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11797527467118417;  // std dev = 0.250, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839678;  // std dev = 1.41e-07, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21367713811426273;  // std dev = 0.186, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09930333434328761;  // std dev = 0.195, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109148;  // std dev = 2.00e-07, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17998948355370098;  // std dev = 0.164, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08836868524843172;  // std dev = 0.187, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07324622576333743;  // std dev = 0.000, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15495050326159043;  // std dev = 0.145, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07922090328310828;  // std dev = 0.181, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420339;  // std dev = 0.000, 445.000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13345749945078422;  // std dev = 0.368, 263.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=260 */
%   | else return -0.07659085827142258;  // std dev = 0.193, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06419184008202551;  // std dev = 2.16e-07, 432.000 (wgt'ed) examples reached here.  /* #neg=432 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063919
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.806 seconds
Total inference time: 0.834 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065468
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.18 seconds
Refined model CLL: -0.065468


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063919
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.73 seconds
Total inference time: 0.834 seconds
AUC ROC: 1.0
Total revision time: 6.73
Best scored revision CLL: -0.065468


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063919, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.73, 'Inference time': 0.834, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073433, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.333, 'Inference time': 0.928}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004885;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4665788283766163;  // std dev = 4.396, 376.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360567;  // std dev = 4.21e-08, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43925129821027703;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.16788144553659184;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783517;  // std dev = 4.15e-07, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33549118230964897;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14571672807054353;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926143;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21196999567076277;  // std dev = 0.135, 377.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17648659879583742;  // std dev = 0.128, 307.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05466799623462493;  // std dev = 0.088, 674.000 (wgt'ed) examples reached here.  /* #neg=615 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15459984861246243;  // std dev = 2.470, 375.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07489968918866699;  // std dev = 1.40e-07, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1287131310477016;  // std dev = 0.122, 303.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.049502595634025724;  // std dev = 2.120, 707.000 (wgt'ed) examples reached here.  /* #neg=648 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10787369500813196;  // std dev = 0.130, 399.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=326 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06672285103020378;  // std dev = 1.30e-07, 548.000 (wgt'ed) examples reached here.  /* #neg=548 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073177
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.614 seconds
Total inference time: 0.89 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084091
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.527 seconds
Parameter learned model CLL: -0.084091


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.77e-08, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.37e-08, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 608, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [0.0, 59, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 593, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.396, 50, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 597, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 326], 'true,false,true': [0.0, 65, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.15e-07, 591, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [0.0, 49, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 584, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.135, 51, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.6e-07, 624, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.128, 40, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 615, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.47, 49, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.4e-07, 597, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.122, 36, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.12, 648, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.13, 73, 326], 'true,false': [0.0, 0, 0], 'false': [1.3e-07, 548, 0]}]]
[{'': [0.11697823807949431, -3.2722362831057244e-16], 'true': [3.400143152717044e-15, 5.659960517696876e-17], 'true,true': [3.400143152717044e-15, nan], 'true,false': [5.659960517696876e-17, nan], 'true,false,true': [5.659960517696876e-17, nan]}, {'': [0.09263547431779316, -2.306567902762551e-16], 'true': [0.09263547431779316, nan], 'true,true': [-5.056623150194578e-15, -3.95164127408954e-17], 'true,true,false': [-3.95164127408954e-17, nan]}, {'': [0.051398720888033565, 2.9754720927977395e-18], 'true': [0.051398720888033565, nan], 'true,true': [0.051398720888033565, nan], 'true,true,true': [0.051398720888033565, nan]}, {'': [0.05109104120944851, 2.9155095333642015e-16], 'true': [-2.7462694695022276e-15, -5.124106267500723e-17], 'true,false': [-5.124106267500723e-17, nan]}, {'': [0.026303688965837107, -2.889621570942188e-17], 'true': [0.026303688965837107, nan], 'true,true': [-2.179578944049387e-15, -2.2657612747452175e-17], 'true,true,false': [-2.2657612747452175e-17, nan]}, {'': [0.018134360367841936, 4.127752271042249e-17], 'true': [0.018134360367841936, nan], 'true,true': [0.018134360367841936, nan]}, {'': [0.016378527031668106, 0.007745053375191764], 'true': [0.016378527031668106, nan], 'true,true': [0.016378527031668106, nan]}, {'': [0.016268817907505874, 3.2730193020775136e-17], 'true': [0.016268817907505874, nan], 'true,true': [0.016268817907505874, nan]}, {'': [0.014783849366987296, 0.00635990804239142], 'true': [0.014783849366987296, nan], 'true,true': [0.014783849366987296, nan]}, {'': [0.016920422174877325, 3.0794507252376604e-17], 'true': [0.016920422174877325, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048827;  // std dev = 0.000, 572.000 (wgt'ed) examples reached here.  /* #neg=572 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360625;  // std dev = 5.27e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.11231637819360582;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783502;  // std dev = 4.58e-07, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892613;  // std dev = 0.000, 576.000 (wgt'ed) examples reached here.  /* #neg=576 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 559.000 (wgt'ed) examples reached here.  /* #neg=559 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109233;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07324622576333674;  // std dev = 2.02e-07, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06842697784420358;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13219974547831545;  // std dev = 0.342, 329.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return -0.06419184008202525;  // std dev = 2.48e-07, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.244 seconds
Total inference time: 0.818 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064358
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.274 seconds
Refined model CLL: -0.064358


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.659 seconds
Total inference time: 0.818 seconds
AUC ROC: 1.0
Total revision time: 7.659
Best scored revision CLL: -0.064358


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063436, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.659, 'Inference time': 0.818, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073177, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.614, 'Inference time': 0.89}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.05e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4355259315006628;  // std dev = 2.263, 78.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.56e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4469137636009862;  // std dev = 1.63e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.1635880644291548;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 1.49e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3407256747190565;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14241709247122883;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 6.14e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2064688250981906;  // std dev = 0.144, 76.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5.77e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18578263452836824;  // std dev = 0.122, 60.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05258025361958013;  // std dev = 0.087, 127.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12998856408544823;  // std dev = 1.364, 80.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07504447674827006;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1589601039863647;  // std dev = 0.084, 56.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046477896141677;  // std dev = 0.945, 111.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10900075523589756;  // std dev = 0.132, 78.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06703285802289732;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.026 seconds
Total inference time: 0.911 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082603
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.854 seconds
Parameter learned model CLL: -0.082603


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.05e-08, 0, 64], 'true,true,false,true': [0.0, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.263, 14, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.56e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.63e-07, 0, 64], 'true,false,true': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 110, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false,true': [0.0, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 123, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.144, 12, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 106, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.122, 7, 53], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 116, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.364, 16, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.084, 3, 53], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.945, 100, 11]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.132, 14, 64], 'true,false': [0.0, 0, 0], 'false': [0.0, 100, 0]}]]
[{'': [0.12515555555555466, 5.551115123125783e-17], 'true': [-8.881784197001252e-16, -1.0092936587501423e-17], 'true,false': [-1.0092936587501423e-17, nan], 'true,false,true': [-1.0092936587501423e-17, nan], 'true,true': [-8.881784197001252e-16, nan]}, {'': [0.0771624378269738, -1.8503717077085942e-18], 'true': [0.0771624378269738, nan], 'true,true': [1.1102230246251565e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0656536991886891, 6.006124559447569e-17], 'true': [0.0656536991886891, nan], 'true,true': [0.0656536991886891, nan], 'true,true,true': [0.0656536991886891, nan]}, {'': [0.05488993818165998, 2.0185873175002845e-18], 'true': [4.163336342344337e-16, -3.96508223080413e-18], 'true,false': [-3.96508223080413e-18, nan]}, {'': [0.027281453146914093, 3.0689091737605954e-17], 'true': [0.027281453146914093, nan], 'true,true': [-1.942890293094024e-16, -8.326672684688674e-18], 'true,true,false': [-8.326672684688674e-18, nan]}, {'': [0.020712010397383223, 3.142140635731575e-17], 'true': [0.020712010397383223, nan], 'true,true': [0.020712010397383223, nan]}, {'': [0.014928835131463503, 0.0076222183760304065], 'true': [0.014928835131463503, nan], 'true,true': [0.014928835131463503, nan]}, {'': [0.023263340565347686, -1.4802973661668754e-17], 'true': [0.023263340565347686, nan], 'true,true': [0.023263340565347686, nan]}, {'': [0.007106293854141256, 0.00803912664770086], 'true': [0.007106293854141256, nan], 'true,true': [0.007106293854141256, nan]}, {'': [0.0175085489125279, -1.9428902930940238e-17], 'true': [0.0175085489125279, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360618;  // std dev = 9.77e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.1015963294878363;  // std dev = 1.49e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014983;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 4.59e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839682;  // std dev = 5.87e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0787767547310916;  // std dev = 6.32e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07324622576333714;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420267;  // std dev = 4.34e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12800100364164618;  // std dev = 0.276, 66.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=64 */
%   | else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06419184008202626;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063448
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.021 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.729 seconds
Refined model CLL: -0.064372


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063448
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.63 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0
Total revision time: 3.63
Best scored revision CLL: -0.064372


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063448, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.63, 'Inference time': 0.838, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076374, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.026, 'Inference time': 0.911}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4543354844856414;  // std dev = 2.950, 152.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360682;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4422691581758562;  // std dev = 4.17e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.1661780316419224;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33755099413818374;  // std dev = 2.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1444095753037886;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 5.96e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20052519538365587;  // std dev = 0.147, 155.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9.06e-08, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.20280501679054314;  // std dev = 0.097, 115.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=107 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05567033027035028;  // std dev = 0.087, 265.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15147856966062012;  // std dev = 1.574, 150.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07483026732417207;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12653214652435119;  // std dev = 0.123, 122.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=107 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04845290737862135;  // std dev = 1.296, 269.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10922094573797164;  // std dev = 0.125, 159.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=129 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06673012315142125;  // std dev = 6.91e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076244
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.515 seconds
Total inference time: 0.939 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082704
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.049 seconds
Parameter learned model CLL: -0.082704


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 231, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false,true': [0.0, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 238, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.95, 23, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 260, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.17e-07, 0, 129], 'true,false,true': [5.27e-09, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 259, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.58e-08, 0, 129], 'true,true,false,true': [0.0, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 231, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.147, 26, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.06e-08, 255, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.097, 8, 107], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 243, 22]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.574, 21, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 217, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.123, 15, 107], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.296, 247, 22]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.125, 30, 129], 'true,false': [0.0, 0, 0], 'false': [6.91e-08, 224, 0]}]]
[{'': [0.08316802221781847, -2.230058369809838e-16], 'true': [4.40646657835721e-15, -1.2810265668751807e-17], 'true,true': [4.40646657835721e-15, nan], 'true,false': [-1.2810265668751807e-17, nan], 'true,false,true': [-1.2810265668751807e-17, nan]}, {'': [0.08296145228413639, -6.344131569286608e-17], 'true': [0.08296145228413639, nan], 'true,true': [-1.7625866313428842e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.057249377286753104, -8.710980654751228e-17], 'true': [0.057249377286753104, nan], 'true,true': [0.057249377286753104, nan], 'true,true,true': [0.057249377286753104, nan]}, {'': [0.03978078282451808, -6.858520615444982e-17], 'true': [1.3494803896218957e-15, 3.0839528461809905e-17], 'true,false': [3.0839528461809905e-17, nan]}, {'': [0.029830009253986805, 1.5379712895240264e-17], 'true': [0.029830009253986805, nan], 'true,true': [6.885104028683142e-16, -2.172175482962263e-17], 'true,true,false': [-2.172175482962263e-17, nan]}, {'': [0.02168249357650294, 3.221823679304376e-17], 'true': [0.02168249357650294, nan], 'true,true': [0.02168249357650294, nan]}, {'': [0.009384632511169283, 0.007524730251839418], 'true': [0.009384632511169283, nan], 'true,true': [0.009384632511169283, nan]}, {'': [0.01652355188807356, -3.6836892982954503e-17], 'true': [0.01652355188807356, nan], 'true,true': [0.01652355188807356, nan]}, {'': [0.015206809373406521, 0.006241651189998601], 'true': [0.015206809373406521, nan], 'true,true': [0.015206809373406521, nan]}, {'': [0.015562270935924338, 2.1312316990572203e-17], 'true': [0.015562270935924338, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1418510649004882;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.11231637819360676;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.10159632948783653;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716015005;  // std dev = 9.88e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.2648465602210406;  // std dev = 0.141, 74.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 6.32e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2605115888677739;  // std dev = 0.061, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09787834132714526;  // std dev = 0.084, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2135284966404351;  // std dev = 0.053, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09726945066256239;  // std dev = 0.064, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109144;  // std dev = 6.32e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17986116059262605;  // std dev = 0.047, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08631767401143706;  // std dev = 0.061, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333663;  // std dev = 1.28e-07, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15484046794737819;  // std dev = 0.042, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07780623979596724;  // std dev = 0.056, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06842697784420261;  // std dev = 6.66e-08, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13259253632971857;  // std dev = 0.283, 131.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
%   | else return -0.07159068417275899;  // std dev = 0.049, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06419184008202626;  // std dev = 1.05e-08, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.348 seconds
Total inference time: 0.84 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065126
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.941 seconds
Refined model CLL: -0.065126


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.853 seconds
Total inference time: 0.84 seconds
AUC ROC: 1.0
Total revision time: 4.853
Best scored revision CLL: -0.065126


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064111, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.853, 'Inference time': 0.84, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076244, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.515, 'Inference time': 0.939}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048757;  // std dev = 2.23e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4737943281337169;  // std dev = 3.251, 221.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360644;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43747483777298163;  // std dev = 3.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.16889184807014893;  // std dev = 4.93e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 7.60e-08, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3342797070009116;  // std dev = 1.44e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14649085877787282;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.72e-07, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2042657151414875;  // std dev = 0.142, 229.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.181740668520588;  // std dev = 0.123, 178.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=157 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0508636501295461;  // std dev = 0.091, 386.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=37 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16130758204839815;  // std dev = 1.769, 219.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07516371796341226;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12048068737866761;  // std dev = 0.129, 182.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=157 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.047883115638272605;  // std dev = 1.662, 414.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11333999544540593;  // std dev = 0.125, 233.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=194 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06704487552705284;  // std dev = 1.28e-07, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076579
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.837 seconds
Total inference time: 0.919 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083562
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.224 seconds
Parameter learned model CLL: -0.083562


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.58e-08, 29, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.23e-07, 367, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false,true': [0.0, 19, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 373, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.251, 27, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 371, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.95e-07, 0, 194], 'true,false,true': [4.93e-09, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 357, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.44e-08, 0, 194], 'true,true,false,true': [0.0, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.72e-07, 349, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.142, 35, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.19e-07, 368, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.123, 21, 157], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 349, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.769, 25, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 385, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.129, 25, 157], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.662, 377, 37]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.125, 39, 194], 'true,false': [0.0, 0, 0], 'false': [1.28e-07, 299, 0]}]]
[{'': [0.1131331818456089, 1.3552586240655862e-16], 'true': [6.15315358802561e-15, 2.2970131543968756e-17], 'true,true': [6.15315358802561e-15, nan], 'true,false': [2.2970131543968756e-17, nan], 'true,false,true': [2.2970131543968756e-17, nan]}, {'': [0.05799964039204055, -1.1905876939679963e-16], 'true': [0.05799964039204055, nan], 'true,true': [-3.516087764586063e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.04781028619552264, -2.8728142955260117e-17], 'true': [0.04781028619552264, nan], 'true,true': [0.04781028619552264, nan], 'true,true,true': [0.04781028619552264, nan]}, {'': [0.052107552190718213, 1.617131576484822e-17], 'true': [8.057701127176394e-16, 2.2204460492503132e-17], 'true,false': [2.2204460492503132e-17, nan]}, {'': [0.028093805536743705, 8.52549485958573e-17], 'true': [0.028093805536743705, nan], 'true,true': [2.1975548528662893e-16, -1.0408340855860843e-17], 'true,true,false': [-1.0408340855860843e-17, nan]}, {'': [0.020050468322155623, 3.8616453030440226e-17], 'true': [0.020050468322155623, nan], 'true,true': [0.020050468322155623, nan]}, {'': [0.015065139233110867, 0.008263824501291015], 'true': [0.015065139233110867, nan], 'true,true': [0.015065139233110867, nan]}, {'': [0.014287344636553444, -5.536696642286495e-17], 'true': [0.014287344636553444, nan], 'true,true': [0.014287344636553444, nan]}, {'': [0.01676403427628513, 0.0066702088729290706], 'true': [0.01676403427628513, nan], 'true,true': [0.01676403427628513, nan]}, {'': [0.015728737036111547, 5.49541831587034e-17], 'true': [0.015728737036111547, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.11231637819360646;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783642;  // std dev = 2.98e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716015033;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3207118471601503;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | | else return -0.09269127618926093;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.72e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 2.31e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07877675473109144;  // std dev = 3.65e-08, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.177096497745278;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07324622576333703;  // std dev = 9.19e-08, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367153;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420318;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13000301243043447;  // std dev = 0.392, 198.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=194 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.06419184008202583;  // std dev = 1.45e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063445
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.574 seconds
Total inference time: 0.834 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.106 seconds
Refined model CLL: -0.064372


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063445
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.741 seconds
Total inference time: 0.834 seconds
AUC ROC: 1.0
Total revision time: 5.741
Best scored revision CLL: -0.064372


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063445, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.741, 'Inference time': 0.834, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076579, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.837, 'Inference time': 0.919}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2.83e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839124;  // std dev = 4.59e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 447.000 (wgt'ed) examples reached here.  /* #neg=447 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4641164520378309;  // std dev = 3.972, 300.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936058;  // std dev = 0.000, 545.000 (wgt'ed) examples reached here.  /* #neg=545 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43985789556165883;  // std dev = 4.04e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.16753773955145873;  // std dev = 5.59e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783572;  // std dev = 2.76e-07, 451.000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33590503005499334;  // std dev = 1.79e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14545318677451563;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926087;  // std dev = 1.60e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19757376778170974;  // std dev = 0.149, 313.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.46e-07, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17729498274605185;  // std dev = 0.130, 244.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=211 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05397477880599287;  // std dev = 0.088, 548.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=48 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1585282101850624;  // std dev = 2.167, 297.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0749477361910809;  // std dev = 4.71e-08, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12416890119600263;  // std dev = 0.128, 244.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=211 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04738271559373791;  // std dev = 1.902, 547.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=48 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10392034860823458;  // std dev = 0.135, 324.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=259 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0668952396624471;  // std dev = 0.000, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0762
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.396 seconds
Total inference time: 0.956 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083413
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.427 seconds
Parameter learned model CLL: -0.083413


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.33e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.83e-07, 469, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false,true': [4.59e-08, 48, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 447, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.972, 41, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 545, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.04e-07, 0, 259], 'true,false,true': [5.59e-09, 47, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.76e-07, 451, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.79e-08, 0, 259], 'true,true,false,true': [0.0, 51, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.6e-07, 478, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.149, 54, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 494, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.13, 33, 211], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 500, 48]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.167, 38, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 476, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.128, 33, 211], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.902, 499, 48]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.135, 65, 259], 'true,false': [0.0, 0, 0], 'false': [0.0, 460, 0]}]]
[{'': [0.10257545224755521, 1.7043935559277457e-16], 'true': [4.499189523731908e-15, 3.2653618371328135e-17], 'true,true': [4.499189523731908e-15, nan], 'true,false': [3.2653618371328135e-17, nan], 'true,false,true': [3.2653618371328135e-17, nan]}, {'': [0.09416584921820832, -1.212055561559455e-16], 'true': [0.09416584921820832, nan], 'true,true': [-4.499189523731908e-15, 4.394632805807911e-17], 'true,true,false': [4.394632805807911e-17, nan]}, {'': [0.05259948694406873, -1.6296851737616978e-18], 'true': [0.05259948694406873, nan], 'true,true': [0.05259948694406873, nan], 'true,true,true': [0.05259948694406873, nan]}, {'': [0.047962090294444704, 1.693643993219751e-16], 'true': [6.309838966209384e-16, 3.307047307394083e-17], 'true,false': [3.307047307394083e-17, nan]}, {'': [0.03184808559832232, 5.388530161360592e-17], 'true': [0.03184808559832232, nan], 'true,true': [3.2920898954135914e-16, -1.7415263131375004e-17], 'true,true,false': [-1.7415263131375004e-17, nan]}, {'': [0.022139313330152777, 4.315036856842714e-17], 'true': [0.022139313330152777, nan], 'true,true': [0.022139313330152777, nan]}, {'': [0.01696441846940831, 0.007828291491896684], 'true': [0.01696441846940831, nan], 'true,true': [0.01696441846940831, nan]}, {'': [0.01580997924520948, 4.664802624475448e-18], 'true': [0.01580997924520948, nan], 'true,true': [0.01580997924520948, nan]}, {'': [0.016492405774210524, 0.0066137835096764875], 'true': [0.016492405774210524, nan], 'true,true': [0.016492405774210524, nan]}, {'': [0.0182877595322312, -1.9308226515220114e-18], 'true': [0.0182877595322312, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1418510649004873;  // std dev = 2.67e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.1123163781936059;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.10159632948783548;  // std dev = 3.36e-07, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601502;  // std dev = 1.46e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926083;  // std dev = 1.69e-07, 449.000 (wgt'ed) examples reached here.  /* #neg=449 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.08518475138839679;  // std dev = 1.41e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.07877675473109193;  // std dev = 1.55e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4.21e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333766;  // std dev = 0.000, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420347;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12879127026879972;  // std dev = 0.517, 266.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=259 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06419184008202539;  // std dev = 2.45e-07, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.793 seconds
Total inference time: 0.816 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064375
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.165 seconds
Refined model CLL: -0.064375


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.781 seconds
Total inference time: 0.816 seconds
AUC ROC: 1.0
Total revision time: 6.781
Best scored revision CLL: -0.064375


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063447, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.781, 'Inference time': 0.816, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0762, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.396, 'Inference time': 0.956}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048865;  // std dev = 0.000, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 549.000 (wgt'ed) examples reached here.  /* #neg=549 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.48036644931467853;  // std dev = 4.028, 365.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360568;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4358581706460549;  // std dev = 5.26e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.16981636808290118;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783513;  // std dev = 4.25e-07, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33317784331659483;  // std dev = 3.25e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14719839632380377;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926146;  // std dev = 0.000, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20569776842772858;  // std dev = 0.139, 380.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 577.000 (wgt'ed) examples reached here.  /* #neg=577 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1704859518410386;  // std dev = 0.134, 310.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.053114836778716916;  // std dev = 0.091, 632.000 (wgt'ed) examples reached here.  /* #neg=573 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1489646616615111;  // std dev = 2.586, 381.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.075007378261318;  // std dev = 0.000, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1243968633882189;  // std dev = 0.128, 306.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046355940815256784;  // std dev = 2.076, 665.000 (wgt'ed) examples reached here.  /* #neg=606 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10849348538690944;  // std dev = 0.132, 396.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=324 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06700937644085471;  // std dev = 0.000, 568.000 (wgt'ed) examples reached here.  /* #neg=568 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076386
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.71 seconds
Total inference time: 0.896 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083407
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.618 seconds
Parameter learned model CLL: -0.083407


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.87e-08, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.47e-08, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 633, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false,true': [0.0, 46, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 549, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.028, 41, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 596, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [5.26e-07, 0, 324], 'true,false,true': [0.0, 56, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.25e-07, 602, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.25e-08, 0, 324], 'true,true,false,true': [4.47e-08, 43, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 603, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.139, 56, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 577, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.134, 45, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 573, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.586, 57, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 594, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.128, 41, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.076, 606, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.132, 72, 324], 'true,false': [0.0, 0, 0], 'false': [0.0, 568, 0]}]]
[{'': [0.1034382911744867, -3.9568138128820744e-16], 'true': [3.333410365294297e-15, 4.6474452193611206e-17], 'true,true': [3.333410365294297e-15, nan], 'true,false': [4.6474452193611206e-17, nan], 'true,false,true': [4.6474452193611206e-17, nan]}, {'': [0.07771924457107834, -1.7472362354756562e-16], 'true': [0.07771924457107834, nan], 'true,true': [-5.000115547941446e-15, -3.137586808723268e-17], 'true,true,false': [-3.137586808723268e-17, nan]}, {'': [0.04445120461404856, -5.960928991276008e-18], 'true': [0.04445120461404856, nan], 'true,true': [0.04445120461404856, nan], 'true,true,true': [0.04445120461404856, nan]}, {'': [0.04609400859217656, 2.9950202524771664e-16], 'true': [8.552829226741946e-16, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.02386955781099585, -3.387745216103297e-17], 'true': [0.02386955781099585, nan], 'true,true': [1.052655904829778e-15, 4.6474452193611206e-17], 'true,true,false': [4.6474452193611206e-17, nan]}, {'': [0.01943868382881487, 4.002190452721535e-17], 'true': [0.01943868382881487, nan], 'true,true': [0.01943868382881487, nan]}, {'': [0.017956238971310694, 0.008206037465760518], 'true': [0.017956238971310694, nan], 'true,true': [0.017956238971310694, nan]}, {'': [0.01755343044698368, -4.5605120876858284e-17], 'true': [0.01755343044698368, nan], 'true,true': [0.01755343044698368, nan]}, {'': [0.016402311854205258, 0.006481458331144406], 'true': [0.016402311854205258, nan], 'true,true': [0.016402311854205258, nan]}, {'': [0.017396413347456507, -6.489331763654084e-17], 'true': [0.017396413347456507, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.1418510649004886;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5865649547912833;  // std dev = 0.308, 178.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=150 */
%   | | else return 0.5987708335339067;  // std dev = 0.296, 203.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=174 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5863090644136776;  // std dev = 0.027, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.2061202881503385;  // std dev = 0.008, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.11231637819360565;  // std dev = 0.000, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4408838487865358;  // std dev = 0.027, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.17420278204328704;  // std dev = 0.006, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783508;  // std dev = 4.39e-07, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3366060477135653;  // std dev = 0.024, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.15070626816792726;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926139;  // std dev = 0.000, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26599092655802004;  // std dev = 0.021, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1325599014074036;  // std dev = 0.005, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 583.000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21737182959068313;  // std dev = 0.019, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11786988951707625;  // std dev = 0.005, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109239;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18266146355557783;  // std dev = 0.016, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10613397582896399;  // std dev = 0.004, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333649;  // std dev = 2.61e-07, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1569525952239282;  // std dev = 0.015, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09666327735806898;  // std dev = 0.004, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420368;  // std dev = 0.000, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13728430105890096;  // std dev = 0.013, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08844699371200254;  // std dev = 0.004, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06419184008202611;  // std dev = 7.45e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06419184008202523;  // std dev = 2.48e-07, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064534
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.173 seconds
Total inference time: 0.811 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066155
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.477 seconds
Refined model CLL: -0.066155


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064534
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.978000000000001 seconds
Total inference time: 0.811 seconds
AUC ROC: 1.0
Total revision time: 7.978000000000001
Best scored revision CLL: -0.066155


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064534, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.978000000000001, 'Inference time': 0.811, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076386, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.71, 'Inference time': 0.896}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4682773739280374;  // std dev = 1.525, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6.50e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4388329734082058;  // std dev = 1.12e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.1681188615796305;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3352058340653699;  // std dev = 9.86e-09, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1458987085563667;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 1.05e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22925032518621774;  // std dev = 0.113, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19573805292655125;  // std dev = 0.098, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07563490745596436;  // std dev = 0.031, 96.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=1 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.157725266126728;  // std dev = 0.719, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07345978434004569;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.14070288282336735;  // std dev = 0.097, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06470455681341014;  // std dev = 0.276, 71.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11575318362038675;  // std dev = 0.111, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06459251637059121;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098887
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.876 seconds
Total inference time: 0.923 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073554
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.799 seconds
Parameter learned model CLL: -0.073554


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.94e-08, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.525, 6, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.5e-08, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.12e-07, 0, 40], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.37e-08, 87, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [9.86e-09, 0, 40], 'true,true,false,true': [7.45e-09, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.113, 4, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 73, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.098, 3, 39], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.031, 95, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.719, 4, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 82, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.097, 3, 39], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.276, 70, 1]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.111, 4, 40], 'true,false': [0.0, 0, 0], 'false': [0.0, 74, 0]}]]
[{'': [0.045351473922903854, 7.216449660063518e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,true': [1.5099033134902129e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04633119604965933, -3.1273888017610045e-17], 'true': [0.04633119604965933, nan], 'true,true': [-8.881784197001252e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.05056336575040404, 5.208453695772339e-17], 'true': [0.05056336575040404, nan], 'true,true': [0.05056336575040404, nan], 'true,true,true': [0.05056336575040404, nan]}, {'': [0.008765985246760566, 3.317907889684376e-17], 'true': [3.108624468950438e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.026252731296552475, 1.50030138462859e-18], 'true': [0.026252731296552475, nan], 'true,true': [1.1102230246251565e-16, 9.25185853854297e-18], 'true,true,false': [9.25185853854297e-18, nan]}, {'': [0.012808560556611271, 6.083413833562501e-18], 'true': [0.012808560556611271, nan], 'true,true': [0.012808560556611271, nan]}, {'': [0.009549113252932824, 0.0009377644085213528], 'true': [0.009549113252932824, nan], 'true,true': [0.009549113252932824, nan]}, {'': [0.01173804523805335, -1.9631992508615572e-17], 'true': [0.01173804523805335, nan], 'true,true': [0.01173804523805335, nan]}, {'': [0.009412792326817349, 0.0010697948315806138], 'true': [0.009412792326817349, nan], 'true,true': [0.009412792326817349, nan]}, {'': [0.012297267079201262, -7.50150692314295e-18], 'true': [0.012297267079201262, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.6544797160002354;  // std dev = 0.225, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4683792439352894;  // std dev = 0.246, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.5713524741766011;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else return -0.11231637819360624;  // std dev = 5.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4332099678445963;  // std dev = 0.029, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.3249424303075903;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783615;  // std dev = 5.67e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.30172295582497577;  // std dev = 0.139, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.3044527680044194;  // std dev = 0.115, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26790694994571457;  // std dev = 0.025, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.31845912403128696;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839679;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.22290075123039177;  // std dev = 1.05e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.19696080379187753;  // std dev = 0.093, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else return -0.07505234107724618;  // std dev = 0.300, 81.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=1 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18657603583869986;  // std dev = 0.051, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.2946769494222623;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07349944566862918;  // std dev = 4.65e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.13515641089294894;  // std dev = 0.096, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.1420924622865653;  // std dev = 0.078, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else return -0.06519504140578886;  // std dev = 0.271, 79.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.14287512906625296;  // std dev = 0.073, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.26545578143658094;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0645956837038825;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08996
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.903 seconds
Total inference time: 0.892 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071236
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.711 seconds
Refined model CLL: -0.071236


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08996
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.289 seconds
Total inference time: 0.892 seconds
AUC ROC: 1.0
Total revision time: 3.289
Best scored revision CLL: -0.071236


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:43
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.08996, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.289, 'Inference time': 0.892, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.098887, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.876, 'Inference time': 0.923}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048816;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109537;  // std dev = 2.98e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.509319346060774;  // std dev = 1.578, 87.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 8.43e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42875275547832425;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.17393721836144957;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878365;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3283417983131543;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15034297605944943;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926074;  // std dev = 7.45e-08, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2097265491191081;  // std dev = 0.132, 93.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 6.50e-08, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19942228096956077;  // std dev = 0.090, 84.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=79 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07453976578450075;  // std dev = 0.035, 142.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15292871811625638;  // std dev = 1.075, 90.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0735343582820113;  // std dev = 8.02e-08, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1404523407236409;  // std dev = 0.097, 85.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=79 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06497935547884177;  // std dev = 0.390, 150.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1321066319445292;  // std dev = 0.082, 85.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06463759061259697;  // std dev = 2.36e-08, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.244 seconds
Total inference time: 0.959 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073035
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.05 seconds
Parameter learned model CLL: -0.073035


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 161, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [2.98e-08, 0, 81], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 163, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.578, 6, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.43e-08, 156, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 174, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-08, 157, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.132, 12, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.5e-08, 154, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.09, 5, 79], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.035, 140, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.075, 9, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.02e-08, 162, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.097, 6, 79], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.39, 148, 2]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.082, 4, 81], 'true,false': [0.0, 0, 0], 'false': [2.36e-08, 158, 0]}]]
[{'': [0.05475932936722547, -1.5170749404815803e-16], 'true': [-7.894919286223335e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan], 'true,true': [-7.894919286223335e-16, nan]}, {'': [0.045838135164233344, 0.0], 'true': [0.045838135164233344, nan], 'true,true': [7.894919286223335e-16, -2.3129646346357427e-18], 'true,true,false': [-2.3129646346357427e-18, nan]}, {'': [0.028624516568095063, 4.554761126667309e-17], 'true': [0.028624516568095063, nan], 'true,true': [0.028624516568095063, nan], 'true,true,true': [0.028624516568095063, nan]}, {'': [0.019890516204655165, -7.78432235656719e-17], 'true': [-1.5351231945434262e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.016777101910324946, 3.535742116640626e-17], 'true': [0.016777101910324946, nan], 'true,true': [-1.0965165675310187e-16, -3.96508223080413e-18], 'true,true,false': [-3.96508223080413e-18, nan]}, {'': [0.017313456188418314, 2.739511359464672e-17], 'true': [0.017313456188418314, nan], 'true,true': [0.017313456188418314, nan]}, {'': [0.008089430188793208, 0.0012566452733473127], 'true': [0.008089430188793208, nan], 'true,true': [0.008089430188793208, nan]}, {'': [0.012844333815389368, 3.974872557299943e-17], 'true': [0.012844333815389368, nan], 'true,true': [0.012844333815389368, nan]}, {'': [0.009369883873451995, 0.0010129343443684392], 'true': [0.009369883873451995, nan], 'true,true': [0.009369883873451995, nan]}, {'': [0.0067753840024919396, 3.513364001978344e-18], 'true': [0.0067753840024919396, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048818;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6305346700278655;  // std dev = 0.259, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else return 0.6849869611603693;  // std dev = 0.167, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5694653077862486;  // std dev = 0.059, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.21873992823049293;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360622;  // std dev = 9.66e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42807896899159764;  // std dev = 0.059, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.18284957168643776;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783646;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, B), movie(D, A) )
%   | | then return 0.32789972440149107;  // std dev = 0.053, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.15709668994229045;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926078;  // std dev = 6.99e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2600804845198472;  // std dev = 0.047, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.13611231790357894;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839678;  // std dev = 7.15e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21320599377425414;  // std dev = 0.040, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.12204826426741444;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07541197141527986;  // std dev = 0.412, 174.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18079275598408812;  // std dev = 0.075, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1094472584650299;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07347495957782965;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.151160843083814;  // std dev = 0.043, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return 0.14615019981297833;  // std dev = 0.036, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else return -0.06539057503456899;  // std dev = 0.373, 164.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.14163551030438792;  // std dev = 0.071, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.13099028665547702;  // std dev = 0.030, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | else return -0.11339138979786786;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06456362591941496;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073214
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.222 seconds
Total inference time: 0.9 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065627
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.933 seconds
Refined model CLL: -0.065627


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073214
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.449 seconds
Total inference time: 0.9 seconds
AUC ROC: 1.0
Total revision time: 4.449
Best scored revision CLL: -0.065627


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073214, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.449, 'Inference time': 0.9, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099796, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.244, 'Inference time': 0.959}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4866343822671766;  // std dev = 2.366, 136.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360683;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4343175991863696;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.17070184320884474;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33212839325467775;  // std dev = 2.27e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14787534564198032;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 6.66e-08, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22247733046096865;  // std dev = 0.119, 136.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18157419200253413;  // std dev = 0.117, 131.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=117 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07249531675863127;  // std dev = 0.045, 227.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14821723664761285;  // std dev = 1.453, 139.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07367376207200661;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.14346496788108362;  // std dev = 0.097, 126.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=117 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0629030165314174;  // std dev = 0.624, 219.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10728630552626256;  // std dev = 0.123, 140.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=122 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06487872104195208;  // std dev = 8.23e-08, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.446 seconds
Total inference time: 0.971 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073986
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.191 seconds
Parameter learned model CLL: -0.073986


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.14e-08, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.366, 14, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 122], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 209, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.27e-08, 0, 122], 'true,true,false,true': [5.27e-09, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 241, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.119, 14, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 215, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.117, 14, 117], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.045, 222, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.453, 17, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 208, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.097, 9, 117], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.624, 214, 5]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.123, 18, 122], 'true,false': [0.0, 0, 0], 'false': [8.23e-08, 212, 0]}]]
[{'': [0.051319031308218625, -1.4924309511354563e-16], 'true': [3.843919718046444e-15, -7.93016446160826e-18], 'true,true': [3.843919718046444e-15, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.03189483197781312, -6.006124559447569e-17], 'true': [0.03189483197781312, nan], 'true,true': [-1.3395477805313363e-15, -2.3129646346357427e-18], 'true,true,false': [-2.3129646346357427e-18, nan]}, {'': [0.041167116298295114, -9.026203452237045e-17], 'true': [0.041167116298295114, nan], 'true,true': [0.041167116298295114, nan], 'true,true,true': [0.041167116298295114, nan]}, {'': [0.029844900957338067, -8.711797896580176e-17], 'true': [-1.3395477805313363e-15, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan]}, {'': [0.014741748214646333, 1.842693816805239e-17], 'true': [0.014741748214646333, nan], 'true,true': [5.241708706426968e-16, 3.0839528461809902e-18], 'true,true,false': [3.0839528461809902e-18, nan]}, {'': [0.014272833604078742, 3.0982968129074136e-17], 'true': [0.014272833604078742, nan], 'true,true': [0.014272833604078742, nan]}, {'': [0.013759264491470361, 0.0019825093669133967], 'true': [0.013759264491470361, nan], 'true,true': [0.013759264491470361, nan]}, {'': [0.015181338928485548, -1.6012832085939756e-17], 'true': [0.015181338928485548, nan], 'true,true': [0.015181338928485548, nan]}, {'': [0.0094139893399804, 0.001776277776177502], 'true': [0.0094139893399804, nan], 'true,true': [0.0094139893399804, nan]}, {'': [0.015234726303128587, 3.194509646327101e-17], 'true': [0.015234726303128587, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048838;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5809622563520453;  // std dev = 0.313, 61.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=51 */
%   | | else return 0.5887122853108171;  // std dev = 0.306, 84.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5881631879111573;  // std dev = 0.010, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.20510533190053254;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360676;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4423120863726736;  // std dev = 0.010, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1735285695740695;  // std dev = 0.002, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.10159632948783659;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3375806530479331;  // std dev = 0.009, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.15011412346307906;  // std dev = 0.001, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892605;  // std dev = 7.60e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2666523794896309;  // std dev = 0.008, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.13196373249297128;  // std dev = 0.002, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 9.06e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2178363897721695;  // std dev = 0.007, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else return -0.11751552710055398;  // std dev = 0.001, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07290699079306102;  // std dev = 0.658, 246.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18494584999569355;  // std dev = 0.104, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10575972987374883;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07364567192145216;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15694973172784202;  // std dev = 0.005, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else return -0.0962413060775117;  // std dev = 0.000778, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06369878242958123;  // std dev = 0.594, 264.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.14024949429224526;  // std dev = 0.159, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08811398745349291;  // std dev = 0.001, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06480720721900292;  // std dev = 4.47e-08, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071392
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.43 seconds
Total inference time: 0.948 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06518
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.024 seconds
Refined model CLL: -0.06518


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071392
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.091 seconds
Total inference time: 0.948 seconds
AUC ROC: 1.0
Total revision time: 5.091
Best scored revision CLL: -0.06518


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071392, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.091, 'Inference time': 0.948, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.098605, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.446, 'Inference time': 0.971}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1.63e-07, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839194;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.48239563729930024;  // std dev = 2.818, 183.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360699;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4353592871866725;  // std dev = 4.58e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.1701026322075472;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783663;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3328379418363524;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1474173219117551;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926044;  // std dev = 1.60e-07, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23646351952233022;  // std dev = 0.099, 175.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.12e-07, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1908318105053446;  // std dev = 0.101, 168.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=155 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07173828249010439;  // std dev = 0.047, 317.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16561978561000468;  // std dev = 1.258, 175.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0737254432637113;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1487321835508142;  // std dev = 0.077, 162.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=155 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06335697726623316;  // std dev = 0.787, 342.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11614290281567713;  // std dev = 0.107, 179.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=163 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06489397455119923;  // std dev = 1.01e-07, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099994
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.581 seconds
Total inference time: 0.983 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074397
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.247 seconds
Parameter learned model CLL: -0.074397


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [8.02e-08, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.63e-07, 321, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 273, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.818, 20, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 285, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.58e-07, 0, 163], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 310, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false,true': [0.0, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.6e-07, 329, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.099, 12, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.12e-07, 326, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.101, 13, 155], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.047, 309, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.258, 12, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 306, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.077, 7, 155], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.787, 334, 8]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.107, 16, 163], 'true,false': [0.0, 0, 0], 'false': [1.01e-07, 319, 0]}]]
[{'': [0.06386938775510828, 8.300732894393693e-17], 'true': [6.3643705166242106e-15, -1.1564823173178714e-17], 'true,true': [6.3643705166242106e-15, nan], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-1.1564823173178714e-17, nan]}, {'': [0.03183571055211886, -7.1574817704772e-17], 'true': [0.03183571055211886, nan], 'true,true': [-2.7898610483832155e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.043396611211246126, -1.0439991950861122e-16], 'true': [0.043396611211246126, nan], 'true,true': [0.043396611211246126, nan], 'true,true,true': [0.043396611211246126, nan]}, {'': [0.02341350431661358, -5.1571650176136306e-17], 'true': [1.2859515769891384e-15, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan]}, {'': [0.018773523569084353, 7.828928319545177e-17], 'true': [0.018773523569084353, nan], 'true,true': [-4.795073676908651e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.009877875402932038, 3.8142631520864275e-17], 'true': [0.009877875402932038, nan], 'true,true': [0.009877875402932038, nan]}, {'': [0.010262210738516742, 0.0022463937477544783], 'true': [0.010262210738516742, nan], 'true,true': [0.010262210738516742, nan]}, {'': [0.009043049372491058, -5.805087710458335e-17], 'true': [0.009043049372491058, nan], 'true,true': [0.009043049372491058, nan]}, {'': [0.005895312090575531, 0.0018105301856949372], 'true': [0.005895312090575531, nan], 'true,true': [0.005895312090575531, nan]}, {'': [0.011375746608657122, 3.2018971243107964e-17], 'true': [0.011375746608657122, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048777;  // std dev = 1.30e-07, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839202;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360667;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783642;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601501;  // std dev = 9.88e-08, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.28860286670582724;  // std dev = 0.111, 103.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926049;  // std dev = 1.53e-07, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25875685120560227;  // std dev = 0.039, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10693270748089578;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839678;  // std dev = 9.88e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21234610060540943;  // std dev = 0.033, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | else return -0.10275594146747376;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then return -0.07877675473109143;  // std dev = 2.98e-08, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20916415118011966;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09720432464772216;  // std dev = 0.321, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.08837711192082648;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17928314765561193;  // std dev = 0.045, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09122281186229328;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.0732418106619104;  // std dev = 0.000915, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15414475466788938;  // std dev = 0.026, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | else return -0.08538780910809472;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06290427531222545;  // std dev = 0.637, 330.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13671499873261297;  // std dev = 0.098, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07267861056186699;  // std dev = 0.053, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06452466177600878;  // std dev = 1.10e-07, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068161
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.506 seconds
Total inference time: 0.91 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064423
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.242 seconds
Refined model CLL: -0.064423


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068161
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.5760000000000005 seconds
Total inference time: 0.91 seconds
AUC ROC: 1.0
Total revision time: 5.5760000000000005
Best scored revision CLL: -0.064423


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:05:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068161, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.5760000000000005, 'Inference time': 0.91, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099994, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.581, 'Inference time': 0.983}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 2.46e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.49037076449549705;  // std dev = 2.975, 226.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360633;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.433399849343322;  // std dev = 4.92e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.17123142662948923;  // std dev = 4.17e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783574;  // std dev = 2.63e-07, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33150346280013765;  // std dev = 3.35e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1482798851330796;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.99e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2211508195494956;  // std dev = 0.121, 228.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.30e-07, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19644217745141263;  // std dev = 0.095, 208.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07121954159828624;  // std dev = 0.047, 398.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1678564410044943;  // std dev = 1.374, 218.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07376087591468307;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1333595945176428;  // std dev = 0.105, 212.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0629515394540548;  // std dev = 0.872, 429.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10694189702604018;  // std dev = 0.123, 231.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=204 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06494792696252209;  // std dev = 1.27e-07, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099341
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.923 seconds
Total inference time: 1.101 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.494 seconds
Parameter learned model CLL: -0.074406


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.46e-07, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 204], 'true,true,false,true': [0.0, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 400, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.975, 22, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 380, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.92e-07, 0, 204], 'true,false,true': [4.17e-09, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.63e-07, 431, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.35e-08, 0, 204], 'true,true,false,true': [0.0, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.99e-07, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.121, 24, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.3e-07, 396, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.095, 14, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.047, 388, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.374, 14, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 399, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.105, 18, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.872, 419, 10]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.123, 27, 204], 'true,false': [0.0, 0, 0], 'false': [1.27e-07, 397, 0]}]]
[{'': [0.07794244806853698, 1.668401451370401e-16], 'true': [5.712206307091002e-15, 0.0], 'true,true': [5.712206307091002e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05069016656557111, -1.2656542480726783e-16], 'true': [0.05069016656557111, nan], 'true,true': [-3.692035783851501e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.039172055995986034, -2.5710427938687835e-17], 'true': [0.039172055995986034, nan], 'true,true': [0.039172055995986034, nan], 'true,true,true': [0.039172055995986034, nan]}, {'': [0.024653921288080676, 1.6073762583900178e-16], 'true': [1.1842378929335002e-15, 1.734723475976807e-17], 'true,false': [1.734723475976807e-17, nan]}, {'': [0.016344998410936236, 1.0456068697527929e-16], 'true': [0.016344998410936236, nan], 'true,true': [1.1145768404080003e-15, -6.530723674265627e-18], 'true,true,false': [-6.530723674265627e-18, nan]}, {'': [0.014549057235787163, 4.261462114722823e-17], 'true': [0.014549057235787163, nan], 'true,true': [0.014549057235787163, nan]}, {'': [0.009051749791815599, 0.0022159250489843137], 'true': [0.009051749791815599, nan], 'true,true': [0.009051749791815599, nan]}, {'': [0.008660676882447874, -5.565027692356674e-18], 'true': [0.008660676882447874, nan], 'true,true': [0.008660676882447874, nan]}, {'': [0.01108722060925879, 0.0017716481683386135], 'true': [0.01108722060925879, nan], 'true,true': [0.01108722060925879, nan]}, {'': [0.01504443912645604, 4.082936060334329e-17], 'true': [0.01504443912645604, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048743;  // std dev = 2.68e-07, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360643;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783581;  // std dev = 2.48e-07, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926065;  // std dev = 1.83e-07, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839678;  // std dev = 1.38e-07, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.209757715632535;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325361;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1520508215598105;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.07877675473109146;  // std dev = 2.10e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1772644796528989;  // std dev = 0.017, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07324622576333771;  // std dev = 0.000, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15272212029026014;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(B) )
%   | then return -0.06842697784420333;  // std dev = 0.000, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
%   | else if ( female(A) )
%   | | then return 0.15272212029025956;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11458646745455654;  // std dev = 0.205, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1342158717540442;  // std dev = 0.023, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06750434186039528;  // std dev = 0.040, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06419184008202558;  // std dev = 2.00e-07, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069232
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.789 seconds
Total inference time: 0.942 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063729
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.388 seconds
Refined model CLL: -0.063729


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069232
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.593999999999999 seconds
Total inference time: 0.942 seconds
AUC ROC: 1.0
Total revision time: 6.593999999999999
Best scored revision CLL: -0.063729


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:05:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069232, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.593999999999999, 'Inference time': 0.942, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099341, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.923, 'Inference time': 1.101}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.16e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 2.11e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.48414693648602897;  // std dev = 1.785, 75.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 9.88e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4349288288967585;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.17035000198696665;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 2.98e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3325447048600659;  // std dev = 1.44e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1476064442120113;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5.37e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23592437310227224;  // std dev = 0.100, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 6.05e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18454003786002213;  // std dev = 0.111, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.058390263819597235;  // std dev = 0.077, 128.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14392446474991194;  // std dev = 1.130, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07464218204896496;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11344353723346504;  // std dev = 0.133, 68.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05264882848539174;  // std dev = 0.830, 122.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10280967207049964;  // std dev = 0.133, 81.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06631235576176485;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079416
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.082 seconds
Total inference time: 0.74 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084947
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.785 seconds
Parameter learned model CLL: -0.084947


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [5.27e-09, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 130, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.785, 8, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.88e-08, 144, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [3.73e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-08, 106, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.44e-08, 0, 67], 'true,true,false,true': [7.45e-09, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.1, 5, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.05e-08, 121, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.111, 6, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 119, 9]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.13, 11, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.133, 10, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.83, 113, 9]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.133, 14, 67], 'true,false': [0.0, 0, 0], 'false': [0.0, 122, 0]}]]
[{'': [0.13609374999999896, 5.50523813863714e-17], 'true': [-9.544603913195376e-16, -1.2810265668751807e-17], 'true,false': [-1.2810265668751807e-17, nan], 'true,false,true': [-1.2810265668751807e-17, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.09196679314565047, 3.416070845000482e-18], 'true': [0.09196679314565047, nan], 'true,true': [3.1815346377317917e-16, 2.3129646346357427e-18], 'true,true,false': [2.3129646346357427e-18, nan]}, {'': [0.042479819195058895, 6.78469626159818e-17], 'true': [0.042479819195058895, nan], 'true,true': [0.042479819195058895, nan], 'true,true,true': [0.042479819195058895, nan]}, {'': [0.049859641464689, 8.3790416952842e-18], 'true': [-1.8558952053435452e-16, 8.540177112501205e-18], 'true,false': [8.540177112501205e-18, nan]}, {'': [0.0313757507354707, 2.4256973647272328e-17], 'true': [0.0313757507354707, nan], 'true,true': [2.1210230918211945e-16, 4.270088556250602e-18], 'true,true,false': [4.270088556250602e-18, nan]}, {'': [0.009991681016949076, 3.027880976250427e-17], 'true': [0.009991681016949076, nan], 'true,true': [0.009991681016949076, nan]}, {'': [0.01221375683610465, 0.005914980007071356], 'true': [0.01221375683610465, nan], 'true,true': [0.01221375683610465, nan]}, {'': [0.01637249402969449, -2.477357162386713e-17], 'true': [0.01637249402969449, nan], 'true,true': [0.01637249402969449, nan]}, {'': [0.017820424786195256, 0.005642082884751731], 'true': [0.017820424786195256, nan], 'true,true': [0.017820424786195256, nan]}, {'': [0.01768200149598442, -9.100188726435709e-18], 'true': [0.01768200149598442, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048766;  // std dev = 8.43e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360618;  // std dev = 9.06e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10159632948783638;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926086;  // std dev = 7.45e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839682;  // std dev = 5.58e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109164;  // std dev = 5.48e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0732462257633371;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06842697784420265;  // std dev = 4.94e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801095;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.052 seconds
Total inference time: 0.683 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.772 seconds
Refined model CLL: -0.064052


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.691 seconds
Total inference time: 0.683 seconds
AUC ROC: 1.0
Total revision time: 3.691
Best scored revision CLL: -0.064052


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.691, 'Inference time': 0.683, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079416, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.082, 'Inference time': 0.74}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4724515773746624;  // std dev = 2.724, 153.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360683;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4378053038132775;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.16870345343611734;  // std dev = 2.63e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3345050153648283;  // std dev = 1.97e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14634658703559694;  // std dev = 1.67e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926058;  // std dev = 5.77e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20690854107158665;  // std dev = 0.139, 157.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.94e-08, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.16883760239009624;  // std dev = 0.136, 139.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=118 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06212178801443035;  // std dev = 0.072, 275.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=16 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1550476033651896;  // std dev = 1.542, 154.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07438485170290893;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12975833765618974;  // std dev = 0.122, 134.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=118 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05556194134280595;  // std dev = 1.125, 274.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11002225482442059;  // std dev = 0.127, 160.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06591797929456832;  // std dev = 1.23e-07, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07886
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.572 seconds
Total inference time: 0.739 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081808
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.014 seconds
Parameter learned model CLL: -0.081808


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.16e-08, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 247, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.724, 19, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 260, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 134], 'true,false,true': [2.63e-09, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 252, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.97e-08, 0, 134], 'true,true,false,true': [1.67e-08, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 231, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.139, 23, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 251, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.136, 21, 118], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.072, 259, 16]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.542, 20, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 267, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.122, 16, 118], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.125, 258, 16]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.127, 26, 134], 'true,false': [0.0, 0, 0], 'false': [1.23e-07, 246, 0]}]]
[{'': [0.1585571372225656, -1.7249746167729704e-16], 'true': [4.772301956597688e-15, 3.027880976250427e-17], 'true,true': [4.772301956597688e-15, nan], 'true,false': [3.027880976250427e-17, nan], 'true,false,true': [3.027880976250427e-17, nan]}, {'': [0.09715549255580544, -5.753382475790285e-17], 'true': [0.09715549255580544, nan], 'true,true': [-1.908920782639075e-15, -4.270088556250602e-18], 'true,true,false': [-4.270088556250602e-18, nan]}, {'': [0.048485952800975375, -9.052587739251276e-17], 'true': [0.048485952800975375, nan], 'true,true': [0.048485952800975375, nan], 'true,true,true': [0.048485952800975375, nan]}, {'': [0.03675140756233576, -6.872809200060493e-17], 'true': [-1.5907673188658958e-16, 6.530723674265627e-18], 'true,false': [6.530723674265627e-18, nan]}, {'': [0.02310053086810892, 1.4418480839287746e-17], 'true': [0.02310053086810892, nan], 'true,true': [3.97691829716474e-16, 1.6326809185664067e-17], 'true,true,false': [1.6326809185664067e-17, nan]}, {'': [0.019366287031982503, 3.18470349693272e-17], 'true': [0.019366287031982503, nan], 'true,true': [0.019366287031982503, nan]}, {'': [0.018557062623462562, 0.005220357569806223], 'true': [0.018557062623462562, nan], 'true,true': [0.018557062623462562, nan]}, {'': [0.015449320702619652, -7.068835737313731e-17], 'true': [0.015449320702619652, nan], 'true,true': [0.015449320702619652, nan]}, {'': [0.014847817535828913, 0.00462295821064453], 'true': [0.014847817535828913, nan], 'true,true': [0.014847817535828913, nan]}, {'': [0.016141346275445355, 6.137818347521191e-17], 'true': [0.016141346275445355, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1418510649004885;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 8.43e-08, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.6255936287954711;  // std dev = 0.266, 81.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=72 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5677490688046378;  // std dev = 0.133, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.18013892060100217;  // std dev = 0.201, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360671;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42683722461878565;  // std dev = 0.132, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14616671243482296;  // std dev = 0.188, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.10159632948783655;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32708783933224295;  // std dev = 0.119, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12058177786568569;  // std dev = 0.161, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 7.60e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2595466188983153;  // std dev = 0.104, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0995343544697379;  // std dev = 0.183, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21286006356173642;  // std dev = 0.091, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10716095676461822;  // std dev = 0.134, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07877675473109144;  // std dev = 6.66e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17937934825046778;  // std dev = 0.080, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0960349672976311;  // std dev = 0.144, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333663;  // std dev = 1.30e-07, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15448052100337864;  // std dev = 0.071, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08443755574634804;  // std dev = 0.131, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06842697784420283;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13536623457770267;  // std dev = 0.063, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07973015533575173;  // std dev = 0.107, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202625;  // std dev = 2.11e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065616
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.447 seconds
Total inference time: 0.681 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065339
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.924 seconds
Refined model CLL: -0.065339


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065616
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.957000000000001 seconds
Total inference time: 0.681 seconds
AUC ROC: 1.0
Total revision time: 4.957000000000001
Best scored revision CLL: -0.065339


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065616, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.957000000000001, 'Inference time': 0.681, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07886, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.572, 'Inference time': 0.739}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 2.48e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.45676348939229033;  // std dev = 3.647, 237.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4416703333575033;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.16651473576755793;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 1.01e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33714209221099783;  // std dev = 3.96e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14466815911329792;  // std dev = 1.49e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.87e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20675401579504468;  // std dev = 0.141, 238.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17115884964758668;  // std dev = 0.136, 201.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=171 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.057768041212770446;  // std dev = 0.081, 421.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=31 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14640329235970015;  // std dev = 2.112, 240.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07468517079291814;  // std dev = 0.000, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13072753199376075;  // std dev = 0.123, 195.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=171 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05177639602941005;  // std dev = 1.556, 436.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=31 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10575299584544244;  // std dev = 0.136, 248.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06640229232698018;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079033
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.943 seconds
Total inference time: 0.742 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081479
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.396 seconds
Parameter learned model CLL: -0.081479


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.48e-07, 370, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 342, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.647, 35, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 388, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 202], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.01e-07, 358, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.96e-08, 0, 202], 'true,true,false,true': [1.49e-08, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.87e-07, 375, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.141, 36, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.17e-07, 355, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.136, 30, 171], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 390, 31]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.112, 38, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 401, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.123, 24, 171], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.556, 405, 31]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.136, 46, 202], 'true,false': [0.0, 0, 0], 'false': [0.0, 369, 0]}]]
[{'': [0.13796871798374963, 1.6563327286299634e-16], 'true': [5.768762805181012e-15, 4.163336342344337e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [4.163336342344337e-17, nan], 'true,false,true': [4.163336342344337e-17, nan]}, {'': [0.06551539233408467, -1.116715556932906e-16], 'true': [0.06551539233408467, nan], 'true,true': [-3.728590593592605e-15, -7.240584943207542e-18], 'true,true,false': [-7.240584943207542e-18, nan]}, {'': [0.05611295222379177, -2.518031602242623e-17], 'true': [0.05611295222379177, nan], 'true,true': [0.05611295222379177, nan], 'true,true,true': [0.05611295222379177, nan]}, {'': [0.04164550785036987, 2.8530871023886705e-17], 'true': [-7.386830421268368e-16, -3.7007434154171884e-18], 'true,false': [-3.7007434154171884e-18, nan]}, {'': [0.025484579953359524, 9.355479354174653e-17], 'true': [0.025484579953359524, nan], 'true,true': [1.5653045416497257e-15, 7.656710514656252e-18], 'true,true,false': [7.656710514656252e-18, nan]}, {'': [0.019931829667127265, 3.877962114183645e-17], 'true': [0.019931829667127265, nan], 'true,true': [0.019931829667127265, nan]}, {'': [0.018380503324856995, 0.006602260530611812], 'true': [0.018380503324856995, nan], 'true,true': [0.018380503324856995, nan]}, {'': [0.018589628645054968, -9.967089497881705e-18], 'true': [0.018589628645054968, nan], 'true,true': [0.018589628645054968, nan]}, {'': [0.015187722158124096, 0.005555366201798299], 'true': [0.015187722158124096, nan], 'true,true': [0.015187722158124096, nan]}, {'': [0.018385523462365477, -8.183757796694921e-17], 'true': [0.018385523462365477, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048746;  // std dev = 2.60e-07, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6390050264262546;  // std dev = 0.248, 105.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=95 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5646649944121374;  // std dev = 0.140, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.15390408888368456;  // std dev = 0.311, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360635;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42450125203501915;  // std dev = 0.139, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.14796896134788912;  // std dev = 0.287, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.1015963294878364;  // std dev = 5.58e-08, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3254880960735936;  // std dev = 0.125, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.11528830960238434;  // std dev = 0.226, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.78e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2584494544615646;  // std dev = 0.110, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10419689881244415;  // std dev = 0.207, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21208256131861664;  // std dev = 0.095, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10900504608984114;  // std dev = 0.187, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07877675473109147;  // std dev = 2.98e-08, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17880769455773668;  // std dev = 0.084, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0947537068674687;  // std dev = 0.173, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07324622576333713;  // std dev = 6.66e-08, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1540459564667939;  // std dev = 0.074, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08701682993757168;  // std dev = 0.160, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.06842697784420324;  // std dev = 0.000, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13502633286634064;  // std dev = 0.067, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07530808956066203;  // std dev = 0.151, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202584;  // std dev = 1.39e-07, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063845
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.637 seconds
Total inference time: 0.702 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06517
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.111 seconds
Refined model CLL: -0.06517


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063845
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.087 seconds
Total inference time: 0.702 seconds
AUC ROC: 1.0
Total revision time: 6.087
Best scored revision CLL: -0.06517


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:35
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063845, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.087, 'Inference time': 0.702, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079033, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.943, 'Inference time': 0.742}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004873;  // std dev = 2.56e-07, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4670599999316519;  // std dev = 3.983, 310.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360592;  // std dev = 0.000, 501.000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43913278450582627;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.16794867462951735;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878355;  // std dev = 3.31e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33541033733533737;  // std dev = 4.06e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1457682645776529;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 1.15e-07, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21200768262952097;  // std dev = 0.135, 311.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.50e-07, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17312252182258736;  // std dev = 0.132, 259.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=223 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.054308535404668214;  // std dev = 0.086, 539.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=46 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14763803175710807;  // std dev = 2.377, 317.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07492459993725782;  // std dev = 1.71e-07, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12384265991415255;  // std dev = 0.129, 258.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=223 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05043282488040454;  // std dev = 1.871, 597.000 (wgt'ed) examples reached here.  /* #neg=551 #pos=46 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11131621155429049;  // std dev = 0.129, 325.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0666857671174697;  // std dev = 1.32e-07, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07945
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.248 seconds
Total inference time: 0.746 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081647
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.415 seconds
Parameter learned model CLL: -0.081647


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.56e-07, 480, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 50, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 504, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.983, 41, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 501, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 269], 'true,false,true': [0.0, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.31e-07, 496, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [4.06e-08, 0, 269], 'true,true,false,true': [0.0, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.15e-07, 499, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.135, 42, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.5e-07, 511, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.132, 36, 223], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.086, 493, 46]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.377, 48, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.71e-07, 510, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.129, 35, 223], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.871, 551, 46]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.129, 56, 269], 'true,false': [0.0, 0, 0], 'false': [1.32e-07, 462, 0]}]]
[{'': [0.11058989711587516, 1.3692750637043598e-16], 'true': [4.226276495227362e-15, 4.2700885562506023e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [4.2700885562506023e-17, nan], 'true,false,true': [4.2700885562506023e-17, nan]}, {'': [0.09435612457283685, -1.3216940769347102e-16], 'true': [0.09435612457283685, nan], 'true,true': [-4.5432472323694135e-15, -3.3306690738754695e-17], 'true,true,false': [-3.3306690738754695e-17, nan]}, {'': [0.05116266352680807, -5.318433650898954e-18], 'true': [0.05116266352680807, nan], 'true,true': [0.05116266352680807, nan], 'true,true,true': [0.05116266352680807, nan]}, {'': [0.04452564506154272, 2.202539226272488e-16], 'true': [-2.403694756660562e-15, -2.0185873175002847e-17], 'true,false': [-2.0185873175002847e-17, nan]}, {'': [0.020899878914077026, 2.6698750091186128e-17], 'true': [0.020899878914077026, nan], 'true,true': [1.6640963699957737e-15, -2.2204460492503132e-17], 'true,true,false': [-2.2204460492503132e-17, nan]}, {'': [0.018106993687797262, 4.4322015073098223e-17], 'true': [0.018106993687797262, nan], 'true,true': [0.018106993687797262, nan]}, {'': [0.01729735502799643, 0.007443086769754333], 'true': [0.01729735502799643, nan], 'true,true': [0.01729735502799643, nan]}, {'': [0.017829388941536548, 5.747036833353752e-17], 'true': [0.017829388941536548, nan], 'true,true': [0.017829388941536548, nan]}, {'': [0.01654340033722594, 0.0058645658615318315], 'true': [0.01654340033722594, nan], 'true,true': [0.01654340033722594, nan]}, {'': [0.016672019718224344, 3.7488050182148143e-17], 'true': [0.016672019718224344, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048757;  // std dev = 1.33e-07, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360582;  // std dev = 0.000, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783556;  // std dev = 3.15e-07, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014967;  // std dev = 1.46e-07, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.2546651943173438;  // std dev = 0.151, 169.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=142 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1.15e-07, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2619050423247535;  // std dev = 0.104, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10644110946020416;  // std dev = 0.103, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.08518475138839678;  // std dev = 1.53e-07, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21451122396711014;  // std dev = 0.091, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09122221440965775;  // std dev = 0.090, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109191;  // std dev = 1.62e-07, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18058064343989752;  // std dev = 0.080, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08465397226683513;  // std dev = 0.081, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333707;  // std dev = 1.05e-07, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15538541152853766;  // std dev = 0.071, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07699453171923684;  // std dev = 0.075, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420347;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1324139661692736;  // std dev = 0.448, 274.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=269 */
%   | else return -0.06975713271818172;  // std dev = 0.083, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202548;  // std dev = 2.21e-07, 441.000 (wgt'ed) examples reached here.  /* #neg=441 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064852
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.035 seconds
Total inference time: 0.678 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064906
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.413 seconds
Refined model CLL: -0.064906


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064852
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.111000000000001 seconds
Total inference time: 0.678 seconds
AUC ROC: 1.0
Total revision time: 7.111000000000001
Best scored revision CLL: -0.064906


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064852, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.111000000000001, 'Inference time': 0.678, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07945, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.248, 'Inference time': 0.746}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048852;  // std dev = 0.000, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4736448422093689;  // std dev = 4.288, 384.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360589;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4375116251981788;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.16887086615940847;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783506;  // std dev = 4.43e-07, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33430478703090616;  // std dev = 4.36e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1464747924855285;  // std dev = 3.33e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926158;  // std dev = 0.000, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21182286243516704;  // std dev = 0.134, 389.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.63e-07, 648.000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18281408647849468;  // std dev = 0.120, 313.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05563025951155844;  // std dev = 0.085, 716.000 (wgt'ed) examples reached here.  /* #neg=657 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16269427763421343;  // std dev = 2.238, 377.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07483304149805275;  // std dev = 0.000, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13298144995184236;  // std dev = 0.113, 309.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0487123568972409;  // std dev = 2.091, 699.000 (wgt'ed) examples reached here.  /* #neg=640 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1050973182996119;  // std dev = 0.133, 408.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06671628941725301;  // std dev = 0.000, 564.000 (wgt'ed) examples reached here.  /* #neg=564 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079841
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.874 seconds
Total inference time: 0.748 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082112
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.595 seconds
Parameter learned model CLL: -0.082112


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.94e-08, 47, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 627, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 53, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 617, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.288, 47, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 616, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 337], 'true,false,true': [0.0, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.43e-07, 616, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [4.36e-08, 0, 337], 'true,true,false,true': [3.33e-08, 50, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 633, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.134, 52, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.63e-07, 648, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.12, 35, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.085, 657, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.238, 40, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 624, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.113, 31, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.091, 640, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.133, 71, 337], 'true,false': [0.0, 0, 0], 'false': [0.0, 564, 0]}]]
[{'': [0.10741509331597528, -3.3147328582109937e-16], 'true': [3.204821834882351e-15, 5.196788625904988e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [5.196788625904988e-17, nan], 'true,false,true': [5.196788625904988e-17, nan]}, {'': [0.08383120972478723, -2.677490860036034e-16], 'true': [0.08383120972478723, nan], 'true,true': [-5.144582419153248e-15, -3.561092720495785e-17], 'true,true,false': [-3.561092720495785e-17, nan]}, {'': [0.04788568526812653, -6.199946760893731e-17], 'true': [0.04788568526812653, nan], 'true,true': [0.04788568526812653, nan], 'true,true,true': [0.04788568526812653, nan]}, {'': [0.04549939468533612, 3.1864842654825923e-16], 'true': [-1.0963864171965937e-15, -1.1686558153949016e-17], 'true,false': [-1.1686558153949016e-17, nan]}, {'': [0.026005787037025736, -5.752814408800179e-17], 'true': [0.026005787037025736, nan], 'true,true': [1.8975918759171815e-15, 2.2204460492503132e-17], 'true,true,false': [2.2204460492503132e-17, nan]}, {'': [0.01793368203714713, 4.11193712824132e-17], 'true': [0.01793368203714713, nan], 'true,true': [0.01793368203714713, nan]}, {'': [0.01435336718404445, 0.007229993490344429], 'true': [0.01435336718404445, nan], 'true,true': [0.01435336718404445, nan]}, {'': [0.013283628791592646, -2.0638761355211244e-17], 'true': [0.013283628791592646, nan], 'true,true': [0.013283628791592646, nan]}, {'': [0.012783174861092563, 0.006258003964390203], 'true': [0.012783174861092563, nan], 'true,true': [0.012783174861092563, nan]}, {'': [0.017576877582170813, -2.0472197617201467e-17], 'true': [0.017576877582170813, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1418510649004885;  // std dev = 0.000, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 657.000 (wgt'ed) examples reached here.  /* #neg=657 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360635;  // std dev = 0.000, 673.000 (wgt'ed) examples reached here.  /* #neg=673 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783501;  // std dev = 4.54e-07, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926155;  // std dev = 0.000, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109252;  // std dev = 0.000, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07324622576333657;  // std dev = 2.41e-07, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420271;  // std dev = 7.45e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.06842697784420364;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12941111417983714;  // std dev = 0.554, 345.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=337 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06419184008202525;  // std dev = 2.48e-07, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063886
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.143 seconds
Total inference time: 0.697 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064194
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.436 seconds
Refined model CLL: -0.064194


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063886
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.048 seconds
Total inference time: 0.697 seconds
AUC ROC: 1.0
Total revision time: 8.048
Best scored revision CLL: -0.064194


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063886, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.048, 'Inference time': 0.697, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079841, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.874, 'Inference time': 0.748}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 2.11e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.3960330377265377;  // std dev = 2.670, 88.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 8.02e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4566949254315063;  // std dev = 5.96e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1582559053281136;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.34743111021581885;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.13829563505005105;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5.05e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20489536729967897;  // std dev = 0.150, 81.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.14e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18907913695532866;  // std dev = 0.124, 67.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0629172483592128;  // std dev = 0.074, 141.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15245392597865223;  // std dev = 1.164, 79.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07433010140880741;  // std dev = 2.79e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12943681951527258;  // std dev = 0.126, 68.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05424594314450513;  // std dev = 0.816, 129.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1192873324142195;  // std dev = 0.121, 79.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06595341024314094;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073204
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.155 seconds
Total inference time: 0.754 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.835 seconds
Parameter learned model CLL: -0.081189


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [7.45e-09, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 135, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.67, 21, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.02e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [5.96e-08, 0, 67], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [7.45e-09, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.05e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.15, 14, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 116, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.124, 8, 59], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.074, 133, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.164, 12, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.79e-08, 108, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.126, 9, 59], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.816, 121, 8]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.121, 12, 67], 'true,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}]]
[{'': [0.1429660112787675, 7.12218544099157e-17], 'true': [-9.544603913195376e-16, -1.1895246692412391e-17], 'true,false': [-1.1895246692412391e-17, nan], 'true,false,true': [-1.1895246692412391e-17, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.11108816103391964, 3.2895497025930565e-18], 'true': [0.11108816103391964, nan], 'true,true': [3.1815346377317917e-16, 3.469446951953614e-18], 'true,true,false': [3.469446951953614e-18, nan]}, {'': [0.080997040328259, 5.853903220750825e-17], 'true': [0.080997040328259, nan], 'true,true': [0.080997040328259, nan], 'true,true,true': [0.080997040328259, nan]}, {'': [0.04580987087009966, -1.2845555656819993e-17], 'true': [5.3025577295529864e-17, -1.0092936587501423e-17], 'true,false': [-1.0092936587501423e-17, nan]}, {'': [0.028580006110464053, 2.2399236461735613e-17], 'true': [0.028580006110464053, nan], 'true,true': [-3.4466625242094413e-16, 5.046468293750712e-18], 'true,true,false': [5.046468293750712e-18, nan]}, {'': [0.02241438488129804, 3.254101968728907e-17], 'true': [0.02241438488129804, nan], 'true,true': [0.02241438488129804, nan]}, {'': [0.015262797060472337, 0.0054491921533544275], 'true': [0.015262797060472337, nan], 'true,true': [0.015262797060472337, nan]}, {'': [0.017164308151239684, 7.19588997442231e-18], 'true': [0.017164308151239684, nan], 'true,true': [0.017164308151239684, nan]}, {'': [0.016001552061416877, 0.0051673905012542005], 'true': [0.016001552061416877, nan], 'true,true': [0.016001552061416877, nan]}, {'': [0.014572879196078121, -2.4781763942525817e-17], 'true': [0.014572879196078121, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.6194173272549788;  // std dev = 0.273, 76.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5799172578876628;  // std dev = 1.98e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.2104136679273543;  // std dev = 2.79e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360618;  // std dev = 9.77e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43598241497074136;  // std dev = 4.21e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1775774582840836;  // std dev = 1.83e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.10159632948783635;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3332625027295412;  // std dev = 9.19e-08, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.1531086170919618;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.23377750094787028;  // std dev = 0.196, 44.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 2.11e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2740440859332936;  // std dev = 0.081, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.17184999798290923;  // std dev = 0.076, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.0851847513883968;  // std dev = 6.58e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22302596777126293;  // std dev = 0.070, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14300234405858936;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109168;  // std dev = 4.71e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1867822421316067;  // std dev = 0.062, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1252401065353054;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07324622576333721;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1600613129571443;  // std dev = 0.055, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10442399997521559;  // std dev = 0.060, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420267;  // std dev = 5.16e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13670167631021538;  // std dev = 0.208, 68.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | else return -0.0897761241289562;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202626;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06524
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.03 seconds
Total inference time: 0.704 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067194
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.767 seconds
Refined model CLL: -0.067194


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06524
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.787 seconds
Total inference time: 0.704 seconds
AUC ROC: 1.0
Total revision time: 3.787
Best scored revision CLL: -0.067194


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06524, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.787, 'Inference time': 0.704, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073204, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.155, 'Inference time': 0.754}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4503848620701993;  // std dev = 3.065, 159.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360674;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4432438679844429;  // std dev = 3.26e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.16563134365478135;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33821676027264397;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14398950951015385;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.32e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20933218434427975;  // std dev = 0.139, 157.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1977172989888273;  // std dev = 0.103, 125.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=115 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05815680338687164;  // std dev = 0.080, 265.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1508671108685298;  // std dev = 1.599, 155.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0746583089321046;  // std dev = 1.45e-07, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12177906346454445;  // std dev = 0.128, 133.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=115 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05292566730880808;  // std dev = 1.218, 286.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09046624801738717;  // std dev = 0.145, 172.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06630867158619227;  // std dev = 4.21e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.483 seconds
Total inference time: 0.77 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082667
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.096 seconds
Parameter learned model CLL: -0.082667


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 219, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 266, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.065, 25, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 230, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.26e-07, 0, 134], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 255, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 242, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.139, 23, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.69e-08, 238, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.103, 10, 115], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 246, 19]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.599, 21, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.45e-07, 271, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.128, 18, 115], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.218, 267, 19]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.145, 38, 134], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 232, 0]}]]
[{'': [0.12882550873257972, -2.2711411645300005e-16], 'true': [4.772301956597688e-15, 9.25185853854297e-18], 'true,true': [4.772301956597688e-15, nan], 'true,false': [9.25185853854297e-18, nan], 'true,false,true': [9.25185853854297e-18, nan]}, {'': [0.08361609348915536, -7.67973821545221e-17], 'true': [0.08361609348915536, nan], 'true,true': [-1.908920782639075e-15, -2.64338815386942e-18], 'true,true,false': [-2.64338815386942e-18, nan]}, {'': [0.05907326227508201, -7.144043810631442e-17], 'true': [0.05907326227508201, nan], 'true,true': [0.05907326227508201, nan], 'true,true,true': [0.05907326227508201, nan]}, {'': [0.035326356713762073, -6.966105252550002e-17], 'true': [7.95383659432948e-16, -1.0408340855860843e-17], 'true,false': [-1.0408340855860843e-17, nan]}, {'': [0.02627598819935092, 1.651571441591142e-17], 'true': [0.02627598819935092, nan], 'true,true': [-3.7117904106870904e-16, -8.326672684688674e-18], 'true,true,false': [-8.326672684688674e-18, nan]}, {'': [0.019431591786517398, 3.172065784643304e-17], 'true': [0.019431591786517398, nan], 'true,true': [0.019431591786517398, nan]}, {'': [0.010649102364040616, 0.0064307732994364625], 'true': [0.010649102364040616, nan], 'true,true': [0.010649102364040616, nan]}, {'': [0.01649152308636882, 7.783851464161615e-17], 'true': [0.01649152308636882, nan], 'true,true': [0.01649152308636882, nan]}, {'': [0.016494250232618593, 0.005188105952140136], 'true': [0.016494250232618593, nan], 'true,true': [0.016494250232618593, nan]}, {'': [0.02091000269940697, 7.656710514656252e-18], 'true': [0.02091000269940697, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1418510649004883;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360683;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.10159632948783656;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601508;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.25673279235607527;  // std dev = 0.150, 84.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 6.32e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2617153907347751;  // std dev = 0.071, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.0977736487578385;  // std dev = 0.077, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839678;  // std dev = 9.31e-08, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21437731687315528;  // std dev = 0.062, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09769871070014098;  // std dev = 0.064, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109146;  // std dev = 7.15e-08, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18048251271049992;  // std dev = 0.055, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08079732712374259;  // std dev = 0.064, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333675;  // std dev = 1.21e-07, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15531102496818228;  // std dev = 0.048, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07991339486093858;  // std dev = 0.065, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.0684269778442027;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13162631867632293;  // std dev = 0.346, 137.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=134 */
%   | else return -0.07266530508990512;  // std dev = 0.053, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06419184008202625;  // std dev = 1.05e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.454 seconds
Total inference time: 0.697 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065013
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.987 seconds
Refined model CLL: -0.065013


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.0200000000000005 seconds
Total inference time: 0.697 seconds
AUC ROC: 1.0
Total revision time: 5.0200000000000005
Best scored revision CLL: -0.065013


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064133, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.0200000000000005, 'Inference time': 0.697, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073632, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.483, 'Inference time': 0.77}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 2.49e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839127;  // std dev = 3.94e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.45200131476814054;  // std dev = 3.734, 239.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360646;  // std dev = 0.000, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4428449985025612;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1658548542976729;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 1.37e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3379442869751854;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1441612838707433;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.87e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21891318126498496;  // std dev = 0.129, 230.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.13e-07, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17042718903272977;  // std dev = 0.135, 204.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=174 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05800434983315788;  // std dev = 0.080, 386.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=28 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16297356014559666;  // std dev = 1.766, 226.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0746688417843611;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13630003270662766;  // std dev = 0.112, 193.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=174 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05466909889615167;  // std dev = 1.488, 421.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=28 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09806235161176971;  // std dev = 0.137, 251.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06620958795466787;  // std dev = 6.14e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073658
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.837 seconds
Total inference time: 0.745 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082986
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.267 seconds
Parameter learned model CLL: -0.082986


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.36e-08, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.49e-07, 375, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [3.94e-08, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 373, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.734, 37, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 370, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 202], 'true,false,true': [0.0, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.37e-07, 372, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 36, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.87e-07, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.129, 28, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.13e-07, 333, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.135, 30, 174], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 358, 28]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.766, 24, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 371, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.112, 19, 174], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.488, 393, 28]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.137, 49, 202], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 339, 0]}]]
[{'': [0.10400259339067314, 1.6579330501069005e-16], 'true': [5.768762805181012e-15, 2.05596856412066e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [2.05596856412066e-17, nan], 'true,false,true': [2.05596856412066e-17, nan]}, {'': [0.10484868997934906, -1.2143994478473563e-16], 'true': [0.10484868997934906, nan], 'true,true': [-3.728590593592605e-15, 3.532527805625498e-17], 'true,true,false': [3.532527805625498e-17, nan]}, {'': [0.05833076716741741, -3.120626880027467e-17], 'true': [0.05833076716741741, nan], 'true,true': [0.05833076716741741, nan], 'true,true,true': [0.05833076716741741, nan]}, {'': [0.048480119880813854, 5.0139104337910294e-17], 'true': [-3.165784466257872e-16, -3.600723323108616e-17], 'true,false': [-3.600723323108616e-17, nan]}, {'': [0.029838999410998542, 9.281229518030409e-17], 'true': [0.029838999410998542, nan], 'true,true': [-6.859199676892056e-16, -2.7755575615628914e-17], 'true,true,false': [-2.7755575615628914e-17, nan]}, {'': [0.016611924686891346, 3.867443569264809e-17], 'true': [0.016611924686891346, nan], 'true,true': [0.016611924686891346, nan]}, {'': [0.018105876937424593, 0.0064214176643635585], 'true': [0.018105876937424593, nan], 'true,true': [0.018105876937424593, nan]}, {'': [0.013802953707912652, -8.019939908343449e-17], 'true': [0.013802953707912652, nan], 'true,true': [0.013802953707912652, nan]}, {'': [0.01250713633317894, 0.0052623993496185234], 'true': [0.01250713633317894, nan], 'true,true': [0.01250713633317894, nan]}, {'': [0.018828334207256436, 1.1134980187980921e-17], 'true': [0.018828334207256436, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.1418510649004875;  // std dev = 2.46e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5490074896933665;  // std dev = 0.339, 114.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=91 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109551;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5741073045109966;  // std dev = 0.294, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.15834271266929698;  // std dev = 0.245, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360661;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.431813873854003;  // std dev = 0.296, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12480460295555555;  // std dev = 0.216, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.10159632948783598;  // std dev = 2.09e-07, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.35135747508311616;  // std dev = 4.21e-08, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | | else return -0.1576270711233352;  // std dev = 1.49e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.2523983203263832;  // std dev = 0.144, 131.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.80e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26826652985418453;  // std dev = 0.099, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12297700665257899;  // std dev = 0.071, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839678;  // std dev = 1.23e-07, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21897676733651053;  // std dev = 0.087, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1079731241699853;  // std dev = 0.076, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07877675473109148;  // std dev = 2.98e-08, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1838359838577392;  // std dev = 0.076, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10182275191865993;  // std dev = 0.066, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07324622576333767;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1578418415250949;  // std dev = 0.067, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.090785514840634;  // std dev = 0.071, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06842697784420325;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1379774831194376;  // std dev = 0.060, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.08425381922550287;  // std dev = 0.060, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202576;  // std dev = 1.57e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06455
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.735 seconds
Total inference time: 0.706 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065672
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.129 seconds
Refined model CLL: -0.065672


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06455
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.968 seconds
Total inference time: 0.706 seconds
AUC ROC: 1.0
Total revision time: 5.968
Best scored revision CLL: -0.065672


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06455, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.968, 'Inference time': 0.706, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073658, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.837, 'Inference time': 0.745}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 1.88e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 508.000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4651970533781945;  // std dev = 4.024, 311.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936059;  // std dev = 0.000, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4395916711679358;  // std dev = 8.64e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.16768850392152349;  // std dev = 9.68e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783544;  // std dev = 3.45e-07, 509.000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33572338895966897;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14556880041481426;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 1.19e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22005543527898835;  // std dev = 0.126, 304.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1712934849007025;  // std dev = 0.132, 270.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=232 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06113389194546584;  // std dev = 0.076, 576.000 (wgt'ed) examples reached here.  /* #neg=539 #pos=37 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13955777661202673;  // std dev = 2.505, 323.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07445289867740644;  // std dev = 0.000, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1360779068059535;  // std dev = 0.115, 259.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=232 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05230466744725273;  // std dev = 1.688, 549.000 (wgt'ed) examples reached here.  /* #neg=512 #pos=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09884188151307788;  // std dev = 0.140, 333.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06617564327536875;  // std dev = 2.32e-07, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073577
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.308 seconds
Total inference time: 0.776 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081992
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.395 seconds
Parameter learned model CLL: -0.081992


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.71e-08, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.88e-07, 493, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 508, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.024, 42, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 498, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [8.64e-07, 0, 269], 'true,false,true': [9.68e-09, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.45e-07, 509, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 33, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.19e-07, 496, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.126, 35, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 520, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.132, 38, 232], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.076, 539, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.505, 54, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 458, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.115, 27, 232], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.688, 512, 37]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.14, 64, 269], 'true,false': [0.0, 0, 0], 'false': [2.32e-07, 504, 0]}]]
[{'': [0.12277374335673248, 7.206315778500002e-17], 'true': [4.226276495227362e-15, 4.9343245538895844e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [4.9343245538895844e-17, nan], 'true,false,true': [4.9343245538895844e-17, nan]}, {'': [0.08624729007683692, -1.3287708641182977e-16], 'true': [0.08624729007683692, nan], 'true,true': [-4.5432472323694135e-15, -2.7755575615628914e-17], 'true,true,false': [-2.7755575615628914e-17, nan]}, {'': [0.052074030011618165, -7.133963210442772e-18], 'true': [0.052074030011618165, nan], 'true,true': [0.052074030011618165, nan], 'true,true,true': [0.052074030011618165, nan]}, {'': [0.044554798988120294, 2.3382300243578936e-16], 'true': [2.773493949992956e-15, 9.588289758126352e-17], 'true,false': [9.588289758126352e-17, nan]}, {'': [0.022546023824337964, 2.865091676452017e-17], 'true': [0.022546023824337964, nan], 'true,true': [-1.3207114047585505e-17, -1.0092936587501423e-17], 'true,true,false': [-1.0092936587501423e-17, nan]}, {'': [0.015796512898066262, 4.4408920985006264e-17], 'true': [0.015796512898066262, nan], 'true,true': [0.015796512898066262, nan]}, {'': [0.017447188753978084, 0.005748264449924981], 'true': [0.017447188753978084, nan], 'true,true': [0.017447188753978084, nan]}, {'': [0.01943288103872422, -3.4906575446729814e-17], 'true': [0.01943288103872422, nan], 'true,true': [0.01943288103872422, nan]}, {'': [0.013167968438554516, 0.0051898033729248505], 'true': [0.013167968438554516, nan], 'true,true': [0.013167968438554516, nan]}, {'': [0.019639099900724384, 1.0661665553939996e-16], 'true': [0.019639099900724384, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1418510649004872;  // std dev = 2.83e-07, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.11231637819360588;  // std dev = 0.000, 509.000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783624;  // std dev = 3.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783569;  // std dev = 2.86e-07, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014994;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.2890986671393118;  // std dev = 0.110, 170.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=157 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 1.46e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2587060494509894;  // std dev = 0.049, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10811178373029266;  // std dev = 0.102, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21225274000263808;  // std dev = 0.043, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09355847470012839;  // std dev = 0.094, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.0787767547310918;  // std dev = 1.83e-07, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17892551316500707;  // std dev = 0.037, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08729387686149312;  // std dev = 0.104, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333753;  // std dev = 0.000, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1541307206482357;  // std dev = 0.033, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07924415391223466;  // std dev = 0.094, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420344;  // std dev = 0.000, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1350893415433274;  // std dev = 0.030, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07635865984846675;  // std dev = 0.078, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06419184008202537;  // std dev = 2.45e-07, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.961 seconds
Total inference time: 0.714 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.327 seconds
Refined model CLL: -0.064885


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.991 seconds
Total inference time: 0.714 seconds
AUC ROC: 1.0
Total revision time: 6.991
Best scored revision CLL: -0.064885


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064097, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.991, 'Inference time': 0.714, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073577, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.308, 'Inference time': 0.776}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048857;  // std dev = 0.000, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4646300542031692;  // std dev = 4.518, 390.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360574;  // std dev = 0.000, 549.000 (wgt'ed) examples reached here.  /* #neg=549 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43973135666816604;  // std dev = 6.19e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.16760938328427358;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783498;  // std dev = 4.67e-07, 645.000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33581869223619837;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14550812929443888;  // std dev = 5.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926153;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20763361059674645;  // std dev = 0.139, 395.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1857630200566858;  // std dev = 0.118, 323.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05833173987567607;  // std dev = 0.080, 689.000 (wgt'ed) examples reached here.  /* #neg=640 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.140235976636933;  // std dev = 2.802, 404.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07464622444093041;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13732480475832157;  // std dev = 0.113, 320.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05062500803479363;  // std dev = 1.938, 678.000 (wgt'ed) examples reached here.  /* #neg=629 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10512781739363665;  // std dev = 0.133, 412.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0664411499270443;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073846
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.78 seconds
Total inference time: 0.754 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082457
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.768 seconds
Parameter learned model CLL: -0.082457


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.66e-08, 67, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 634, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 51, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 623, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.518, 53, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 549, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [6.19e-07, 0, 337], 'true,false,true': [0.0, 62, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.67e-07, 645, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [5.58e-08, 51, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 616, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.139, 58, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-07, 613, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.118, 35, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 640, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.802, 67, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 590, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.113, 32, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.938, 629, 49]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.133, 75, 337], 'true,false': [0.0, 0, 0], 'false': [0.0, 596, 0]}]]
[{'': [0.13833815312224595, -3.5863355748143857e-16], 'true': [3.204821834882351e-15, 6.628197161941232e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [6.628197161941232e-17, nan], 'true,false,true': [6.628197161941232e-17, nan]}, {'': [0.0815015376882413, -2.737243283827031e-16], 'true': [0.0815015376882413, nan], 'true,true': [-5.144582419153248e-15, -3.2653618371328135e-17], 'true,true,false': [-3.2653618371328135e-17, nan]}, {'': [0.05235003219683778, -3.2356226582882522e-18], 'true': [0.05235003219683778, nan], 'true,true': [0.05235003219683778, nan], 'true,true,true': [0.05235003219683778, nan]}, {'': [0.04841061807676284, 3.3874711821121057e-16], 'true': [1.138555125550309e-15, -7.162729191130042e-18], 'true,false': [-7.162729191130042e-18, nan]}, {'': [0.026449456473373413, -4.3255442517863244e-17], 'true': [0.026449456473373413, nan], 'true,true': [-1.3072299589651695e-15, 6.095342095981252e-17], 'true,true,false': [6.095342095981252e-17, nan]}, {'': [0.01942625706733757, 4.0569324227738186e-17], 'true': [0.01942625706733757, nan], 'true,true': [0.01942625706733757, nan]}, {'': [0.013979849131531937, 0.006327632006538514], 'true': [0.013979849131531937, nan], 'true,true': [0.013979849131531937, nan]}, {'': [0.01943356301355161, -5.569932462526209e-17], 'true': [0.01943356301355161, nan], 'true,true': [0.01943356301355161, nan]}, {'': [0.01269292438752368, 0.005541376766126991], 'true': [0.01269292438752368, nan], 'true,true': [0.01269292438752368, nan]}, {'': [0.0176560812998784, -1.1921857982552016e-17], 'true': [0.0176560812998784, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1418510649004884;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.592491508631632;  // std dev = 0.302, 173.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=147 */
%   | | else return 0.6042573143828637;  // std dev = 0.290, 220.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 643.000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5848518501042336;  // std dev = 0.026, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.20709142536132574;  // std dev = 0.008, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.11231637819360596;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4397630432595634;  // std dev = 0.026, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.17503619331102044;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783497;  // std dev = 4.69e-07, 648.000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3358411011468887;  // std dev = 0.024, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.15134095506694054;  // std dev = 0.005, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892615;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26547136564939233;  // std dev = 0.021, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.13281685758222014;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21700741374442317;  // std dev = 0.018, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11816125100429667;  // std dev = 0.005, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109234;  // std dev = 0.000, 569.000 (wgt'ed) examples reached here.  /* #neg=569 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1823960029832947;  // std dev = 0.016, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10648747583531276;  // std dev = 0.004, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.0732462257633366;  // std dev = 2.35e-07, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.156752408472178;  // std dev = 0.014, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09684602140295032;  // std dev = 0.003, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420364;  // std dev = 0.000, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.10067425082799543;  // std dev = 0.084, 176.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=147 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13652119967904033;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | | else return -0.08904319192191949;  // std dev = 1.29e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.06419184008202607;  // std dev = 1.18e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06419184008202525;  // std dev = 2.48e-07, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065056
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.289 seconds
Total inference time: 0.68 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066594
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.332 seconds
Refined model CLL: -0.066594


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065056
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.169 seconds
Total inference time: 0.68 seconds
AUC ROC: 1.0
Total revision time: 8.169
Best scored revision CLL: -0.066594


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065056, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.169, 'Inference time': 0.68, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073846, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.78, 'Inference time': 0.754}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.47416177006440546;  // std dev = 1.877, 74.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 9.88e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43738441584469456;  // std dev = 1.63e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.16894343121075053;  // std dev = 4.17e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3342180626906904;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1465303554187564;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 3.65e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19878399014832496;  // std dev = 0.147, 78.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.05e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.15832900723744636;  // std dev = 0.147, 66.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05751722375803742;  // std dev = 0.087, 134.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1413038399750682;  // std dev = 1.267, 79.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0747025059581805;  // std dev = 1.49e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1255675283190277;  // std dev = 0.131, 63.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04964707817523725;  // std dev = 0.922, 141.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.13400284894618109;  // std dev = 0.111, 73.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06654891961434113;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072942
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.155 seconds
Total inference time: 0.873 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.085192
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.845 seconds
Parameter learned model CLL: -0.085192


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.49e-08, 0, 65], 'true,true,false,true': [5.27e-09, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.877, 9, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.88e-08, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.63e-07, 0, 65], 'true,false,true': [4.17e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false,true': [0.0, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.147, 13, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.05e-08, 110, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.147, 12, 54], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 123, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.267, 14, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 117, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.131, 9, 54], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.922, 130, 11]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.111, 8, 65], 'true,false': [0.0, 0, 0], 'false': [0.0, 126, 0]}]]
[{'': [0.13155675493337735, 4.892508244110859e-17], 'true': [-8.745141363201234e-16, -1.1564823173178714e-17], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-1.1564823173178714e-17, nan], 'true,true': [-8.745141363201234e-16, nan]}, {'': [0.09391659297062578, -1.865921049790179e-18], 'true': [0.09391659297062578, nan], 'true,true': [2.1862853408003084e-16, 2.3129646346357427e-18], 'true,true,false': [2.3129646346357427e-18, nan]}, {'': [0.04762476254549717, 7.291016878135356e-17], 'true': [0.04762476254549717, nan], 'true,true': [0.04762476254549717, nan], 'true,true,true': [0.04762476254549717, nan]}, {'': [0.04550864310113368, -1.6116140680042596e-17], 'true': [4.099285014000578e-16, 1.5139404881252134e-17], 'true,false': [1.5139404881252134e-17, nan]}, {'': [0.028609784398032342, 1.1686558153949016e-17], 'true': [0.028609784398032342, nan], 'true,true': [-3.1427851774004433e-16, -2.523234146875356e-18], 'true,true,false': [-2.523234146875356e-18, nan]}, {'': [0.021506480850948896, 3.3306690738754695e-17], 'true': [0.021506480850948896, nan], 'true,true': [0.021506480850948896, nan]}, {'': [0.021564880271901076, 0.007540467206444626], 'true': [0.021564880271901076, nan], 'true,true': [0.021564880271901076, nan]}, {'': [0.020335463065924892, 1.897817136111379e-18], 'true': [0.020335463065924892, nan], 'true,true': [0.020335463065924892, nan]}, {'': [0.017256147474130533, 0.006030666107355864], 'true': [0.017256147474130533, nan], 'true,true': [0.017256147474130533, nan]}, {'': [0.012408906510431836, -2.2909364000201642e-17], 'true': [0.012408906510431836, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048774;  // std dev = 4.21e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5874549667829314;  // std dev = 0.307, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5687903287412283;  // std dev = 0.128, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.13552543185007238;  // std dev = 0.114, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360622;  // std dev = 8.56e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4276916288239014;  // std dev = 0.129, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12929840184890584;  // std dev = 0.166, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10159632948783665;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.34477518033813426;  // std dev = 6.32e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.16531247922441583;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2686047842496773;  // std dev = 0.130, 43.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26515734561801685;  // std dev = 0.043, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.130159790926009;  // std dev = 0.062, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839679;  // std dev = 4.47e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21679308769469618;  // std dev = 0.038, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11282425379867596;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109161;  // std dev = 6.05e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1822435901379046;  // std dev = 0.033, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10530493060855071;  // std dev = 0.048, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07324622576333704;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1566399140692305;  // std dev = 0.029, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09580297755605528;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06842697784420267;  // std dev = 4.34e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1370430897233785;  // std dev = 0.026, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.08320439686648756;  // std dev = 0.053, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.111 seconds
Total inference time: 0.849 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.761 seconds
Refined model CLL: -0.066068


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.872 seconds
Total inference time: 0.849 seconds
AUC ROC: 1.0
Total revision time: 3.872
Best scored revision CLL: -0.066068


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064133, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.872, 'Inference time': 0.849, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072942, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.155, 'Inference time': 0.873}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048807;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4702256751096525;  // std dev = 2.718, 149.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4383532448187265;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.16839151728009402;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3348786523559964;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1461076384718427;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926064;  // std dev = 8.94e-08, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2013297174189343;  // std dev = 0.145, 155.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17917676159851714;  // std dev = 0.127, 126.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=110 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05733360890447001;  // std dev = 0.085, 251.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15798588367066183;  // std dev = 1.506, 148.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07471519878287901;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13954155531542636;  // std dev = 0.108, 121.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=110 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050255874814989984;  // std dev = 1.245, 248.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0927894624237384;  // std dev = 0.140, 167.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=130 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06652172393515204;  // std dev = 4.21e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072961
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.526 seconds
Total inference time: 0.881 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08352
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.036 seconds
Parameter learned model CLL: -0.08352


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.66e-08, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 276, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [0.0, 22, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 232, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.718, 19, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 130], 'true,false,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [1.05e-08, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.145, 25, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.43e-08, 235, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.127, 16, 110], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.085, 231, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.506, 18, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 229, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.108, 11, 110], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.245, 228, 20]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.14, 37, 130], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 246, 0]}]]
[{'': [0.12772865137340791, -5.792467954566034e-17], 'true': [4.481884948640632e-15, 9.654113257610057e-18], 'true,true': [4.481884948640632e-15, nan], 'true,false': [9.654113257610057e-18, nan], 'true,false,true': [9.654113257610057e-18, nan]}, {'': [0.08837064688583612, -4.976861834526564e-17], 'true': [0.08837064688583612, nan], 'true,true': [-1.7490282726402467e-15, -2.523234146875356e-18], 'true,true,false': [-2.523234146875356e-18, nan]}, {'': [0.0495980741036084, -7.433252868734953e-17], 'true': [0.0495980741036084, nan], 'true,true': [0.0495980741036084, nan], 'true,true,true': [0.0495980741036084, nan]}, {'': [0.04557124870655485, -7.985814738531828e-17], 'true': [-5.192427684400732e-16, -3.027880976250427e-17], 'true,false': [-3.027880976250427e-17, nan]}, {'': [0.02257475365386442, 3.147088888701231e-17], 'true': [0.02257475365386442, nan], 'true,true': [-6.695498856200944e-16, 6.938893903907228e-18], 'true,true,false': [6.938893903907228e-18, nan]}, {'': [0.020959367407921644, 3.0235861096174476e-17], 'true': [0.020959367407921644, nan], 'true,true': [0.020959367407921644, nan]}, {'': [0.01606248009210962, 0.007235619094065159], 'true': [0.01606248009210962, nan], 'true,true': [0.01606248009210962, nan]}, {'': [0.015325348989593104, -1.2605152244652432e-17], 'true': [0.015325348989593104, nan], 'true,true': [0.015325348989593104, nan]}, {'': [0.011673480124552542, 0.006248105641134238], 'true': [0.011673480124552542, nan], 'true,true': [0.011673480124552542, nan]}, {'': [0.019607370136503738, 7.220962761789637e-18], 'true': [0.019607370136503738, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048843;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5847763316583049;  // std dev = 0.309, 69.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=58 */
%   | | else return 0.5430619510675739;  // std dev = 0.343, 91.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=72 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5939063496868027;  // std dev = 0.057, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.20035606635973974;  // std dev = 0.014, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.1123163781936067;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4467761004570399;  // std dev = 0.058, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.17025184820975084;  // std dev = 0.013, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783656;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.33545657380738486;  // std dev = 1.26e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.15088423456233774;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.2467314728274113;  // std dev = 0.196, 90.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=72 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926061;  // std dev = 4.94e-08, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27971161014484536;  // std dev = 0.148, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.16117865850509155;  // std dev = 0.115, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22699032858822812;  // std dev = 0.129, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14395835452033895;  // std dev = 0.092, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07877675473109143;  // std dev = 6.99e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18966030567121836;  // std dev = 0.113, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12657168244772324;  // std dev = 0.087, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333666;  // std dev = 1.29e-07, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16222503540832015;  // std dev = 0.100, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11468782250841299;  // std dev = 0.091, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.06842697784420261;  // std dev = 6.66e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13980734770419603;  // std dev = 0.223, 131.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=130 */
%   | else return -0.09447303037785108;  // std dev = 0.111, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06419184008202626;  // std dev = 1.83e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064564
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.515 seconds
Total inference time: 0.813 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067403
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.9 seconds
Refined model CLL: -0.067403


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064564
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.977 seconds
Total inference time: 0.813 seconds
AUC ROC: 1.0
Total revision time: 4.977
Best scored revision CLL: -0.067403


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064564, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.977, 'Inference time': 0.813, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072961, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.526, 'Inference time': 0.881}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 2.02e-07, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4689253580263862;  // std dev = 3.355, 224.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360664;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43867340808465355;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.16820950482735517;  // std dev = 7.21e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 5.16e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3350970021794308;  // std dev = 1.29e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14596817377545337;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.52e-07, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19657530227604536;  // std dev = 0.149, 236.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17853289288419283;  // std dev = 0.129, 183.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=159 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.052823284804001294;  // std dev = 0.090, 395.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=36 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14666024868467462;  // std dev = 2.081, 232.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.075027609014619;  // std dev = 1.38e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11331856592099247;  // std dev = 0.140, 191.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=159 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04610718247663722;  // std dev = 1.662, 378.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=36 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10063275217852016;  // std dev = 0.140, 249.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=195 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06704189868016651;  // std dev = 9.42e-08, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.916 seconds
Total inference time: 0.884 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084056
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.206 seconds
Parameter learned model CLL: -0.084056


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.02e-07, 352, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false,true': [0.0, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 396, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.355, 29, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 342, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 195], 'true,false,true': [7.21e-09, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.16e-08, 348, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.29e-08, 0, 195], 'true,true,false,true': [0.0, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 337, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.149, 41, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.17e-07, 376, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.129, 24, 159], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 359, 36]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.081, 37, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.38e-07, 357, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.14, 32, 159], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.662, 342, 36]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.14, 54, 195], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 309, 0]}]]
[{'': [0.13888888888889442, 1.1606877075626636e-16], 'true': [5.975846598187509e-15, 4.2700885562506023e-17], 'true,true': [5.975846598187509e-15, nan], 'true,false': [4.2700885562506023e-17, nan], 'true,false,true': [4.2700885562506023e-17, nan]}, {'': [0.08449064076771522, -1.1887236425279454e-16], 'true': [0.08449064076771522, nan], 'true,true': [-3.643808901333847e-15, -8.953411488912552e-18], 'true,true,false': [-8.953411488912552e-18, nan]}, {'': [0.05024316267588432, -3.895519384649672e-17], 'true': [0.05024316267588432, nan], 'true,true': [0.05024316267588432, nan], 'true,true,true': [0.05024316267588432, nan]}, {'': [0.04043828571086662, 7.656710514656252e-18], 'true': [-1.0202664923734771e-15, 4.7580986769649563e-17], 'true,false': [4.7580986769649563e-17, nan]}, {'': [0.02674229462857369, 6.852415107478711e-17], 'true': [0.02674229462857369, nan], 'true,true': [1.4575235605335388e-16, -1.4802973661668754e-17], 'true,true,false': [-1.4802973661668754e-17, nan]}, {'': [0.022245271600760518, 3.6613738046148777e-17], 'true': [0.022245271600760518, nan], 'true,true': [0.022245271600760518, nan]}, {'': [0.01652986838899046, 0.008081684855530763], 'true': [0.01652986838899046, nan], 'true,true': [0.01652986838899046, nan]}, {'': [0.018674423826629098, 5.34897367606518e-17], 'true': [0.018674423826629098, nan], 'true,true': [0.018674423826629098, nan]}, {'': [0.019666907297420665, 0.007308415937151426], 'true': [0.019666907297420665, nan], 'true,true': [0.019666907297420665, nan]}, {'': [0.019521088737628825, 2.874363817799758e-17], 'true': [0.019521088737628825, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048757;  // std dev = 2.17e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6410789538949321;  // std dev = 0.245, 97.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=88 */
%   | | else return 0.586415451464601;  // std dev = 0.308, 127.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5819313011325857;  // std dev = 0.092, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.20871041566673337;  // std dev = 0.026, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.11231637819360646;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43754838474609303;  // std dev = 0.093, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.17703400945665324;  // std dev = 0.024, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.10159632948783628;  // std dev = 1.13e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2532296247217938;  // std dev = 0.175, 104.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=88 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.33983175272435534;  // std dev = 1.63e-07, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.14916310972473182;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 1.60e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2710296799015437;  // std dev = 0.044, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.16381438391948577;  // std dev = 0.173, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 1.12e-07, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22090131070684693;  // std dev = 0.038, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1389041191285071;  // std dev = 0.170, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109147;  // std dev = 5.58e-08, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1852290346980119;  // std dev = 0.034, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12580452774457468;  // std dev = 0.146, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07324622576333706;  // std dev = 8.56e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1588865222029044;  // std dev = 0.030, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10454572834236081;  // std dev = 0.132, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.06842697784420317;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13878505303017902;  // std dev = 0.027, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.096800516068179;  // std dev = 0.131, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06419184008202576;  // std dev = 1.58e-07, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.706 seconds
Total inference time: 0.854 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067236
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.111 seconds
Refined model CLL: -0.067236


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.938999999999999 seconds
Total inference time: 0.854 seconds
AUC ROC: 1.0
Total revision time: 5.938999999999999
Best scored revision CLL: -0.067236


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064622, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.938999999999999, 'Inference time': 0.854, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073237, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.916, 'Inference time': 0.884}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4549958175069526;  // std dev = 4.174, 306.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360601;  // std dev = 0.000, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44210628192652435;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.16626954946627487;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783553;  // std dev = 3.22e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33743976666070796;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1444798697375634;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926082;  // std dev = 1.67e-07, 455.000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22098282730818827;  // std dev = 0.126, 294.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.37e-07, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17030201450155102;  // std dev = 0.134, 254.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=217 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05683999203901036;  // std dev = 0.083, 552.000 (wgt'ed) examples reached here.  /* #neg=509 #pos=43 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15005210905036556;  // std dev = 2.285, 304.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07474933108222383;  // std dev = 1.90e-07, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1199092532826779;  // std dev = 0.132, 254.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=217 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0499259125744633;  // std dev = 1.811, 538.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=43 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10661019202763965;  // std dev = 0.134, 318.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=260 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06657076266413764;  // std dev = 0.000, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072924
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.417 seconds
Total inference time: 0.843 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083674
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.376 seconds
Parameter learned model CLL: -0.083674


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-07, 450, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [0.0, 46, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 456, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.174, 46, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 476, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 260], 'true,false,true': [0.0, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.22e-07, 491, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [2.79e-08, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.67e-07, 455, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.126, 34, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.37e-07, 453, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.134, 37, 217], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.083, 509, 43]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.285, 44, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.9e-07, 495, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.132, 37, 217], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.811, 495, 43]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.134, 58, 260], 'true,false': [0.0, 0, 0], 'false': [0.0, 458, 0]}]]
[{'': [0.11555555555555978, 1.9737298215558337e-16], 'true': [4.372570681600617e-15, 4.163336342344337e-17], 'true,true': [4.372570681600617e-15, nan], 'true,false': [4.163336342344337e-17, nan], 'true,false,true': [4.163336342344337e-17, nan]}, {'': [0.09118376147083755, -1.2270886061646468e-16], 'true': [0.09118376147083755, nan], 'true,true': [-4.481884948640632e-15, -3.137586808723268e-17], 'true,true,false': [-3.137586808723268e-17, nan]}, {'': [0.05694147638448954, -1.1195526298741075e-17], 'true': [0.05694147638448954, nan], 'true,true': [0.05694147638448954, nan], 'true,true,true': [0.05694147638448954, nan]}, {'': [0.04431519431465464, 2.1164333015257567e-16], 'true': [-1.147799803920162e-15, -5.2867763077388404e-17], 'true,false': [-5.2867763077388404e-17, nan]}, {'': [0.021540106782172084, 6.148927521000867e-17], 'true': [0.021540106782172084, nan], 'true,true': [-5.60235618580079e-16, 2.590520390792032e-17], 'true,true,false': [2.590520390792032e-17, nan]}, {'': [0.015882649543395636, 4.117383402583362e-17], 'true': [0.015882649543395636, nan], 'true,true': [0.015882649543395636, nan]}, {'': [0.017954152533845257, 0.006871137003972628], 'true': [0.017954152533845257, nan], 'true,true': [0.017954152533845257, nan]}, {'': [0.017167605687533217, 7.266914343001025e-17], 'true': [0.017167605687533217, nan], 'true,true': [0.017167605687533217, nan]}, {'': [0.0175301871291, 0.006096196763143679], 'true': [0.0175301871291, nan], 'true,true': [0.0175301871291, nan]}, {'': [0.01801943247709006, -9.987159086147696e-17], 'true': [0.01801943247709006, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048757;  // std dev = 1.12e-07, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109551;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return -0.1254446385283914;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109562;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 5.59e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.112316378193606;  // std dev = 0.000, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831313;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783631;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783563;  // std dev = 2.95e-07, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716015;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return -0.09269127618926101;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3207118471601494;  // std dev = 2.49e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 1.33e-07, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.32e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839678;  // std dev = 1.41e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07877675473109184;  // std dev = 1.74e-07, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4.21e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07324622576333727;  // std dev = 0.000, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420346;  // std dev = 0.000, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1295363788029728;  // std dev = 0.480, 266.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202547;  // std dev = 2.26e-07, 451.000 (wgt'ed) examples reached here.  /* #neg=451 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.974 seconds
Total inference time: 0.859 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.372 seconds
Refined model CLL: -0.06436


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.138999999999999 seconds
Total inference time: 0.859 seconds
AUC ROC: 1.0
Total revision time: 7.138999999999999
Best scored revision CLL: -0.06436


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063441, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.138999999999999, 'Inference time': 0.859, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072924, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.417, 'Inference time': 0.843}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 654.000 (wgt'ed) examples reached here.  /* #neg=654 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.43595716757567227;  // std dev = 5.098, 397.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360568;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4468071723113413;  // std dev = 8.17e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.16364707773205267;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783515;  // std dev = 4.27e-07, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3406527529837432;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14246255975127278;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926143;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21000097438935814;  // std dev = 0.140, 383.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.50e-07, 551.000 (wgt'ed) examples reached here.  /* #neg=551 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18211900090979538;  // std dev = 0.126, 305.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05294155194640168;  // std dev = 0.090, 651.000 (wgt'ed) examples reached here.  /* #neg=592 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1542502005048565;  // std dev = 2.524, 379.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07501940186875547;  // std dev = 0.000, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.127705287493257;  // std dev = 0.125, 306.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.048017852467298165;  // std dev = 2.115, 702.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11349524201998122;  // std dev = 0.127, 394.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=326 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06691561803562195;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073256
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.57 seconds
Total inference time: 0.889 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08402
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.538 seconds
Parameter learned model CLL: -0.08402


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.77e-08, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.37e-08, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 601, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [0.0, 56, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 654, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [5.098, 71, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 584, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [8.17e-07, 0, 326], 'true,false,true': [0.0, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.27e-07, 613, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [0.0, 63, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 604, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.14, 57, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.5e-07, 551, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.126, 38, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 592, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.524, 53, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 580, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.125, 39, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.115, 643, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.127, 68, 326], 'true,false': [0.0, 0, 0], 'false': [0.0, 605, 0]}]]
[{'': [0.11697823807949431, -3.133008735048695e-16], 'true': [3.400143152717044e-15, 5.659960517696876e-17], 'true,true': [3.400143152717044e-15, nan], 'true,false': [5.659960517696876e-17, nan], 'true,false,true': [5.659960517696876e-17, nan]}, {'': [0.08931164285219659, -2.8791104736456657e-16], 'true': [0.08931164285219659, nan], 'true,true': [-5.056623150194578e-15, -3.766828119263924e-17], 'true,true,false': [-3.766828119263924e-17, nan]}, {'': [0.0654689434058882, -3.0417069167812506e-18], 'true': [0.0654689434058882, nan], 'true,true': [0.0654689434058882, nan], 'true,true,true': [0.0654689434058882, nan]}, {'': [0.04359245411809799, 2.970254095245117e-16], 'true': [2.048804207406424e-15, -6.530723674265627e-17], 'true,false': [-6.530723674265627e-17, nan]}, {'': [0.0316782041229278, -3.088037551937521e-17], 'true': [0.0316782041229278, nan], 'true,true': [-6.538736832148161e-16, -5.991679815437352e-17], 'true,true,false': [-5.991679815437352e-17, nan]}, {'': [0.019731195384191682, 4.1104445920786194e-17], 'true': [0.019731195384191682, nan], 'true,true': [0.019731195384191682, nan]}, {'': [0.015785121391020417, 0.008098334559435011], 'true': [0.015785121391020417, nan], 'true,true': [0.015785121391020417, nan]}, {'': [0.016812568075210373, -8.116113145535627e-17], 'true': [0.016812568075210373, nan], 'true,true': [0.016812568075210373, nan]}, {'': [0.015613207424200639, 0.0063697699108309445], 'true': [0.015613207424200639, nan], 'true,true': [0.015613207424200639, nan]}, {'': [0.01603265856790983, -4.9914159123643404e-17], 'true': [0.01603265856790983, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.1418510649004885;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109561;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.6073515855725596;  // std dev = 0.287, 211.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5707964400464564;  // std dev = 0.246, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.16036622535945708;  // std dev = 0.366, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1123163781936061;  // std dev = 0.000, 644.000 (wgt'ed) examples reached here.  /* #neg=644 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4291655284351055;  // std dev = 0.246, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14660603451981888;  // std dev = 0.312, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783515;  // std dev = 4.21e-07, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2454771457926997;  // std dev = 0.151, 173.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=143 */
%   | | else return 0.2532349507514149;  // std dev = 0.189, 221.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926153;  // std dev = 0.000, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2761030096132713;  // std dev = 0.186, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.15300961541730004;  // std dev = 0.349, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22446374613178927;  // std dev = 0.162, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.13982499753110367;  // std dev = 0.308, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109243;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18782475080631794;  // std dev = 0.142, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11711165442241354;  // std dev = 0.274, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333657;  // std dev = 2.40e-07, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16084424930941205;  // std dev = 0.126, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10547691306322203;  // std dev = 0.275, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420362;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202607;  // std dev = 1.18e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.14030614888179457;  // std dev = 0.112, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.09731679128457597;  // std dev = 0.212, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06419184008202525;  // std dev = 2.48e-07, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06462
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.17 seconds
Total inference time: 0.828 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.282 seconds
Refined model CLL: -0.067464


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06462
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.56 seconds
Total inference time: 0.828 seconds
AUC ROC: 1.0
Total revision time: 7.56
Best scored revision CLL: -0.067464


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06462, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.56, 'Inference time': 0.828, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073256, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.57, 'Inference time': 0.889}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.05e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4355259315006628;  // std dev = 2.263, 78.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.43e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4469137636009862;  // std dev = 1.63e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.1635880644291548;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3.94e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3407256747190565;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14241709247122883;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2154515638189417;  // std dev = 0.135, 74.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5.27e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.15015094247297917;  // std dev = 0.154, 63.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.049176221207501855;  // std dev = 0.094, 138.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15969763170614068;  // std dev = 1.116, 74.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07528110224542378;  // std dev = 2.11e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12692393005184605;  // std dev = 0.129, 58.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.047256622511789685;  // std dev = 1.026, 154.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11612024713795663;  // std dev = 0.131, 77.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.067182399387468;  // std dev = 4.21e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.051 seconds
Total inference time: 0.915 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084003
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.8 seconds
Parameter learned model CLL: -0.084003


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 17, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.66e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.05e-08, 0, 64], 'true,true,false,true': [7.45e-09, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.263, 14, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.43e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.63e-07, 0, 64], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 102, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false,true': [0.0, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.135, 10, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-08, 97, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.154, 13, 50], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 124, 14]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.116, 10, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 127, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.129, 8, 50], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.026, 140, 14]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.131, 13, 64], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 127, 0]}]]
[{'': [0.16582837982014853, 3.6400754905742835e-17], 'true': [-8.881784197001252e-16, -3.2653618371328133e-18], 'true,false': [-3.2653618371328133e-18, nan], 'true,false,true': [-3.2653618371328133e-18, nan], 'true,true': [-8.881784197001252e-16, nan]}, {'': [0.10981109629331387, -5.551115123125783e-18], 'true': [0.10981109629331387, nan], 'true,true': [1.1102230246251565e-16, 3.7007434154171884e-18], 'true,true,false': [3.7007434154171884e-18, nan]}, {'': [0.0656536991886891, 6.767073673905717e-17], 'true': [0.0656536991886891, nan], 'true,true': [0.0656536991886891, nan], 'true,true,true': [0.0656536991886891, nan]}, {'': [0.043560260865232694, 1.523835523995313e-17], 'true': [4.163336342344337e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.027281453146914093, -1.982541115402065e-18], 'true': [0.027281453146914093, nan], 'true,true': [-1.942890293094024e-16, -8.326672684688674e-18], 'true,true,false': [-8.326672684688674e-18, nan]}, {'': [0.01820558985501667, 2.8613995480029805e-17], 'true': [0.01820558985501667, nan], 'true,true': [0.01820558985501667, nan]}, {'': [0.02366957305522459, 0.008823917039795843], 'true': [0.02366957305522459, nan], 'true,true': [0.02366957305522459, nan]}, {'': [0.016823569376166123, 3.496765431890257e-18], 'true': [0.016823569376166123, nan], 'true,true': [0.016823569376166123, nan]}, {'': [0.01666866293143413, 0.006835633077449886], 'true': [0.01666866293143413, nan], 'true,true': [0.01666866293143413, nan]}, {'': [0.017057363770247875, 1.3987061727561027e-17], 'true': [0.017057363770247875, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109547;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1123163781936062;  // std dev = 8.82e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783635;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601498;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926103;  // std dev = 2.98e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.0851847513883968;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109158;  // std dev = 6.99e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527708;  // std dev = 4.21e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07324622576333717;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936709;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420265;  // std dev = 4.83e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801084;  // std dev = 5.58e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.07 seconds
Total inference time: 0.845 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.776 seconds
Refined model CLL: -0.064203


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.697 seconds
Total inference time: 0.845 seconds
AUC ROC: 1.0
Total revision time: 3.697
Best scored revision CLL: -0.064203


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.697, 'Inference time': 0.845, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076319, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.051, 'Inference time': 0.915}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048838;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4618908426546981;  // std dev = 2.837, 150.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360676;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4404063208983524;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.16722756601561872;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33627926717370843;  // std dev = 1.24e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14521526634038567;  // std dev = 1.67e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892606;  // std dev = 5.16e-08, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22720776854893956;  // std dev = 0.117, 143.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.82e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.15704537332556837;  // std dev = 0.145, 125.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=103 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05324085788910656;  // std dev = 0.090, 278.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=26 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1345538481239829;  // std dev = 1.848, 159.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07499863522471824;  // std dev = 4.94e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11371530332291198;  // std dev = 0.141, 124.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=103 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.042387016604578776;  // std dev = 1.373, 250.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=26 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10119802858238158;  // std dev = 0.140, 165.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=129 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06725057993083704;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07626
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.588 seconds
Total inference time: 0.899 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083466
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.04 seconds
Parameter learned model CLL: -0.083466


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 243, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false,true': [0.0, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.837, 21, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 235, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 129], 'true,false,true': [0.0, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 220, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.24e-08, 0, 129], 'true,true,false,true': [1.67e-08, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 212, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.117, 14, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.82e-08, 249, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.145, 22, 103], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 252, 26]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.848, 30, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 248, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.141, 21, 103], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.373, 224, 26]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.14, 36, 129], 'true,false': [0.0, 0, 0], 'false': [0.0, 221, 0]}]]
[{'': [0.12040000000000456, -1.790977060300664e-16], 'true': [4.40646657835721e-15, 5.28677630773884e-18], 'true,true': [4.40646657835721e-15, nan], 'true,false': [5.28677630773884e-18, nan], 'true,false,true': [5.28677630773884e-18, nan]}, {'': [0.09707724754175016, -5.64211701039014e-17], 'true': [0.09707724754175016, nan], 'true,true': [-1.7625866313428842e-15, -4.440892098500626e-18], 'true,true,false': [-4.440892098500626e-18, nan]}, {'': [0.05367436110047549, -7.369991142192528e-17], 'true': [0.05367436110047549, nan], 'true,true': [0.05367436110047549, nan], 'true,true,true': [0.05367436110047549, nan]}, {'': [0.042907295462254816, -8.679925465251224e-17], 'true': [-1.5422633024250236e-15, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan]}, {'': [0.027913173090796318, 1.25685625429263e-17], 'true': [0.027913173090796318, nan], 'true,true': [1.514722886310291e-16, 1.3216940769347101e-17], 'true,true,false': [1.3216940769347101e-17, nan]}, {'': [0.013700993352547135, 3.121108904568713e-17], 'true': [0.013700993352547135, nan], 'true,true': [0.013700993352547135, nan]}, {'': [0.020890276961990455, 0.008125669379511325], 'true': [0.020890276961990455, nan], 'true,true': [0.020890276961990455, nan]}, {'': [0.021475536391321683, 9.848752637803809e-18], 'true': [0.021475536391321683, nan], 'true,true': [0.021475536391321683, nan]}, {'': [0.019806612689545547, 0.0075426728810750205], 'true': [0.019806612689545547, nan], 'true,true': [0.019806612689545547, nan]}, {'': [0.019562301184807434, -2.5118167977944718e-17], 'true': [0.019562301184807434, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048843;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360664;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10159632948783655;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, B), movie(D, A) )
%   | | then return 0.3207118471601498;  // std dev = 2.49e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 6.32e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2.09e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109144;  // std dev = 6.14e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333678;  // std dev = 1.18e-07, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06842697784420261;  // std dev = 5.96e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801106;  // std dev = 5.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202625;  // std dev = 2.98e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.452 seconds
Total inference time: 0.81 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.956 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.036 seconds
Total inference time: 0.81 seconds
AUC ROC: 1.0
Total revision time: 5.036
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.036, 'Inference time': 0.81, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07626, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.588, 'Inference time': 0.899}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048757;  // std dev = 2.21e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.47645846770793204;  // std dev = 3.197, 220.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360663;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4368193276356025;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.169266136338537;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 1.07e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3338328619566511;  // std dev = 1.49e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14677739365385953;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 1.58e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21603938627345634;  // std dev = 0.129, 221.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1995700022484097;  // std dev = 0.094, 169.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=158 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05474373350122804;  // std dev = 0.086, 422.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=36 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14078489790649526;  // std dev = 2.077, 230.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0748944415431901;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13602193634101956;  // std dev = 0.109, 174.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=158 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04878366189485125;  // std dev = 1.666, 408.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=36 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11080365126323657;  // std dev = 0.128, 231.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=194 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06676324158348709;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07655
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.874 seconds
Total inference time: 0.906 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083313
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.197 seconds
Parameter learned model CLL: -0.083313


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.33e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.21e-07, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false,true': [0.0, 24, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 342, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.197, 26, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 341, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 194], 'true,false,true': [0.0, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.07e-07, 367, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.49e-08, 0, 194], 'true,true,false,true': [2.11e-08, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-07, 354, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.129, 27, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.17e-07, 363, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.094, 11, 158], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.086, 386, 36]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.077, 36, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 338, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.109, 16, 158], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.666, 372, 36]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.128, 37, 194], 'true,false': [0.0, 0, 0], 'false': [0.0, 344, 0]}]]
[{'': [0.12688519544475782, 1.3494423503731185e-16], 'true': [6.15315358802561e-15, 3.2653618371328135e-17], 'true,true': [6.15315358802561e-15, nan], 'true,false': [3.2653618371328135e-17, nan], 'true,false,true': [3.2653618371328135e-17, nan]}, {'': [0.06994056901855279, -1.116715556932906e-16], 'true': [0.06994056901855279, nan], 'true,true': [-3.516087764586063e-15, -4.625929269271485e-18], 'true,true,false': [-4.625929269271485e-18, nan]}, {'': [0.04645902731096085, -3.646480315484385e-17], 'true': [0.04645902731096085, nan], 'true,true': [0.04645902731096085, nan], 'true,true,true': [0.04645902731096085, nan]}, {'': [0.04756270501440845, 3.146136091580825e-17], 'true': [-2.087677110222975e-15, -3.172065784643304e-17], 'true,false': [-3.172065784643304e-17, nan]}, {'': [0.024072200053163666, 7.02514004282585e-17], 'true': [0.024072200053163666, nan], 'true,true': [2.0144252817940985e-16, 1.708035422500241e-17], 'true,true,false': [1.708035422500241e-17, nan]}, {'': [0.016600988784630025, 3.792497384394474e-17], 'true': [0.016600988784630025, nan], 'true,true': [0.016600988784630025, nan]}, {'': [0.008785523510122193, 0.007398601772305869], 'true': [0.008785523510122193, nan], 'true,true': [0.008785523510122193, nan]}, {'': [0.018765061018680407, -3.2846835048081553e-18], 'true': [0.018765061018680407, nan], 'true,true': [0.018765061018680407, nan]}, {'': [0.01183149172153257, 0.006800215087493744], 'true': [0.01183149172153257, nan], 'true,true': [0.01183149172153257, nan]}, {'': [0.016370038464719485, -4.260158117747694e-17], 'true': [0.016370038464719485, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048754;  // std dev = 2.33e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1123163781936065;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.10159632948783638;  // std dev = 6.66e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.320711847160149;  // std dev = 3.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.092691276189261;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.40e-07, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.07877675473109147;  // std dev = 3.65e-08, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07324622576333709;  // std dev = 8.16e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.0684269778442032;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12902715890022098;  // std dev = 0.438, 199.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=194 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06419184008202576;  // std dev = 1.57e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063446
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.713 seconds
Total inference time: 0.822 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064378
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.99 seconds
Refined model CLL: -0.064378


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063446
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.774000000000001 seconds
Total inference time: 0.822 seconds
AUC ROC: 1.0
Total revision time: 5.774000000000001
Best scored revision CLL: -0.064378


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063446, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.774000000000001, 'Inference time': 0.822, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07655, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.874, 'Inference time': 0.906}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 0.000, 518.000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4660443210352605;  // std dev = 3.930, 299.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360615;  // std dev = 0.000, 428.000 (wgt'ed) examples reached here.  /* #neg=428 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43938295676906997;  // std dev = 7.35e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.16780678957715334;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783574;  // std dev = 2.72e-07, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3355809980988898;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14565949354945837;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 1.46e-07, 503.000 (wgt'ed) examples reached here.  /* #neg=503 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19224072149849314;  // std dev = 0.153, 318.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.32e-07, 445.000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.16577730795029974;  // std dev = 0.142, 251.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=209 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05194488070106188;  // std dev = 0.090, 542.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=50 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15392182671164872;  // std dev = 2.329, 303.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07508859167343475;  // std dev = 1.67e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13781558379714337;  // std dev = 0.116, 234.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=209 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04677489785155441;  // std dev = 1.951, 549.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=50 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1058805158697414;  // std dev = 0.135, 323.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=259 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06705126299491322;  // std dev = 2.34e-07, 441.000 (wgt'ed) examples reached here.  /* #neg=441 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076301
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.262 seconds
Total inference time: 0.947 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083373
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.363 seconds
Parameter learned model CLL: -0.083373


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.47e-08, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 518, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false,true': [0.0, 50, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 436, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.93, 40, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 428, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [7.35e-07, 0, 259], 'true,false,true': [0.0, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.72e-07, 450, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false,true': [0.0, 37, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 503, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.153, 59, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.32e-07, 445, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.142, 42, 209], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 492, 50]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.329, 44, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.67e-07, 493, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.116, 25, 209], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.951, 499, 50]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.135, 64, 259], 'true,false': [0.0, 0, 0], 'false': [2.34e-07, 441, 0]}]]
[{'': [0.12006489994592086, -3.77218633849474e-17], 'true': [4.499189523731908e-15, 4.7580986769649563e-17], 'true,true': [4.499189523731908e-15, nan], 'true,false': [4.7580986769649563e-17, nan], 'true,false,true': [4.7580986769649563e-17, nan]}, {'': [0.09682376950831982, -1.100037492289146e-16], 'true': [0.09682376950831982, nan], 'true,true': [-4.499189523731908e-15, -3.3306690738754695e-17], 'true,true,false': [-3.3306690738754695e-17, nan]}, {'': [0.051660401299229046, -2.6977381906779505e-17], 'true': [0.051660401299229046, nan], 'true,true': [0.051660401299229046, nan], 'true,true,true': [0.051660401299229046, nan]}, {'': [0.045763163812077075, 1.638195751891342e-16], 'true': [2.084990267095275e-15, -7.569702440626067e-17], 'true,false': [-7.569702440626067e-17, nan]}, {'': [0.025330419931461696, 4.237829437933003e-17], 'true': [0.025330419931461696, nan], 'true,true': [-1.0836462572403072e-15, -2.100421938480026e-17], 'true,true,false': [-2.100421938480026e-17, nan]}, {'': [0.02342771013582888, 3.89201779419156e-17], 'true': [0.02342771013582888, nan], 'true,true': [0.02342771013582888, nan]}, {'': [0.020235989634143435, 0.008167005741817576], 'true': [0.020235989634143435, nan], 'true,true': [0.020235989634143435, nan]}, {'': [0.01789979123697036, 5.674973675568752e-17], 'true': [0.01789979123697036, nan], 'true,true': [0.01789979123697036, nan]}, {'': [0.013439376399203727, 0.006934568704111997], 'true': [0.013439376399203727, nan], 'true,true': [0.013439376399203727, nan]}, {'': [0.018136938237861895, 1.2386161635273854e-16], 'true': [0.018136938237861895, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.14185106490048743;  // std dev = 2.11e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 437.000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.11231637819360597;  // std dev = 0.000, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1015963294878363;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.10159632948783562;  // std dev = 3.04e-07, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601502;  // std dev = 1.46e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926083;  // std dev = 1.69e-07, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839678;  // std dev = 1.43e-07, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109172;  // std dev = 1.83e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109179;  // std dev = 1.84e-07, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4.21e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333763;  // std dev = 0.000, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06842697784420271;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06842697784420347;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13173757729705657;  // std dev = 0.341, 262.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=259 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202548;  // std dev = 2.23e-07, 444.000 (wgt'ed) examples reached here.  /* #neg=444 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.785 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.181 seconds
Refined model CLL: -0.064374


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.591 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0
Total revision time: 6.591
Best scored revision CLL: -0.064374


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063441, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.591, 'Inference time': 0.803, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076301, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.262, 'Inference time': 0.947}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048865;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 641.000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4584731522563248;  // std dev = 4.578, 379.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936058;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44124877665498746;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.16675215104044125;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783517;  // std dev = 4.14e-07, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3368542901359176;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14485042929365938;  // std dev = 2.98e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926144;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21167333976630673;  // std dev = 0.136, 376.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18593716585440737;  // std dev = 0.118, 297.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05370973881886894;  // std dev = 0.089, 660.000 (wgt'ed) examples reached here.  /* #neg=601 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1416815004577536;  // std dev = 2.749, 388.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0749661136354831;  // std dev = 0.000, 582.000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1296831854180841;  // std dev = 0.122, 301.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050641446906882874;  // std dev = 2.171, 704.000 (wgt'ed) examples reached here.  /* #neg=645 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09403939766880683;  // std dev = 0.143, 419.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=324 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06670747062129641;  // std dev = 1.80e-07, 541.000 (wgt'ed) examples reached here.  /* #neg=541 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076004
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.638 seconds
Total inference time: 0.952 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082861
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.737 seconds
Parameter learned model CLL: -0.082861


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.87e-08, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.77e-08, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 637, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false,true': [0.0, 54, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 641, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.578, 55, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 605, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 324], 'true,false,true': [0.0, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.14e-07, 587, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false,true': [2.98e-08, 63, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 621, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.136, 52, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.55e-07, 595, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.118, 32, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.089, 601, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.749, 64, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 582, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.122, 36, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.171, 645, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.143, 95, 324], 'true,false': [0.0, 0, 0], 'false': [1.8e-07, 541, 0]}]]
[{'': [0.1240592866939137, -3.9598535509393337e-16], 'true': [3.333410365294297e-15, 6.055761952500853e-17], 'true,true': [3.333410365294297e-15, nan], 'true,false': [6.055761952500853e-17, nan], 'true,false,true': [6.055761952500853e-17, nan]}, {'': [0.08741467499573358, -2.8543643441220876e-16], 'true': [0.08741467499573358, nan], 'true,true': [-5.000115547941446e-15, -3.700743415417188e-17], 'true,true,false': [-3.700743415417188e-17, nan]}, {'': [0.05530567235777416, -4.257384160546055e-17], 'true': [0.05530567235777416, nan], 'true,true': [0.05530567235777416, nan], 'true,true,true': [0.05530567235777416, nan]}, {'': [0.040244624316157065, 2.920245911450156e-16], 'true': [-7.675615972717131e-16, -2.413528314402514e-17], 'true,false': [-2.413528314402514e-17, nan]}, {'': [0.03162462847680985, -3.718621402931281e-17], 'true': [0.03162462847680985, nan], 'true,true': [-1.1403772302322595e-15, 1.409807015397024e-17], 'true,true,false': [1.409807015397024e-17, nan]}, {'': [0.018497197118773026, 4.0303894675467866e-17], 'true': [0.018497197118773026, nan], 'true,true': [0.018497197118773026, nan]}, {'': [0.013898781154030372, 0.007893130783690618], 'true': [0.013898781154030372, nan], 'true,true': [0.013898781154030372, nan]}, {'': [0.019476440075759677, -5.417583144218977e-17], 'true': [0.019476440075759677, nan], 'true,true': [0.019476440075759677, nan]}, {'': [0.014839747910533815, 0.006693618146023122], 'true': [0.014839747910533815, nan], 'true,true': [0.014839747910533815, nan]}, {'': [0.02036986392828088, 5.992331297422286e-17], 'true': [0.02036986392828088, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048843;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1123163781936057;  // std dev = 0.000, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1015963294878362;  // std dev = 4.08e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783519;  // std dev = 4.11e-07, 588.000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926142;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0787767547310917;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.0787767547310924;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.0732462257633366;  // std dev = 2.37e-07, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420361;  // std dev = 0.000, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12923115362030008;  // std dev = 0.554, 332.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=324 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.0641918400820253;  // std dev = 2.46e-07, 551.000 (wgt'ed) examples reached here.  /* #neg=551 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063446
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.262 seconds
Total inference time: 0.819 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064375
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.285 seconds
Refined model CLL: -0.064375


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063446
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.922000000000001 seconds
Total inference time: 0.819 seconds
AUC ROC: 1.0
Total revision time: 7.922000000000001
Best scored revision CLL: -0.064375


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063446, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.922000000000001, 'Inference time': 0.819, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076004, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.638, 'Inference time': 0.952}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.15e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5087839147737335;  // std dev = 1.115, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4288839003597095;  // std dev = 8.43e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.1738602993850834;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3284309631804945;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15028441510229118;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21681967433287738;  // std dev = 0.123, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17771480626763234;  // std dev = 0.121, 44.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07493499107342125;  // std dev = 0.034, 78.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=1 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.17574848495296683;  // std dev = 0.499, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07350743728433394;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13902462747431943;  // std dev = 0.097, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0650198940984233;  // std dev = 0.271, 75.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1142895464291984;  // std dev = 0.111, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06461287654431278;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099551
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.922 seconds
Total inference time: 0.929 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074409
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.819 seconds
Parameter learned model CLL: -0.074409


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.94e-08, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.15e-08, 73, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 73, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.115, 3, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.83e-08, 63, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [8.43e-08, 0, 40], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.83e-08, 65, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.123, 5, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 64, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.121, 5, 39], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.034, 77, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.499, 2, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 71, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.097, 3, 39], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.271, 74, 1]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.111, 4, 40], 'true,false': [0.0, 0, 0], 'false': [0.0, 86, 0]}]]
[{'': [0.0826446280991747, 6.995925908596876e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,true': [1.5099033134902129e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05899888532770001, -3.0417069167812506e-17], 'true': [0.05899888532770001, nan], 'true,true': [-8.881784197001252e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.028932418044309283, 3.700743415417188e-17], 'true': [0.028932418044309283, nan], 'true,true': [0.028932418044309283, nan], 'true,true,true': [0.028932418044309283, nan]}, {'': [0.030024840522809303, 3.586874387250506e-17], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01039312532446395, -1.460819769243627e-18], 'true': [0.01039312532446395, nan], 'true,true': [-4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.015216725233281448, 4.336808689942018e-18], 'true': [0.015216725233281448, nan], 'true,true': [0.015216725233281448, nan]}, {'': [0.014533770632084513, 0.0011364543961075995], 'true': [0.014533770632084513, nan], 'true,true': [0.014533770632084513, nan]}, {'': [0.00591984236413034, -1.7200638409685523e-17], 'true': [0.00591984236413034, nan], 'true,true': [0.00591984236413034, nan]}, {'': [0.009483187461106888, 0.0009781434658076786], 'true': [0.009483187461106888, nan], 'true,true': [0.009483187461106888, nan]}, {'': [0.012387630262268919, -1.0327656043024712e-17], 'true': [0.012387630262268919, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7.15e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 4.21e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.6289464782031672;  // std dev = 0.261, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.5472250295220777;  // std dev = 0.152, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else return -0.11231637819360625;  // std dev = 5.67e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43262163118164587;  // std dev = 0.074, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.3261152278834801;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.33102472172208;  // std dev = 0.067, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.2560340917475978;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26222743802214404;  // std dev = 0.058, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.2117655296855247;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.17987829129995617;  // std dev = 0.095, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.20515464527282387;  // std dev = 0.077, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else return -0.07647575346721068;  // std dev = 0.314, 89.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=1 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18471935754754792;  // std dev = 0.060, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.2092209560086945;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07340257398641895;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15737906367140958;  // std dev = 0.029, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else return -0.1731219853243592;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0652536175801536;  // std dev = 0.270, 82.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13951858342864049;  // std dev = 0.080, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14026896422595128;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06451204113086044;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.896 seconds
Total inference time: 0.893 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06756
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.718 seconds
Refined model CLL: -0.06756


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.355 seconds
Total inference time: 0.893 seconds
AUC ROC: 1.0
Total revision time: 3.355
Best scored revision CLL: -0.06756


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079087, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.355, 'Inference time': 0.893, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099551, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.922, 'Inference time': 0.929}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004881;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109537;  // std dev = 2.98e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 4.21e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4953500039426981;  // std dev = 1.802, 89.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 8.43e-08, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43217753316432067;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.1719391937646816;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783645;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33067142278734457;  // std dev = 1.05e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14882015287499747;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926083;  // std dev = 6.32e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23486098130491184;  // std dev = 0.100, 87.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 6.50e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18214612710486563;  // std dev = 0.113, 82.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=74 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06496602209170084;  // std dev = 0.063, 151.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15901715313079778;  // std dev = 1.028, 89.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07418925812944722;  // std dev = 4.21e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13800476881636387;  // std dev = 0.099, 80.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=74 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0554179755311811;  // std dev = 0.703, 138.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.125426934157971;  // std dev = 0.099, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06576392703386467;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100819
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.149 seconds
Total inference time: 0.997 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076315
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.079 seconds
Parameter learned model CLL: -0.076315


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 154, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [2.98e-08, 0, 81], 'true,true,false,true': [0.0, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.802, 8, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.43e-08, 157, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 150, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.05e-08, 0, 81], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 130, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.1, 6, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.5e-08, 155, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.113, 8, 74], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.063, 144, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.028, 8, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 142, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.099, 6, 74], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.703, 131, 7]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.099, 7, 81], 'true,false': [0.0, 0, 0], 'false': [0.0, 146, 0]}]]
[{'': [0.09781427363844981, -1.2688263138573217e-16], 'true': [-7.894919286223335e-16, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan], 'true,false,true': [-1.1102230246251566e-17, nan], 'true,true': [-7.894919286223335e-16, nan]}, {'': [0.06424978612186673, 1.161017542091667e-17], 'true': [0.06424978612186673, nan], 'true,true': [7.894919286223335e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.036469968590482536, 4.5257499093000014e-17], 'true': [0.036469968590482536, nan], 'true,true': [0.036469968590482536, nan], 'true,true,true': [0.036469968590482536, nan]}, {'': [0.023433625525317397, -5.921189464667501e-17], 'true': [-1.3158198810372225e-16, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan]}, {'': [0.014762493746828179, 3.0744637605004337e-17], 'true': [0.014762493746828179, nan], 'true,true': [1.0965165675310187e-16, -4.625929269271485e-18], 'true,true,false': [-4.625929269271485e-18, nan]}, {'': [0.009911680527087408, 2.721837092629416e-17], 'true': [0.009911680527087408, nan], 'true,true': [0.009911680527087408, nan]}, {'': [0.012659383427214697, 0.0039237189127556416], 'true': [0.012659383427214697, nan], 'true,true': [0.012659383427214697, nan]}, {'': [0.011882207144806634, 1.2509555207044018e-17], 'true': [0.011882207144806634, nan], 'true,true': [0.011882207144806634, nan]}, {'': [0.009897037776552198, 0.0035814382141421933], 'true': [0.009897037776552198, nan], 'true,true': [0.009897037776552198, nan]}, {'': [0.009804452589570245, -1.0645974208734377e-17], 'true': [0.009804452589570245, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048813;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6631455421616647;  // std dev = 0.211, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else return 0.6466356492161832;  // std dev = 0.237, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839122;  // std dev = 6.32e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5718746715472444;  // std dev = 0.017, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.21581114495523393;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360636;  // std dev = 7.30e-08, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42987478799838186;  // std dev = 0.017, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.18127831898142435;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10159632948783642;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32910614345571143;  // std dev = 0.016, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.15609585752472022;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926074;  // std dev = 7.30e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2608929572201476;  // std dev = 0.014, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1373032117920681;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839678;  // std dev = 6.83e-08, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.91e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21379119095115934;  // std dev = 0.012, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12090803622298857;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1800495620506097;  // std dev = 0.010, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10881288450498082;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07337091567300098;  // std dev = 0.023, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15498058388560765;  // std dev = 0.009, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09837385708904345;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06852716522995479;  // std dev = 0.021, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13575093346746592;  // std dev = 0.008, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09025881823778516;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06417833274612125;  // std dev = 6.14e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07031
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.141 seconds
Total inference time: 0.872 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064763
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.915 seconds
Refined model CLL: -0.064763


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07031
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.284 seconds
Total inference time: 0.872 seconds
AUC ROC: 1.0
Total revision time: 4.284
Best scored revision CLL: -0.064763


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07031, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.284, 'Inference time': 0.872, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100819, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.149, 'Inference time': 0.997}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5240688047959758;  // std dev = 1.597, 128.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360653;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4251441191380034;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.17606666821303943;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783659;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3258895891846572;  // std dev = 1.62e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15196217908644763;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 5.96e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23176411859513124;  // std dev = 0.099, 131.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1917079735402973;  // std dev = 0.094, 121.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=113 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06716070925979367;  // std dev = 0.057, 229.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15087780836531875;  // std dev = 1.324, 136.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07403865637680306;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12513680022832346;  // std dev = 0.115, 126.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=113 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05943777605703405;  // std dev = 0.809, 242.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11428229139402617;  // std dev = 0.115, 136.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=122 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06539234731252962;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100342
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.434 seconds
Total inference time: 0.998 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075537
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.167 seconds
Parameter learned model CLL: -0.075537


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.14e-08, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false,true': [0.0, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 249, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.597, 6, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 188, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 122], 'true,false,true': [2.63e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 249, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.62e-08, 0, 122], 'true,true,false,true': [0.0, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 229, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.099, 9, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.3e-08, 218, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.094, 8, 113], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.057, 220, 9]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.324, 14, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 210, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.115, 13, 113], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.809, 233, 9]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.115, 14, 122], 'true,false': [0.0, 0, 0], 'false': [0.0, 237, 0]}]]
[{'': [0.0639822854146069, -2.1814908554038162e-16], 'true': [3.843919718046444e-15, -9.25185853854297e-18], 'true,true': [3.843919718046444e-15, nan], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan]}, {'': [0.045676090594181346, -7.84735953148705e-17], 'true': [0.045676090594181346, nan], 'true,true': [-1.3395477805313363e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.019917349235839044, -2.598394312952494e-17], 'true': [0.019917349235839044, nan], 'true,true': [0.019917349235839044, nan], 'true,true,true': [0.019917349235839044, nan]}, {'': [0.02312667927791599, -6.955614130181704e-17], 'true': [-9.60979929511611e-16, 6.1679056923619804e-18], 'true,false': [6.1679056923619804e-18, nan]}, {'': [0.022263649196274566, 1.5514033531879916e-17], 'true': [0.022263649196274566, nan], 'true,true': [2.766457372836456e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.009836724793773108, 3.1575150241632894e-17], 'true': [0.009836724793773108, nan], 'true,true': [0.009836724793773108, nan]}, {'': [0.008884074484335699, 0.0032983503028974053], 'true': [0.008884074484335699, nan], 'true,true': [0.008884074484335699, nan]}, {'': [0.012885109461574484, -8.458842092382146e-18], 'true': [0.012885109461574484, nan], 'true,true': [0.012885109461574484, nan]}, {'': [0.01328527339878448, 0.0027040033159866383], 'true': [0.01328527339878448, nan], 'true,true': [0.01328527339878448, nan]}, {'': [0.01324642822230577, -1.5927250142301823e-17], 'true': [0.01324642822230577, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048846;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109551;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.719473412210954;  // std dev = 2.06e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746284;  // std dev = 3.67e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360688;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 1.19e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783659;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601499;  // std dev = 1.12e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 6.50e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839678;  // std dev = 9.31e-08, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109144;  // std dev = 6.83e-08, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527778;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07324622576333661;  // std dev = 1.28e-07, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442027;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367136;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.134007030008011;  // std dev = 5.16e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06419184008202619;  // std dev = 5.89e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06419184008202625;  // std dev = 1.05e-08, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066318
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.419 seconds
Total inference time: 0.886 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063584
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.088 seconds
Refined model CLL: -0.063584


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066318
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.108 seconds
Total inference time: 0.886 seconds
AUC ROC: 1.0
Total revision time: 5.108
Best scored revision CLL: -0.063584


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066318, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.108, 'Inference time': 0.886, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100342, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.434, 'Inference time': 0.998}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 1.23e-07, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839202;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.502555366638043;  // std dev = 2.397, 177.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936066;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4304102076572478;  // std dev = 3.67e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.17296749149606636;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783659;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.32946894402495486;  // std dev = 2.61e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14960431702766291;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892605;  // std dev = 1.46e-07, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2342116895114905;  // std dev = 0.099, 175.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.10e-07, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18262514691547663;  // std dev = 0.111, 169.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=153 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06987543208793463;  // std dev = 0.051, 334.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16177629667860718;  // std dev = 1.356, 177.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07385275838422369;  // std dev = 1.15e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1421924855363326;  // std dev = 0.091, 163.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=153 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06042480024514396;  // std dev = 0.847, 319.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11646431024925212;  // std dev = 0.111, 179.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=163 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06517780007420627;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.599 seconds
Total inference time: 0.962 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075013
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.434 seconds
Parameter learned model CLL: -0.075013


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [8.02e-08, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.23e-07, 306, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false,true': [0.0, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 313, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.397, 14, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 334, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.67e-07, 0, 163], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 322, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.61e-08, 0, 163], 'true,true,false,true': [7.45e-09, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 285, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.099, 12, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.1e-07, 321, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.111, 16, 153], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.051, 324, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.356, 14, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.15e-07, 317, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.091, 10, 153], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.847, 309, 10]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.111, 16, 163], 'true,false': [0.0, 0, 0], 'false': [0.0, 293, 0]}]]
[{'': [0.023378392914775652, 4.9343245538895844e-17], 'true': [6.3643705166242106e-15, 0.0], 'true,true': [6.3643705166242106e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0353999294816905, -8.796655274985266e-17], 'true': [0.0353999294816905, nan], 'true,true': [-2.7898610483832155e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.03247203482388236, -3.722903555629267e-17], 'true': [0.03247203482388236, nan], 'true,true': [0.03247203482388236, nan], 'true,true,true': [0.03247203482388236, nan]}, {'': [0.02963330113152321, -3.5858134956837354e-17], 'true': [8.28239998738767e-16, -1.0408340855860843e-17], 'true,false': [-1.0408340855860843e-17, nan]}, {'': [0.01671756309929087, 7.47939721852737e-17], 'true': [0.01671756309929087, nan], 'true,true': [6.7566947265531e-16, 3.96508223080413e-18], 'true,true,false': [3.96508223080413e-18, nan]}, {'': [0.009849019963897112, 3.735329802477162e-17], 'true': [0.009849019963897112, nan], 'true,true': [0.009849019963897112, nan]}, {'': [0.012325807410345202, 0.0025671668514415007], 'true': [0.012325807410345202, nan], 'true,true': [0.012325807410345202, nan]}, {'': [0.010388464434318496, 4.202737001735608e-17], 'true': [0.010388464434318496, nan], 'true,true': [0.010388464434318496, nan]}, {'': [0.00823215432136817, 0.0022498003637289555], 'true': [0.00823215432136817, nan], 'true,true': [0.00823215432136817, nan]}, {'': [0.012244252054744656, -8.336145577390255e-18], 'true': [0.012244252054744656, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048774;  // std dev = 1.52e-07, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839205;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11231637819360694;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10159632948783653;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926051;  // std dev = 9.42e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839678;  // std dev = 1.07e-07, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109143;  // std dev = 2.11e-08, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07324622576333706;  // std dev = 8.30e-08, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15274385809367144;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then return -0.06842697784420307;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.12114802438826044;  // std dev = 0.205, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06842697784420267;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13293420473479134;  // std dev = 0.198, 164.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=163 */
%   | else return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06419184008202593;  // std dev = 1.24e-07, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066793
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.625 seconds
Total inference time: 0.911 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.116 seconds
Refined model CLL: -0.063613


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066793
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.773999999999999 seconds
Total inference time: 0.911 seconds
AUC ROC: 1.0
Total revision time: 5.773999999999999
Best scored revision CLL: -0.063613


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066793, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.773999999999999, 'Inference time': 0.911, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100269, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.599, 'Inference time': 0.962}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004874;  // std dev = 2.83e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5096347370928658;  // std dev = 2.496, 219.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 0.000, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42867551043514246;  // std dev = 4.84e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.1739825393711171;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783583;  // std dev = 2.44e-07, 417.000 (wgt'ed) examples reached here.  /* #neg=417 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.32828928130093804;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1503774780527043;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926075;  // std dev = 1.75e-07, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2455251410126467;  // std dev = 0.075, 212.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.25e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18373013720563316;  // std dev = 0.106, 212.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0719559272974483;  // std dev = 0.047, 395.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1613041115107882;  // std dev = 1.445, 220.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07371058167818495;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1376814890048799;  // std dev = 0.095, 208.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.061395606691911846;  // std dev = 0.842, 363.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12547374129980693;  // std dev = 0.090, 218.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=204 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06500077215292328;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100842
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.834 seconds
Total inference time: 1.015 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074826
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.552 seconds
Parameter learned model CLL: -0.074826


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.58e-08, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.83e-07, 385, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 204], 'true,true,false,true': [0.0, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 398, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.496, 15, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 406, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.84e-07, 0, 204], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.44e-07, 417, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 204], 'true,true,false,true': [0.0, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.75e-07, 406, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.075, 8, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.25e-07, 365, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.106, 18, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.047, 385, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.445, 16, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 391, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.095, 14, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.842, 353, 10]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.09, 14, 204], 'true,false': [0.0, 0, 0], 'false': [0.0, 373, 0]}]]
[{'': [0.10612366230678309, 2.0762612408574356e-16], 'true': [5.712206307091002e-15, 2.3790493384824782e-17], 'true,true': [5.712206307091002e-15, nan], 'true,false': [2.3790493384824782e-17, nan], 'true,false,true': [2.3790493384824782e-17, nan]}, {'': [0.05804880761435235, -1.2720143196710337e-16], 'true': [0.05804880761435235, nan], 'true,true': [-3.692035783851501e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.028442881603391104, -1.968868418054465e-17], 'true': [0.028442881603391104, nan], 'true,true': [0.028442881603391104, nan], 'true,true,true': [0.028442881603391104, nan]}, {'': [0.017631442961421204, 1.4270492594702252e-16], 'true': [1.1494073666707504e-15, -1.0092936587501423e-17], 'true,false': [-1.0092936587501423e-17, nan]}, {'': [0.022282594138204135, 7.547328935875448e-17], 'true': [0.022282594138204135, nan], 'true,true': [-6.269494727295002e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.005593871876986697, 4.258389683493751e-17], 'true': [0.005593871876986697, nan], 'true,true': [0.005593871876986697, nan]}, {'': [0.011150895561527256, 0.002205551636568817], 'true': [0.011150895561527256, nan], 'true,true': [0.011150895561527256, nan]}, {'': [0.009495068232014158, -1.1357780303070656e-18], 'true': [0.009495068232014158, nan], 'true,true': [0.009495068232014158, nan]}, {'': [0.009007030855594008, 0.0019527615211198223], 'true': [0.009007030855594008, nan], 'true,true': [0.009007030855594008, nan]}, {'': [0.008141783776287803, -4.762350775871985e-18], 'true': [0.008141783776287803, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.14185106490048752;  // std dev = 2.44e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.1123163781936062;  // std dev = 0.000, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.10159632948783615;  // std dev = 1.62e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926047;  // std dev = 1.98e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839678;  // std dev = 1.30e-07, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.209757715632535;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(B) )
%   | then return -0.07877675473109143;  // std dev = 2.11e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
%   | else if ( female(A) )
%   | | then return 0.2097577156325361;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1520508215598105;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17726447965289888;  // std dev = 0.017, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07512514087853525;  // std dev = 0.027, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07345212917969249;  // std dev = 0.038, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15272212029026014;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06830730399140582;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06290162305057374;  // std dev = 0.702, 392.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( female(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13599379092121502;  // std dev = 0.064, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.06910021939498048;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.11071257621031713;  // std dev = 0.066, 140.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=123 */
%   else return -0.06451212791892756;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0709
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.7 seconds
Total inference time: 0.948 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064407
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.247 seconds
Refined model CLL: -0.064407


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0709
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.333 seconds
Total inference time: 0.948 seconds
AUC ROC: 1.0
Total revision time: 6.333
Best scored revision CLL: -0.064407


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0709, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.333, 'Inference time': 0.948, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100842, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.834, 'Inference time': 1.015}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.407855117166541;  // std dev = 2.569, 86.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.45376311097189864;  // std dev = 1.12e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.15983710587545127;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3454182285204252;  // std dev = 7.45e-09, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1395205667505322;  // std dev = 9.13e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4.08e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22977469876478793;  // std dev = 0.122, 75.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 5.77e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.20961431088585694;  // std dev = 0.083, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.057378040342881007;  // std dev = 0.086, 138.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16176622260757656;  // std dev = 1.005, 75.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07471212716949334;  // std dev = 5.58e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1132164832862693;  // std dev = 0.134, 66.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.047066097963087465;  // std dev = 0.905, 128.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10501917076913539;  // std dev = 0.129, 83.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06671749690152476;  // std dev = 2.58e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079513
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.089 seconds
Total inference time: 0.721 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080348
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.872 seconds
Parameter learned model CLL: -0.080348


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [7.45e-09, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.74e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.569, 19, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.12e-07, 0, 67], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 133, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [7.45e-09, 0, 67], 'true,true,false,true': [9.13e-09, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.08e-08, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.122, 8, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 113, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.083, 3, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.086, 127, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.005, 8, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 136, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.134, 10, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.905, 117, 11]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.129, 16, 67], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 103, 0]}]]
[{'': [0.1043975069252067, -2.0655312086049424e-17], 'true': [-9.544603913195376e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.11108816103391964, 5.50018746144573e-17], 'true': [0.11108816103391964, nan], 'true,true': [3.1815346377317917e-16, 3.469446951953614e-18], 'true,true,false': [3.469446951953614e-18, nan]}, {'': [0.07673118368834325, 6.111319401606367e-17], 'true': [0.07673118368834325, nan], 'true,true': [0.07673118368834325, nan], 'true,true,true': [0.07673118368834325, nan]}, {'': [0.04850347729475286, -3.3390166154140044e-17], 'true': [1.8558952053435452e-16, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan]}, {'': [0.026574629036334795, 1.4356332214980473e-17], 'true': [0.026574629036334795, nan], 'true,true': [5.3025577295529864e-17, 8.326672684688674e-18], 'true,true,false': [8.326672684688674e-18, nan]}, {'': [0.01491005041752795, 2.947494755642009e-17], 'true': [0.01491005041752795, nan], 'true,true': [0.01491005041752795, nan]}, {'': [0.006955469188844394, 0.007313704108748017], 'true': [0.006955469188844394, nan], 'true,true': [0.006955469188844394, nan]}, {'': [0.013461506824470592, 2.2857532859929692e-17], 'true': [0.013461506824470592, nan], 'true,true': [0.013461506824470592, nan]}, {'': [0.018039704196255675, 0.006400250793796454], 'true': [0.018039704196255675, nan], 'true,true': [0.018039704196255675, nan]}, {'': [0.016646715165961924, 6.467318590049456e-18], 'true': [0.016646715165961924, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6111505851930896;  // std dev = 0.282, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | else return 0.6490635746493424;  // std dev = 0.234, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5773731521413035;  // std dev = 0.038, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.2130046785286333;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360618;  // std dev = 1.03e-07, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43405576647480587;  // std dev = 0.038, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.17970792034989283;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783628;  // std dev = 2.98e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.33195821612428883;  // std dev = 0.034, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.15390029950381082;  // std dev = 0.009, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 4.94e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26283699244572656;  // std dev = 0.030, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.13368098127579808;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0851847513883968;  // std dev = 5.96e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21516051722320173;  // std dev = 0.026, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1200558556173383;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109166;  // std dev = 4.94e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18105098643680134;  // std dev = 0.023, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10839677350284324;  // std dev = 0.007, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333713;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15573835834557465;  // std dev = 0.020, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09812429615826249;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420265;  // std dev = 5.87e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13339227560116235;  // std dev = 0.200, 68.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | else return -0.08772676475991364;  // std dev = 0.025, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06419184008202626;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.135 seconds
Total inference time: 0.699 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.764 seconds
Refined model CLL: -0.065879


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.8600000000000003 seconds
Total inference time: 0.699 seconds
AUC ROC: 1.0
Total revision time: 3.8600000000000003
Best scored revision CLL: -0.065879


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065372, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.8600000000000003, 'Inference time': 0.699, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079513, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.089, 'Inference time': 0.721}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4922072515492663;  // std dev = 2.377, 148.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360672;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4329489287442247;  // std dev = 2.46e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.17149220213482805;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33119648063688994;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1484789967182186;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.99e-08, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20689353521632364;  // std dev = 0.137, 156.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.94e-08, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1786485987073917;  // std dev = 0.124, 125.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=110 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05432205377851432;  // std dev = 0.088, 269.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14750977809111618;  // std dev = 1.651, 157.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07492366297192642;  // std dev = 1.17e-07, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1274540616726268;  // std dev = 0.122, 125.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=110 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05066826182452007;  // std dev = 1.364, 291.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12261733051301534;  // std dev = 0.116, 155.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06667033241772524;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07984
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.491 seconds
Total inference time: 0.74 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082183
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.074 seconds
Parameter learned model CLL: -0.082183


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 250, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 248, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.377, 14, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [2.46e-07, 0, 134], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [1.05e-08, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.137, 22, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 251, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.124, 15, 110], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 245, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.651, 23, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.17e-07, 230, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.122, 15, 110], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.364, 267, 24]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.116, 21, 134], 'true,false': [0.0, 0, 0], 'false': [0.0, 259, 0]}]]
[{'': [0.11712799167534296, -1.5276668818842153e-16], 'true': [4.772301956597688e-15, 5.28677630773884e-18], 'true,true': [4.772301956597688e-15, nan], 'true,false': [5.28677630773884e-18, nan], 'true,false,true': [5.28677630773884e-18, nan]}, {'': [0.08926115588533495, -5.730183352904034e-17], 'true': [0.08926115588533495, nan], 'true,true': [-1.908920782639075e-15, -2.413528314402514e-18], 'true,true,false': [-2.413528314402514e-18, nan]}, {'': [0.03818121988690512, -6.480271731717652e-17], 'true': [0.03818121988690512, nan], 'true,true': [0.03818121988690512, nan], 'true,true,true': [0.03818121988690512, nan]}, {'': [0.0330774132788474, -7.985814738531828e-17], 'true': [4.507174070120039e-16, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan]}, {'': [0.028769238222271273, 1.9232209875396412e-17], 'true': [0.028769238222271273, nan], 'true,true': [-3.7117904106870904e-16, 4.827056628805028e-18], 'true,true,false': [4.827056628805028e-18, nan]}, {'': [0.01870791783094087, 3.18470349693272e-17], 'true': [0.01870791783094087, nan], 'true,true': [0.01870791783094087, nan]}, {'': [0.015272887377039456, 0.0077960443511750415], 'true': [0.015272887377039456, nan], 'true,true': [0.015272887377039456, nan]}, {'': [0.017366723295334997, 5.985550219718235e-17], 'true': [0.017366723295334997, nan], 'true,true': [0.017366723295334997, nan]}, {'': [0.014973397567858605, 0.006390812369634449], 'true': [0.014973397567858605, nan], 'true,true': [0.014973397567858605, nan]}, {'': [0.013358514177099034, -4.629501415425363e-17], 'true': [0.013358514177099034, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.14185106490048838;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 5.96e-08, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.610131076232921;  // std dev = 0.284, 85.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=74 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.570172721713793;  // std dev = 0.154, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.15181763307678928;  // std dev = 0.223, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360674;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42868986200615344;  // std dev = 0.154, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12931192370437128;  // std dev = 0.208, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783658;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3283642705778288;  // std dev = 0.138, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10412009646616174;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 6.99e-08, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2604257394223266;  // std dev = 0.121, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1119809153026018;  // std dev = 0.196, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21348507098300745;  // std dev = 0.105, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10490998872340564;  // std dev = 0.157, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109143;  // std dev = 6.83e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17984010724233304;  // std dev = 0.092, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1028866466829197;  // std dev = 0.137, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07324622576333675;  // std dev = 1.21e-07, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15483158490483154;  // std dev = 0.082, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08860673230272535;  // std dev = 0.123, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06842697784420261;  // std dev = 5.87e-08, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.12859580868232273;  // std dev = 5.77e-08, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | | else return -0.05411909229410564;  // std dev = 4.56e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.09068511123834813;  // std dev = 0.100, 93.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=74 */
%   else return -0.06419184008202626;  // std dev = 1.83e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066739
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.496 seconds
Total inference time: 0.71 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066076
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.08 seconds
Refined model CLL: -0.066076


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066739
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.141 seconds
Total inference time: 0.71 seconds
AUC ROC: 1.0
Total revision time: 5.141
Best scored revision CLL: -0.066076


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066739, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.141, 'Inference time': 0.71, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07984, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.491, 'Inference time': 0.74}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 2.04e-07, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46902814171095203;  // std dev = 3.412, 232.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360658;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4386480988874553;  // std dev = 2.53e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.16822388630393367;  // std dev = 5.59e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 1.55e-07, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3350797405417597;  // std dev = 3.99e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14597919446921012;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.71e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20967418372909916;  // std dev = 0.137, 235.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.12e-07, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17413492920226403;  // std dev = 0.131, 190.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=164 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.049865582412618445;  // std dev = 0.091, 393.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15718423201053452;  // std dev = 1.902, 231.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07523312720071566;  // std dev = 1.98e-07, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13815084776128697;  // std dev = 0.110, 181.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=164 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04428920488809052;  // std dev = 1.662, 378.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11182838159692067;  // std dev = 0.126, 242.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06732831611334694;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080283
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.857 seconds
Total inference time: 0.733 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08259
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.319 seconds
Parameter learned model CLL: -0.08259


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.59e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.04e-07, 350, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 33, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 367, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.412, 30, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 344, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [2.53e-07, 0, 202], 'true,false,true': [5.59e-09, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.55e-07, 374, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.99e-08, 0, 202], 'true,true,false,true': [0.0, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.71e-07, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.137, 33, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.12e-07, 333, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.131, 26, 164], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 355, 38]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.902, 29, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.98e-07, 404, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.11, 17, 164], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.662, 340, 38]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.126, 40, 202], 'true,false': [0.0, 0, 0], 'false': [0.0, 368, 0]}]]
[{'': [0.1468702491903021, 1.1926967350258825e-16], 'true': [5.768762805181012e-15, 4.794144879063176e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [4.794144879063176e-17, nan], 'true,false,true': [4.794144879063176e-17, nan]}, {'': [0.08617052950824229, -1.1132481554824457e-16], 'true': [0.08617052950824229, nan], 'true,true': [-3.728590593592605e-15, -1.3457248783335231e-17], 'true,true,false': [-1.3457248783335231e-17, nan]}, {'': [0.050192294676695046, -3.872871016134267e-17], 'true': [0.050192294676695046, nan], 'true,true': [0.050192294676695046, nan], 'true,true,true': [0.050192294676695046, nan]}, {'': [0.04728181459315222, 6.411983243824433e-17], 'true': [3.165784466257872e-16, 3.0839528461809905e-17], 'true,false': [3.0839528461809905e-17, nan]}, {'': [0.025405162580759918, 8.096654102238711e-17], 'true': [0.025405162580759918, nan], 'true,true': [1.6004799246081465e-15, -1.914177628664063e-17], 'true,true,false': [-1.914177628664063e-17, nan]}, {'': [0.01870536152879028, 3.734083446186713e-17], 'true': [0.01870536152879028, nan], 'true,true': [0.01870536152879028, nan]}, {'': [0.017080481383889148, 0.008199229683707948], 'true': [0.017080481383889148, nan], 'true,true': [0.017080481383889148, nan]}, {'': [0.015659692108585147, 9.67323031356572e-17], 'true': [0.015659692108585147, nan], 'true,true': [0.015659692108585147, nan]}, {'': [0.012020464108894813, 0.007310883897881645], 'true': [0.012020464108894813, nan], 'true,true': [0.012020464108894813, nan]}, {'': [0.01594709934443382, -1.206764157201257e-18], 'true': [0.01594709934443382, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048757;  // std dev = 2.23e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360654;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783631;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783606;  // std dev = 1.81e-07, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601504;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3207118471601502;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.72e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694884;  // std dev = 2.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839682;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 2.89e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109148;  // std dev = 4.71e-08, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527786;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07324622576333714;  // std dev = 6.50e-08, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367153;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.06842697784420328;  // std dev = 0.000, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13015850825868985;  // std dev = 0.393, 206.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=202 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06419184008202569;  // std dev = 1.74e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063884
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.717 seconds
Total inference time: 0.682 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064193
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.177 seconds
Refined model CLL: -0.064193


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063884
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.07 seconds
Total inference time: 0.682 seconds
AUC ROC: 1.0
Total revision time: 6.07
Best scored revision CLL: -0.064193


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063884, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.07, 'Inference time': 0.682, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080283, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.857, 'Inference time': 0.733}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 0.000, 518.000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4670599999316519;  // std dev = 3.983, 310.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936059;  // std dev = 0.000, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43913278450582627;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.16794867462951737;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878355;  // std dev = 3.29e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33541033733533737;  // std dev = 4.06e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14576826457765285;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926115;  // std dev = 8.94e-08, 509.000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19834383494961916;  // std dev = 0.148, 324.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.44e-07, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18248471573430644;  // std dev = 0.124, 249.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=219 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05360285483539219;  // std dev = 0.088, 572.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=50 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15902824677230823;  // std dev = 2.173, 307.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07497352596982115;  // std dev = 0.000, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13390421467768338;  // std dev = 0.116, 245.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=219 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046486929177042356;  // std dev = 1.936, 544.000 (wgt'ed) examples reached here.  /* #neg=494 #pos=50 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09970887191059198;  // std dev = 0.139, 337.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06697280238749956;  // std dev = 0.000, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079754
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.437 seconds
Total inference time: 0.718 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.563 seconds
Parameter learned model CLL: -0.081785


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.47e-08, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 518, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 37, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 493, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.983, 41, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 497, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 269], 'true,false,true': [0.0, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.29e-07, 493, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [4.06e-08, 0, 269], 'true,true,false,true': [0.0, 36, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 509, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.148, 55, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.44e-07, 512, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.124, 30, 219], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 522, 50]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.173, 38, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 512, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.116, 26, 219], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.936, 494, 50]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.139, 68, 269], 'true,false': [0.0, 0, 0], 'false': [0.0, 483, 0]}]]
[{'': [0.11882601906640772, -7.201446646217232e-17], 'true': [4.226276495227362e-15, 4.6474452193611206e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [4.6474452193611206e-17, nan], 'true,false,true': [4.6474452193611206e-17, nan]}, {'': [0.07588227240127389, -1.2070578928987504e-16], 'true': [0.07588227240127389, nan], 'true,true': [-4.5432472323694135e-15, -2.100421938480026e-17], 'true,true,false': [-2.100421938480026e-17, nan]}, {'': [0.05116266352680807, -1.0722475891752014e-17], 'true': [0.05116266352680807, nan], 'true,true': [0.05116266352680807, nan], 'true,true,true': [0.05116266352680807, nan]}, {'': [0.05317235236959258, 2.1979263124425005e-16], 'true': [-2.403694756660562e-15, -3.1164155077197375e-17], 'true,false': [-3.1164155077197375e-17, nan]}, {'': [0.024102812037160505, 1.570453001434406e-17], 'true': [0.024102812037160505, nan], 'true,true': [1.6640963699957737e-15, -6.1679056923619804e-18], 'true,true,false': [-6.1679056923619804e-18, nan]}, {'': [0.021846934516156852, 4.0766001685454967e-17], 'true': [0.021846934516156852, nan], 'true,true': [0.021846934516156852, nan]}, {'': [0.015366162426651347, 0.00773572279970317], 'true': [0.015366162426651347, nan], 'true,true': [0.015366162426651347, nan]}, {'': [0.01537544195365867, -3.642919299551295e-17], 'true': [0.01537544195365867, nan], 'true,true': [0.01537544195365867, nan]}, {'': [0.013392260039533104, 0.006892353147693453], 'true': [0.013392260039533104, nan], 'true,true': [0.013392260039533104, nan]}, {'': [0.019274024762018137, -7.723290606088045e-17], 'true': [0.019274024762018137, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048774;  // std dev = 0.000, 516.000 (wgt'ed) examples reached here.  /* #neg=516 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6152302760807764;  // std dev = 0.278, 154.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=135 */
%   | | else return 0.5821742289658116;  // std dev = 0.312, 160.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5849346527300925;  // std dev = 0.066, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.20723839764836563;  // std dev = 0.016, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360596;  // std dev = 0.000, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4398352160235152;  // std dev = 0.067, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1744577822265707;  // std dev = 0.017, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783535;  // std dev = 3.65e-07, 531.000 (wgt'ed) examples reached here.  /* #neg=531 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3358958893671351;  // std dev = 0.060, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.15156348861787605;  // std dev = 0.014, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 1.15e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2655118610151523;  // std dev = 0.053, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.13291368335687198;  // std dev = 0.012, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21703778896652093;  // std dev = 0.046, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11807439382291486;  // std dev = 0.011, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07877675473109197;  // std dev = 1.50e-07, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18241936653245946;  // std dev = 0.040, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10647262539267177;  // std dev = 0.009, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07324622576333711;  // std dev = 9.19e-08, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1567708392823098;  // std dev = 0.036, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09665392570963419;  // std dev = 0.009, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.0684269778442035;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13519512185336818;  // std dev = 1.13e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | | | else return -0.08997050754499104;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.139106763296111;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.08730044970511262;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.0641918400820254;  // std dev = 2.45e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065254
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.887 seconds
Total inference time: 0.675 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065822
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.223 seconds
Refined model CLL: -0.065822


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065254
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.11 seconds
Total inference time: 0.675 seconds
AUC ROC: 1.0
Total revision time: 7.11
Best scored revision CLL: -0.065822


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065254, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.11, 'Inference time': 0.675, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079754, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.437, 'Inference time': 0.718}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048857;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4646300542031692;  // std dev = 4.518, 390.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936057;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43973135666816604;  // std dev = 6.19e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.16760938328427338;  // std dev = 5.59e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783508;  // std dev = 4.43e-07, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33581869223619837;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14550812929443896;  // std dev = 4.94e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926151;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21369485552599307;  // std dev = 0.133, 388.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.63e-07, 651.000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18233972847270782;  // std dev = 0.121, 314.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.054511741409671764;  // std dev = 0.084, 716.000 (wgt'ed) examples reached here.  /* #neg=657 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15439546477421617;  // std dev = 2.461, 388.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07491051676182334;  // std dev = 0.000, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1283222035658989;  // std dev = 0.121, 315.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.048712103394802406;  // std dev = 2.095, 717.000 (wgt'ed) examples reached here.  /* #neg=658 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10550804228927586;  // std dev = 0.135, 408.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06678115522946426;  // std dev = 2.49e-07, 582.000 (wgt'ed) examples reached here.  /* #neg=582 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079689
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.769 seconds
Total inference time: 0.744 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081951
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.572 seconds
Parameter learned model CLL: -0.081951


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.96e-08, 58, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 620, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 40, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 623, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.518, 53, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 595, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [6.19e-07, 0, 337], 'true,false,true': [5.59e-09, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.43e-07, 626, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [4.94e-08, 62, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 611, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.133, 51, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.63e-07, 651, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.121, 36, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.084, 657, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.461, 51, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 626, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.121, 37, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.095, 658, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.135, 71, 337], 'true,false': [0.0, 0, 0], 'false': [2.49e-07, 582, 0]}]]
[{'': [0.12527479570581937, -3.581364595565021e-16], 'true': [3.204821834882351e-15, 6.125368411725002e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [6.125368411725002e-17, nan], 'true,false,true': [6.125368411725002e-17, nan]}, {'': [0.06770743611810497, -2.737243283827031e-16], 'true': [0.06770743611810497, nan], 'true,true': [-5.144582419153248e-15, -2.4980018054066023e-17], 'true,true,false': [-2.4980018054066023e-17, nan]}, {'': [0.05235003219683778, -8.95642103899286e-18], 'true': [0.05235003219683778, nan], 'true,true': [0.05235003219683778, nan], 'true,true,true': [0.05235003219683778, nan]}, {'': [0.037016554459260574, 3.135581960922167e-16], 'true': [1.138555125550309e-15, 3.0982968129074136e-17], 'true,false': [3.0982968129074136e-17, nan]}, {'': [0.030405764333472172, -4.215576787447403e-17], 'true': [0.030405764333472172, nan], 'true,true': [-1.3072299589651695e-15, 3.9395010551215234e-17], 'true,true,false': [3.9395010551215234e-17, nan]}, {'': [0.017703618979248846, 4.092988109217167e-17], 'true': [0.017703618979248846, nan], 'true,true': [0.017703618979248846, nan]}, {'': [0.014665996863131225, 0.007124963455104275], 'true': [0.014665996863131225, nan], 'true,true': [0.014665996863131225, nan]}, {'': [0.015605805361697022, -8.796655274985266e-17], 'true': [0.015605805361697022, nan], 'true,true': [0.015605805361697022, nan]}, {'': [0.014643058528391888, 0.0061219709364926], 'true': [0.014643058528391888, nan], 'true,true': [0.014643058528391888, nan]}, {'': [0.01834286603136117, 1.0682558312544462e-16], 'true': [0.01834286603136117, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1418510649004886;  // std dev = 0.000, 631.000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0.000, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360599;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783624;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783517;  // std dev = 4.06e-07, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601493;  // std dev = 2.92e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716014906;  // std dev = 3.53e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926101;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892614;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 4.17e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253473;  // std dev = 2.86e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109254;  // std dev = 0.000, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527672;  // std dev = 2.98e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333646;  // std dev = 2.67e-07, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936717;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420365;  // std dev = 0.000, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12997391346548212;  // std dev = 0.519, 344.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=337 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.0641918400820252;  // std dev = 2.49e-07, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.162 seconds
Total inference time: 0.688 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064192
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.363 seconds
Refined model CLL: -0.064192


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.866 seconds
Total inference time: 0.688 seconds
AUC ROC: 1.0
Total revision time: 7.866
Best scored revision CLL: -0.064192


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063885, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.866, 'Inference time': 0.688, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079689, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.769, 'Inference time': 0.744}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4266564965169077;  // std dev = 2.400, 83.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 9.66e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4491071453258675;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1623781043546659;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.34222691857310716;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14148416635666153;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 2.79e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2141055030895199;  // std dev = 0.137, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.50e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17866744074017465;  // std dev = 0.130, 67.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.059967980903468505;  // std dev = 0.076, 140.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.17965067649474123;  // std dev = 0.801, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07453328108884523;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.10387463913913346;  // std dev = 0.145, 71.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050751649989601806;  // std dev = 0.828, 118.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08944725228474752;  // std dev = 0.145, 87.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0663388827573554;  // std dev = 4.83e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073596
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.052 seconds
Total inference time: 0.747 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082486
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.903 seconds
Parameter learned model CLL: -0.082486


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 133, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.4, 16, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.66e-08, 139, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [1.29e-08, 19, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.79e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.137, 11, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.5e-08, 124, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.13, 9, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.076, 131, 9]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.801, 5, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 129, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.145, 13, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.828, 109, 9]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.145, 20, 67], 'true,false': [0.0, 0, 0], 'false': [4.83e-08, 121, 0]}]]
[{'': [0.1043975069252067, 6.055761952500853e-17], 'true': [-9.544603913195376e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.06802545256557097, -3.3390166154140044e-18], 'true': [0.06802545256557097, nan], 'true,true': [3.1815346377317917e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.06937116648924521, 6.709261443777925e-17], 'true': [0.06937116648924521, nan], 'true,true': [0.06937116648924521, nan], 'true,true,true': [0.06937116648924521, nan]}, {'': [0.03202442745809803, -2.4868995751603507e-17], 'true': [-8.749220253762427e-16, -1.1895246692412391e-17], 'true,false': [-1.1895246692412391e-17, nan]}, {'': [0.04027203550833489, 6.75787928032704e-18], 'true': [0.04027203550833489, nan], 'true,true': [-5.037429843075337e-16, 8.764918615461762e-18], 'true,true,false': [8.764918615461762e-18, nan]}, {'': [0.018896541351044717, 3.40229636578677e-17], 'true': [0.018896541351044717, nan], 'true,true': [0.018896541351044717, nan]}, {'': [0.016816891422614062, 0.005839106833902201], 'true': [0.016816891422614062, nan], 'true,true': [0.016816891422614062, nan]}, {'': [0.008914215656533732, -1.2048932050195497e-17], 'true': [0.008914215656533732, nan], 'true,true': [0.008914215656533732, nan]}, {'': [0.021009193180332435, 0.005814411966948949], 'true': [0.021009193180332435, nan], 'true,true': [0.021009193180332435, nan]}, {'': [0.021122265402517413, 1.926833348522999e-17], 'true': [0.021122265402517413, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5894860197895164;  // std dev = 0.305, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5658162862658984;  // std dev = 0.122, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14337224707292756;  // std dev = 0.132, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360618;  // std dev = 9.06e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42543738605091436;  // std dev = 0.122, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11986297739104933;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783634;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3454978099222641;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.16581254090934958;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.27618748931673415;  // std dev = 0.122, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3.49e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2640645953647342;  // std dev = 0.046, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11638828452412832;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839682;  // std dev = 5.77e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21602656189287148;  // std dev = 0.040, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11239110851911148;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07877675473109162;  // std dev = 5.58e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18168512348065427;  // std dev = 0.035, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09893203787286552;  // std dev = 0.038, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07324622576333711;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15621871670860463;  // std dev = 0.031, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09243863570054198;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420267;  // std dev = 4.47e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1415614216167742;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.09961023000811683;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.09579919386761775;  // std dev = 0.082, 55.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065018
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.111 seconds
Total inference time: 0.709 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066611
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.785 seconds
Refined model CLL: -0.066611


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065018
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.851 seconds
Total inference time: 0.709 seconds
AUC ROC: 1.0
Total revision time: 3.851
Best scored revision CLL: -0.066611


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065018, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.851, 'Inference time': 0.709, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073596, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.052, 'Inference time': 0.747}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46865438285798533;  // std dev = 2.785, 154.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43874013386089633;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.16817159472704313;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.335142511906687;  // std dev = 1.39e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.145939121939657;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 7.60e-08, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1969549143572048;  // std dev = 0.149, 162.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9.31e-08, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18646033476950105;  // std dev = 0.119, 127.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=113 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.058335153405373236;  // std dev = 0.080, 294.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15568494074604844;  // std dev = 1.556, 154.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07464598865455618;  // std dev = 1.01e-07, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11966288584473886;  // std dev = 0.132, 132.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=113 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050600466506314876;  // std dev = 1.276, 275.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10719364468087927;  // std dev = 0.135, 162.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06644247506491356;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073842
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.642 seconds
Total inference time: 0.766 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083296
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.185 seconds
Parameter learned model CLL: -0.083296


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 250, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.785, 20, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 237, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 134], 'true,false,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 241, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.39e-08, 0, 134], 'true,true,false,true': [0.0, 19, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 270, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.149, 28, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-08, 264, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.119, 14, 113], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 273, 21]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.556, 20, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.01e-07, 250, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.132, 19, 113], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.276, 254, 21]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.135, 28, 134], 'true,false': [0.0, 0, 0], 'false': [0.0, 245, 0]}]]
[{'': [0.12113740959895289, -2.055288905091199e-16], 'true': [4.772301956597688e-15, 5.046468293750712e-18], 'true,true': [4.772301956597688e-15, nan], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [5.046468293750712e-18, nan]}, {'': [0.08067194524399665, -7.460698725481052e-17], 'true': [0.08067194524399665, nan], 'true,true': [-1.908920782639075e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.050377167939833274, -7.495176537553799e-17], 'true': [0.050377167939833274, nan], 'true,true': [0.050377167939833274, nan], 'true,true,true': [0.050377167939833274, nan]}, {'': [0.0446199771073848, -7.370775267220956e-17], 'true': [-2.651278864776493e-16, -1.5139404881252134e-17], 'true,false': [-1.5139404881252134e-17, nan]}, {'': [0.025171731591618146, 2.1382073066854867e-17], 'true': [0.025171731591618146, nan], 'true,true': [2.1210230918211945e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.02215612444415887, 3.2802043909379627e-17], 'true': [0.02215612444415887, nan], 'true,true': [0.02215612444415887, nan]}, {'': [0.014227388408040201, 0.006434587440385331], 'true': [0.014227388408040201, nan], 'true,true': [0.014227388408040201, nan]}, {'': [0.01572652985115917, 4.085620730620576e-17], 'true': [0.01572652985115917, nan], 'true,true': [0.01572652985115917, nan]}, {'': [0.01740040500124484, 0.005917109832789474], 'true': [0.01740040500124484, nan], 'true,true': [0.01740040500124484, nan]}, {'': [0.01830763325840489, -4.712783451470052e-17], 'true': [0.01830763325840489, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048835;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5585366406415553;  // std dev = 0.332, 63.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=51 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109538;  // std dev = 2.67e-07, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5703261128489673;  // std dev = 0.221, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14660114851652525;  // std dev = 0.182, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360667;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4289146728163366;  // std dev = 0.222, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.13089696101846807;  // std dev = 0.203, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.10159632948783656;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.350708502939549;  // std dev = 6.66e-08, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return -0.1596529541013743;  // std dev = 1.67e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.25339275056230315;  // std dev = 0.145, 98.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=83 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 6.32e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26779852839312984;  // std dev = 0.070, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12395570194764462;  // std dev = 0.067, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21864639120910145;  // std dev = 0.061, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11420624444733542;  // std dev = 0.062, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109143;  // std dev = 6.14e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18359404467770812;  // std dev = 0.054, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10147591742753762;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333688;  // std dev = 1.10e-07, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1576585629596311;  // std dev = 0.048, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09483566549890164;  // std dev = 0.059, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06842697784420268;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then return 0.10692238056011584;  // std dev = 0.085, 60.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=51 */
%   | | else return 0.118685767076001;  // std dev = 0.056, 90.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=83 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 2.58e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065287
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.476 seconds
Total inference time: 0.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06713
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.952 seconds
Refined model CLL: -0.06713


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065287
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.255 seconds
Total inference time: 0.693 seconds
AUC ROC: 1.0
Total revision time: 5.255
Best scored revision CLL: -0.06713


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065287, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.255, 'Inference time': 0.693, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073842, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.642, 'Inference time': 0.766}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048757;  // std dev = 2.19e-07, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46160672230791505;  // std dev = 3.556, 235.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 0.000, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4404763431433036;  // std dev = 2.53e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1671880024446845;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783612;  // std dev = 1.70e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33632705458610684;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14518491268138148;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.65e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2104903087866168;  // std dev = 0.137, 235.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.23e-07, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1697501669302171;  // std dev = 0.136, 200.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=170 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05806314614137834;  // std dev = 0.081, 436.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1453090819031794;  // std dev = 2.127, 240.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0746647794487661;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13157906537677114;  // std dev = 0.122, 193.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=170 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04922525857818811;  // std dev = 1.559, 408.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=32 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10224997767728487;  // std dev = 0.139, 250.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06654355410701004;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.874 seconds
Total inference time: 0.743 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08285
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.288 seconds
Parameter learned model CLL: -0.08285


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.71e-08, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.19e-07, 360, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 33, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 358, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.556, 33, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 409, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [2.53e-07, 0, 202], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.7e-07, 381, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 33, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.65e-07, 344, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.137, 33, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.23e-07, 390, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.136, 30, 170], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 404, 32]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.127, 38, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 356, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.122, 23, 170], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.559, 376, 32]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.139, 48, 202], 'true,false': [0.0, 0, 0], 'false': [0.0, 335, 0]}]]
[{'': [0.1489944106607275, 1.3322676295501878e-16], 'true': [5.768762805181012e-15, 4.9343245538895844e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [4.9343245538895844e-17, nan], 'true,false,true': [4.9343245538895844e-17, nan]}, {'': [0.08617052950824229, -1.116425387891219e-16], 'true': [0.08617052950824229, nan], 'true,true': [-3.728590593592605e-15, -1.3457248783335231e-17], 'true,true,false': [-1.3457248783335231e-17, nan]}, {'': [0.0538108660126079, -1.9544268404159236e-17], 'true': [0.0538108660126079, nan], 'true,true': [0.0538108660126079, nan], 'true,true,true': [0.0538108660126079, nan]}, {'': [0.041574225230514676, 7.57632510242889e-17], 'true': [3.165784466257872e-16, -2.2204460492503132e-17], 'true,false': [-2.2204460492503132e-17, nan]}, {'': [0.027986188531081417, 7.874837732806343e-17], 'true': [0.027986188531081417, nan], 'true,true': [-4.0451690402183923e-16, -1.3457248783335231e-17], 'true,true,false': [-1.3457248783335231e-17, nan]}, {'': [0.018726421034139754, 3.8715469576672124e-17], 'true': [0.018726421034139754, nan], 'true,true': [0.018726421034139754, nan]}, {'': [0.018437129436116494, 0.006551885107401103], 'true': [0.018437129436116494, nan], 'true,true': [0.018437129436116494, nan]}, {'': [0.018846591859420798, -8.10837040456575e-17], 'true': [0.018846591859420798, nan], 'true,true': [0.018846591859420798, nan]}, {'': [0.014785906209230903, 0.005954720217299614], 'true': [0.014785906209230903, nan], 'true,true': [0.014785906209230903, nan]}, {'': [0.019405393543278186, -2.0547411202017822e-17], 'true': [0.019405393543278186, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.14185106490048757;  // std dev = 2.13e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6127469215912471;  // std dev = 0.281, 95.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=83 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109553;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.566121489806042;  // std dev = 0.183, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1437729871115077;  // std dev = 0.276, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.11231637819360651;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42563329676894124;  // std dev = 0.183, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.13309582785603147;  // std dev = 0.205, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.10159632948783623;  // std dev = 1.37e-07, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.326282362794273;  // std dev = 0.165, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.12091881101545131;  // std dev = 0.219, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926051;  // std dev = 1.98e-07, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25900560332321615;  // std dev = 0.144, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10558366314429422;  // std dev = 0.199, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 1.26e-07, 415.000 (wgt'ed) examples reached here.  /* #neg=415 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21248358879784648;  // std dev = 0.126, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09859459910118143;  // std dev = 0.192, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07877675473109147;  // std dev = 3.65e-08, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17910690909789137;  // std dev = 0.110, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09291192869258964;  // std dev = 0.177, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07324622576333709;  // std dev = 7.88e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15427629221386532;  // std dev = 0.098, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07731064013579876;  // std dev = 0.150, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420329;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, B), movie(D, A) )
%   | | then return 0.13520846949175172;  // std dev = 0.088, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.08209934875566627;  // std dev = 0.157, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202578;  // std dev = 1.55e-07, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064404
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.584 seconds
Total inference time: 0.705 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06523
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.173 seconds
Refined model CLL: -0.06523


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064404
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.9190000000000005 seconds
Total inference time: 0.705 seconds
AUC ROC: 1.0
Total revision time: 5.9190000000000005
Best scored revision CLL: -0.06523


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064404, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.9190000000000005, 'Inference time': 0.705, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073877, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.874, 'Inference time': 0.743}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 1.74e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4727216583498141;  // std dev = 3.853, 307.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360592;  // std dev = 0.000, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4377388294083917;  // std dev = 4.77e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.16874133368298308;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783534;  // std dev = 3.71e-07, 537.000 (wgt'ed) examples reached here.  /* #neg=537 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3344596917465013;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14637559808378145;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1.46e-07, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21808087395290604;  // std dev = 0.127, 305.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.46e-07, 519.000 (wgt'ed) examples reached here.  /* #neg=519 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18457138370793952;  // std dev = 0.116, 258.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=231 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06020389903412451;  // std dev = 0.078, 554.000 (wgt'ed) examples reached here.  /* #neg=516 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1485421061297596;  // std dev = 2.273, 312.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0745170095445926;  // std dev = 0.000, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12466318684683074;  // std dev = 0.124, 264.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=231 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0507830375952783;  // std dev = 1.691, 518.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11394521925268747;  // std dev = 0.123, 317.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06632333588525453;  // std dev = 2.98e-08, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.472 seconds
Total inference time: 0.746 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082445
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.461 seconds
Parameter learned model CLL: -0.082445


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.8e-08, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.74e-07, 493, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 51, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 472, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.853, 38, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 497, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.77e-07, 0, 269], 'true,false,true': [0.0, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.71e-07, 537, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 39, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 473, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.127, 36, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 519, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.116, 27, 231], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.078, 516, 38]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.273, 43, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 495, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.124, 33, 231], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.691, 480, 38]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.123, 48, 269], 'true,false': [0.0, 0, 0], 'false': [2.98e-08, 498, 0]}]]
[{'': [0.10629458755180035, 6.125368411725002e-17], 'true': [4.226276495227362e-15, 3.900783600034334e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [3.900783600034334e-17, nan], 'true,false,true': [3.900783600034334e-17, nan]}, {'': [0.09564266664560139, -1.3172137580298467e-16], 'true': [0.09564266664560139, nan], 'true,true': [-4.5432472323694135e-15, -3.2653618371328135e-17], 'true,true,false': [-3.2653618371328135e-17, nan]}, {'': [0.04835033888363641, -5.361237945876007e-18], 'true': [0.04835033888363641, nan], 'true,true': [0.04835033888363641, nan], 'true,true,true': [0.04835033888363641, nan]}, {'': [0.0479432334457889, 2.5636434833057616e-16], 'true': [8.452552990454723e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02556866908681045, 4.506613546047147e-17], 'true': [0.02556866908681045, nan], 'true,true': [-9.37705097378571e-16, -1.9927079929169476e-17], 'true,true,false': [-1.9927079929169476e-17, nan]}, {'': [0.0161231746180736, 4.107183443700001e-17], 'true': [0.0161231746180736, nan], 'true,true': [0.0161231746180736, nan]}, {'': [0.01352246777882342, 0.006127041878839098], 'true': [0.01352246777882342, nan], 'true,true': [0.01352246777882342, nan]}, {'': [0.016555345098120223, -3.050309724222652e-17], 'true': [0.016555345098120223, nan], 'true,true': [0.016555345098120223, nan]}, {'': [0.015476909255808712, 0.005520061189928139], 'true': [0.015476909255808712, nan], 'true,true': [0.015476909255808712, nan]}, {'': [0.015020833692773057, 1.783490802610693e-18], 'true': [0.015020833692773057, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.14185106490048738;  // std dev = 2.35e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109552;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.5967478852879223;  // std dev = 0.298, 179.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=153 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5724655657254338;  // std dev = 0.244, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.17236092533249248;  // std dev = 0.301, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.11231637819360606;  // std dev = 0.000, 455.000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43044813113876595;  // std dev = 0.244, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1504658426000219;  // std dev = 0.243, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.10159632948783534;  // std dev = 3.67e-07, 531.000 (wgt'ed) examples reached here.  /* #neg=531 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3295767453428741;  // std dev = 0.220, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.1237010101857579;  // std dev = 0.256, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926118;  // std dev = 6.66e-08, 526.000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26126073219004003;  // std dev = 0.192, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1130288300077312;  // std dev = 0.216, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839678;  // std dev = 1.46e-07, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21407848828160242;  // std dev = 0.167, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10067414098733093;  // std dev = 0.203, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.0787767547310919;  // std dev = 1.63e-07, 484.000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18027740258930444;  // std dev = 0.146, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09059070469636288;  // std dev = 0.200, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07324622576333732;  // std dev = 0.000, 508.000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15516464934806193;  // std dev = 0.130, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08587552018324407;  // std dev = 0.194, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.0684269778442035;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1322509736798565;  // std dev = 0.458, 274.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=269 */
%   | else return -0.07550680071614843;  // std dev = 0.167, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06419184008202547;  // std dev = 2.27e-07, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.052 seconds
Total inference time: 0.706 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065423
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.234 seconds
Refined model CLL: -0.065423


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.218999999999999 seconds
Total inference time: 0.706 seconds
AUC ROC: 1.0
Total revision time: 7.218999999999999
Best scored revision CLL: -0.065423


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:41
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064289, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.218999999999999, 'Inference time': 0.706, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073874, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.472, 'Inference time': 0.746}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048857;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4631544878799038;  // std dev = 4.555, 391.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 0.000, 669.000 (wgt'ed) examples reached here.  /* #neg=669 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44009492080153023;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.16740361842558754;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783519;  // std dev = 4.08e-07, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33606676347141784;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14535031893422556;  // std dev = 3.94e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926147;  // std dev = 0.000, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20112556777705412;  // std dev = 0.146, 403.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.66e-07, 659.000 (wgt'ed) examples reached here.  /* #neg=659 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1691078371951204;  // std dev = 0.138, 341.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05793399027130912;  // std dev = 0.080, 683.000 (wgt'ed) examples reached here.  /* #neg=634 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14720219548074706;  // std dev = 2.728, 399.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07467370331160787;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12959468444160693;  // std dev = 0.125, 330.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04981752496744452;  // std dev = 1.927, 664.000 (wgt'ed) examples reached here.  /* #neg=615 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10368426543508895;  // std dev = 0.137, 417.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0665142394493709;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073818
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.877 seconds
Total inference time: 0.763 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.551 seconds
Parameter learned model CLL: -0.08223


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.77e-08, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 621, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 54, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 616, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.555, 54, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 669, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.04e-06, 0, 337], 'true,false,true': [0.0, 60, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.08e-07, 581, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [3.94e-08, 54, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 613, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.146, 66, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.66e-07, 659, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.138, 53, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 634, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.728, 62, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 605, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.125, 42, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.927, 615, 49]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.137, 80, 337], 'true,false': [0.0, 0, 0], 'false': [0.0, 585, 0]}]]
[{'': [0.12062031445231457, -3.546992722795991e-16], 'true': [3.204821834882351e-15, 6.055761952500853e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [6.055761952500853e-17, nan], 'true,false,true': [6.055761952500853e-17, nan]}, {'': [0.08497659456597553, -2.5953265510717944e-16], 'true': [0.08497659456597553, nan], 'true,true': [-5.144582419153248e-15, -3.700743415417188e-17], 'true,true,false': [-3.700743415417188e-17, nan]}, {'': [0.05306529007646066, -1.5931451474441707e-16], 'true': [0.05306529007646066, nan], 'true,true': [0.05306529007646066, nan], 'true,true,true': [0.05306529007646066, nan]}, {'': [0.0473467980115222, 2.858680972184568e-16], 'true': [3.204821834882351e-15, -5.921189464667501e-17], 'true,false': [-5.921189464667501e-17, nan]}, {'': [0.027587550361437466, -3.912041979103325e-17], 'true': [0.027587550361437466, nan], 'true,true': [-1.7500013966791786e-15, 2.878355989768924e-17], 'true,true,false': [2.878355989768924e-17, nan]}, {'': [0.02124156707118633, 4.1780775433541554e-17], 'true': [0.02124156707118633, nan], 'true,true': [0.02124156707118633, nan]}, {'': [0.019024448963554378, 0.006416939944301682], 'true': [0.019024448963554378, nan], 'true,true': [0.019024448963554378, nan]}, {'': [0.01865289884769572, -1.4387022335638392e-16], 'true': [0.01865289884769572, nan], 'true,true': [0.01865289884769572, nan]}, {'': [0.015641208895456293, 0.0055939395785524725], 'true': [0.015641208895456293, nan], 'true,true': [0.015641208895456293, nan]}, {'': [0.018765795121170024, -9.109522253334618e-18], 'true': [0.018765795121170024, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.1418510649004887;  // std dev = 0.000, 652.000 (wgt'ed) examples reached here.  /* #neg=652 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0.000, 649.000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360585;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783628;  // std dev = 1.83e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1015963294878351;  // std dev = 4.32e-07, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601494;  // std dev = 2.49e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.26927459218118976;  // std dev = 0.136, 217.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926155;  // std dev = 0.000, 638.000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26075305881236477;  // std dev = 0.090, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10013287170032416;  // std dev = 0.123, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21369739409638489;  // std dev = 0.079, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09688366824143788;  // std dev = 0.105, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07877675473109254;  // std dev = 0.000, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1799839412179271;  // std dev = 0.069, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08476290129020392;  // std dev = 0.109, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07324622576333635;  // std dev = 2.91e-07, 659.000 (wgt'ed) examples reached here.  /* #neg=659 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1549328876064157;  // std dev = 0.061, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08115902862555135;  // std dev = 0.100, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420364;  // std dev = 0.000, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202607;  // std dev = 1.12e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13232209586309304;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.06083429978105135;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.10786989912681276;  // std dev = 0.077, 220.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=190 */
%   else return -0.06419184008202522;  // std dev = 2.49e-07, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064476
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.218 seconds
Total inference time: 0.696 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065674
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.386 seconds
Refined model CLL: -0.065674


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064476
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.032 seconds
Total inference time: 0.696 seconds
AUC ROC: 1.0
Total revision time: 8.032
Best scored revision CLL: -0.065674


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064476, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.032, 'Inference time': 0.696, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073818, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.877, 'Inference time': 0.763}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.141851064900488;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.47416177006440546;  // std dev = 1.877, 74.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360617;  // std dev = 1.01e-07, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43738441584469456;  // std dev = 1.63e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.16894343121075056;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3342180626906904;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1465303554187564;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 4.47e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2119008436890028;  // std dev = 0.134, 75.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 5.16e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17698391850076123;  // std dev = 0.127, 63.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05745141769299476;  // std dev = 0.079, 139.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15238014923264373;  // std dev = 1.102, 75.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0747070547350488;  // std dev = 5.58e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.09668431898810709;  // std dev = 0.151, 69.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0521611499665576;  // std dev = 0.886, 131.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12405581307528048;  // std dev = 0.117, 75.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06639671228207257;  // std dev = 1.49e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072825
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.154 seconds
Total inference time: 0.928 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083716
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.833 seconds
Parameter learned model CLL: -0.083716


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 143, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.49e-08, 0, 65], 'true,true,false,true': [7.45e-09, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.74e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.877, 9, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.01e-07, 139, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.63e-07, 0, 65], 'true,false,true': [3.73e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false,true': [0.0, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.47e-08, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.134, 10, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 117, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.127, 8, 55], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.079, 129, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.102, 10, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 114, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.151, 14, 55], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.886, 121, 10]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.117, 10, 65], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 124, 0]}]]
[{'': [0.07736560206308181, -8.074349270001139e-17], 'true': [-8.745141363201234e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-8.745141363201234e-16, nan]}, {'': [0.10409176836137049, 5.50018746144573e-17], 'true': [0.10409176836137049, nan], 'true,true': [2.1862853408003084e-16, 3.96508223080413e-18], 'true,true,false': [3.96508223080413e-18, nan]}, {'': [0.04762476254549717, 7.348238724137727e-17], 'true': [0.04762476254549717, nan], 'true,true': [0.04762476254549717, nan], 'true,true,true': [0.04762476254549717, nan]}, {'': [0.05360462215743496, -1.8350793795457133e-17], 'true': [4.099285014000578e-16, 1.1895246692412391e-17], 'true,false': [1.1895246692412391e-17, nan]}, {'': [0.03040527110499117, 1.6935605460383745e-17], 'true': [0.03040527110499117, nan], 'true,true': [-3.1427851774004433e-16, -4.625929269271485e-18], 'true,true,false': [-4.625929269271485e-18, nan]}, {'': [0.017893392067989435, 2.2773805633336544e-17], 'true': [0.017893392067989435, nan], 'true,true': [0.017893392067989435, nan]}, {'': [0.01602097227873435, 0.0062370388216996505], 'true': [0.01602097227873435, nan], 'true,true': [0.01602097227873435, nan]}, {'': [0.016185258766916306, 2.7268635692547703e-17], 'true': [0.016185258766916306, nan], 'true,true': [0.016185258766916306, nan]}, {'': [0.02286845507144686, 0.005993752404862188], 'true': [0.02286845507144686, nan], 'true,true': [0.02286845507144686, nan]}, {'': [0.013669410633954222, 1.7906822977825105e-18], 'true': [0.013669410633954222, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5546113535301064;  // std dev = 0.335, 41.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109546;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 7.30e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5758018659790025;  // std dev = 0.162, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.15271595142240246;  // std dev = 0.157, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360621;  // std dev = 8.56e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4330865996642137;  // std dev = 0.163, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.13725474727459142;  // std dev = 0.147, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.10159632948783633;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3314431370221855;  // std dev = 0.147, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.13084948019155448;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 4.94e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26257239511746683;  // std dev = 0.128, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11336823014794048;  // std dev = 0.119, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.0851847513883968;  // std dev = 6.05e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21502607820910022;  // std dev = 0.112, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08447965868724029;  // std dev = 0.113, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07877675473109165;  // std dev = 5.05e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18098523404239067;  // std dev = 0.098, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08728270167579084;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333707;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1557099948723626;  // std dev = 0.087, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.0744712199719595;  // std dev = 0.085, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420267;  // std dev = 4.34e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13855716737350757;  // std dev = 0.042, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.12650200766816647;  // std dev = 2.11e-08, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.05793022172785575;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064238
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.026 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066197
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.755 seconds
Refined model CLL: -0.066197


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064238
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.768 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0
Total revision time: 3.768
Best scored revision CLL: -0.066197


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:09:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064238, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.768, 'Inference time': 0.803, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072825, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.154, 'Inference time': 0.928}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4862958007180184;  // std dev = 2.449, 145.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43440078572184143;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.17065391802631374;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.332185047181447;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14783872429667747;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926058;  // std dev = 5.96e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20388507831795524;  // std dev = 0.141, 153.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1697379677734276;  // std dev = 0.134, 123.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05277427026346712;  // std dev = 0.090, 269.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13061342080358987;  // std dev = 1.902, 162.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07503101061944248;  // std dev = 8.56e-08, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1476271227685631;  // std dev = 0.101, 114.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04309007841952705;  // std dev = 1.359, 248.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10501185575809234;  // std dev = 0.136, 161.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=130 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06723371751236541;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073599
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.429 seconds
Total inference time: 0.854 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084309
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.033 seconds
Parameter learned model CLL: -0.084309


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.66e-08, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 260, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [7.45e-09, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 229, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.449, 15, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 249, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 130], 'true,false,true': [0.0, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 254, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [1.49e-08, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 238, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.141, 23, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.56e-08, 236, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.134, 18, 105], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 244, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.902, 32, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.56e-08, 235, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.101, 9, 105], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.359, 223, 25]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.136, 31, 130], 'true,false': [0.0, 0, 0], 'false': [0.0, 238, 0]}]]
[{'': [0.10682980277575331, -1.4005890464501974e-16], 'true': [4.481884948640632e-15, -3.0839528461809902e-18], 'true,true': [4.481884948640632e-15, nan], 'true,false': [-3.0839528461809902e-18, nan], 'true,false,true': [-3.0839528461809902e-18, nan]}, {'': [0.0662106396816672, -4.460284640415476e-17], 'true': [0.0662106396816672, nan], 'true,true': [-1.7490282726402467e-15, 3.7007434154171884e-18], 'true,true,false': [3.7007434154171884e-18, nan]}, {'': [0.04134652393169347, -7.312312290703842e-17], 'true': [0.04134652393169347, nan], 'true,true': [0.04134652393169347, nan], 'true,true,true': [0.04134652393169347, nan]}, {'': [0.042303871367652256, -6.818692592186001e-17], 'true': [-6.832141690000964e-16, -5.551115123125783e-18], 'true,false': [-5.551115123125783e-18, nan]}, {'': [0.02662663711460432, 1.4927368398321432e-17], 'true': [0.02662663711460432, nan], 'true,true': [-7.105427357601002e-16, 1.1102230246251566e-17], 'true,true,false': [1.1102230246251566e-17, nan]}, {'': [0.019742858331189626, 3.104861001070353e-17], 'true': [0.019742858331189626, nan], 'true,true': [0.019742858331189626, nan]}, {'': [0.018082391232968363, 0.008096477789186962], 'true': [0.018082391232968363, nan], 'true,true': [0.018082391232968363, nan]}, {'': [0.022329093697651924, 3.118073175542993e-17], 'true': [0.022329093697651924, nan], 'true,true': [0.022329093697651924, nan]}, {'': [0.01027306573756275, 0.007446024444258005], 'true': [0.01027306573756275, nan], 'true,true': [0.01027306573756275, nan]}, {'': [0.0184975168781801, -3.54524999460134e-17], 'true': [0.0184975168781801, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048846;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5746303177984949;  // std dev = 0.318, 70.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=58 */
%   | | else return 0.581928613253386;  // std dev = 0.312, 86.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=72 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5898093824023714;  // std dev = 0.010, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.20369222585828498;  // std dev = 0.003, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360668;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4435837539667494;  // std dev = 0.010, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.17275334916870513;  // std dev = 0.003, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783655;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2615250873068442;  // std dev = 0.179, 69.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=58 */
%   | | else return 0.2680779921369683;  // std dev = 0.171, 84.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=72 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 5.96e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2818388424073011;  // std dev = 0.016, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.18653115761689365;  // std dev = 0.005, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22843047643466824;  // std dev = 0.014, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.15960722109073958;  // std dev = 0.005, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07877675473109143;  // std dev = 6.83e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19067601767387607;  // std dev = 0.012, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.13945403541174708;  // std dev = 0.004, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333663;  // std dev = 1.30e-07, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16296938754517248;  // std dev = 0.011, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12338157852434777;  // std dev = 0.004, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06842697784420261;  // std dev = 6.50e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13729075929420026;  // std dev = 0.353, 133.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=130 */
%   | else return -0.10248736179162006;  // std dev = 0.103, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.06419184008202626;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064989
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.351 seconds
Total inference time: 0.817 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068333
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.862 seconds
Refined model CLL: -0.068333


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064989
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.675 seconds
Total inference time: 0.817 seconds
AUC ROC: 1.0
Total revision time: 4.675
Best scored revision CLL: -0.068333


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:10:04
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064989, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.675, 'Inference time': 0.817, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073599, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.429, 'Inference time': 0.854}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1.88e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.430175908945053;  // std dev = 4.037, 240.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360672;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4482365646188;  // std dev = 4.46e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.1628573537259453;  // std dev = 5.59e-09, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3416308957114683;  // std dev = 2.41e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14185384665660344;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.50e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20786594815163748;  // std dev = 0.143, 231.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.16571411799684166;  // std dev = 0.143, 188.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=156 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05393516976702207;  // std dev = 0.091, 431.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=39 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16939355811497522;  // std dev = 1.726, 219.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07495048235468359;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.121197129660971;  // std dev = 0.133, 183.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=156 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04702025890425056;  // std dev = 1.735, 407.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=39 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11298626270950189;  // std dev = 0.132, 236.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=195 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06692016960736673;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073178
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.915 seconds
Total inference time: 0.87 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084452
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.219 seconds
Parameter learned model CLL: -0.084452


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.71e-08, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.88e-07, 344, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false,true': [0.0, 38, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 348, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.037, 45, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 327, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.46e-07, 0, 195], 'true,false,true': [5.59e-09, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 316, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.41e-08, 0, 195], 'true,true,false,true': [0.0, 36, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.5e-07, 344, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.143, 36, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.17e-07, 386, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.143, 32, 156], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 392, 39]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.726, 24, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 354, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.133, 27, 156], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.735, 368, 39]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.132, 41, 195], 'true,false': [0.0, 0, 0], 'false': [0.0, 373, 0]}]]
[{'': [0.1523437500000055, 1.0327656043024712e-16], 'true': [5.975846598187509e-15, 4.9343245538895844e-17], 'true,true': [5.975846598187509e-15, nan], 'true,false': [4.9343245538895844e-17, nan], 'true,false,true': [4.9343245538895844e-17, nan]}, {'': [0.09743961129080994, -1.148506577198438e-16], 'true': [0.09743961129080994, nan], 'true,true': [-3.643808901333847e-15, -2.0451476769410777e-17], 'true,true,false': [-2.0451476769410777e-17, nan]}, {'': [0.06791489575498776, -4.889055521285093e-17], 'true': [0.06791489575498776, nan], 'true,true': [0.06791489575498776, nan], 'true,true,true': [0.06791489575498776, nan]}, {'': [0.05186608014415821, -5.0592441628488145e-17], 'true': [1.0202664923734771e-15, 2.846725704167068e-17], 'true,false': [2.846725704167068e-17, nan]}, {'': [0.030752377628626395, 6.583880727428255e-17], 'true': [0.030752377628626395, nan], 'true,true': [6.012284687200848e-16, -3.0839528461809902e-18], 'true,true,false': [-3.0839528461809902e-18, nan]}, {'': [0.020510292001476325, 3.566519560972005e-17], 'true': [0.020510292001476325, nan], 'true,true': [0.020510292001476325, nan]}, {'': [0.02045674369106532, 0.008261912723444242], 'true': [0.02045674369106532, nan], 'true,true': [0.02045674369106532, nan]}, {'': [0.013606257441238797, -3.826192344753364e-17], 'true': [0.013606257441238797, nan], 'true,true': [0.013606257441238797, nan]}, {'': [0.01763397805625979, 0.0073998168737159755], 'true': [0.01763397805625979, nan], 'true,true': [0.01763397805625979, nan]}, {'': [0.017349055414522675, -4.1075275441895875e-17], 'true': [0.017349055414522675, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.1418510649004876;  // std dev = 2.11e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.5610512776973289;  // std dev = 0.330, 240.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=195 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5940659873908091;  // std dev = 5.72e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.2008805811367012;  // std dev = 3.94e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360642;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44688461575930605;  // std dev = 2.38e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.17055763251979975;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.10159632948783637;  // std dev = 7.30e-08, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.34070573365192847;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.14776514300149507;  // std dev = 3.94e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.59e-07, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2687730468312691;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.13010811854039098;  // std dev = 2.11e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.08518475138839678;  // std dev = 1.13e-07, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21932066566442132;  // std dev = 8.43e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1160775056674838;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07877675473109144;  // std dev = 2.98e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18407933961357523;  // std dev = 1.33e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1046879057732015;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.07324622576333706;  // std dev = 8.43e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.158020672166594;  // std dev = 1.91e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09527387163682169;  // std dev = 1.67e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420315;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13305557712015287;  // std dev = 0.447, 200.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=195 */
%   | else return -0.08295692115096277;  // std dev = 0.059, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06419184008202587;  // std dev = 1.37e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064219
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.6 seconds
Total inference time: 0.801 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066401
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.07 seconds
Refined model CLL: -0.066401


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064219
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.804 seconds
Total inference time: 0.801 seconds
AUC ROC: 1.0
Total revision time: 5.804
Best scored revision CLL: -0.066401


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:10:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064219, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.804, 'Inference time': 0.801, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073178, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.915, 'Inference time': 0.87}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 443.000 (wgt'ed) examples reached here.  /* #neg=443 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4702256751096523;  // std dev = 3.845, 298.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360592;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43835324481872734;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.168391517280094;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783537;  // std dev = 3.61e-07, 522.000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3348786523559963;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14610763847184252;  // std dev = 2.58e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926085;  // std dev = 1.66e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20239811347886688;  // std dev = 0.144, 309.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.44e-07, 451.000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18700756406504113;  // std dev = 0.117, 236.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=211 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.052275656987334655;  // std dev = 0.091, 521.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14878199529138947;  // std dev = 2.325, 305.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07506562239130665;  // std dev = 0.000, 452.000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12560878968187084;  // std dev = 0.126, 242.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=211 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04685949857199434;  // std dev = 1.907, 561.000 (wgt'ed) examples reached here.  /* #neg=512 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09724186022637125;  // std dev = 0.142, 330.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=260 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06702671994621567;  // std dev = 0.000, 423.000 (wgt'ed) examples reached here.  /* #neg=423 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.399 seconds
Total inference time: 0.913 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084227
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.399 seconds
Parameter learned model CLL: -0.084227


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.77e-08, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-07, 443, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [0.0, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 454, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.845, 38, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 494, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 260], 'true,false,true': [0.0, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.61e-07, 522, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [2.58e-08, 47, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.66e-07, 457, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.144, 49, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.44e-07, 451, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.117, 25, 211], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 472, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.325, 45, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 452, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.126, 31, 211], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.907, 512, 49]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.142, 70, 260], 'true,false': [0.0, 0, 0], 'false': [0.0, 423, 0]}]]
[{'': [0.14411690602167207, 2.0049174259596506e-16], 'true': [4.372570681600617e-15, 6.055761952500853e-17], 'true,true': [4.372570681600617e-15, nan], 'true,false': [6.055761952500853e-17, nan], 'true,false,true': [6.055761952500853e-17, nan]}, {'': [0.08837064688583632, -1.232494282843786e-16], 'true': [0.08837064688583632, nan], 'true,true': [-4.481884948640632e-15, -2.7755575615628914e-17], 'true,true,false': [-2.7755575615628914e-17, nan]}, {'': [0.04959807410360649, -5.393796071053392e-18], 'true': [0.04959807410360649, nan], 'true,true': [0.04959807410360649, nan], 'true,true,true': [0.04959807410360649, nan]}, {'': [0.044829987548257316, 2.5011921014543756e-16], 'true': [-1.9676568067202775e-15, -2.581914010756178e-17], 'true,false': [-2.581914010756178e-17, nan]}, {'': [0.02999575870517486, 6.024842671926451e-17], 'true': [0.02999575870517486, nan], 'true,true': [-6.148927521000867e-16, 1.4173059888831785e-17], 'true,true,false': [1.4173059888831785e-17, nan]}, {'': [0.020673341332235577, 4.627980679146994e-17], 'true': [0.020673341332235577, nan], 'true,true': [0.020673341332235577, nan]}, {'': [0.013719156385856926, 0.008280428197263812], 'true': [0.013719156385856926, nan], 'true,true': [0.013719156385856926, nan]}, {'': [0.01772771981733939, -7.07398741354082e-17], 'true': [0.01772771981733939, nan], 'true,true': [0.01772771981733939, nan]}, {'': [0.01577562836653898, 0.0064845229445799155], 'true': [0.01577562836653898, nan], 'true,true': [0.01577562836653898, nan]}, {'': [0.020073372863852718, -1.438303114644411e-16], 'true': [0.020073372863852718, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1418510649004876;  // std dev = 1.12e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360601;  // std dev = 0.000, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.10159632948783562;  // std dev = 3.05e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601502;  // std dev = 1.33e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926087;  // std dev = 1.60e-07, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.08518475138839678;  // std dev = 1.43e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109183;  // std dev = 1.78e-07, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4.21e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07324622576333752;  // std dev = 0.000, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420339;  // std dev = 0.000, 441.000 (wgt'ed) examples reached here.  /* #neg=441 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202614;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080112;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202544;  // std dev = 2.34e-07, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.813 seconds
Total inference time: 0.804 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.164 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.7749999999999995 seconds
Total inference time: 0.804 seconds
AUC ROC: 1.0
Total revision time: 6.7749999999999995
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:10:21
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.7749999999999995, 'Inference time': 0.804, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073363, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.399, 'Inference time': 0.913}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46199654441959603;  // std dev = 4.508, 379.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360574;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4403802710111887;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.1672422868261971;  // std dev = 6.97e-09, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783529;  // std dev = 3.82e-07, 556.000 (wgt'ed) examples reached here.  /* #neg=556 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33626148946315165;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14522655996996403;  // std dev = 3.65e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926146;  // std dev = 0.000, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21157364566162548;  // std dev = 0.136, 378.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17488049069411718;  // std dev = 0.130, 309.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.053224687462652846;  // std dev = 0.088, 664.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1542367898515002;  // std dev = 2.478, 377.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07499975703700501;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1262185931762135;  // std dev = 0.125, 306.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.045964279970253014;  // std dev = 2.091, 630.000 (wgt'ed) examples reached here.  /* #neg=571 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10542330561089376;  // std dev = 0.133, 404.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=326 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06702747370418577;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073389
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.703 seconds
Total inference time: 0.926 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084214
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.535 seconds
Parameter learned model CLL: -0.084214


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.77e-08, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.96e-08, 58, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 599, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [0.0, 54, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 606, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.508, 53, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 598, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 326], 'true,false,true': [6.97e-09, 60, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.82e-07, 556, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [3.65e-08, 53, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 634, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.136, 52, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 586, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.13, 42, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 605, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.478, 51, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 597, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.125, 39, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.091, 571, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.133, 78, 326], 'true,false': [0.0, 0, 0], 'false': [0.0, 587, 0]}]]
[{'': [0.12822808159722535, -3.0841587862708856e-16], 'true': [3.400143152717044e-15, 6.125368411725002e-17], 'true,true': [3.400143152717044e-15, nan], 'true,false': [6.125368411725002e-17, nan], 'true,false,true': [6.125368411725002e-17, nan]}, {'': [0.0870308737218603, -2.4329639879574386e-16], 'true': [0.0870308737218603, nan], 'true,true': [-5.056623150194578e-15, -3.700743415417188e-17], 'true,true,false': [-3.700743415417188e-17, nan]}, {'': [0.05362353574621894, -2.5249219289133993e-17], 'true': [0.05362353574621894, nan], 'true,true': [0.05362353574621894, nan], 'true,true,true': [0.05362353574621894, nan]}, {'': [0.048468772180646866, 2.6198068494751895e-16], 'true': [-2.571903153978277e-15, 4.4408920985006264e-17], 'true,false': [4.4408920985006264e-17, nan]}, {'': [0.027885990461657566, -3.362189601388487e-17], 'true': [0.027885990461657566, nan], 'true,true': [-7.846484198577794e-16, 2.51371250858526e-17], 'true,true,false': [2.51371250858526e-17, nan]}, {'': [0.01840503854265029, 3.940723363857211e-17], 'true': [0.01840503854265029, nan], 'true,true': [0.01840503854265029, nan]}, {'': [0.016978936429159753, 0.007749392223422847], 'true': [0.016978936429159753, nan], 'true,true': [0.016978936429159753, nan]}, {'': [0.016292572149973726, -1.4877360463988699e-16], 'true': [0.016292572149973726, nan], 'true,true': [0.016292572149973726, nan]}, {'': [0.01568553857339301, 0.0069406765776896156], 'true': [0.01568553857339301, nan], 'true,true': [0.01568553857339301, nan]}, {'': [0.017559360317234148, -7.48974987651724e-17], 'true': [0.017559360317234148, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1418510649004887;  // std dev = 0.000, 642.000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360571;  // std dev = 0.000, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783621;  // std dev = 3.49e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783517;  // std dev = 4.15e-07, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.31e-07, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.25275516934928666;  // std dev = 0.153, 219.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926135;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26254230952608537;  // std dev = 0.118, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1038225401981446;  // std dev = 0.113, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2149596277112897;  // std dev = 0.102, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09255708060723572;  // std dev = 0.102, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109233;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18090826253064285;  // std dev = 0.090, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08803108282093923;  // std dev = 0.102, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333675;  // std dev = 1.99e-07, 561.000 (wgt'ed) examples reached here.  /* #neg=561 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15563311193183757;  // std dev = 0.080, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0775977747415706;  // std dev = 0.104, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.0684269778442036;  // std dev = 0.000, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13263853679623927;  // std dev = 0.492, 332.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=326 */
%   | else return -0.07568561507320817;  // std dev = 0.086, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06419184008202525;  // std dev = 2.48e-07, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063737
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.089 seconds
Total inference time: 0.809 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065175
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.268 seconds
Refined model CLL: -0.065175


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063737
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.595 seconds
Total inference time: 0.809 seconds
AUC ROC: 1.0
Total revision time: 7.595
Best scored revision CLL: -0.065175


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:10:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063737, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.595, 'Inference time': 0.809, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073389, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.703, 'Inference time': 0.926}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004879;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.05e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 7.88e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46513902932197454;  // std dev = 1.964, 74.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7.74e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4396059654926682;  // std dev = 4.21e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.16768040571413653;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 2.11e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3357331413368657;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1455625908212707;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 5.77e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1947203615041995;  // std dev = 0.151, 78.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.14e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1951857083453829;  // std dev = 0.109, 56.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04697249319668386;  // std dev = 0.097, 119.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15082354832507697;  // std dev = 1.138, 75.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07543465591270167;  // std dev = 1.83e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13426921961223678;  // std dev = 0.115, 57.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044431337009873756;  // std dev = 0.980, 134.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08582675717341495;  // std dev = 0.149, 85.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06748858471404072;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076721
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.089 seconds
Total inference time: 0.941 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.821 seconds
Parameter learned model CLL: -0.084133


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 138, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.05e-08, 0, 64], 'true,true,false,true': [0.0, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.964, 10, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.74e-08, 96, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.21e-08, 0, 64], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 108, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false,true': [0.0, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 135, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.151, 14, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 118, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.109, 5, 51], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.097, 106, 13]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.138, 11, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 109, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.115, 6, 51], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.98, 121, 13]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.149, 21, 64], 'true,false': [0.0, 0, 0], 'false': [0.0, 117, 0]}]]
[{'': [0.10808782135484998, -4.827056628805028e-17], 'true': [-8.881784197001252e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan], 'true,true': [-8.881784197001252e-16, nan]}, {'': [0.13279771249179248, 5.406303424261632e-17], 'true': [0.13279771249179248, nan], 'true,true': [1.1102230246251565e-16, -2.64338815386942e-18], 'true,true,false': [-2.64338815386942e-18, nan]}, {'': [0.05210230432327892, 6.245004513516506e-17], 'true': [0.05210230432327892, nan], 'true,true': [0.05210230432327892, nan], 'true,true,true': [0.05210230432327892, nan]}, {'': [0.03642436905220051, 4.11193712824132e-18], 'true': [2.7755575615628914e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03250617710445346, 2.4671622769447922e-17], 'true': [0.03250617710445346, nan], 'true,true': [-3.191891195797325e-16, -1.2810265668751807e-17], 'true,true,false': [-1.2810265668751807e-17, nan]}, {'': [0.02283550893538691, 3.198947698072485e-17], 'true': [0.02283550893538691, nan], 'true,true': [0.02283550893538691, nan]}, {'': [0.011802721563485028, 0.00948474471335653], 'true': [0.011802721563485028, nan], 'true,true': [0.011802721563485028, nan]}, {'': [0.01727865438526836, 3.0556597008031833e-18], 'true': [0.01727865438526836, nan], 'true,true': [0.01727865438526836, nan]}, {'': [0.013292604622387131, 0.007163596522374889], 'true': [0.013292604622387131, nan], 'true,true': [0.013292604622387131, nan]}, {'': [0.022139780536195044, -3.795634272222758e-18], 'true': [0.022139780536195044, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360624;  // std dev = 7.60e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10159632948783628;  // std dev = 2.98e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014983;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 1.05e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0851847513883968;  // std dev = 6.32e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07877675473109164;  // std dev = 5.67e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07324622576333707;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420267;  // std dev = 4.71e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return 0.13400703000801095;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0641918400820262;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202626;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.049 seconds
Total inference time: 0.798 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.753 seconds
Refined model CLL: -0.064203


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7119999999999997 seconds
Total inference time: 0.798 seconds
AUC ROC: 1.0
Total revision time: 3.7119999999999997
Best scored revision CLL: -0.064203


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:10:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.7119999999999997, 'Inference time': 0.798, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076721, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.089, 'Inference time': 0.941}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283919;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4543354844856414;  // std dev = 2.950, 152.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4422691581758562;  // std dev = 4.17e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.16617803164192244;  // std dev = 2.63e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33755099413818374;  // std dev = 2.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1444095753037886;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.32e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2183750813760437;  // std dev = 0.129, 147.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1846479835201074;  // std dev = 0.119, 119.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05259998334734029;  // std dev = 0.091, 245.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1467235484669355;  // std dev = 1.643, 152.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0750431072640404;  // std dev = 1.14e-07, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12153868099763077;  // std dev = 0.130, 123.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0449546930508751;  // std dev = 1.305, 238.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08539736258849422;  // std dev = 0.150, 170.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=129 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0671270314135395;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.531 seconds
Total inference time: 0.881 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084859
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.012 seconds
Parameter learned model CLL: -0.084859


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 250, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false,true': [0.0, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 274, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.95, 23, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 241, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.17e-07, 0, 129], 'true,false,true': [2.63e-09, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.58e-08, 0, 129], 'true,true,false,true': [1.49e-08, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 242, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.129, 18, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.56e-08, 239, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.119, 13, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 222, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.643, 23, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.14e-07, 229, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.13, 17, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.305, 215, 23]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.15, 41, 129], 'true,false': [0.0, 0, 0], 'false': [0.0, 218, 0]}]]
[{'': [0.12446822507785202, -1.7408297026122455e-16], 'true': [4.40646657835721e-15, 5.046468293750712e-18], 'true,true': [4.40646657835721e-15, nan], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [5.046468293750712e-18, nan]}, {'': [0.09167682143715948, -7.131359574234582e-17], 'true': [0.09167682143715948, nan], 'true,true': [-1.7625866313428842e-15, -2.413528314402514e-18], 'true,true,false': [-2.413528314402514e-18, nan]}, {'': [0.057249377286753104, -7.370775267220956e-17], 'true': [0.057249377286753104, nan], 'true,true': [0.057249377286753104, nan], 'true,true,true': [0.057249377286753104, nan]}, {'': [0.0542493096621907, -7.040438692744895e-17], 'true': [1.3494803896218957e-15, 3.96508223080413e-18], 'true,false': [3.96508223080413e-18, nan]}, {'': [0.029830009253986805, 1.651571441591142e-17], 'true': [0.029830009253986805, nan], 'true,true': [6.885104028683142e-16, 9.654113257610057e-18], 'true,true,false': [9.654113257610057e-18, nan]}, {'': [0.016689261146813312, 3.0658878504293026e-17], 'true': [0.016689261146813312, nan], 'true,true': [0.016689261146813312, nan]}, {'': [0.01404746464354685, 0.00822755005096041], 'true': [0.01404746464354685, nan], 'true,true': [0.01404746464354685, nan]}, {'': [0.017755764830310484, 5.720799864880719e-17], 'true': [0.017755764830310484, nan], 'true,true': [0.017755764830310484, nan]}, {'': [0.01678852927775504, 0.007150434727801748], 'true': [0.01678852927775504, nan], 'true,true': [0.01678852927775504, nan]}, {'': [0.022571850384400734, -2.5463830840026528e-18], 'true': [0.022571850384400734, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048843;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360676;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.10159632948783655;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601498;  // std dev = 2.49e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.09269127618926096;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 6.32e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.08518475138839678;  // std dev = 8.82e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2.09e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109144;  // std dev = 6.50e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527814;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333682;  // std dev = 1.15e-07, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420261;  // std dev = 6.32e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13098109306007158;  // std dev = 0.278, 131.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06419184008202625;  // std dev = 1.83e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063443
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.34 seconds
Total inference time: 0.806 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064349
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.887 seconds
Refined model CLL: -0.064349


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063443
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.77 seconds
Total inference time: 0.806 seconds
AUC ROC: 1.0
Total revision time: 4.77
Best scored revision CLL: -0.064349


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:10:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063443, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.77, 'Inference time': 0.806, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076289, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.531, 'Inference time': 0.881}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 2.00e-07, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.47914693732392083;  // std dev = 3.142, 219.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360657;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4361580547791754;  // std dev = 8.43e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.16964451200476757;  // std dev = 4.56e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783644;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33338218871129094;  // std dev = 3.49e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14706693160295328;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.53e-07, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20810327171317342;  // std dev = 0.137, 226.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17526065524424633;  // std dev = 0.129, 182.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=158 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05257601452844434;  // std dev = 0.090, 386.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=36 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1604458101876399;  // std dev = 1.785, 219.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07504477099599875;  // std dev = 3.94e-08, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12258149794493552;  // std dev = 0.127, 182.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=158 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04606181286870038;  // std dev = 1.609, 396.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=36 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0940193317752919;  // std dev = 0.141, 249.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=194 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0670591311295456;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.941 seconds
Total inference time: 0.817 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.206 seconds
Parameter learned model CLL: -0.084058


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2e-07, 350, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false,true': [0.0, 43, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 367, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.142, 25, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 343, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [8.43e-08, 0, 194], 'true,false,true': [4.56e-09, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 344, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.49e-08, 0, 194], 'true,true,false,true': [0.0, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.53e-07, 338, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.137, 32, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.17e-07, 364, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.129, 24, 158], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 350, 36]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.785, 25, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.94e-08, 342, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.127, 24, 158], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.609, 360, 36]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.141, 55, 194], 'true,false': [0.0, 0, 0], 'false': [0.0, 350, 0]}]]
[{'': [0.14171962889912165, 1.1419436824715895e-16], 'true': [6.15315358802561e-15, 4.163336342344337e-17], 'true,true': [6.15315358802561e-15, nan], 'true,false': [4.163336342344337e-17, nan], 'true,false,true': [4.163336342344337e-17, nan]}, {'': [0.10602363024060106, -1.185851296057388e-16], 'true': [0.10602363024060106, nan], 'true,true': [-3.516087764586063e-15, -2.840105411831796e-17], 'true,true,false': [-2.840105411831796e-17, nan]}, {'': [0.04508103783543899, -3.3662738939071804e-17], 'true': [0.04508103783543899, nan], 'true,true': [0.04508103783543899, nan], 'true,true,true': [0.04508103783543899, nan]}, {'': [0.05201064320612895, -1.290957005378089e-18], 'true': [3.6625914214438153e-17, 2.2204460492503132e-17], 'true,false': [2.2204460492503132e-17, nan]}, {'': [0.027421625328698965, 6.963529030193289e-17], 'true': [0.027421625328698965, nan], 'true,true': [1.2269681261836781e-15, -1.7906822977825105e-17], 'true,true,false': [-1.7906822977825105e-17, nan]}, {'': [0.018806774142369326, 3.7820784355362477e-17], 'true': [0.018806774142369326, nan], 'true,true': [0.018806774142369326, nan]}, {'': [0.01655680929799673, 0.008108312949842765], 'true': [0.01655680929799673, nan], 'true,true': [0.01655680929799673, nan]}, {'': [0.01454523184808631, 4.544772615424617e-18], 'true': [0.01454523184808631, nan], 'true,true': [0.01454523184808631, nan]}, {'': [0.016207740270621728, 0.006534229419705226], 'true': [0.016207740270621728, nan], 'true,true': [0.016207740270621728, nan]}, {'': [0.019925055060397566, -8.881784197001253e-18], 'true': [0.019925055060397566, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048777;  // std dev = 1.46e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283921;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.1123163781936065;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783627;  // std dev = 1.17e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.320711847160149;  // std dev = 3.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.092691276189261;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.67e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.08518475138839678;  // std dev = 1.15e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109147;  // std dev = 5.16e-08, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07324622576333707;  // std dev = 8.16e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06842697784420312;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080108;  // std dev = 1.05e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0641918400820257;  // std dev = 1.70e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.597 seconds
Total inference time: 0.828 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.059 seconds
Refined model CLL: -0.064221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.803 seconds
Total inference time: 0.828 seconds
AUC ROC: 1.0
Total revision time: 5.803
Best scored revision CLL: -0.064221


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:10:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.803, 'Inference time': 0.828, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076438, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.941, 'Inference time': 0.817}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048718;  // std dev = 2.95e-07, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4602990160760333;  // std dev = 4.055, 302.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360601;  // std dev = 0.000, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44079866145529345;  // std dev = 9.00e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.16700600166824417;  // std dev = 6.18e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783556;  // std dev = 3.15e-07, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3365470396352776;  // std dev = 1.54e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14504526138829882;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892609;  // std dev = 1.55e-07, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2065397429621488;  // std dev = 0.141, 305.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.43e-07, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17812825989461425;  // std dev = 0.128, 246.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=214 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05520097980956408;  // std dev = 0.088, 522.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15187961333047692;  // std dev = 2.268, 302.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07486276726925921;  // std dev = 0.000, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1313859060519438;  // std dev = 0.120, 242.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=214 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.049393040738723415;  // std dev = 1.842, 576.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11858071651226965;  // std dev = 0.122, 304.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=259 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06669878693186324;  // std dev = 1.74e-07, 438.000 (wgt'ed) examples reached here.  /* #neg=438 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076226
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.365 seconds
Total inference time: 0.907 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.335 seconds
Parameter learned model CLL: -0.083189


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.16e-08, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.95e-07, 468, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false,true': [0.0, 53, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 496, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.055, 43, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 463, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [9e-07, 0, 259], 'true,false,true': [6.18e-09, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.15e-07, 485, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.54e-08, 0, 259], 'true,true,false,true': [0.0, 42, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.55e-07, 464, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.141, 46, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.43e-07, 483, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.128, 32, 214], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 477, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.268, 43, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 469, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.12, 28, 214], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.842, 531, 45]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.122, 45, 259], 'true,false': [0.0, 0, 0], 'false': [1.74e-07, 438, 0]}]]
[{'': [0.13378099173554128, 1.8598607933891512e-16], 'true': [4.499189523731908e-15, 5.437827059388522e-17], 'true,true': [4.499189523731908e-15, nan], 'true,false': [5.437827059388522e-17, nan], 'true,false,true': [5.437827059388522e-17, nan]}, {'': [0.10066896939317616, -1.2892912544034077e-16], 'true': [0.10066896939317616, nan], 'true,true': [-4.499189523731908e-15, -3.561092720495785e-17], 'true,true,false': [-3.561092720495785e-17, nan]}, {'': [0.05443706856929301, -9.591559607992713e-18], 'true': [0.05443706856929301, nan], 'true,true': [0.05443706856929301, nan], 'true,true,true': [0.05443706856929301, nan]}, {'': [0.04511099321662033, 2.0510511960085367e-16], 'true': [3.127485400642912e-15, 3.6146796150586495e-17], 'true,false': [3.6146796150586495e-17, nan]}, {'': [0.027846789647350736, 5.16827959739297e-17], 'true': [0.027846789647350736, nan], 'true,true': [2.4690674215601937e-16, -5.0224374923518987e-17], 'true,true,false': [-5.0224374923518987e-17, nan]}, {'': [0.019873292283005307, 4.229421046191072e-17], 'true': [0.019873292283005307, nan], 'true,true': [0.019873292283005307, nan]}, {'': [0.01637968006838129, 0.007747285565328685], 'true': [0.01637968006838129, nan], 'true,true': [0.01637968006838129, nan]}, {'': [0.017039465055295456, -1.9884591485823698e-17], 'true': [0.017039465055295456, nan], 'true,true': [0.017039465055295456, nan]}, {'': [0.014421279351491338, 0.00589063857194883], 'true': [0.014421279351491338, nan], 'true,true': [0.014421279351491338, nan]}, {'': [0.014949512311798875, 6.94523079331719e-17], 'true': [0.014949512311798875, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.14185106490048724;  // std dev = 2.80e-07, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5669187641607952;  // std dev = 0.325, 144.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=118 */
%   | | else return 0.6054353930927616;  // std dev = 0.289, 163.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=141 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5875706244016147;  // std dev = 0.075, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.20403918315743833;  // std dev = 0.021, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360582;  // std dev = 0.000, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44186769243167406;  // std dev = 0.076, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1736437562812581;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.10159632948783547;  // std dev = 3.42e-07, 518.000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.33728545522098213;  // std dev = 0.069, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.1505263399687786;  // std dev = 0.016, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926083;  // std dev = 1.69e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2664568542249237;  // std dev = 0.060, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.13159147413486882;  // std dev = 0.013, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.08518475138839679;  // std dev = 1.40e-07, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21770125382578262;  // std dev = 0.053, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11790006007369591;  // std dev = 0.014, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109186;  // std dev = 1.69e-07, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18290306945227877;  // std dev = 0.046, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10602526571425809;  // std dev = 0.012, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07324622576333738;  // std dev = 0.000, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15713586541977917;  // std dev = 0.041, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09642436733332341;  // std dev = 0.010, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06842697784420344;  // std dev = 0.000, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13212162875894404;  // std dev = 0.528, 266.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=259 */
%   | else return -0.08350084050590896;  // std dev = 0.079, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202553;  // std dev = 2.14e-07, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064583
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.875 seconds
Total inference time: 0.837 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066303
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.157 seconds
Refined model CLL: -0.066303


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064583
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.732 seconds
Total inference time: 0.837 seconds
AUC ROC: 1.0
Total revision time: 6.732
Best scored revision CLL: -0.066303


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:11:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064583, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.732, 'Inference time': 0.837, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076226, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.365, 'Inference time': 0.907}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.141851064900488;  // std dev = 0.000, 550.000 (wgt'ed) examples reached here.  /* #neg=550 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.44957773100255954;  // std dev = 4.784, 385.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360582;  // std dev = 0.000, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4434430598876164;  // std dev = 6.02e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.16551983017824945;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783512;  // std dev = 4.30e-07, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3383528463560018;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14390379133052708;  // std dev = 2.98e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926132;  // std dev = 0.000, 563.000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20644432836009832;  // std dev = 0.142, 383.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.16935916311810964;  // std dev = 0.138, 314.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05387617524324234;  // std dev = 0.089, 670.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14375326492585166;  // std dev = 2.790, 390.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07495457271911456;  // std dev = 0.000, 568.000 (wgt'ed) examples reached here.  /* #neg=568 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1322837813527307;  // std dev = 0.123, 302.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.048164093850386155;  // std dev = 2.131, 699.000 (wgt'ed) examples reached here.  /* #neg=640 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09907591901413161;  // std dev = 0.142, 413.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=324 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06685220680064032;  // std dev = 1.44e-07, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075968
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.807 seconds
Total inference time: 0.929 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082797
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.528 seconds
Parameter learned model CLL: -0.082797


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.87e-08, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.96e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 550, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false,true': [0.0, 61, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 621, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.784, 61, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 607, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [6.02e-07, 0, 324], 'true,false,true': [0.0, 60, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.3e-07, 599, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false,true': [2.98e-08, 63, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 563, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.142, 59, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-07, 609, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.138, 49, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.089, 611, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.79, 66, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 568, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.123, 37, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.131, 640, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.142, 89, 324], 'true,false': [0.0, 0, 0], 'false': [1.44e-07, 587, 0]}]]
[{'': [0.12722425444851204, -1.3241932802801866e-16], 'true': [3.333410365294297e-15, 6.232831015439475e-17], 'true,true': [3.333410365294297e-15, nan], 'true,false': [6.232831015439475e-17, nan], 'true,false,true': [6.232831015439475e-17, nan]}, {'': [0.09518807915237948, -2.603034982051897e-16], 'true': [0.09518807915237948, nan], 'true,true': [-5.000115547941446e-15, -4.186086814160426e-17], 'true,true,false': [-4.186086814160426e-17, nan]}, {'': [0.0594420505768841, -4.682324453114334e-17], 'true': [0.0594420505768841, nan], 'true,true': [0.0594420505768841, nan], 'true,true,true': [0.0594420505768841, nan]}, {'': [0.048889485546335175, 3.0841587862708856e-16], 'true': [1.1184468988816392e-15, -2.2204460492503132e-17], 'true,false': [-2.2204460492503132e-17, nan]}, {'': [0.0316971384950588, -1.1043070937656974e-17], 'true': [0.0316971384950588, nan], 'true,true': [-1.2938895496866022e-15, 1.409807015397024e-17], 'true,true,false': [1.409807015397024e-17, nan]}, {'': [0.020254846831943684, 4.083578941150001e-17], 'true': [0.020254846831943684, nan], 'true,true': [0.020254846831943684, nan]}, {'': [0.019069550795359293, 0.007866551198657664], 'true': [0.019069550795359293, nan], 'true,true': [0.019069550795359293, nan]}, {'': [0.019960145628702627, -2.736465201540879e-17], 'true': [0.019960145628702627, nan], 'true,true': [0.019960145628702627, nan]}, {'': [0.015103621473613918, 0.006497232991792478], 'true': [0.015103621473613918, nan], 'true,true': [0.015103621473613918, nan]}, {'': [0.020154141809252825, 3.555739840366771e-17], 'true': [0.020154141809252825, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1418510649004886;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109562;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.6133279284497318;  // std dev = 0.280, 199.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=174 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5693474189743027;  // std dev = 0.234, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.15479210803656848;  // std dev = 0.385, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.11231637819360595;  // std dev = 0.000, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42806202924936754;  // std dev = 0.233, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14703904722734343;  // std dev = 0.293, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1015963294878352;  // std dev = 4.11e-07, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.31539163435244916;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return -0.08555742698472028;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3387462590582421;  // std dev = 4.09e-07, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return -0.16378183259096118;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926144;  // std dev = 0.000, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26008005310226306;  // std dev = 0.143, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1068646644253362;  // std dev = 0.252, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21323193778022556;  // std dev = 0.124, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10374188263423884;  // std dev = 0.225, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109225;  // std dev = 0.000, 554.000 (wgt'ed) examples reached here.  /* #neg=554 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1796489118187612;  // std dev = 0.109, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09762787799058495;  // std dev = 0.196, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333649;  // std dev = 2.60e-07, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15468291345933646;  // std dev = 0.097, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08628519786654876;  // std dev = 0.186, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420365;  // std dev = 0.000, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.130710412129032;  // std dev = 0.565, 332.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=324 */
%   | else return -0.07553149288169665;  // std dev = 0.170, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202523;  // std dev = 2.48e-07, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064544
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.324 seconds
Total inference time: 0.85 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065597
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.296 seconds
Refined model CLL: -0.065597


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064544
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.955 seconds
Total inference time: 0.85 seconds
AUC ROC: 1.0
Total revision time: 7.955
Best scored revision CLL: -0.065597


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:11:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064544, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.955, 'Inference time': 0.85, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075968, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.807, 'Inference time': 0.929}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.15e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5087839147737335;  // std dev = 1.115, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6.05e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4288839003597095;  // std dev = 8.43e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.1738602993850834;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5.96e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3284309631804945;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15028441510229118;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20923481097809607;  // std dev = 0.132, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.20408613897531558;  // std dev = 0.081, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109169;  // std dev = 4.06e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14801914055029194;  // std dev = 0.777, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11798741242535905;  // std dev = 0.127, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3.57e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.13327116276881265;  // std dev = 0.081, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.864 seconds
Total inference time: 0.941 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.802 seconds
Parameter learned model CLL: -0.074777


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.94e-08, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.15e-08, 73, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.115, 3, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.05e-08, 75, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [8.43e-08, 0, 40], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 81, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.132, 6, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 70, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.081, 2, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.06e-09, 68, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.777, 5, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.127, 6, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.57e-08, 79, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.081, 2, 40], 'true,false': [0.0, 0, 0], 'false': [0.0, 58, 0]}]]
[{'': [0.0826446280991747, 6.995925908596876e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,true': [1.5099033134902129e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03237580555397557, -3.1273888017610045e-17], 'true': [0.03237580555397557, nan], 'true,true': [-8.881784197001252e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.028932418044309283, 4.884981308350689e-17], 'true': [0.028932418044309283, nan], 'true,true': [0.028932418044309283, nan], 'true,true,true': [0.028932418044309283, nan]}, {'': [0.04120611383659645, 4.386066270124075e-17], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02263391737327708, -1.5636944008805022e-18], 'true': [0.02263391737327708, nan], 'true,true': [-4.4408920985006264e-17, -2.7755575615628915e-18], 'true,true,false': [-2.7755575615628915e-18, nan]}, {'': [0.017474783703626602, 4.758098676964957e-18], 'true': [0.017474783703626602, nan], 'true,true': [0.017474783703626602, nan]}, {'': [0.006554178495507863, 1.6326809185664067e-17], 'true': [0.006554178495507863, nan], 'true,true': [0.006554178495507863, nan]}, {'': [0.013410560515175658, -5.551115123125783e-18], 'true': [0.013410560515175658, nan], 'true,true': [0.013410560515175658, nan]}, {'': [0.016195390061328373, 1.616147440910038e-17], 'true': [0.016195390061328373, nan], 'true,true': [0.016195390061328373, nan]}, {'': [0.006630432207430236, -3.3498108501621104e-18], 'true': [0.006630432207430236, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6591221228724297;  // std dev = 0.218, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.6349816071370198;  // std dev = 0.253, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5742015581086483;  // std dev = 0.017, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.21464112330498306;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360624;  // std dev = 5.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43163856971144965;  // std dev = 0.018, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1792391863633259;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783617;  // std dev = 5.05e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3303075062770597;  // std dev = 0.016, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.15542657169973886;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2617112229206692;  // std dev = 0.014, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1351493535875931;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 2.79e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.2116296898298415;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19252662815866978;  // std dev = 0.085, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else return -0.07877675473109162;  // std dev = 4.71e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18280762265426237;  // std dev = 0.019, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14467258740248934;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333707;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.13298396250507877;  // std dev = 0.073, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.1487655938093901;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else return -0.06842697784420267;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13674984712475902;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.12053996984448338;  // std dev = 0.072, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else return -0.06419184008202625;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081494
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.863 seconds
Total inference time: 0.874 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.7 seconds
Refined model CLL: -0.068879


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081494
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.229 seconds
Total inference time: 0.874 seconds
AUC ROC: 1.0
Total revision time: 3.229
Best scored revision CLL: -0.068879


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081494, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.229, 'Inference time': 0.874, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.098913, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.864, 'Inference time': 0.941}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048816;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109537;  // std dev = 2.98e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 4.21e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4953500039426981;  // std dev = 1.802, 89.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360649;  // std dev = 2.11e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43217753316432067;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.17193919376468164;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33067142278734457;  // std dev = 1.05e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14882015287499747;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926071;  // std dev = 7.60e-08, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23070419345653848;  // std dev = 0.106, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 6.14e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18824042602258947;  // std dev = 0.105, 84.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=77 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0723199810619644;  // std dev = 0.048, 160.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16986318467165834;  // std dev = 0.809, 86.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0736857289157336;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13723655928590262;  // std dev = 0.098, 83.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=77 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06196870367278129;  // std dev = 0.549, 144.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12185865724367191;  // std dev = 0.098, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06494534862876304;  // std dev = 6.75e-08, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.165 seconds
Total inference time: 0.959 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074623
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.008 seconds
Parameter learned model CLL: -0.074623


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 164, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [2.98e-08, 0, 81], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 156, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.802, 8, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 178, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 133, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.05e-08, 0, 81], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 163, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.106, 7, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 144, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.105, 7, 77], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.048, 156, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.809, 5, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 150, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.098, 6, 77], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.549, 140, 4]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.098, 7, 81], 'true,false': [0.0, 0, 0], 'false': [6.75e-08, 169, 0]}]]
[{'': [0.0732179752066116, -1.4893235696191125e-16], 'true': [-7.894919286223335e-16, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan], 'true,true': [-7.894919286223335e-16, nan]}, {'': [0.024585377342551527, 1.1386902816668272e-17], 'true': [0.024585377342551527, nan], 'true,true': [7.894919286223335e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.036469968590482536, 2.494883201404846e-18], 'true': [0.036469968590482536, nan], 'true,true': [0.036469968590482536, nan], 'true,true,true': [0.036469968590482536, nan]}, {'': [0.03569800579662838, -4.340721600038206e-17], 'true': [-1.3158198810372225e-16, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan]}, {'': [0.016833703645579304, 3.541815784080254e-17], 'true': [0.016833703645579304, nan], 'true,true': [1.0965165675310187e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01130231080765051, 2.6213599192538418e-17], 'true': [0.01130231080765051, nan], 'true,true': [0.01130231080765051, nan]}, {'': [0.010992631388032192, 0.002269237590922942], 'true': [0.010992631388032192, nan], 'true,true': [0.010992631388032192, nan]}, {'': [0.007612133160801676, -2.6645352591003756e-17], 'true': [0.007612133160801676, nan], 'true,true': [0.007612133160801676, nan]}, {'': [0.009586211092294919, 0.002089600004683667], 'true': [0.009586211092294919, nan], 'true,true': [0.009586211092294919, nan]}, {'': [0.009581046072928073, 2.6934404739426874e-17], 'true': [0.009581046072928073, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048807;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.68818015107246;  // std dev = 0.160, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return 0.6757707544140917;  // std dev = 0.187, 58.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 4.71e-08, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.565151187945461;  // std dev = 0.013, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.22121079043397596;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360617;  // std dev = 1.01e-07, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42481166288616756;  // std dev = 0.013, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.18432866652400384;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783648;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3256645234848211;  // std dev = 0.011, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.15854027775992585;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926076;  // std dev = 7.15e-08, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25854931184413804;  // std dev = 0.010, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.13911008109225131;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839678;  // std dev = 6.50e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21213302952741694;  // std dev = 0.009, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else return -0.12260129268973514;  // std dev = 0.001, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then return -0.07877675473109153;  // std dev = 7.38e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else return 0.15407481896341074;  // std dev = 0.260, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17927277111696244;  // std dev = 0.019, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11029595627735321;  // std dev = 0.000996, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333674;  // std dev = 9.77e-08, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15400615380512325;  // std dev = 0.007, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else return -0.10039450954009338;  // std dev = 0.000968, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06842697784420262;  // std dev = 6.91e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else return 0.1618487173743084;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1352922267764333;  // std dev = 0.013, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09195782767686574;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202626;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077047
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.125 seconds
Total inference time: 0.955 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064931
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.922 seconds
Refined model CLL: -0.064931


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077047
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.22 seconds
Total inference time: 0.955 seconds
AUC ROC: 1.0
Total revision time: 4.22
Best scored revision CLL: -0.064931


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077047, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.22, 'Inference time': 0.955, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100223, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.165, 'Inference time': 0.959}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.49107105456688616;  // std dev = 2.289, 135.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43322789104522075;  // std dev = 3.72e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.17133082853306292;  // std dev = 3.23e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33138639019283983;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14835578911850406;  // std dev = 1.49e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 5.58e-08, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23266945850720822;  // std dev = 0.104, 132.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.02e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18438974122940496;  // std dev = 0.111, 128.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0719228072798789;  // std dev = 0.048, 238.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15567428844423548;  // std dev = 1.298, 135.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07371284305654231;  // std dev = 7.30e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.14857688613368356;  // std dev = 0.082, 122.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06213404096326415;  // std dev = 0.665, 246.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11985806434640194;  // std dev = 0.102, 134.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=122 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0649577820024908;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099857
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.411 seconds
Total inference time: 1.03 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.23 seconds
Parameter learned model CLL: -0.074338


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.14e-08, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 239, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false,true': [7.45e-09, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 241, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.289, 13, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.72e-07, 0, 122], 'true,false,true': [3.23e-09, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 230, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false,true': [1.49e-08, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 215, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.104, 10, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.02e-08, 210, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.111, 12, 116], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.048, 232, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.298, 13, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.3e-08, 226, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.082, 6, 116], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.665, 240, 6]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.102, 12, 122], 'true,false': [0.0, 0, 0], 'false': [0.0, 230, 0]}]]
[{'': [0.07586635762338578, -1.7094647408454293e-16], 'true': [3.843919718046444e-15, -1.0092936587501423e-17], 'true,true': [3.843919718046444e-15, nan], 'true,false': [-1.0092936587501423e-17, nan], 'true,false,true': [-1.0092936587501423e-17, nan]}, {'': [0.06212477414374502, -6.08088959545729e-17], 'true': [0.06212477414374502, nan], 'true,true': [-1.3395477805313363e-15, 4.270088556250602e-18], 'true,true,false': [4.270088556250602e-18, nan]}, {'': [0.038795025591583335, -7.401486830834377e-17], 'true': [0.038795025591583335, nan], 'true,true': [0.038795025591583335, nan], 'true,true,true': [0.038795025591583335, nan]}, {'': [0.04579141135318543, -7.723290606088045e-17], 'true': [1.1357035530591766e-15, 1.057355261547768e-17], 'true,false': [1.057355261547768e-17, nan]}, {'': [0.02359051640451013, 1.4458718460234597e-17], 'true': [0.02359051640451013, nan], 'true,true': [-2.620854353213484e-16, 1.3877787807814457e-17], 'true,true,false': [1.3877787807814457e-17, nan]}, {'': [0.010815107586175429, 3.066330258488528e-17], 'true': [0.010815107586175429, nan], 'true,true': [0.010815107586175429, nan]}, {'': [0.012221524783728878, 0.0022571869035587504], 'true': [0.012221524783728878, nan], 'true,true': [0.012221524783728878, nan]}, {'': [0.012487254310918466, 2.3579958045136068e-17], 'true': [0.012487254310918466, nan], 'true,true': [0.012487254310918466, nan]}, {'': [0.006661318926995784, 0.0017962537538221475], 'true': [0.006661318926995784, nan], 'true,true': [0.006661318926995784, nan]}, {'': [0.010334840734288721, -2.027363784098112e-17], 'true': [0.010334840734288721, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048827;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360676;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3.53e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783656;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601499;  // std dev = 2.19e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892605;  // std dev = 7.60e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839678;  // std dev = 9.06e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253545;  // std dev = 1.81e-07, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07176782022833128;  // std dev = 0.698, 247.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17930003004977574;  // std dev = 0.107, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07328599246280047;  // std dev = 0.000457, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07372342615689796;  // std dev = 9.19e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15245891014340016;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else return -0.06842444297032414;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.06884451697389868;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else if ( female(A) )
%   | | then return 0.12714849247420984;  // std dev = 0.226, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.08795549997541086;  // std dev = 0.286, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13587741004763898;  // std dev = 0.102, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06610630601935322;  // std dev = 0.013, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06456010754757291;  // std dev = 8.82e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.382 seconds
Total inference time: 0.898 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063992
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.115 seconds
Refined model CLL: -0.063992


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.138 seconds
Total inference time: 0.898 seconds
AUC ROC: 1.0
Total revision time: 5.138
Best scored revision CLL: -0.063992


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068367, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.138, 'Inference time': 0.898, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099857, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.411, 'Inference time': 1.03}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 1.07e-07, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5131566036178992;  // std dev = 2.143, 174.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42781317768802934;  // std dev = 2.23e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.17448925730509343;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 5.58e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.32770308111456364;  // std dev = 3.73e-09, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15076311200434886;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926047;  // std dev = 1.69e-07, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21897274497266175;  // std dev = 0.120, 182.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.13e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18860779392783802;  // std dev = 0.105, 169.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=155 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07224795861103105;  // std dev = 0.047, 329.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16380338712443818;  // std dev = 1.309, 176.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07369064504133496;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13214175568524714;  // std dev = 0.107, 170.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=155 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06234049169351064;  // std dev = 0.779, 306.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1142002402879821;  // std dev = 0.113, 181.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=163 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06492684853863151;  // std dev = 3.94e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099736
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.571 seconds
Total inference time: 0.975 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074138
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.595 seconds
Parameter learned model CLL: -0.074138


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [8.02e-08, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.07e-07, 303, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false,true': [5.27e-09, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 327, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.143, 11, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 309, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [2.23e-07, 0, 163], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 339, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.73e-09, 0, 163], 'true,true,false,true': [0.0, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.69e-07, 316, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.12, 19, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.13e-07, 331, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.105, 14, 155], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.047, 321, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.309, 13, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.107, 15, 155], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.779, 298, 8]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.113, 18, 163], 'true,false': [0.0, 0, 0], 'false': [3.94e-08, 287, 0]}]]
[{'': [0.10836512891664395, 3.8106664871622534e-17], 'true': [6.3643705166242106e-15, 9.654113257610057e-18], 'true,true': [6.3643705166242106e-15, nan], 'true,false': [9.654113257610057e-18, nan], 'true,false,true': [9.654113257610057e-18, nan]}, {'': [0.045595494477773044, -9.234882651316287e-17], 'true': [0.045595494477773044, nan], 'true,true': [-2.7898610483832155e-15, 2.3129646346357427e-18], 'true,true,false': [2.3129646346357427e-18, nan]}, {'': [0.026401110188578547, -6.467318590049455e-17], 'true': [0.026401110188578547, nan], 'true,true': [0.026401110188578547, nan], 'true,true,true': [0.026401110188578547, nan]}, {'': [0.031025640323563804, 9.169983684219582e-18], 'true': [3.051410521669142e-16, -1.959217102279688e-17], 'true,false': [-1.959217102279688e-17, nan]}, {'': [0.022285271800953108, 8.994211845064559e-17], 'true': [0.022285271800953108, nan], 'true,true': [2.179578944049387e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.014396185902724084, 3.890811808354023e-17], 'true': [0.014396185902724084, nan], 'true,true': [0.014396185902724084, nan]}, {'': [0.01095814838135835, 0.002188729920981181], 'true': [0.01095814838135835, nan], 'true,true': [0.01095814838135835, nan]}, {'': [0.00972830059029859, -1.1961998918520205e-17], 'true': [0.00972830059029859, nan], 'true,true': [0.00972830059029859, nan]}, {'': [0.01151602452367838, 0.0019848265593041983], 'true': [0.01151602452367838, nan], 'true,true': [0.01151602452367838, nan]}, {'': [0.012864659969222836, 5.415722071342227e-18], 'true': [0.012864659969222836, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048785;  // std dev = 9.88e-08, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839205;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360643;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10159632948783663;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926049;  // std dev = 1.63e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839678;  // std dev = 1.10e-07, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253517;  // std dev = 2.53e-07, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07182411689100404;  // std dev = 0.806, 332.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17929600092396972;  // std dev = 0.124, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07330539527376305;  // std dev = 0.000626, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07371958184674529;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1524594307683887;  // std dev = 1.71e-07, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | else return -0.06842320619625443;  // std dev = 6.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(B) )
%   | then return -0.06884115459453322;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
%   | else if ( female(A) )
%   | | then return 0.14022503539915837;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.10538509622524839;  // std dev = 0.302, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13576556737983503;  // std dev = 0.112, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06608625290387743;  // std dev = 0.019, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06455714296437302;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068527
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.499 seconds
Total inference time: 0.923 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.246 seconds
Refined model CLL: -0.064001


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068527
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.911 seconds
Total inference time: 0.923 seconds
AUC ROC: 1.0
Total revision time: 5.911
Best scored revision CLL: -0.064001


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068527, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.911, 'Inference time': 0.923, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099736, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.571, 'Inference time': 0.975}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048738;  // std dev = 2.86e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5153670054365199;  // std dev = 2.334, 217.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42727218204124867;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.17480787879725124;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783574;  // std dev = 2.67e-07, 433.000 (wgt'ed) examples reached here.  /* #neg=433 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3273353937888766;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15100548350009568;  // std dev = 1.97e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926064;  // std dev = 1.91e-07, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.229507187735143;  // std dev = 0.105, 221.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.25e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1908145349775688;  // std dev = 0.098, 209.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07116294905814312;  // std dev = 0.048, 379.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1528820290290023;  // std dev = 1.677, 226.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07376474242212533;  // std dev = 1.98e-07, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13792964168566732;  // std dev = 0.098, 209.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06225775614233113;  // std dev = 0.860, 397.000 (wgt'ed) examples reached here.  /* #neg=387 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1218917459340537;  // std dev = 0.100, 221.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=204 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06499327697262472;  // std dev = 0.000, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100262
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.013 seconds
Total inference time: 0.98 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074678
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.416 seconds
Parameter learned model CLL: -0.074678


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.86e-07, 391, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 204], 'true,true,false,true': [7.45e-09, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 366, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.334, 13, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 374, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 204], 'true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.67e-07, 433, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 204], 'true,true,false,true': [1.97e-08, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.91e-07, 393, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.105, 17, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.25e-07, 364, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.098, 15, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.048, 369, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.677, 22, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.98e-07, 394, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.098, 15, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.86, 387, 10]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.1, 17, 204], 'true,false': [0.0, 0, 0], 'false': [0.0, 414, 0]}]]
[{'': [0.0813137755102097, 2.0898315757650005e-16], 'true': [5.712206307091002e-15, 2.7755575615628915e-18], 'true,true': [5.712206307091002e-15, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.04290168924333755, -1.2376256667952564e-16], 'true': [0.04290168924333755, nan], 'true,true': [-3.692035783851501e-15, 3.96508223080413e-18], 'true,true,false': [3.96508223080413e-18, nan]}, {'': [0.02510697838779519, -2.6122894697062506e-17], 'true': [0.02510697838779519, nan], 'true,true': [0.02510697838779519, nan], 'true,true,true': [0.02510697838779519, nan]}, {'': [0.028254168575265824, 1.6409762950579681e-16], 'true': [-7.314410515177502e-16, -2.337311630789803e-17], 'true,false': [-2.337311630789803e-17, nan]}, {'': [0.019362410233872585, 9.265983513410976e-17], 'true': [0.019362410233872585, nan], 'true,true': [-1.0971615772766253e-15, 1.850371707708594e-17], 'true,true,false': [1.850371707708594e-17, nan]}, {'': [0.01092972492123418, 4.2700885562506023e-17], 'true': [0.01092972492123418, nan], 'true,true': [0.01092972492123418, nan]}, {'': [0.009589036667837707, 0.002284618371021454], 'true': [0.009589036667837707, nan], 'true,true': [0.009589036667837707, nan]}, {'': [0.012438115791804746, 9.918743773300891e-17], 'true': [0.012438115791804746, nan], 'true,true': [0.012438115791804746, nan]}, {'': [0.00954387182046115, 0.0018648962684937992], 'true': [0.00954387182046115, nan], 'true,true': [0.00954387182046115, nan]}, {'': [0.010019794564744737, -6.543343430157927e-17], 'true': [0.010019794564744737, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048727;  // std dev = 2.98e-07, 418.000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.10159632948783584;  // std dev = 2.40e-07, 415.000 (wgt'ed) examples reached here.  /* #neg=415 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926047;  // std dev = 2.06e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 1.30e-07, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.209757715632535;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.07877675473109143;  // std dev = 2.18e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
%   | else if ( female(A) )
%   | | then return 0.16853850558058925;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1520508215598105;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17744351406526226;  // std dev = 0.022, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07601227472297507;  // std dev = 0.023, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07328571408976194;  // std dev = 0.017, 438.000 (wgt'ed) examples reached here.  /* #neg=438 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15269895502242742;  // std dev = 2.31e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06825086715444703;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then return -0.06842446071453086;  // std dev = 0.000, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15899148349432712;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.08454507125331216;  // std dev = 0.000172, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13421187344593846;  // std dev = 0.015, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06587685176300348;  // std dev = 0.019, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06418961921189043;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.789 seconds
Total inference time: 0.92 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063707
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.329 seconds
Refined model CLL: -0.063707


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.547 seconds
Total inference time: 0.92 seconds
AUC ROC: 1.0
Total revision time: 6.547
Best scored revision CLL: -0.063707


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068844, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.547, 'Inference time': 0.92, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100262, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.013, 'Inference time': 0.98}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5089995745976803;  // std dev = 1.440, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4288310769135537;  // std dev = 1.40e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1738912774088057;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3283950483304377;  // std dev = 3.73e-09, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15030800030849525;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 6.32e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23315050567934406;  // std dev = 0.100, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.05e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19190577097761058;  // std dev = 0.096, 58.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.053342698712310524;  // std dev = 0.087, 142.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13384723546515057;  // std dev = 1.248, 80.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0749915704415377;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.135578862646035;  // std dev = 0.105, 59.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0494326022286942;  // std dev = 0.978, 154.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12774670861855308;  // std dev = 0.099, 76.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0668040613906466;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080578
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.068 seconds
Total inference time: 0.728 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081511
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.855 seconds
Parameter learned model CLL: -0.081511


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 137, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.44, 5, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.69e-08, 117, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.4e-07, 0, 67], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.73e-09, 0, 67], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.1, 5, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.05e-08, 114, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.096, 4, 54], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 129, 13]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.248, 13, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 141, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.105, 5, 54], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.978, 141, 13]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.099, 9, 67], 'true,false': [0.0, 0, 0], 'false': [0.0, 115, 0]}]]
[{'': [0.13609374999999896, 5.406303424261632e-17], 'true': [-9.544603913195376e-16, -1.2810265668751807e-17], 'true,false': [-1.2810265668751807e-17, nan], 'true,false,true': [-1.2810265668751807e-17, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.0538529514000756, 0.0], 'true': [0.0538529514000756, nan], 'true,true': [3.1815346377317917e-16, -2.3129646346357427e-18], 'true,true,false': [-2.3129646346357427e-18, nan]}, {'': [0.028808471133802065, 6.452578262778688e-17], 'true': [0.028808471133802065, nan], 'true,true': [0.028808471133802065, nan], 'true,true,true': [0.028808471133802065, nan]}, {'': [0.04679898831365349, -1.8350793795457133e-17], 'true': [2.9164067512541426e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.017286724850447698, 2.982688722873555e-17], 'true': [0.017286724850447698, nan], 'true,true': [2.6512788647764932e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.009955952583694867, 3.2138034923359796e-17], 'true': [0.009955952583694867, nan], 'true,true': [0.009955952583694867, nan]}, {'': [0.009235698181474478, 0.00756330893774424], 'true': [0.009235698181474478, nan], 'true,true': [0.009235698181474478, nan]}, {'': [0.019460870597221628, -8.661314376508314e-18], 'true': [0.019460870597221628, nan], 'true,true': [0.019460870597221628, nan]}, {'': [0.01107201518052725, 0.006216767284431054], 'true': [0.01107201518052725, nan], 'true,true': [0.01107201518052725, nan]}, {'': [0.009763307264068573, -2.3169871818264135e-17], 'true': [0.009763307264068573, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048788;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.02e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360618;  // std dev = 9.42e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783642;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926082;  // std dev = 7.74e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0851847513883968;  // std dev = 6.91e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109164;  // std dev = 5.58e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07324622576333721;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420267;  // std dev = 5.16e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12826213522279248;  // std dev = 0.276, 69.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063889
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.046 seconds
Total inference time: 0.666 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.753 seconds
Refined model CLL: -0.064191


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063889
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7220000000000004 seconds
Total inference time: 0.666 seconds
AUC ROC: 1.0
Total revision time: 3.7220000000000004
Best scored revision CLL: -0.064191


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:11:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063889, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.7220000000000004, 'Inference time': 0.666, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080578, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.068, 'Inference time': 0.728}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46865438285798533;  // std dev = 2.785, 154.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360678;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43874013386089633;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.1681715947270431;  // std dev = 3.23e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.335142511906687;  // std dev = 1.39e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.145939121939657;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 6.99e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21610943818151068;  // std dev = 0.130, 153.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.82e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1682371643326199;  // std dev = 0.136, 127.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05362248520124425;  // std dev = 0.085, 305.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=26 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15784815702788516;  // std dev = 1.539, 153.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07497216456630316;  // std dev = 8.16e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1414583467670363;  // std dev = 0.105, 118.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04441110473668674;  // std dev = 1.366, 267.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=26 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1103272062462881;  // std dev = 0.133, 159.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06710148838551423;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.457 seconds
Total inference time: 0.723 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081783
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.096 seconds
Parameter learned model CLL: -0.081783


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 224, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 253, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.785, 20, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 256, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 134], 'true,false,true': [3.23e-09, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 255, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.39e-08, 0, 134], 'true,true,false,true': [0.0, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 245, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.13, 19, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.82e-08, 246, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.136, 19, 108], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.085, 279, 26]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.539, 19, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 242, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.105, 10, 108], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.366, 241, 26]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.133, 25, 134], 'true,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}]]
[{'': [0.1043975069252125, -2.220446049250313e-16], 'true': [4.772301956597688e-15, -3.0839528461809902e-18], 'true,true': [4.772301956597688e-15, nan], 'true,false': [-3.0839528461809902e-18, nan], 'true,false,true': [-3.0839528461809902e-18, nan]}, {'': [0.09459751658392809, -7.547761274131499e-17], 'true': [0.09459751658392809, nan], 'true,true': [-1.908920782639075e-15, -4.440892098500626e-18], 'true,true,false': [-4.440892098500626e-18, nan]}, {'': [0.050377167939833274, -7.806255641895632e-17], 'true': [0.050377167939833274, nan], 'true,true': [0.050377167939833274, nan], 'true,true,true': [0.050377167939833274, nan]}, {'': [0.051412399209317075, -6.966105252550002e-17], 'true': [-2.651278864776493e-16, 1.2335811384723961e-17], 'true,false': [1.2335811384723961e-17, nan]}, {'': [0.02312263797774156, 1.9938699217757912e-17], 'true': [0.02312263797774156, nan], 'true,true': [2.1210230918211945e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.016855301789204327, 3.159171208282966e-17], 'true': [0.016855301789204327, nan], 'true,true': [0.016855301789204327, nan]}, {'': [0.018370253174395647, 0.007295246375822948], 'true': [0.018370253174395647, nan], 'true,true': [0.018370253174395647, nan]}, {'': [0.015480343876054813, 2.75261906931857e-17], 'true': [0.015480343876054813, nan], 'true,true': [0.015480343876054813, nan]}, {'': [0.010956283532238155, 0.006987060366078889], 'true': [0.010956283532238155, nan], 'true,true': [0.010956283532238155, nan]}, {'': [0.017596311809151322, -1.4441925523579274e-17], 'true': [0.017596311809151322, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048824;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.11231637819360679;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.10159632948783655;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.99e-08, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.75e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839678;  // std dev = 8.94e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07877675473109143;  // std dev = 6.14e-08, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333674;  // std dev = 1.22e-07, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06842697784420262;  // std dev = 5.37e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801104;  // std dev = 5.58e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06419184008202622;  // std dev = 3.73e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 1.05e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.461 seconds
Total inference time: 0.668 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.886 seconds
Refined model CLL: -0.064052


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.9 seconds
Total inference time: 0.668 seconds
AUC ROC: 1.0
Total revision time: 4.9
Best scored revision CLL: -0.064052


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:12:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.9, 'Inference time': 0.668, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080116, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.457, 'Inference time': 0.723}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048754;  // std dev = 2.29e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283913;  // std dev = 2.79e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4897904459932579;  // std dev = 2.974, 224.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936067;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43354236042365707;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1711490886314688;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 1.52e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3316004919849417;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14821700471557173;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.80e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20313570671251813;  // std dev = 0.141, 238.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1748598669421876;  // std dev = 0.129, 189.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=164 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05193042038405374;  // std dev = 0.088, 416.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1580661161567583;  // std dev = 1.858, 230.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07508959595288893;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11583769615736415;  // std dev = 0.135, 193.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=164 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04416953054703153;  // std dev = 1.647, 388.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09095160412781923;  // std dev = 0.150, 257.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0672152703738656;  // std dev = 1.63e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079823
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.82 seconds
Total inference time: 0.722 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082332
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.254 seconds
Parameter learned model CLL: -0.082332


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.29e-07, 367, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [2.79e-08, 39, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 367, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.974, 22, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 328, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 202], 'true,false,true': [0.0, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.52e-07, 380, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.8e-07, 380, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.141, 36, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.21e-07, 386, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.129, 25, 164], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 378, 38]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.858, 28, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 381, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.135, 29, 164], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.647, 350, 38]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.15, 55, 202], 'true,false': [0.0, 0, 0], 'false': [1.63e-07, 365, 0]}]]
[{'': [0.09491737802490961, 1.4278617646405282e-16], 'true': [5.768762805181012e-15, 9.25185853854297e-18], 'true,true': [5.768762805181012e-15, nan], 'true,false': [9.25185853854297e-18, nan], 'true,false,true': [9.25185853854297e-18, nan]}, {'': [0.0968302533565274, -1.185851296057388e-16], 'true': [0.0968302533565274, nan], 'true,true': [-3.728590593592605e-15, 1.9927079929169476e-17], 'true,true,false': [1.9927079929169476e-17, nan]}, {'': [0.03948375153521352, -3.791005449939559e-17], 'true': [0.03948375153521352, nan], 'true,true': [0.03948375153521352, nan], 'true,true,true': [0.03948375153521352, nan]}, {'': [0.05044850297738866, 6.077010240053489e-17], 'true': [-2.0049968286299855e-15, -3.3306690738754695e-17], 'true,false': [-3.3306690738754695e-17, nan]}, {'': [0.026555432708952213, 8.531187452382781e-17], 'true': [0.026555432708952213, nan], 'true,true': [-1.1256122546694657e-15, -1.0744093786695063e-17], 'true,true,false': [-1.0744093786695063e-17, nan]}, {'': [0.019833520554583695, 3.7966175971637477e-17], 'true': [0.019833520554583695, nan], 'true,true': [0.019833520554583695, nan]}, {'': [0.016615207920076508, 0.00778945481607464], 'true': [0.016615207920076508, nan], 'true,true': [0.016615207920076508, nan]}, {'': [0.015009484944024562, -3.496765431890257e-17], 'true': [0.015009484944024562, nan], 'true,true': [0.015009484944024562, nan]}, {'': [0.018101256023733088, 0.006987019575298266], 'true': [0.018101256023733088, nan], 'true,true': [0.018101256023733088, nan]}, {'': [0.022543344884191904, 7.239262461939377e-17], 'true': [0.022543344884191904, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.14185106490048754;  // std dev = 2.29e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6190871091528137;  // std dev = 0.273, 101.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=89 */
%   | | else return 0.6263328396885073;  // std dev = 0.265, 127.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=113 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5790097464084906;  // std dev = 0.012, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.21110375468468667;  // std dev = 0.003, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.11231637819360636;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43529039096373967;  // std dev = 0.013, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.17806448017869875;  // std dev = 0.003, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783628;  // std dev = 1.12e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3327913001028865;  // std dev = 0.011, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.15338372341239223;  // std dev = 0.003, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.76e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26339873684264736;  // std dev = 0.010, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.13436580962387648;  // std dev = 0.002, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21555238271580554;  // std dev = 0.009, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11964122219636339;  // std dev = 0.003, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07877675473109147;  // std dev = 5.58e-08, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1813351533720255;  // std dev = 0.008, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10750507702569811;  // std dev = 0.002, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333714;  // std dev = 6.32e-08, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15595180128827457;  // std dev = 0.007, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09773961375565764;  // std dev = 0.002, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06842697784420329;  // std dev = 0.000, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13260944265254604;  // std dev = 0.398, 206.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=202 */
%   | else return -0.08426672211902718;  // std dev = 0.068, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06419184008202578;  // std dev = 1.56e-07, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065365
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.619 seconds
Total inference time: 0.69 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066037
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.151 seconds
Refined model CLL: -0.066037


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065365
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.843999999999999 seconds
Total inference time: 0.69 seconds
AUC ROC: 1.0
Total revision time: 5.843999999999999
Best scored revision CLL: -0.066037


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:12:09
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065365, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.843999999999999, 'Inference time': 0.69, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079823, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.82, 'Inference time': 0.722}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048716;  // std dev = 2.98e-07, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.47463354735812596;  // std dev = 3.808, 306.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360572;  // std dev = 4.21e-08, 558.000 (wgt'ed) examples reached here.  /* #neg=558 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43726832465542415;  // std dev = 7.73e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.16900967981903192;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783555;  // std dev = 3.17e-07, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3341389213847502;  // std dev = 2.39e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14658107778589005;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926118;  // std dev = 6.66e-08, 527.000 (wgt'ed) examples reached here.  /* #neg=527 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20473213483010333;  // std dev = 0.141, 317.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 525.000 (wgt'ed) examples reached here.  /* #neg=525 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18161044714958896;  // std dev = 0.123, 246.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=217 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.054760887227630325;  // std dev = 0.088, 592.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=52 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15249500101027333;  // std dev = 2.290, 312.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0748932530513924;  // std dev = 0.000, 517.000 (wgt'ed) examples reached here.  /* #neg=517 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1303163962833676;  // std dev = 0.120, 245.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=217 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04451065105641971;  // std dev = 1.951, 539.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=52 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1135443394964331;  // std dev = 0.126, 322.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06702897037326765;  // std dev = 0.000, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079982
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.448 seconds
Total inference time: 0.727 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082327
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.526 seconds
Parameter learned model CLL: -0.082327


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.47e-08, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-07, 454, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 42, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 507, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.808, 37, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 558, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [7.73e-07, 0, 269], 'true,false,true': [0.0, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.17e-07, 479, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.39e-08, 0, 269], 'true,true,false,true': [0.0, 48, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 527, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.141, 48, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.55e-07, 525, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.123, 29, 217], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 540, 52]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.29, 43, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 517, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.12, 28, 217], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.951, 487, 52]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.126, 53, 269], 'true,false': [0.0, 0, 0], 'false': [0.0, 467, 0]}]]
[{'': [0.11681020667694077, 1.956340131498073e-16], 'true': [4.226276495227362e-15, 4.7580986769649563e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [4.7580986769649563e-17, nan], 'true,false,true': [4.7580986769649563e-17, nan]}, {'': [0.08338923106493273, -1.2788367778719753e-16], 'true': [0.08338923106493273, nan], 'true,true': [-4.5432472323694135e-15, -2.6433881538694202e-17], 'true,true,false': [-2.6433881538694202e-17, nan]}, {'': [0.04738616341595517, 3.1834351960577965e-18], 'true': [0.04738616341595517, nan], 'true,true': [0.04738616341595517, nan], 'true,true,true': [0.04738616341595517, nan]}, {'': [0.03907102241889971, 2.0952852072257652e-16], 'true': [2.218795159994365e-15, -3.00060276925718e-17], 'true,false': [-3.00060276925718e-17, nan]}, {'': [0.029693362036493108, 8.426740224858873e-18], 'true': [0.029693362036493108, nan], 'true,true': [5.546987899985912e-16, -4.625929269271485e-18], 'true,true,false': [-4.625929269271485e-18, nan]}, {'': [0.019895104402180355, 4.567774729886358e-17], 'true': [0.019895104402180355, nan], 'true,true': [0.019895104402180355, nan]}, {'': [0.015053057144004425, 0.007817489835679014], 'true': [0.015053057144004425, nan], 'true,true': [0.015053057144004425, nan]}, {'': [0.016813525513415563, -7.473067941384033e-17], 'true': [0.016813525513415563, nan], 'true,true': [0.016813525513415563, nan]}, {'': [0.014310898232841, 0.007060834768137331], 'true': [0.014310898232841, nan], 'true,true': [0.014310898232841, nan]}, {'': [0.015875680229455923, -1.0365251364808743e-16], 'true': [0.015875680229455923, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1418510649004874;  // std dev = 2.27e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109556;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.719473412210956;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 519.000 (wgt'ed) examples reached here.  /* #neg=519 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 1.19e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360585;  // std dev = 0.000, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583132;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783545;  // std dev = 3.40e-07, 503.000 (wgt'ed) examples reached here.  /* #neg=503 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014967;  // std dev = 1.46e-07, 127.000 (wgt'ed) examples reached here.  /* #pos=127 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.15e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892611;  // std dev = 1.07e-07, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948784;  // std dev = 3.42e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839678;  // std dev = 1.50e-07, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109177;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07877675473109184;  // std dev = 1.75e-07, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527714;  // std dev = 9.42e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07324622576333731;  // std dev = 0.000, 515.000 (wgt'ed) examples reached here.  /* #neg=515 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420271;  // std dev = 7.45e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06842697784420347;  // std dev = 0.000, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801129;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06419184008202532;  // std dev = 2.48e-07, 541.000 (wgt'ed) examples reached here.  /* #neg=541 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.069 seconds
Total inference time: 0.691 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.386 seconds
Refined model CLL: -0.064058


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.429 seconds
Total inference time: 0.691 seconds
AUC ROC: 1.0
Total revision time: 7.429
Best scored revision CLL: -0.064058


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:12:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.429, 'Inference time': 0.691, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079982, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.448, 'Inference time': 0.727}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004886;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0.000, 652.000 (wgt'ed) examples reached here.  /* #neg=652 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.48137520131758765;  // std dev = 4.080, 379.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360593;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4356101488956959;  // std dev = 9.16e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.16995862806966744;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783501;  // std dev = 4.60e-07, 641.000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3330088530505473;  // std dev = 2.30e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14730720121255045;  // std dev = 4.71e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926146;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2057968425688487;  // std dev = 0.139, 395.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18090370340227194;  // std dev = 0.122, 315.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05405151499340337;  // std dev = 0.087, 674.000 (wgt'ed) examples reached here.  /* #neg=615 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15810654802296734;  // std dev = 2.391, 382.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0749424162007604;  // std dev = 0.000, 651.000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13085593195988707;  // std dev = 0.117, 312.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04970461973287835;  // std dev = 2.103, 728.000 (wgt'ed) examples reached here.  /* #neg=669 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11923716182587767;  // std dev = 0.118, 392.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06674600273309766;  // std dev = 1.35e-07, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07994
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.704 seconds
Total inference time: 0.74 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082255
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.549 seconds
Parameter learned model CLL: -0.082255


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 616, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 55, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 652, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.08, 42, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 616, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [9.16e-07, 0, 337], 'true,false,true': [0.0, 59, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.6e-07, 641, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.3e-08, 0, 337], 'true,true,false,true': [4.71e-08, 55, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 598, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.139, 58, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-07, 613, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.122, 37, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 615, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.391, 45, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 651, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.117, 34, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.103, 669, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.118, 55, 337], 'true,false': [0.0, 0, 0], 'false': [1.35e-07, 602, 0]}]]
[{'': [0.09296485966500982, -3.6911310948576635e-16], 'true': [3.204821834882351e-15, 4.2700885562506023e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [4.2700885562506023e-17, nan], 'true,false,true': [4.2700885562506023e-17, nan]}, {'': [0.08610921561681123, -3.1876342056722284e-16], 'true': [0.08610921561681123, nan], 'true,true': [-5.144582419153248e-15, -3.633457171500512e-17], 'true,true,false': [-3.633457171500512e-17, nan]}, {'': [0.04392797343164603, -7.497610036429629e-17], 'true': [0.04392797343164603, nan], 'true,true': [0.04392797343164603, nan], 'true,true,true': [0.04392797343164603, nan]}, {'': [0.04649631024960189, 3.297760747092509e-16], 'true': [2.4879537928691934e-15, -2.6344275160596936e-17], 'true,false': [-2.6344275160596936e-17, nan]}, {'': [0.027827530160627712, -3.8616453030440226e-17], 'true': [0.027827530160627712, nan], 'true,true': [5.060245002445818e-16, 4.0371746350005693e-17], 'true,true,false': [4.0371746350005693e-17, nan]}, {'': [0.019377597285726595, 4.0569324227738186e-17], 'true': [0.019377597285726595, nan], 'true,true': [0.019377597285726595, nan]}, {'': [0.014999820551440312, 0.00764353156055509], 'true': [0.014999820551440312, nan], 'true,true': [0.014999820551440312, nan]}, {'': [0.01496946952626712, -1.0164253804555965e-16], 'true': [0.01496946952626712, nan], 'true,true': [0.01496946952626712, nan]}, {'': [0.013754856542628834, 0.0060766806592687595], 'true': [0.013754856542628834, nan], 'true,true': [0.013754856542628834, nan]}, {'': [0.01384139213134678, 3.024527841171523e-17], 'true': [0.01384139213134678, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048857;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109564;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839144;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360579;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831336;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.10159632948783498;  // std dev = 4.66e-07, 638.000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892616;  // std dev = 0.000, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 3.95e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 1.66e-07, 655.000 (wgt'ed) examples reached here.  /* #neg=655 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253465;  // std dev = 2.53e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109245;  // std dev = 0.000, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2.86e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333652;  // std dev = 2.57e-07, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06842697784420362;  // std dev = 0.000, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13168211657587067;  // std dev = 0.394, 341.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=337 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.06419184008202525;  // std dev = 2.48e-07, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06388
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.217 seconds
Total inference time: 0.696 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064188
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.348 seconds
Refined model CLL: -0.064188


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06388
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.8180000000000005 seconds
Total inference time: 0.696 seconds
AUC ROC: 1.0
Total revision time: 7.8180000000000005
Best scored revision CLL: -0.064188


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:12:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06388, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.8180000000000005, 'Inference time': 0.696, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07994, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.704, 'Inference time': 0.74}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5.96e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 6.32e-08, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5089995745976803;  // std dev = 1.440, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7.60e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4288310769135537;  // std dev = 1.40e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1738912774088057;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3283950483304377;  // std dev = 3.73e-09, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15030800030849528;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5.37e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23315050567934406;  // std dev = 0.100, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1759216719404481;  // std dev = 0.119, 63.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05762639559111764;  // std dev = 0.085, 131.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16015358219308515;  // std dev = 0.958, 74.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07469496012856087;  // std dev = 6.41e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.14095545839330145;  // std dev = 0.094, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.053418707039858265;  // std dev = 0.900, 157.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09769673101016818;  // std dev = 0.133, 82.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0663087159688327;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074115
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.067 seconds
Total inference time: 0.732 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082173
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.815 seconds
Parameter learned model CLL: -0.082173


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 152, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.44, 5, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.4e-07, 0, 67], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 129, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.73e-09, 0, 67], 'true,true,false,true': [0.0, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.1, 5, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.83e-08, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.119, 7, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.085, 120, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.958, 7, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.41e-08, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.094, 4, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.9, 146, 11]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.133, 15, 67], 'true,false': [0.0, 0, 0], 'false': [0.0, 115, 0]}]]
[{'': [0.1288255087325739, 2.9854736796642864e-17], 'true': [-9.544603913195376e-16, -1.1564823173178714e-17], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-1.1564823173178714e-17, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.061141850684107026, 2.6294755846385285e-17], 'true': [0.061141850684107026, nan], 'true,true': [3.1815346377317917e-16, -1.982541115402065e-18], 'true,true,false': [-1.982541115402065e-18, nan]}, {'': [0.028808471133802065, 5.71599973074338e-17], 'true': [0.028808471133802065, nan], 'true,true': [0.028808471133802065, nan], 'true,true,true': [0.028808471133802065, nan]}, {'': [0.03792492461030714, -2.4097864100390994e-17], 'true': [2.9164067512541426e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.03425080187687229, 2.237658809322021e-17], 'true': [0.03425080187687229, nan], 'true,true': [2.6512788647764932e-17, -1.4802973661668754e-17], 'true,true,false': [-1.4802973661668754e-17, nan]}, {'': [0.009955952583694867, 3.4798035100191475e-17], 'true': [0.009955952583694867, nan], 'true,true': [0.009955952583694867, nan]}, {'': [0.014206167664600039, 0.007262601091361432], 'true': [0.014206167664600039, nan], 'true,true': [0.014206167664600039, nan]}, {'': [0.012408257394709627, 3.0655411873978205e-17], 'true': [0.012408257394709627, nan], 'true,true': [0.012408257394709627, nan]}, {'': [0.008895383260972315, 0.005157751100744402], 'true': [0.008895383260972315, nan], 'true,true': [0.008895383260972315, nan]}, {'': [0.017636059217405166, -2.413528314402514e-17], 'true': [0.017636059217405166, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8.43e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.11231637819360621;  // std dev = 9.31e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.29895378803649636;  // std dev = 0.092, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601495;  // std dev = 2.11e-08, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5.16e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25740601830952614;  // std dev = 0.017, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11509637431347175;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0851847513883968;  // std dev = 6.41e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21133528806371385;  // std dev = 0.015, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08644961157102411;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109162;  // std dev = 5.37e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17825328003697927;  // std dev = 0.013, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08736050210599033;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07324622576333713;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15362120477673954;  // std dev = 0.012, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07701059531097863;  // std dev = 0.048, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06842697784420265;  // std dev = 5.67e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1317670881502363;  // std dev = 0.198, 68.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | else return -0.06854575965441101;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202626;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064114
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.106 seconds
Total inference time: 0.731 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064831
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.754 seconds
Refined model CLL: -0.064831


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064114
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.742 seconds
Total inference time: 0.731 seconds
AUC ROC: 1.0
Total revision time: 3.742
Best scored revision CLL: -0.064831


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064114, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.742, 'Inference time': 0.731, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074115, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.067, 'Inference time': 0.732}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46865438285798533;  // std dev = 2.785, 154.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360661;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43874013386089633;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.16817159472704307;  // std dev = 4.56e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.335142511906687;  // std dev = 1.39e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14593912193965697;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 7.88e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2116606455513493;  // std dev = 0.135, 155.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.94e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17401951793831805;  // std dev = 0.130, 132.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=114 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05749554822016408;  // std dev = 0.082, 265.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14770173352373822;  // std dev = 1.673, 157.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07470400422942212;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13089101881624896;  // std dev = 0.120, 129.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=114 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0488932915133033;  // std dev = 1.215, 260.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10546632662680619;  // std dev = 0.134, 163.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06659701451038214;  // std dev = 7.74e-08, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074005
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.587 seconds
Total inference time: 0.76 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082888
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.072 seconds
Parameter learned model CLL: -0.082888


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 28, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.785, 20, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 219, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 134], 'true,false,true': [4.56e-09, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 218, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.39e-08, 0, 134], 'true,true,false,true': [1.49e-08, 22, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 273, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.135, 21, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 252, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.13, 18, 114], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.082, 245, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.673, 23, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.12, 15, 114], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.215, 240, 20]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.134, 29, 134], 'true,false': [0.0, 0, 0], 'false': [7.74e-08, 266, 0]}]]
[{'': [0.09053646232152184, -2.220446049250313e-16], 'true': [4.772301956597688e-15, -1.4802973661668754e-17], 'true,true': [4.772301956597688e-15, nan], 'true,false': [-1.4802973661668754e-17, nan], 'true,false,true': [-1.4802973661668754e-17, nan]}, {'': [0.10206150719285495, -7.168369135375026e-17], 'true': [0.10206150719285495, nan], 'true,true': [-1.908920782639075e-15, -5.9476233462061954e-18], 'true,true,false': [-5.9476233462061954e-18, nan]}, {'': [0.050377167939833274, -4.663950605731251e-17], 'true': [0.050377167939833274, nan], 'true,true': [0.050377167939833274, nan], 'true,true,true': [0.050377167939833274, nan]}, {'': [0.05505406834162488, -8.759557808969125e-17], 'true': [-2.651278864776493e-16, 2.590520390792032e-17], 'true,false': [2.590520390792032e-17, nan]}, {'': [0.028035986163492142, 2.2773805633336544e-17], 'true': [0.028035986163492142, nan], 'true,true': [2.1210230918211945e-16, 1.0092936587501423e-17], 'true,true,false': [1.0092936587501423e-17, nan]}, {'': [0.018151883347944958, 3.172065784643304e-17], 'true': [0.018151883347944958, nan], 'true,true': [0.018151883347944958, nan]}, {'': [0.01702242039752685, 0.006680511294627196], 'true': [0.01702242039752685, nan], 'true,true': [0.01702242039752685, nan]}, {'': [0.01783522662839712, -4.277088701424783e-17], 'true': [0.01783522662839712, nan], 'true,true': [0.01783522662839712, nan]}, {'': [0.014503262375087284, 0.005677693839749502], 'true': [0.014503262375087284, nan], 'true,true': [0.014503262375087284, nan]}, {'': [0.018055661535746302, 2.253836215404453e-17], 'true': [0.018055661535746302, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048824;  // std dev = 0.000, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.11231637819360678;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.10159632948783656;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601508;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.32071184716015083;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.99e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109144;  // std dev = 7.15e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333684;  // std dev = 1.13e-07, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06842697784420275;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1340070300080114;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | | else return -0.06419184008202618;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.10805241606764923;  // std dev = 0.067, 84.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202625;  // std dev = 1.83e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063987
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.365 seconds
Total inference time: 0.702 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.96 seconds
Refined model CLL: -0.064635


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063987
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.984 seconds
Total inference time: 0.702 seconds
AUC ROC: 1.0
Total revision time: 4.984
Best scored revision CLL: -0.064635


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:41
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063987, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.984, 'Inference time': 0.702, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074005, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.587, 'Inference time': 0.76}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1.95e-07, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4871144156635384;  // std dev = 3.034, 225.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360643;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4341996655073735;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1707698087863063;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 1.30e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33204807749567067;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14792727711205253;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926051;  // std dev = 1.92e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21058859757390228;  // std dev = 0.134, 233.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.15e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.172582355862643;  // std dev = 0.130, 199.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=172 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0593923028833124;  // std dev = 0.079, 429.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=30 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14598502854646198;  // std dev = 2.060, 237.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07457299997557244;  // std dev = 1.32e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12755001649652978;  // std dev = 0.123, 196.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=172 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.051567497064516236;  // std dev = 1.509, 421.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.117200478815515;  // std dev = 0.124, 235.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06632154915213563;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073871
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.796 seconds
Total inference time: 0.744 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082322
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.264 seconds
Parameter learned model CLL: -0.082322


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.79e-08, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.95e-07, 346, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [1.49e-08, 35, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 374, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.034, 23, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 375, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 202], 'true,false,true': [0.0, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.3e-07, 372, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.92e-07, 380, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.134, 31, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.15e-07, 354, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.13, 27, 172], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.079, 399, 30]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.06, 35, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.32e-07, 376, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.123, 24, 172], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.509, 391, 30]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.124, 33, 202], 'true,false': [0.0, 0, 0], 'false': [0.0, 373, 0]}]]
[{'': [0.1125891795481624, 1.1038055504943752e-16], 'true': [5.768762805181012e-15, 2.590520390792032e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [2.590520390792032e-17, nan], 'true,false,true': [2.590520390792032e-17, nan]}, {'': [0.08985699661964085, -1.1161600461472162e-16], 'true': [0.08985699661964085, nan], 'true,true': [-3.728590593592605e-15, 6.3441315692866086e-18], 'true,true,false': [6.3441315692866086e-18, nan]}, {'': [0.04091236317998651, -3.0790185216271007e-17], 'true': [0.04091236317998651, nan], 'true,true': [0.04091236317998651, nan], 'true,true,true': [0.04091236317998651, nan]}, {'': [0.04221513127793262, 4.5363951543823603e-17], 'true': [-1.442190701295253e-15, -2.1488187573390126e-17], 'true,false': [-2.1488187573390126e-17, nan]}, {'': [0.025290841733821626, 9.699843267777684e-17], 'true': [0.025290841733821626, nan], 'true,true': [-8.793845739605201e-17, -1.5313421029312504e-17], 'true,true,false': [-1.5313421029312504e-17, nan]}, {'': [0.017826695344188334, 3.763467880085276e-17], 'true': [0.017826695344188334, nan], 'true,true': [0.017826695344188334, nan]}, {'': [0.016948299549360515, 0.006180880504785297], 'true': [0.016948299549360515, nan], 'true,true': [0.016948299549360515, nan]}, {'': [0.017900933716232602, 4.60624446387033e-17], 'true': [0.017900933716232602, nan], 'true,true': [0.017900933716232602, nan]}, {'': [0.015215129339769522, 0.00540723337800883], 'true': [0.015215129339769522, nan], 'true,true': [0.015215129339769522, nan]}, {'': [0.015256193108060425, -2.3811753879359926e-17], 'true': [0.015256193108060425, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048754;  // std dev = 2.35e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.719473412210954;  // std dev = 2.80e-07, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109552;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 5.59e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.11231637819360663;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831286;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.10159632948783631;  // std dev = 1.03e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014906;  // std dev = 3.95e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.092691276189261;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.98e-07, 410.000 (wgt'ed) examples reached here.  /* #neg=410 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694884;  // std dev = 3.37e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 2.98e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109147;  // std dev = 4.71e-08, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527791;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.0732462257633372;  // std dev = 4.21e-08, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.06842697784420324;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801095;  // std dev = 1.07e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0641918400820257;  // std dev = 1.69e-07, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.735 seconds
Total inference time: 0.703 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.178 seconds
Refined model CLL: -0.064085


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.973 seconds
Total inference time: 0.703 seconds
AUC ROC: 1.0
Total revision time: 5.973
Best scored revision CLL: -0.064085


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.973, 'Inference time': 0.703, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073871, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.796, 'Inference time': 0.744}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5.96e-08, 514.000 (wgt'ed) examples reached here.  /* #neg=514 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46334604878982333;  // std dev = 4.065, 312.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360579;  // std dev = 0.000, 522.000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4400477185548936;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.1674303198187141;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878356;  // std dev = 3.05e-07, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.336034554077916;  // std dev = 2.01e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14537079957491209;  // std dev = 5.16e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 1.40e-07, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19774293505472468;  // std dev = 0.149, 325.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.48e-07, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1756782778599752;  // std dev = 0.132, 265.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=228 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05892412324310789;  // std dev = 0.080, 580.000 (wgt'ed) examples reached here.  /* #neg=539 #pos=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15113168430282703;  // std dev = 2.345, 315.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07460531636300537;  // std dev = 2.28e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1288430505920389;  // std dev = 0.125, 261.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=228 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05047244840859253;  // std dev = 1.787, 541.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1085459758156384;  // std dev = 0.131, 329.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06641641077453637;  // std dev = 0.000, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.416 seconds
Total inference time: 0.757 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.805 seconds
Parameter learned model CLL: -0.082464


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.96e-08, 58, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 514, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 36, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 483, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.065, 43, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 522, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 269], 'true,false,true': [0.0, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.05e-07, 477, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.01e-08, 0, 269], 'true,true,false,true': [5.16e-08, 48, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.4e-07, 477, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.149, 56, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.48e-07, 494, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.132, 37, 228], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 539, 41]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.345, 46, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.28e-07, 496, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.125, 33, 228], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.787, 500, 41]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.131, 60, 269], 'true,false': [0.0, 0, 0], 'false': [0.0, 471, 0]}]]
[{'': [0.1459099028327247, 6.911894316732492e-18], 'true': [4.226276495227362e-15, 6.125368411725002e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [6.125368411725002e-17, nan], 'true,false,true': [6.125368411725002e-17, nan]}, {'': [0.07431633417589413, -1.3239926753293793e-16], 'true': [0.07431633417589413, nan], 'true,true': [-4.5432472323694135e-15, -1.850371707708594e-17], 'true,true,false': [-1.850371707708594e-17, nan]}, {'': [0.052972679862972494, -6.805964901916668e-18], 'true': [0.052972679862972494, nan], 'true,true': [0.052972679862972494, nan], 'true,true,true': [0.052972679862972494, nan]}, {'': [0.04385031437703416, 1.9551097288996468e-16], 'true': [-5.282845619034202e-16, -7.229359230117299e-17], 'true,false': [-7.229359230117299e-17, nan]}, {'': [0.029778089052081125, 4.0964203843611645e-17], 'true': [0.029778089052081125, nan], 'true,true': [4.0942053547515065e-16, 5.551115123125783e-17], 'true,true,false': [5.551115123125783e-17, nan]}, {'': [0.02211992953097883, 4.404933458026937e-17], 'true': [0.02211992953097883, nan], 'true,true': [0.02211992953097883, nan]}, {'': [0.017424468634141262, 0.0064343658220513775], 'true': [0.017424468634141262, nan], 'true,true': [0.017424468634141262, nan]}, {'': [0.01745689152038834, 1.0475491442027687e-16], 'true': [0.01745689152038834, nan], 'true,true': [0.01745689152038834, nan]}, {'': [0.015561890387702252, 0.005901474521768114], 'true': [0.015561890387702252, nan], 'true,true': [0.015561890387702252, nan]}, {'': [0.017084536844005353, -7.825775884831252e-17], 'true': [0.017084536844005353, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048757;  // std dev = 1.26e-07, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360589;  // std dev = 0.000, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.10159632948783552;  // std dev = 3.25e-07, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.27097914059179934;  // std dev = 0.134, 133.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=117 */
%   | | else return 0.27693975174668206;  // std dev = 0.127, 170.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=152 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926087;  // std dev = 1.59e-07, 452.000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2640842372421197;  // std dev = 0.009, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11843275401098298;  // std dev = 0.002, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839678;  // std dev = 1.43e-07, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21603374682985999;  // std dev = 0.008, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10665751489850694;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07877675473109191;  // std dev = 1.60e-07, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18168621003632884;  // std dev = 0.007, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09697612060073023;  // std dev = 0.001, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07324622576333766;  // std dev = 0.000, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15621680329892934;  // std dev = 0.006, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08871334511563428;  // std dev = 0.002, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.0684269778442035;  // std dev = 0.000, 501.000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13304638369930172;  // std dev = 0.445, 274.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=269 */
%   | else return -0.07584467321001083;  // std dev = 0.057, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06419184008202547;  // std dev = 2.25e-07, 448.000 (wgt'ed) examples reached here.  /* #neg=448 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064474
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.95 seconds
Total inference time: 0.684 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065625
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.267 seconds
Refined model CLL: -0.065625


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064474
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.438000000000001 seconds
Total inference time: 0.684 seconds
AUC ROC: 1.0
Total revision time: 7.438000000000001
Best scored revision CLL: -0.065625


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064474, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.438000000000001, 'Inference time': 0.684, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073777, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.416, 'Inference time': 0.757}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048885;  // std dev = 0.000, 664.000 (wgt'ed) examples reached here.  /* #neg=664 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.45161622490098624;  // std dev = 4.832, 399.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360588;  // std dev = 0.000, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44294001508864006;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.16580158511662074;  // std dev = 1.86e-09, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783509;  // std dev = 4.37e-07, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3380091904257758;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1441203490637264;  // std dev = 2.11e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926154;  // std dev = 0.000, 638.000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21513060811443047;  // std dev = 0.133, 388.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1816683003622259;  // std dev = 0.123, 327.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05960176739923111;  // std dev = 0.077, 731.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14293700405990264;  // std dev = 2.759, 401.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07455854572621995;  // std dev = 1.37e-07, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1323860932848154;  // std dev = 0.119, 325.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0510794472292334;  // std dev = 1.955, 666.000 (wgt'ed) examples reached here.  /* #neg=617 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11156037915264554;  // std dev = 0.126, 405.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06633969734795434;  // std dev = 1.41e-07, 631.000 (wgt'ed) examples reached here.  /* #neg=631 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073751
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.882 seconds
Total inference time: 0.736 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082365
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.585 seconds
Parameter learned model CLL: -0.082365


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.58e-08, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 664, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 49, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 620, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.832, 62, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 610, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 337], 'true,false,true': [1.86e-09, 70, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.37e-07, 614, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [2.11e-08, 52, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 638, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.133, 51, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-07, 613, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.123, 39, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 682, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.759, 64, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.37e-07, 618, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.119, 37, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.955, 617, 49]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.126, 68, 337], 'true,false': [0.0, 0, 0], 'false': [1.41e-07, 631, 0]}]]
[{'': [0.11903375828258882, -4.628158632774749e-16], 'true': [3.204821834882351e-15, 5.756711979537848e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [5.756711979537848e-17, nan], 'true,false,true': [5.756711979537848e-17, nan]}, {'': [0.07911895608162009, -2.6358843423358554e-16], 'true': [0.07911895608162009, nan], 'true,true': [-5.144582419153248e-15, -3.172065784643304e-17], 'true,true,false': [-3.172065784643304e-17, nan]}, {'': [0.058508127037532824, -6.115326824164797e-17], 'true': [0.058508127037532824, nan], 'true,true': [0.058508127037532824, nan], 'true,true,true': [0.058508127037532824, nan]}, {'': [0.052772186140601314, 3.1100710136079303e-16], 'true': [-5.060245002445818e-16, 9.516197353929913e-18], 'true,false': [9.516197353929913e-18, nan]}, {'': [0.026919161241826514, -5.150877982586933e-17], 'true': [0.026919161241826514, nan], 'true,true': [-1.3072299589651695e-15, 8.540177112501205e-18], 'true,true,false': [8.540177112501205e-18, nan]}, {'': [0.017738984368262687, 4.0569324227738186e-17], 'true': [0.017738984368262687, nan], 'true,true': [0.017738984368262687, nan]}, {'': [0.015176361964841439, 0.005998043747305531], 'true': [0.015176361964841439, nan], 'true,true': [0.015176361964841439, nan]}, {'': [0.018983752969549555, 3.018082008689746e-17], 'true': [0.018983752969549555, nan], 'true,true': [0.018983752969549555, nan]}, {'': [0.014199538917136984, 0.0057359178655212225], 'true': [0.014199538917136984, nan], 'true,true': [0.014199538917136984, nan]}, {'': [0.015937079758852703, 3.167038739025803e-17], 'true': [0.015937079758852703, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.14185106490048888;  // std dev = 0.000, 673.000 (wgt'ed) examples reached here.  /* #neg=673 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109561;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109568;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.1123163781936061;  // std dev = 0.000, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831336;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783627;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.10159632948783522;  // std dev = 4.00e-07, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.24121124651603149;  // std dev = 0.163, 182.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=147 */
%   | | else return 0.2611222077584318;  // std dev = 0.145, 222.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926155;  // std dev = 0.000, 658.000 (wgt'ed) examples reached here.  /* #neg=658 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2683683297529434;  // std dev = 0.036, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1163836573659066;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21903816173340912;  // std dev = 0.031, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10473160221687196;  // std dev = 0.007, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109234;  // std dev = 0.000, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1838744455884825;  // std dev = 0.027, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09542476154455162;  // std dev = 0.007, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333635;  // std dev = 2.93e-07, 666.000 (wgt'ed) examples reached here.  /* #neg=666 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15786674765113037;  // std dev = 0.024, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08744692832451459;  // std dev = 0.006, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420361;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1379940318534214;  // std dev = 0.022, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08062955413650962;  // std dev = 0.006, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.06419184008202607;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.0641918400820252;  // std dev = 2.49e-07, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.181 seconds
Total inference time: 0.715 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065404
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.363 seconds
Refined model CLL: -0.065404


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.011000000000001 seconds
Total inference time: 0.715 seconds
AUC ROC: 1.0
Total revision time: 8.011000000000001
Best scored revision CLL: -0.065404


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:13:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064414, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.011000000000001, 'Inference time': 0.715, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073751, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.882, 'Inference time': 0.736}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.30e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4301759089450547;  // std dev = 2.331, 80.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.02e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4482365646188001;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.1628573537259456;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.34163089571146793;  // std dev = 9.13e-09, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14185384665660355;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 3.65e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20359270727285012;  // std dev = 0.147, 78.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.66e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.186826127546082;  // std dev = 0.122, 60.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05331528947059217;  // std dev = 0.090, 135.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13537146991329377;  // std dev = 1.313, 81.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07499347178343818;  // std dev = 3.33e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16534457743659847;  // std dev = 0.070, 55.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04928476732861449;  // std dev = 0.993, 136.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08575199209596328;  // std dev = 0.146, 88.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0668148686139603;  // std dev = 6.23e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.15 seconds
Total inference time: 0.88 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08198
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.843 seconds
Parameter learned model CLL: -0.08198


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.3e-08, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.49e-08, 0, 65], 'true,true,false,true': [5.27e-09, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 135, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.331, 15, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.02e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.19e-07, 0, 65], 'true,false,true': [1.86e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [9.13e-09, 0, 65], 'true,true,false,true': [7.45e-09, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.147, 13, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 129, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.122, 7, 53], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 123, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.313, 16, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.33e-08, 122, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.07, 2, 53], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.993, 124, 12]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.146, 23, 65], 'true,false': [0.0, 0, 0], 'false': [6.23e-08, 137, 0]}]]
[{'': [0.07736560206308181, 7.096270879047392e-17], 'true': [-8.745141363201234e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-8.745141363201234e-16, nan]}, {'': [0.08837064688583855, -6.579099405186113e-18], 'true': [0.08837064688583855, nan], 'true,true': [2.1862853408003084e-16, 2.523234146875356e-18], 'true,true,false': [2.523234146875356e-18, nan]}, {'': [0.06791489575498481, 6.074805229081045e-17], 'true': [0.06791489575498481, nan], 'true,true': [0.06791489575498481, nan], 'true,true,true': [0.06791489575498481, nan]}, {'': [0.02889108372243531, -1.938484646170908e-17], 'true': [2.1862853408003084e-16, 4.625929269271485e-18], 'true,false': [4.625929269271485e-18, nan]}, {'': [0.027011977327425402, 1.2688263138573217e-17], 'true': [0.027011977327425402, nan], 'true,true': [8.198570028001156e-17, 5.551115123125783e-18], 'true,true,false': [5.551115123125783e-18, nan]}, {'': [0.021653404785746167, 3.4425520143415706e-17], 'true': [0.021653404785746167, nan], 'true,true': [0.021653404785746167, nan]}, {'': [0.014943025203125234, 0.008043844387985282], 'true': [0.014943025203125234, nan], 'true,true': [0.014943025203125234, nan]}, {'': [0.021278908638527754, 9.100188726435709e-18], 'true': [0.021278908638527754, nan], 'true,true': [0.021278908638527754, nan]}, {'': [0.004907632848332299, 0.007257516853262177], 'true': [0.004907632848332299, nan], 'true,true': [0.004907632848332299, nan]}, {'': [0.0214610226678579, 2.8363361942978454e-17], 'true': [0.0214610226678579, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.5576805939842713;  // std dev = 0.332, 47.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5784658404812159;  // std dev = 0.157, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.15632820857999966;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360624;  // std dev = 7.88e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4350994365680151;  // std dev = 0.158, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.15221240206203268;  // std dev = 0.131, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783633;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2722189528532061;  // std dev = 0.119, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.34764777634014093;  // std dev = 5.16e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.1554196391580496;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926089;  // std dev = 6.66e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2664922237888936;  // std dev = 0.067, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12767812382986868;  // std dev = 0.046, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839682;  // std dev = 6.23e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2177379119321469;  // std dev = 0.058, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10110700023441259;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109162;  // std dev = 5.77e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18293717747169658;  // std dev = 0.051, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10079799734543074;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07324622576333713;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15716643688492904;  // std dev = 0.045, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09365666612896197;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420265;  // std dev = 5.37e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13745446167531203;  // std dev = 0.040, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.08901613457956323;  // std dev = 0.030, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064066
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.063 seconds
Total inference time: 0.831 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065903
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.757 seconds
Refined model CLL: -0.065903


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064066
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.813 seconds
Total inference time: 0.831 seconds
AUC ROC: 1.0
Total revision time: 3.813
Best scored revision CLL: -0.065903


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064066, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.813, 'Inference time': 0.831, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073077, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.15, 'Inference time': 0.88}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048832;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4702256751096525;  // std dev = 2.718, 149.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360682;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4383532448187265;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.16839151728009402;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3348786523559964;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1461076384718427;  // std dev = 1.29e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.99e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21929621442677008;  // std dev = 0.126, 147.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18113582597224012;  // std dev = 0.121, 123.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=109 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.055247310987450254;  // std dev = 0.085, 251.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14559103677294805;  // std dev = 1.635, 153.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07485955851230087;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.11934266431533398;  // std dev = 0.131, 127.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=109 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.047463067251391815;  // std dev = 1.235, 253.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10205405407080045;  // std dev = 0.133, 162.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=130 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06681633959483171;  // std dev = 9.42e-08, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073209
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.559 seconds
Total inference time: 0.903 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084192
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.059 seconds
Parameter learned model CLL: -0.084192


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.66e-08, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 251, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [0.0, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 241, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.718, 19, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 260, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 130], 'true,false,true': [0.0, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [1.29e-08, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 252, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.126, 17, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 224, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.121, 14, 109], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.085, 230, 21]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.635, 23, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 238, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.131, 18, 109], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.235, 232, 21]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.133, 32, 130], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 243, 0]}]]
[{'': [0.11555555555556017, -1.59235174846636e-16], 'true': [4.481884948640632e-15, 2.7755575615628915e-18], 'true,true': [4.481884948640632e-15, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.08249355255152954, -5.3438120687351934e-17], 'true': [0.08249355255152954, nan], 'true,true': [-1.7490282726402467e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0495980741036084, -8.710980654751228e-17], 'true': [0.0495980741036084, nan], 'true,true': [0.0495980741036084, nan], 'true,true,true': [0.0495980741036084, nan]}, {'': [0.05113044532421547, -7.280150981148567e-17], 'true': [-5.192427684400732e-16, -2.5620531337503614e-17], 'true,false': [-2.5620531337503614e-17, nan]}, {'': [0.02673352493809869, 1.938484646170908e-17], 'true': [0.02673352493809869, nan], 'true,true': [-6.695498856200944e-16, 8.326672684688674e-18], 'true,true,false': [8.326672684688674e-18, nan]}, {'': [0.01584585984280708, 2.973811673103098e-17], 'true': [0.01584585984280708, nan], 'true,true': [0.01584585984280708, nan]}, {'': [0.014553359614043446, 0.007275693545617572], 'true': [0.014553359614043446, nan], 'true,true': [0.014553359614043446, nan]}, {'': [0.017472469479724383, -7.277092094181698e-17], 'true': [0.017472469479724383, nan], 'true,true': [0.017472469479724383, nan]}, {'': [0.017194847697889114, 0.006030564465543887], 'true': [0.017194847697889114, nan], 'true,true': [0.017194847697889114, nan]}, {'': [0.017822085258030612, 3.655055225103396e-17], 'true': [0.017822085258030612, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048846;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6208996396246975;  // std dev = 0.271, 60.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=53 */
%   | | else return 0.6138586558685356;  // std dev = 0.279, 88.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=77 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5805717429958193;  // std dev = 0.010, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.20981619554735376;  // std dev = 0.003, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.11231637819360668;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4364827407531239;  // std dev = 0.010, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.17716673263700128;  // std dev = 0.002, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.10159632948783653;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3336037311912442;  // std dev = 0.009, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.15295394607016452;  // std dev = 0.002, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 6.32e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2639509374794982;  // std dev = 0.008, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1340541847185805;  // std dev = 0.001, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21594017930922862;  // std dev = 0.007, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11937969252589883;  // std dev = 0.002, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07877675473109146;  // std dev = 7.30e-08, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18161799608508677;  // std dev = 0.006, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10726265763025429;  // std dev = 0.001, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07324622576333674;  // std dev = 1.22e-07, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1561653267048218;  // std dev = 0.005, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09751900603271688;  // std dev = 0.001, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06842697784420262;  // std dev = 5.37e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13618066398845463;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.0895530993465088;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.09813075824049676;  // std dev = 0.085, 93.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=77 */
%   | else return -0.06419184008202618;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064551
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.377 seconds
Total inference time: 0.875 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.028 seconds
Refined model CLL: -0.067266


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064551
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.023 seconds
Total inference time: 0.875 seconds
AUC ROC: 1.0
Total revision time: 5.023
Best scored revision CLL: -0.067266


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064551, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.023, 'Inference time': 0.875, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073209, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.559, 'Inference time': 0.903}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 1.86e-07, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.48219571730081534;  // std dev = 3.087, 219.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43540843247116384;  // std dev = 3.15e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.1700744118171503;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 1.12e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3328714232376408;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14739574307476924;  // std dev = 2.36e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 1.62e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20950879104218464;  // std dev = 0.135, 226.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17963672100154585;  // std dev = 0.123, 185.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.057507517179711115;  // std dev = 0.083, 410.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13176640455824598;  // std dev = 2.265, 240.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07470317689946082;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1201129900953642;  // std dev = 0.133, 191.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.049844791108711616;  // std dev = 1.590, 382.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=32 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10784291521818734;  // std dev = 0.134, 238.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=195 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06653719990882606;  // std dev = 1.20e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.807 seconds
Total inference time: 0.919 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083961
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.241 seconds
Parameter learned model CLL: -0.083961


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.33e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.86e-07, 347, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false,true': [0.0, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 353, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.087, 24, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 374, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.15e-07, 0, 195], 'true,false,true': [0.0, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.12e-07, 363, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false,true': [2.36e-08, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.62e-07, 358, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.135, 31, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.19e-07, 386, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.123, 22, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.083, 378, 32]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.265, 45, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 350, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.133, 28, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.59, 350, 32]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.134, 43, 195], 'true,false': [0.0, 0, 0], 'false': [1.2e-07, 367, 0]}]]
[{'': [0.12642779504586668, 9.982408751672877e-17], 'true': [5.975846598187509e-15, 3.2653618371328135e-17], 'true,true': [5.975846598187509e-15, nan], 'true,false': [3.2653618371328135e-17, nan], 'true,false,true': [3.2653618371328135e-17, nan]}, {'': [0.08644941368515852, -1.1070779169066716e-16], 'true': [0.08644941368515852, nan], 'true,true': [-3.643808901333847e-15, -6.938893903907228e-18], 'true,true,false': [-6.938893903907228e-18, nan]}, {'': [0.043500877746361806, -2.6122894697062506e-17], 'true': [0.043500877746361806, nan], 'true,true': [0.043500877746361806, nan], 'true,true,true': [0.043500877746361806, nan]}, {'': [0.04131809190816057, 3.4254815084853316e-17], 'true': [5.101332461867386e-16, -7.656710514656252e-18], 'true,false': [-7.656710514656252e-18, nan]}, {'': [0.02394358661291516, 7.318788653953546e-17], 'true': [0.02394358661291516, nan], 'true,true': [-2.1862853408003084e-16, 2.1350442781253012e-17], 'true,true,false': [2.1350442781253012e-17, nan]}, {'': [0.018304717397146102, 3.681568579067877e-17], 'true': [0.018304717397146102, nan], 'true,true': [0.018304717397146102, nan]}, {'': [0.015147871905902707, 0.006929039172136719], 'true': [0.015147871905902707, nan], 'true,true': [0.015147871905902707, nan]}, {'': [0.021380167465229614, -5.709718412357947e-17], 'true': [0.021380167465229614, nan], 'true,true': [0.021380167465229614, nan]}, {'': [0.01768439577185995, 0.006620956330382795], 'true': [0.01768439577185995, nan], 'true,true': [0.01768439577185995, nan]}, {'': [0.017992419215695356, 3.9326701144760315e-17], 'true': [0.017992419215695356, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.14185106490048746;  // std dev = 2.62e-07, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6195368685751174;  // std dev = 0.273, 93.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return 0.6146773749099508;  // std dev = 0.278, 129.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=113 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5805738996328302;  // std dev = 0.008, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.2098818674363992;  // std dev = 0.002, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.1123163781936065;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43648416835611537;  // std dev = 0.008, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.17721891635799317;  // std dev = 0.002, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783634;  // std dev = 8.69e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25779022325897977;  // std dev = 0.176, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return 0.2292897923505046;  // std dev = 0.200, 144.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=113 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.60e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2822874317286442;  // std dev = 0.047, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.18667530854619996;  // std dev = 0.014, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22874410201356457;  // std dev = 0.041, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.16023231669093135;  // std dev = 0.012, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109147;  // std dev = 5.58e-08, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19090349288808328;  // std dev = 0.035, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.13958479553267109;  // std dev = 0.013, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07324622576333717;  // std dev = 4.71e-08, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1631402594377963;  // std dev = 0.031, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1238672045498931;  // std dev = 0.010, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420318;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.14207266753748782;  // std dev = 0.028, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.11060985967412411;  // std dev = 0.008, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06419184008202572;  // std dev = 1.68e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.627 seconds
Total inference time: 0.85 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0682
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.016 seconds
Refined model CLL: -0.0682


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.691 seconds
Total inference time: 0.85 seconds
AUC ROC: 1.0
Total revision time: 5.691
Best scored revision CLL: -0.0682


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064955, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.691, 'Inference time': 0.85, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072913, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.807, 'Inference time': 0.919}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283912;  // std dev = 6.05e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4494879321118015;  // std dev = 4.287, 309.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360596;  // std dev = 0.000, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44346522248426395;  // std dev = 1.69e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.16550742725716658;  // std dev = 6.18e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783577;  // std dev = 2.63e-07, 452.000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3383679882720815;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1438942567588874;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 1.37e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20901915547134692;  // std dev = 0.140, 305.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.38e-07, 444.000 (wgt'ed) examples reached here.  /* #neg=444 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1803586512130679;  // std dev = 0.126, 246.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=215 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05369130606176378;  // std dev = 0.089, 507.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.146184637737948;  // std dev = 2.415, 308.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07496739188707441;  // std dev = 4.71e-08, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1382216692102589;  // std dev = 0.113, 239.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=215 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04664069074428175;  // std dev = 1.842, 509.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.104131024784494;  // std dev = 0.135, 322.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=260 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.066958051939757;  // std dev = 6.32e-08, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073301
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.323 seconds
Total inference time: 0.886 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08397
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.382 seconds
Parameter learned model CLL: -0.08397


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.16e-08, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-07, 459, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [6.05e-08, 58, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 530, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.287, 49, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 478, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.69e-07, 0, 260], 'true,false,true': [6.18e-09, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.63e-07, 452, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false,true': [0.0, 49, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.37e-07, 476, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.14, 45, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.38e-07, 444, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.126, 31, 215], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.089, 462, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.415, 48, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 482, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.113, 24, 215], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.842, 464, 45]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.135, 62, 260], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 454, 0]}]]
[{'': [0.0999429230392942, 1.935029236819445e-16], 'true': [4.372570681600617e-15, 3.027880976250427e-17], 'true,true': [4.372570681600617e-15, nan], 'true,false': [3.027880976250427e-17, nan], 'true,false,true': [3.027880976250427e-17, nan]}, {'': [0.10645750373773523, -1.2400981709020616e-16], 'true': [0.10645750373773523, nan], 'true,true': [-4.481884948640632e-15, 6.316786174591408e-17], 'true,true,false': [6.316786174591408e-17, nan]}, {'': [0.059483000272343045, -5.5743415462350955e-18], 'true': [0.059483000272343045, nan], 'true,true': [0.059483000272343045, nan], 'true,true,true': [0.059483000272343045, nan]}, {'': [0.05280844599566658, 1.5326972729338443e-16], 'true': [1.0931426704001542e-16, 3.700743415417188e-17], 'true,false': [3.700743415417188e-17, nan]}, {'': [0.031032659500785698, 3.918434204559376e-17], 'true': [0.031032659500785698, nan], 'true,true': [-9.564998366001348e-16, -4.0783702945413916e-17], 'true,true,false': [-4.0783702945413916e-17, nan]}, {'': [0.019548873379221936, 4.300863969268624e-17], 'true': [0.019548873379221936, nan], 'true,true': [0.019548873379221936, nan]}, {'': [0.01593712710191412, 0.007899018348944702], 'true': [0.01593712710191412, nan], 'true,true': [0.01593712710191412, nan]}, {'': [0.018930991537578542, 4.6067345420130975e-18], 'true': [0.018930991537578542, nan], 'true,true': [0.018930991537578542, nan]}, {'': [0.012705068261029129, 0.006663079299904685], 'true': [0.012705068261029129, nan], 'true,true': [0.012705068261029129, nan]}, {'': [0.018276554445343682, 8.80353059174133e-18], 'true': [0.018276554445343682, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1418510649004872;  // std dev = 2.95e-07, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109551;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109561;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.12544463852839144;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 6.31e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.11231637819360608;  // std dev = 0.000, 439.000 (wgt'ed) examples reached here.  /* #neg=439 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831313;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.10159632948783552;  // std dev = 3.24e-07, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014994;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3207118471601494;  // std dev = 2.42e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926067;  // std dev = 1.94e-07, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.21e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839679;  // std dev = 1.41e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109186;  // std dev = 1.67e-07, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527722;  // std dev = 4.21e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.0732462257633377;  // std dev = 0.000, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.06842697784420347;  // std dev = 0.000, 484.000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1295363788029728;  // std dev = 0.480, 266.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=260 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202541;  // std dev = 2.39e-07, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.924 seconds
Total inference time: 0.86 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.213 seconds
Refined model CLL: -0.06436


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.842 seconds
Total inference time: 0.86 seconds
AUC ROC: 1.0
Total revision time: 6.842
Best scored revision CLL: -0.06436


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063441, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.842, 'Inference time': 0.86, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073301, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.323, 'Inference time': 0.886}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 556.000 (wgt'ed) examples reached here.  /* #neg=556 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.45599849823042415;  // std dev = 4.651, 383.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360585;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44185898678911595;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.16640859158056623;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783516;  // std dev = 4.19e-07, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3372709026986595;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14458665294541878;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926153;  // std dev = 0.000, 631.000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20692420311002524;  // std dev = 0.141, 384.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18390033763760927;  // std dev = 0.122, 302.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0531304699558362;  // std dev = 0.087, 677.000 (wgt'ed) examples reached here.  /* #neg=618 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13881194589812695;  // std dev = 2.839, 396.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0750062936188181;  // std dev = 1.93e-07, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1305260567021244;  // std dev = 0.123, 304.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.048426656547944126;  // std dev = 2.140, 693.000 (wgt'ed) examples reached here.  /* #neg=634 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10505484261012607;  // std dev = 0.137, 403.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=326 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0668791252051051;  // std dev = 0.000, 567.000 (wgt'ed) examples reached here.  /* #neg=567 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.727 seconds
Total inference time: 0.919 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083865
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.544 seconds
Parameter learned model CLL: -0.083865


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.77e-08, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.77e-08, 56, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 615, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [0.0, 65, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 556, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.651, 57, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 604, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 326], 'true,false,true': [0.0, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.19e-07, 601, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [0.0, 63, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 631, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.141, 58, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.55e-07, 584, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.122, 35, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 618, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.839, 70, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.93e-07, 594, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.123, 37, 267], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.14, 634, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.137, 77, 326], 'true,false': [0.0, 0, 0], 'false': [0.0, 567, 0]}]]
[{'': [0.1251062196759988, -3.17722361518744e-16], 'true': [3.400143152717044e-15, 5.947623346206196e-17], 'true,true': [3.400143152717044e-15, nan], 'true,false': [5.947623346206196e-17, nan], 'true,false,true': [5.947623346206196e-17, nan]}, {'': [0.0989479084983536, -1.7252386569714664e-16], 'true': [0.0989479084983536, nan], 'true,true': [-5.056623150194578e-15, -3.75767792950053e-17], 'true,true,false': [-3.75767792950053e-17, nan]}, {'': [0.056472277698150296, -5.440828067699443e-17], 'true': [0.056472277698150296, nan], 'true,true': [0.056472277698150296, nan], 'true,true,true': [0.056472277698150296, nan]}, {'': [0.04202817013128474, 2.926111931790762e-16], 'true': [-2.201374733489881e-15, -4.9846748044394783e-17], 'true,false': [-4.9846748044394783e-17, nan]}, {'': [0.031513474833901385, -4.3634755959911064e-17], 'true': [0.031513474833901385, nan], 'true,true': [-2.3975368384543257e-16, -5.639228061588096e-17], 'true,true,false': [-5.639228061588096e-17, nan]}, {'': [0.019910466796896342, 4.1063043376546883e-17], 'true': [0.019910466796896342, nan], 'true,true': [0.019910466796896342, nan]}, {'': [0.014831629682602234, 0.007623925738176117], 'true': [0.014831629682602234, nan], 'true,true': [0.014831629682602234, nan]}, {'': [0.02035136997568375, 6.280049432223107e-17], 'true': [0.02035136997568375, nan], 'true,true': [0.02035136997568375, nan]}, {'': [0.015046241806959673, 0.006607511933455924], 'true': [0.015046241806959673, nan], 'true,true': [0.015046241806959673, nan]}, {'': [0.01884068175584062, -3.681162762425563e-17], 'true': [0.01884068175584062, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1418510649004883;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360567;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783513;  // std dev = 4.32e-07, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2530201076643391;  // std dev = 0.153, 171.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=143 */
%   | | else return 0.2543397860719406;  // std dev = 0.152, 218.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926132;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2681040559086022;  // std dev = 0.002, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11636198882683141;  // std dev = 0.000474, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21885229369538983;  // std dev = 0.002, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10491344828961328;  // std dev = 0.000432, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109261;  // std dev = 0.000, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18373875905581616;  // std dev = 0.002, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09545722461167148;  // std dev = 0.000451, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333671;  // std dev = 2.08e-07, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1577642359399527;  // std dev = 0.002, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08752888051516793;  // std dev = 0.000444, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.06842697784420357;  // std dev = 0.000, 556.000 (wgt'ed) examples reached here.  /* #neg=556 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13307340438870754;  // std dev = 0.565, 334.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=326 */
%   | else return -0.07668786244995877;  // std dev = 0.066, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return -0.06419184008202525;  // std dev = 2.48e-07, 583.000 (wgt'ed) examples reached here.  /* #neg=583 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064016
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.052 seconds
Total inference time: 0.81 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065809
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.265 seconds
Refined model CLL: -0.065809


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064016
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.588 seconds
Total inference time: 0.81 seconds
AUC ROC: 1.0
Total revision time: 7.588
Best scored revision CLL: -0.065809


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064016, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.588, 'Inference time': 0.81, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073191, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.727, 'Inference time': 0.919}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.05e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.44994283438735405;  // std dev = 2.122, 76.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.82e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44335295375465855;  // std dev = 1.12e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.16557026551750303;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33829128540378733;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14394256135858188;  // std dev = 9.13e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3.16e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23334323946497365;  // std dev = 0.110, 70.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.05e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1748227866406051;  // std dev = 0.127, 54.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04365204683316017;  // std dev = 0.100, 140.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13521372493662698;  // std dev = 1.285, 79.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07566656473531809;  // std dev = 4.21e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13863932285693725;  // std dev = 0.111, 52.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04196737164062659;  // std dev = 1.118, 149.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.09954785503589574;  // std dev = 0.141, 82.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06783886554852424;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.051 seconds
Total inference time: 0.949 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083759
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.836 seconds
Parameter learned model CLL: -0.083759


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.05e-08, 0, 64], 'true,true,false,true': [0.0, 19, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.122, 12, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.82e-08, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.12e-07, 0, 64], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 122, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false,true': [9.13e-09, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.11, 6, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.05e-08, 115, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.127, 7, 47], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.1, 123, 17]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.285, 15, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 121, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.111, 5, 47], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.118, 132, 17]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.141, 18, 64], 'true,false': [0.0, 0, 0], 'false': [0.0, 102, 0]}]]
[{'': [0.14032720526226933, 4.892508244110859e-17], 'true': [-8.881784197001252e-16, -1.2810265668751807e-17], 'true,false': [-1.2810265668751807e-17, nan], 'true,false,true': [-1.2810265668751807e-17, nan], 'true,true': [-8.881784197001252e-16, nan]}, {'': [0.12601045132205804, -1.0375916117992117e-17], 'true': [0.12601045132205804, nan], 'true,true': [1.1102230246251565e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.05927539164978011, 6.69962170032422e-17], 'true': [0.05927539164978011, nan], 'true,true': [0.05927539164978011, nan], 'true,true,true': [0.05927539164978011, nan]}, {'': [0.057035088525880705, -1.8200377452871417e-17], 'true': [1.942890293094024e-16, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan]}, {'': [0.029104859734420372, 8.921435019309294e-18], 'true': [0.029104859734420372, nan], 'true,true': [-2.498001805406602e-16, 7.569702440626067e-18], 'true,true,false': [7.569702440626067e-18, nan]}, {'': [0.012179795577588587, 3.185857375011319e-17], 'true': [0.012179795577588587, nan], 'true,true': [0.012179795577588587, nan]}, {'': [0.016232515378507114, 0.01002300336617064], 'true': [0.016232515378507114, nan], 'true,true': [0.016232515378507114, nan]}, {'': [0.02090966223345667, 1.4680635036365707e-17], 'true': [0.02090966223345667, nan], 'true,true': [0.02090966223345667, nan]}, {'': [0.012232061969970435, 0.008382873200118027], 'true': [0.012232061969970435, nan], 'true,true': [0.012232061969970435, nan]}, {'': [0.019774116236558007, -2.0680624968507818e-17], 'true': [0.019774116236558007, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048766;  // std dev = 8.16e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1123163781936062;  // std dev = 8.69e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10159632948783631;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.3207118471601495;  // std dev = 2.11e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.26021382910901636;  // std dev = 0.146, 41.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 5.77e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26155289056236614;  // std dev = 0.046, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10507939935313812;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839682;  // std dev = 5.87e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21426212579904252;  // std dev = 0.040, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08859243074346493;  // std dev = 0.051, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109168;  // std dev = 4.21e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18039781097530996;  // std dev = 0.036, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08711352420187413;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07324622576333716;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1552466295476836;  // std dev = 0.032, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08339320908494752;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06842697784420267;  // std dev = 4.47e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13288067410723392;  // std dev = 0.201, 65.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=64 */
%   | else return -0.06994931188071317;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064088
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.045 seconds
Total inference time: 0.83 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065127
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.723 seconds
Refined model CLL: -0.065127


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064088
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.655 seconds
Total inference time: 0.83 seconds
AUC ROC: 1.0
Total revision time: 3.655
Best scored revision CLL: -0.065127


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:13:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064088, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.655, 'Inference time': 0.83, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077111, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.051, 'Inference time': 0.949}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4696503996931888;  // std dev = 2.717, 148.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360679;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.438494882459887;  // std dev = 4.09e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.16831097348602245;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783652;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33497524555493424;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14604592646334671;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 5.96e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20313545925092844;  // std dev = 0.143, 153.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18186611993852772;  // std dev = 0.123, 109.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=96 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04179876822767481;  // std dev = 0.104, 259.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16087669225206702;  // std dev = 1.496, 147.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07579628712338898;  // std dev = 1.28e-07, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12786108130862378;  // std dev = 0.122, 109.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=96 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04274336487265934;  // std dev = 1.546, 300.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=33 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11115064222770918;  // std dev = 0.132, 157.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=129 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06789881089893557;  // std dev = 1.20e-07, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.443 seconds
Total inference time: 0.936 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083689
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.029 seconds
Parameter learned model CLL: -0.083689


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 237, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false,true': [0.0, 27, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.717, 19, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [4.09e-07, 0, 129], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 223, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false,true': [0.0, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.143, 24, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.56e-08, 232, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.123, 13, 96], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.104, 226, 33]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.496, 18, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.28e-07, 245, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.122, 13, 96], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.546, 267, 33]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.132, 28, 129], 'true,false': [0.0, 0, 0], 'false': [1.2e-07, 232, 0]}]]
[{'': [0.13960457856400044, -2.0236976651395258e-16], 'true': [4.40646657835721e-15, 1.708035422500241e-17], 'true,true': [4.40646657835721e-15, nan], 'true,false': [1.708035422500241e-17, nan], 'true,false,true': [1.708035422500241e-17, nan]}, {'': [0.10217236698373437, -6.642359976389825e-17], 'true': [0.10217236698373437, nan], 'true,true': [-1.7625866313428842e-15, -4.11193712824132e-18], 'true,true,false': [-4.11193712824132e-18, nan]}, {'': [0.0498838858970167, -8.12358310701334e-17], 'true': [0.0498838858970167, nan], 'true,true': [0.0498838858970167, nan], 'true,true,true': [0.0498838858970167, nan]}, {'': [0.037881960478274336, -8.164868880651376e-17], 'true': [1.2943995573924305e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.024863137411869435, 1.518253708889103e-17], 'true': [0.024863137411869435, nan], 'true,true': [-8.26212483441977e-17, -1.5419764230904953e-17], 'true,true,false': [-1.5419764230904953e-17, nan]}, {'': [0.020493394451777364, 3.158393087295704e-17], 'true': [0.020493394451777364, nan], 'true,true': [0.020493394451777364, nan]}, {'': [0.01521318800410589, 0.010715677286526434], 'true': [0.01521318800410589, nan], 'true,true': [0.01521318800410589, nan]}, {'': [0.015227735774817373, 6.706653373245844e-17], 'true': [0.015227735774817373, nan], 'true,true': [0.015227735774817373, nan]}, {'': [0.014846058584858247, 0.007962666368101012], 'true': [0.014846058584858247, nan], 'true,true': [0.014846058584858247, nan]}, {'': [0.01747687531032438, 6.221077293158204e-17], 'true': [0.01747687531032438, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048846;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.11231637819360675;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783655;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716014994;  // std dev = 1.07e-07, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.2616542581102344;  // std dev = 0.145, 84.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=72 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 6.66e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26152708820834203;  // std dev = 0.064, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10023432733592816;  // std dev = 0.066, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21424360210747767;  // std dev = 0.056, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09538958361328813;  // std dev = 0.065, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109144;  // std dev = 6.66e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1803840443507108;  // std dev = 0.049, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08930575737836002;  // std dev = 0.059, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07324622576333666;  // std dev = 1.19e-07, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15523606774563725;  // std dev = 0.044, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08231716131417963;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06842697784420261;  // std dev = 6.66e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return 0.1359516045521265;  // std dev = 0.039, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07245444625541067;  // std dev = 0.053, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06419184008202626;  // std dev = 1.49e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06405
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.384 seconds
Total inference time: 0.8 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06489
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.016 seconds
Refined model CLL: -0.06489


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06405
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.872 seconds
Total inference time: 0.8 seconds
AUC ROC: 1.0
Total revision time: 4.872
Best scored revision CLL: -0.06489


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06405, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.872, 'Inference time': 0.8, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077338, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.443, 'Inference time': 0.936}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 2.56e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46594463117397594;  // std dev = 3.403, 224.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360647;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4394075130797561;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.16779286858123102;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783649;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33559775056251206;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14564882055560266;  // std dev = 1.83e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.62e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19939912363733656;  // std dev = 0.147, 233.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18623305198162002;  // std dev = 0.119, 172.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=153 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05104027014873486;  // std dev = 0.091, 430.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14840592001950886;  // std dev = 2.054, 229.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07515144129703173;  // std dev = 1.60e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1351730057371643;  // std dev = 0.115, 171.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=153 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04412437106829391;  // std dev = 1.762, 397.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11774387099773402;  // std dev = 0.126, 229.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=194 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06727005500577839;  // std dev = 6.66e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076776
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.837 seconds
Total inference time: 0.914 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083893
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.24 seconds
Parameter learned model CLL: -0.083893


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.74e-08, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.56e-07, 378, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false,true': [0.0, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 352, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.403, 30, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 366, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 194], 'true,false,true': [0.0, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 340, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false,true': [1.83e-08, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.62e-07, 357, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.147, 39, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.19e-07, 365, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.119, 19, 153], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 389, 41]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.054, 35, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.6e-07, 380, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.115, 18, 153], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.762, 356, 41]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.126, 35, 194], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 332, 0]}]]
[{'': [0.09147805212620604, 1.7387619856563297e-16], 'true': [6.15315358802561e-15, 5.046468293750712e-18], 'true,true': [6.15315358802561e-15, nan], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [5.046468293750712e-18, nan]}, {'': [0.08480619231536606, -1.13545536609391e-16], 'true': [0.08480619231536606, nan], 'true,true': [-3.516087764586063e-15, -7.162729191130042e-18], 'true,true,false': [-7.162729191130042e-18, nan]}, {'': [0.05170914354971644, -2.912060392459427e-17], 'true': [0.05170914354971644, nan], 'true,true': [0.05170914354971644, nan], 'true,true,true': [0.05170914354971644, nan]}, {'': [0.04481247200370411, -1.436759208338438e-17], 'true': [-1.428410654363088e-15, -5.204170427930421e-17], 'true,false': [-5.204170427930421e-17, nan]}, {'': [0.02938639076555357, 7.339289462508037e-17], 'true': [0.02938639076555357, nan], 'true,true': [-6.409534987526677e-16, 9.79608551139844e-18], 'true,true,false': [9.79608551139844e-18, nan]}, {'': [0.021606944597607626, 3.893384853480001e-17], 'true': [0.021606944597607626, nan], 'true,true': [0.021606944597607626, nan]}, {'': [0.014245861138487559, 0.008334993857515112], 'true': [0.014245861138487559, nan], 'true,true': [0.014245861138487559, nan]}, {'': [0.018429717961260732, 6.77820372929043e-17], 'true': [0.018429717961260732, nan], 'true,true': [0.018429717961260732, nan]}, {'': [0.013286691952989524, 0.007818204466216965], 'true': [0.013286691952989524, nan], 'true,true': [0.013286691952989524, nan]}, {'': [0.01585373110175206, 1.3376181019580199e-17], 'true': [0.01585373110175206, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048757;  // std dev = 2.23e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.1254446385283914;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.11231637819360656;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.10159632948783648;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.320711847160149;  // std dev = 3.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.58e-07, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109144;  // std dev = 4.21e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.0732462257633371;  // std dev = 7.15e-08, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.0684269778442031;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202615;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1340070300080108;  // std dev = 1.05e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06419184008202579;  // std dev = 1.52e-07, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.532 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.047 seconds
Refined model CLL: -0.064221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.656 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0
Total revision time: 5.656
Best scored revision CLL: -0.064221


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.656, 'Inference time': 0.838, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076776, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.837, 'Inference time': 0.914}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004873;  // std dev = 2.70e-07, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4455218446110102;  // std dev = 4.358, 310.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360596;  // std dev = 0.000, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44444428626981475;  // std dev = 5.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.16496037864377905;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783541;  // std dev = 3.55e-07, 525.000 (wgt'ed) examples reached here.  /* #neg=525 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.339037030998956;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14347358240175984;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 1.23e-07, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20926387030549007;  // std dev = 0.140, 304.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.46e-07, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18495394053097233;  // std dev = 0.121, 235.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=208 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05259942253792052;  // std dev = 0.091, 546.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=51 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14338775372341014;  // std dev = 2.466, 311.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07504314619075109;  // std dev = 1.21e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.131439757557193;  // std dev = 0.121, 236.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=208 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04441914066308291;  // std dev = 1.968, 513.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=51 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1122991216109024;  // std dev = 0.131, 314.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=259 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06716060870759223;  // std dev = 1.59e-07, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076481
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.314 seconds
Total inference time: 0.887 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083712
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.542 seconds
Parameter learned model CLL: -0.083712


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.77e-08, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.7e-07, 481, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false,true': [0.0, 38, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 474, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.358, 51, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 476, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [5.26e-07, 0, 259], 'true,false,true': [0.0, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.55e-07, 525, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false,true': [0.0, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.23e-07, 499, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.14, 45, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 485, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.121, 27, 208], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 495, 51]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.466, 52, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.21e-07, 493, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.121, 28, 208], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.968, 462, 51]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.131, 55, 259], 'true,false': [0.0, 0, 0], 'false': [1.59e-07, 458, 0]}]]
[{'': [0.14447847782871925, 1.5141503204867e-16], 'true': [4.499189523731908e-15, 6.055761952500853e-17], 'true,true': [4.499189523731908e-15, nan], 'true,false': [6.055761952500853e-17, nan], 'true,false,true': [6.055761952500853e-17, nan]}, {'': [0.07965254175517328, -1.3303938354157994e-16], 'true': [0.07965254175517328, nan], 'true,true': [-4.499189523731908e-15, -2.0451476769410777e-17], 'true,true,false': [-2.0451476769410777e-17, nan]}, {'': [0.061275512061438775, -7.463684199160716e-18], 'true': [0.061275512061438775, nan], 'true,true': [0.061275512061438775, nan], 'true,true,true': [0.061275512061438775, nan]}, {'': [0.04683566159196621, 2.402311154236529e-16], 'true': [1.0699292160094173e-15, -3.947459643111668e-17], 'true,false': [-3.947459643111668e-17, nan]}, {'': [0.028898874220797482, 3.025858343667761e-17], 'true': [0.028898874220797482, nan], 'true,true': [-2.331897009251294e-16, -1.0092936587501423e-17], 'true,true,false': [-1.0092936587501423e-17, nan]}, {'': [0.01961413684220994, 4.395109705732578e-17], 'true': [0.01961413684220994, nan], 'true,true': [0.01961413684220994, nan]}, {'': [0.014716205344545215, 0.008328632729258918], 'true': [0.014716205344545215, nan], 'true,true': [0.014716205344545215, nan]}, {'': [0.019551684390835263, 2.972605258631251e-17], 'true': [0.019551684390835263, nan], 'true,true': [0.019551684390835263, nan]}, {'': [0.014698057996329053, 0.007550281089477936], 'true': [0.014698057996329053, nan], 'true,true': [0.014698057996329053, nan]}, {'': [0.017089226680256215, 5.52687444573222e-17], 'true': [0.017089226680256215, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 449.000 (wgt'ed) examples reached here.  /* #neg=449 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5953945376268553;  // std dev = 0.299, 143.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=122 */
%   | | else return 0.6311159689963834;  // std dev = 0.259, 153.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=137 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5811596182875355;  // std dev = 0.070, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.20953563191648247;  // std dev = 0.020, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360604;  // std dev = 0.000, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4369429753501599;  // std dev = 0.071, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.17662951624422576;  // std dev = 0.019, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783591;  // std dev = 2.29e-07, 419.000 (wgt'ed) examples reached here.  /* #neg=419 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.33812835704289074;  // std dev = 3.01e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return -0.15025254582109762;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3301807876749549;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #pos=137 */
%   | | | else return -0.1548705447826356;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 1.46e-07, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26416727481643704;  // std dev = 0.043, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.13394405708179022;  // std dev = 0.012, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839678;  // std dev = 1.41e-07, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21609354116392995;  // std dev = 0.038, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11893137073841797;  // std dev = 0.012, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109175;  // std dev = 1.90e-07, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18173074802544956;  // std dev = 0.033, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10732353732152998;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07324622576333725;  // std dev = 0.000, 445.000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1562510351281771;  // std dev = 0.029, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09709115105113507;  // std dev = 0.010, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420342;  // std dev = 0.000, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13443881322511245;  // std dev = 0.347, 262.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=259 */
%   | else return -0.08701554252744752;  // std dev = 0.054, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06419184008202547;  // std dev = 2.25e-07, 447.000 (wgt'ed) examples reached here.  /* #neg=447 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.874 seconds
Total inference time: 0.837 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.182 seconds
Refined model CLL: -0.066371


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.912000000000001 seconds
Total inference time: 0.837 seconds
AUC ROC: 1.0
Total revision time: 6.912000000000001
Best scored revision CLL: -0.066371


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064591, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.912000000000001, 'Inference time': 0.837, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076481, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.314, 'Inference time': 0.887}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.45697107454461444;  // std dev = 4.614, 380.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360568;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44161914396677165;  // std dev = 3.04e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.1665435480026591;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783505;  // std dev = 4.50e-07, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33710714219843374;  // std dev = 3.73e-09, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1446902817511217;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926146;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2056333052349048;  // std dev = 0.142, 383.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18039908312228425;  // std dev = 0.126, 303.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0527320891068263;  // std dev = 0.089, 650.000 (wgt'ed) examples reached here.  /* #neg=591 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1371311576470325;  // std dev = 2.886, 396.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07503393810147489;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13889949197488644;  // std dev = 0.113, 295.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.045775632134359236;  // std dev = 2.123, 633.000 (wgt'ed) examples reached here.  /* #neg=574 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10292309869024086;  // std dev = 0.137, 407.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=324 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06706794912522519;  // std dev = 2.70e-07, 541.000 (wgt'ed) examples reached here.  /* #neg=541 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076333
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.674 seconds
Total inference time: 0.933 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083204
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.481 seconds
Parameter learned model CLL: -0.083204


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.87e-08, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.16e-08, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 603, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false,true': [0.0, 67, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 608, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.614, 56, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 586, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.04e-07, 0, 324], 'true,false,true': [0.0, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.5e-07, 629, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [3.73e-09, 0, 324], 'true,true,false,true': [0.0, 40, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 609, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.142, 59, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.55e-07, 596, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.126, 38, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.089, 591, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.886, 72, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 590, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.113, 30, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.123, 574, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.137, 83, 324], 'true,false': [0.0, 0, 0], 'false': [2.7e-07, 541, 0]}]]
[{'': [0.11410992675862285, -3.004782713413359e-16], 'true': [3.333410365294297e-15, 5.437827059388522e-17], 'true,true': [3.333410365294297e-15, nan], 'true,false': [5.437827059388522e-17, nan], 'true,false,true': [5.437827059388522e-17, nan]}, {'': [0.10136673891846454, -2.483393607714166e-16], 'true': [0.10136673891846454, nan], 'true,true': [-5.000115547941446e-15, -3.314098580970616e-17], 'true,true,false': [-3.314098580970616e-17, nan]}, {'': [0.05601524510904185, -1.5156628322527734e-18], 'true': [0.05601524510904185, nan], 'true,true': [0.05601524510904185, nan], 'true,true,true': [0.05601524510904185, nan]}, {'': [0.04528920733512397, 3.2194702653677034e-16], 'true': [2.8509430755806487e-16, -2.878355989768924e-17], 'true,false': [-2.878355989768924e-17, nan]}, {'': [0.022705505827410925, -3.500210520985715e-17], 'true': [0.022705505827410925, nan], 'true,true': [4.386066270124075e-17, -4.9960036108132046e-17], 'true,true,false': [-4.9960036108132046e-17, nan]}, {'': [0.020231721260239723, 4.0236270691113053e-17], 'true': [0.020231721260239723, nan], 'true,true': [0.020231721260239723, nan]}, {'': [0.01588157414589047, 0.008004286564461638], 'true': [0.01588157414589047, nan], 'true,true': [0.01588157414589047, nan]}, {'': [0.02103581216371843, -3.763467880085276e-17], 'true': [0.02103581216371843, nan], 'true,true': [0.02103581216371843, nan]}, {'': [0.012854611783188065, 0.007117493325474381], 'true': [0.012854611783188065, nan], 'true,true': [0.012854611783188065, nan]}, {'': [0.018691540030296997, 1.3462223736674727e-16], 'true': [0.018691540030296997, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.14185106490048818;  // std dev = 0.000, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6200712885945622;  // std dev = 0.272, 170.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=150 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109566;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.566658797480072;  // std dev = 0.219, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.15440464645950602;  // std dev = 0.386, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.11231637819360571;  // std dev = 0.000, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42602659410589316;  // std dev = 0.218, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.13639992690362382;  // std dev = 0.350, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.1015963294878352;  // std dev = 4.05e-07, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32654288627845224;  // std dev = 0.196, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11759830770970642;  // std dev = 0.311, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926133;  // std dev = 0.000, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25917902898020645;  // std dev = 0.172, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11016193901242273;  // std dev = 0.272, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 568.000 (wgt'ed) examples reached here.  /* #neg=568 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2126033105839533;  // std dev = 0.150, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10535834736144256;  // std dev = 0.248, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109247;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.179192930070162;  // std dev = 0.131, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09096187891451613;  // std dev = 0.229, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07324622576333649;  // std dev = 2.63e-07, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15434036180831145;  // std dev = 0.117, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09290808994026338;  // std dev = 0.227, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420362;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.12813447624481303;  // std dev = 0.686, 336.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=324 */
%   | else return -0.08153504956765066;  // std dev = 0.211, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.06419184008202528;  // std dev = 2.48e-07, 569.000 (wgt'ed) examples reached here.  /* #neg=569 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.208 seconds
Total inference time: 0.806 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065471
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.327 seconds
Refined model CLL: -0.065471


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.69 seconds
Total inference time: 0.806 seconds
AUC ROC: 1.0
Total revision time: 7.69
Best scored revision CLL: -0.065471


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063635, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.69, 'Inference time': 0.806, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076333, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.674, 'Inference time': 0.933}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5087839147737335;  // std dev = 1.115, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4288839003597095;  // std dev = 8.43e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.17386029938508338;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5.05e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3284309631804945;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15028441510229118;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2247493042037851;  // std dev = 0.113, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2.36e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19174634812367689;  // std dev = 0.099, 41.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07151864857680651;  // std dev = 0.050, 71.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1642314844402307;  // std dev = 0.635, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07374044346847501;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.14567067368127537;  // std dev = 0.082, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.062283317365774825;  // std dev = 0.381, 83.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12187682791914863;  // std dev = 0.100, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06497158807592748;  // std dev = 2.89e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100453
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.898 seconds
Total inference time: 0.958 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.812 seconds
Parameter learned model CLL: -0.073651


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [3.94e-08, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 87, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.115, 3, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.34e-08, 59, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [8.43e-08, 0, 40], 'true,false,true': [1.86e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.05e-08, 67, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 62, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.113, 4, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.36e-08, 75, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.099, 3, 38], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.05, 69, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.635, 3, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.082, 2, 38], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.381, 81, 2]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.1, 3, 40], 'true,false': [0.0, 0, 0], 'false': [2.89e-08, 82, 0]}]]
[{'': [0.12675418741512087, 7.656710514656253e-17], 'true': [1.5099033134902129e-15, -7.93016446160826e-18], 'true,true': [1.5099033134902129e-15, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.09048810479413706, -2.6294755846385285e-17], 'true': [0.09048810479413706, nan], 'true,true': [-8.881784197001252e-16, -1.982541115402065e-18], 'true,true,false': [-1.982541115402065e-18, nan]}, {'': [0.028932418044309283, 3.198947698072485e-17], 'true': [0.028932418044309283, nan], 'true,true': [0.028932418044309283, nan], 'true,true,true': [0.028932418044309283, nan]}, {'': [0.023578187365667483, 3.811213368116209e-17], 'true': [1.7763568394002506e-16, 4.625929269271485e-18], 'true,false': [4.625929269271485e-18, nan]}, {'': [0.014873017635766162, -1.7906822977825105e-18], 'true': [0.014873017635766162, nan], 'true,true': [-4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012733003552642548, 7.401486830834377e-18], 'true': [0.012733003552642548, nan], 'true,true': [0.012733003552642548, nan]}, {'': [0.009770197688304281, 0.00254682946009384], 'true': [0.009770197688304281, nan], 'true,true': [0.009770197688304281, nan]}, {'': [0.009363977595748718, -1.1413507729791329e-17], 'true': [0.009363977595748718, nan], 'true,true': [0.009363977595748718, nan]}, {'': [0.006802540764798979, 0.001751417319867908], 'true': [0.006802540764798979, nan], 'true,true': [0.006802540764798979, nan]}, {'': [0.009995530351536658, 1.0154478883766675e-17], 'true': [0.009995530351536658, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 6.99e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783615;  // std dev = 5.77e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014967;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.28763959729219674;  // std dev = 0.112, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2588156837392852;  // std dev = 0.020, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12164656433661072;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839678;  // std dev = 3.65e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109166;  // std dev = 4.01e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0.20452635477547415;  // std dev = 0.317, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18013188157441665;  // std dev = 0.015, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.13040722054749207;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.15255663130836;  // std dev = 1.97e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.134228553361447;  // std dev = 0.075, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.06352266790424953;  // std dev = 0.312, 91.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1354544154850102;  // std dev = 0.026, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.12977776889981743;  // std dev = 0.054, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else return -0.06448707853214854;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083204
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.877 seconds
Total inference time: 0.891 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0676
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.693 seconds
Refined model CLL: -0.0676


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083204
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.28 seconds
Total inference time: 0.891 seconds
AUC ROC: 1.0
Total revision time: 3.28
Best scored revision CLL: -0.0676


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:14:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083204, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.28, 'Inference time': 0.891, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100453, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.898, 'Inference time': 0.958}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004881;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109537;  // std dev = 2.98e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.509319346060774;  // std dev = 1.578, 87.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 8.16e-08, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42875275547832425;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.17393721836144957;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3283417983131543;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15034297605944943;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926072;  // std dev = 7.45e-08, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2250908837445043;  // std dev = 0.112, 89.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 6.99e-08, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19654227884774336;  // std dev = 0.090, 83.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=78 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324488868942747;  // std dev = 0.043, 147.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14492546579586582;  // std dev = 1.157, 92.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07362262317630199;  // std dev = 4.94e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13950311240358815;  // std dev = 0.097, 84.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=78 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06449870180918427;  // std dev = 0.497, 147.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10710620141912852;  // std dev = 0.120, 92.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06473967695136565;  // std dev = 6.66e-08, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099157
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.211 seconds
Total inference time: 1.002 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073984
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.981 seconds
Parameter learned model CLL: -0.073984


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [2.98e-08, 0, 81], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 167, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.578, 6, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 157, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 138, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-08, 159, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.112, 8, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 166, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.09, 5, 78], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.043, 144, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.157, 11, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 156, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.097, 6, 78], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.497, 144, 3]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.12, 11, 81], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 150, 0]}]]
[{'': [0.09000000000000025, -1.248093857748542e-16], 'true': [-7.894919286223335e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan], 'true,true': [-7.894919286223335e-16, nan]}, {'': [0.058401522544810125, 0.0], 'true': [0.058401522544810125, nan], 'true,true': [7.894919286223335e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.028624516568095063, 4.2428905399687514e-17], 'true': [0.028624516568095063, nan], 'true,true': [0.028624516568095063, nan], 'true,true,true': [0.028624516568095063, nan]}, {'': [0.03823754339191712, -4.827056628805028e-17], 'true': [-1.5351231945434262e-16, -1.5139404881252134e-17], 'true,false': [-1.5139404881252134e-17, nan]}, {'': [0.014712856258825237, 3.491267373035083e-17], 'true': [0.014712856258825237, nan], 'true,true': [-1.0965165675310187e-16, -4.625929269271485e-18], 'true,true,false': [-4.625929269271485e-18, nan]}, {'': [0.012603129451132445, 2.942759824307644e-17], 'true': [0.012603129451132445, nan], 'true,true': [0.012603129451132445, nan]}, {'': [0.008155402147640128, 0.001828994204597732], 'true': [0.008155402147640128, nan], 'true,true': [0.008155402147640128, nan]}, {'': [0.014557524490181014, 1.5656991372918874e-17], 'true': [0.014557524490181014, nan], 'true,true': [0.014557524490181014, nan]}, {'': [0.009479054799289158, 0.0016775050485629947], 'true': [0.009479054799289158, nan], 'true,true': [0.009479054799289158, nan]}, {'': [0.014424116274373382, 2.960594732333751e-17], 'true': [0.014424116274373382, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1418510649004881;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.696003466357084;  // std dev = 0.139, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return 0.7014964324079901;  // std dev = 0.122, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 4.71e-08, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5603857354071511;  // std dev = 0.006, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.224016326897273;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360628;  // std dev = 8.82e-08, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42124685679168244;  // std dev = 0.006, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.18742797029775027;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783648;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32324404176733496;  // std dev = 0.005, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.16061926577993405;  // std dev = 0.000604, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926075;  // std dev = 7.15e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25689943172590746;  // std dev = 0.005, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1401571436978475;  // std dev = 0.000791, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839678;  // std dev = 5.96e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21098056727507514;  // std dev = 0.004, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else return -0.12407396117088043;  // std dev = 0.000689, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07238711829945366;  // std dev = 0.496, 136.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17966669795512644;  // std dev = 0.077, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11128854495612472;  // std dev = 0.000694, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07368114651805692;  // std dev = 2.11e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15320629543201322;  // std dev = 0.003, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else return -0.10067326326434124;  // std dev = 0.000406, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0633786806494808;  // std dev = 0.450, 145.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13671530542926927;  // std dev = 0.069, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.13280490581000223;  // std dev = 0.032, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | else return -0.09191787025439825;  // std dev = 0.000529, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06485598279277664;  // std dev = 5.05e-08, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.241 seconds
Total inference time: 0.895 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065335
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.852 seconds
Refined model CLL: -0.065335


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.285 seconds
Total inference time: 0.895 seconds
AUC ROC: 1.0
Total revision time: 4.285
Best scored revision CLL: -0.065335


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:14:41
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07189, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.285, 'Inference time': 0.895, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099157, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.211, 'Inference time': 1.002}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5094950983152983;  // std dev = 1.933, 131.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936067;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4287097101021096;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.17396247243076005;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3283125326725979;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15036220170412276;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926049;  // std dev = 8.94e-08, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.24195373251218363;  // std dev = 0.083, 128.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1952932100885466;  // std dev = 0.087, 125.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=118 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07352712755668651;  // std dev = 0.039, 225.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15285991529563187;  // std dev = 1.251, 134.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07360337614354466;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.130952022405299;  // std dev = 0.106, 129.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=118 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06429706878012105;  // std dev = 0.540, 245.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11237541329221062;  // std dev = 0.109, 136.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=122 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06473596186995002;  // std dev = 7.60e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099863
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.4 seconds
Total inference time: 0.959 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074639
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.131 seconds
Parameter learned model CLL: -0.074639


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.14e-08, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false,true': [5.27e-09, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.933, 9, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 217, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 122], 'true,false,true': [3.73e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false,true': [5.27e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 255, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.083, 6, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 218, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.087, 7, 118], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.039, 221, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.251, 12, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 238, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.106, 11, 118], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.54, 241, 4]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.109, 14, 122], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 236, 0]}]]
[{'': [0.05775147928994478, -2.049642507000289e-16], 'true': [3.843919718046444e-15, -6.938893903907228e-18], 'true,true': [3.843919718046444e-15, nan], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.054159969457190836, -8.042560493347591e-17], 'true': [0.054159969457190836, nan], 'true,true': [-1.3395477805313363e-15, 2.523234146875356e-18], 'true,true,false': [2.523234146875356e-18, nan]}, {'': [0.02852332467921255, -6.139482163825751e-17], 'true': [0.02852332467921255, nan], 'true,true': [0.02852332467921255, nan], 'true,true,true': [0.02852332467921255, nan]}, {'': [0.02543163376438671, -7.781050258056652e-17], 'true': [-1.281306572682148e-15, 1.6653345369377347e-17], 'true,false': [1.6653345369377347e-17, nan]}, {'': [0.013232567650809803, 3.134747363647501e-17], 'true': [0.013232567650809803, nan], 'true,true': [-4.3680905886891404e-17, 3.469446951953614e-18], 'true,true,false': [3.469446951953614e-18, nan]}, {'': [0.006882778251490619, 3.0556597008031833e-17], 'true': [0.006882778251490619, nan], 'true,true': [0.006882778251490619, nan]}, {'': [0.007591694653795798, 0.0015226118472313655], 'true': [0.007591694653795798, nan], 'true,true': [0.007591694653795798, nan]}, {'': [0.011671968921713956, -5.597763149370537e-17], 'true': [0.011671968921713956, nan], 'true,true': [0.011671968921713956, nan]}, {'': [0.011189878727848776, 0.0011890490986416972], 'true': [0.011189878727848776, nan], 'true,true': [0.011189878727848776, nan]}, {'': [0.011940952383273855, 2.4462541220554296e-17], 'true': [0.011940952383273855, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048835;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109547;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.623216925417864;  // std dev = 0.268, 79.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=70 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5689217122358904;  // std dev = 0.129, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.13924253691304897;  // std dev = 0.146, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360667;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42772268989871787;  // std dev = 0.129, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.16121463245947418;  // std dev = 0.149, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783658;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3276913403294468;  // std dev = 0.116, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.13118798106275137;  // std dev = 0.148, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892605;  // std dev = 7.30e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2599585119597086;  // std dev = 0.101, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1209821580951868;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21319086500617626;  // std dev = 0.086, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | else return -0.11552437553771133;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07371224050368852;  // std dev = 0.579, 221.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18109410376275062;  // std dev = 0.118, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09593220474956067;  // std dev = 0.101, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07359075504334248;  // std dev = 1.11e-07, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15447162989844815;  // std dev = 0.067, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | else return -0.10076317955242921;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.0640446331548291;  // std dev = 0.524, 215.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13599146158261352;  // std dev = 0.251, 123.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=122 */
%   | else return -0.07668928233612217;  // std dev = 0.103, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06474080225180191;  // std dev = 9.48e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.394 seconds
Total inference time: 0.876 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065054
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.048 seconds
Refined model CLL: -0.065054


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.973 seconds
Total inference time: 0.876 seconds
AUC ROC: 1.0
Total revision time: 4.973
Best scored revision CLL: -0.065054


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:14:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069269, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.973, 'Inference time': 0.876, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099863, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.4, 'Inference time': 0.959}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1.93e-07, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283921;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.49910103099292136;  // std dev = 2.475, 178.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360696;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43125726590097524;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.17247390776824473;  // std dev = 3.23e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783645;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33004519744398714;  // std dev = 2.30e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1492280323308161;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926049;  // std dev = 1.58e-07, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21296061031474955;  // std dev = 0.129, 186.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.03e-07, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19734664588377665;  // std dev = 0.095, 166.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=155 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07209129563036744;  // std dev = 0.046, 337.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15889118547323763;  // std dev = 1.440, 179.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07370133962293612;  // std dev = 1.53e-07, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.15065498705034513;  // std dev = 0.077, 162.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=155 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06263756925165867;  // std dev = 0.794, 309.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.1124507357424823;  // std dev = 0.116, 181.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=163 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0649176751002629;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099559
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.701 seconds
Total inference time: 0.964 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.303 seconds
Parameter learned model CLL: -0.074237


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [8.02e-08, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.93e-07, 334, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false,true': [5.27e-09, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.475, 15, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 288, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 163], 'true,false,true': [3.23e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 334, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.3e-08, 0, 163], 'true,true,false,true': [0.0, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-07, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.129, 23, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.03e-07, 295, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.095, 11, 155], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.046, 329, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.44, 16, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.53e-07, 292, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.077, 7, 155], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.794, 301, 8]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.116, 18, 163], 'true,false': [0.0, 0, 0], 'false': [0.0, 280, 0]}]]
[{'': [0.07716828683247688, 1.1168710666887802e-16], 'true': [6.3643705166242106e-15, -1.4802973661668754e-17], 'true,true': [6.3643705166242106e-15, nan], 'true,false': [-1.4802973661668754e-17, nan], 'true,false,true': [-1.4802973661668754e-17, nan]}, {'': [0.045595494477773044, -1.0765799026668185e-16], 'true': [0.045595494477773044, nan], 'true,true': [-2.7898610483832155e-15, 2.3129646346357427e-18], 'true,true,false': [2.3129646346357427e-18, nan]}, {'': [0.034401648612551405, -9.868649107779169e-17], 'true': [0.034401648612551405, nan], 'true,true': [0.034401648612551405, nan], 'true,true,true': [0.034401648612551405, nan]}, {'': [0.018074255719240942, -9.307258889073168e-18], 'true': [-8.936273670602487e-16, 1.2335811384723961e-17], 'true,false': [1.2335811384723961e-17, nan]}, {'': [0.01571346507561443, 8.317389883479433e-17], 'true': [0.01571346507561443, nan], 'true,true': [5.230989465718529e-16, -1.2810265668751807e-17], 'true,true,false': [-1.2810265668751807e-17, nan]}, {'': [0.016718777956453847, 3.612929164881865e-17], 'true': [0.016718777956453847, nan], 'true,true': [0.016718777956453847, nan]}, {'': [0.008936065824473961, 0.0021472290425933456], 'true': [0.008936065824473961, nan], 'true,true': [0.008936065824473961, nan]}, {'': [0.011577690419313242, 7.984480656550783e-17], 'true': [0.011577690419313242, nan], 'true,true': [0.011577690419313242, nan]}, {'': [0.005897115558067145, 0.0020420551001187693], 'true': [0.005897115558067145, nan], 'true,true': [0.005897115558067145, nan]}, {'': [0.013393175415663637, -1.030921380009074e-17], 'true': [0.013393175415663637, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1418510649004876;  // std dev = 2.11e-07, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109545;  // std dev = 1.46e-07, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6692802606818842;  // std dev = 0.200, 101.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839205;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5625686535152439;  // std dev = 0.078, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.21881749043292723;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360699;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4228975885194242;  // std dev = 0.077, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.18371344342289314;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783662;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3243773824361747;  // std dev = 0.069, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1577451694617955;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926047;  // std dev = 1.74e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25767965165617984;  // std dev = 0.060, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.13789947464003843;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839678;  // std dev = 1.05e-07, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21156774477698695;  // std dev = 0.051, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12230874061984355;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.07877675473109143;  // std dev = 5.16e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | else if ( female(A) )
%   | | then return 0.14957675799515524;  // std dev = 0.255, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.11708490391837696;  // std dev = 0.339, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1789725136938595;  // std dev = 0.057, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( female(A) )
%   | | then return -0.07514537780407488;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10977366123304254;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07329286308804833;  // std dev = 0.014, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.14986173712916084;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.15636951000485236;  // std dev = 8.16e-08, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return -0.09949675083969549;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.06842400502052816;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
%   | else return 0.16358701745699616;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1351116202531163;  // std dev = 0.040, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08634445636725903;  // std dev = 0.026, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06418921715087941;  // std dev = 5.77e-08, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074375
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.762 seconds
Total inference time: 1.002 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064757
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.284 seconds
Refined model CLL: -0.064757


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074375
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.05 seconds
Total inference time: 1.002 seconds
AUC ROC: 1.0
Total revision time: 6.05
Best scored revision CLL: -0.064757


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:14:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074375, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.05, 'Inference time': 1.002, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.099559, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.701, 'Inference time': 0.964}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048738;  // std dev = 2.89e-07, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.48771575505633796;  // std dev = 3.036, 227.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360643;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43405194011843173;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.1708549798025761;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783609;  // std dev = 1.78e-07, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33194747713569944;  // std dev = 2.04e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14799234927474372;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926082;  // std dev = 1.59e-07, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23757919022087837;  // std dev = 0.096, 218.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.25e-07, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19910128514064937;  // std dev = 0.085, 205.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07188078361279317;  // std dev = 0.046, 409.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1591607818978095;  // std dev = 1.526, 222.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07371571245282812;  // std dev = 1.30e-07, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12260832755798122;  // std dev = 0.118, 218.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.061519671258089804;  // std dev = 0.854, 374.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.13010735851185817;  // std dev = 0.087, 217.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=204 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06499748720444734;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100205
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.857 seconds
Total inference time: 0.95 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.487 seconds
Parameter learned model CLL: -0.074632


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.89e-07, 392, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 204], 'true,true,false,true': [0.0, 22, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 372, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.036, 23, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 358, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 204], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.78e-07, 382, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [2.04e-08, 0, 204], 'true,true,false,true': [7.45e-09, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.59e-07, 420, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.096, 14, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.25e-07, 390, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.085, 11, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.046, 399, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.526, 18, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.3e-07, 416, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.118, 24, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.854, 364, 10]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.087, 13, 204], 'true,false': [0.0, 0, 0], 'false': [0.0, 360, 0]}]]
[{'': [0.09105552213317324, 2.1298155982605043e-16], 'true': [5.712206307091002e-15, 9.654113257610057e-18], 'true,true': [5.712206307091002e-15, nan], 'true,false': [9.654113257610057e-18, nan], 'true,false,true': [9.654113257610057e-18, nan]}, {'': [0.06272853527965257, -1.2415397264625405e-16], 'true': [0.06272853527965257, nan], 'true,true': [-3.692035783851501e-15, -2.523234146875356e-18], 'true,true,false': [-2.523234146875356e-18, nan]}, {'': [0.04059258285023305, -2.977134367709917e-17], 'true': [0.04059258285023305, nan], 'true,true': [0.04059258285023305, nan], 'true,true,true': [0.04059258285023305, nan]}, {'': [0.025981944267572187, 8.254014109778651e-17], 'true': [-6.617799989922502e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01469625831703206, 6.026924990822278e-17], 'true': [0.01469625831703206, nan], 'true,true': [4.005510520216251e-16, 3.7007434154171884e-18], 'true,true,false': [3.7007434154171884e-18, nan]}, {'': [0.009287025191914674, 3.985415985833895e-17], 'true': [0.009287025191914674, nan], 'true,true': [0.009287025191914674, nan]}, {'': [0.007297489685841098, 0.002158873713379342], 'true': [0.007297489685841098, nan], 'true,true': [0.007297489685841098, nan]}, {'': [0.010486818257096912, 4.056584128438072e-17], 'true': [0.010486818257096912, nan], 'true,true': [0.010486818257096912, nan]}, {'': [0.013994665783457956, 0.0019493864543989362], 'true': [0.013994665783457956, nan], 'true,true': [0.013994665783457956, nan]}, {'': [0.007513197391072904, -1.7270135938613546e-17], 'true': [0.007513197391072904, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048743;  // std dev = 2.63e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360626;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783609;  // std dev = 1.75e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.09269127618926093;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926062;  // std dev = 1.86e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 1.30e-07, 429.000 (wgt'ed) examples reached here.  /* #neg=429 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.209757715632535;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07198770836959432;  // std dev = 0.902, 425.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1792946901646086;  // std dev = 0.138, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07335497541449874;  // std dev = 0.000808, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07370841178077463;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15245960013896134;  // std dev = 9.88e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0684200459527715;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15518415621128412;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.14024827638506665;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06883138471159003;  // std dev = 1.04e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13363630829482875;  // std dev = 0.303, 206.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=204 */
%   | else return -0.06418572403354893;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06454852884231237;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067581
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.686 seconds
Total inference time: 0.956 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063965
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.243 seconds
Refined model CLL: -0.063965


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067581
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.273000000000001 seconds
Total inference time: 0.956 seconds
AUC ROC: 1.0
Total revision time: 6.273000000000001
Best scored revision CLL: -0.063965


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:15:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067581, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.273000000000001, 'Inference time': 0.956, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100205, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.857, 'Inference time': 0.95}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.02e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4612060397675815;  // std dev = 2.052, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 9.77e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4405750964877671;  // std dev = 1.33e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.16713222038006006;  // std dev = 3.23e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 4.47e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3363944518843526;  // std dev = 1.71e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14514211361340182;  // std dev = 1.97e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5.58e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20183945925946004;  // std dev = 0.145, 80.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.41e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18466883645918386;  // std dev = 0.121, 61.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04907555491323814;  // std dev = 0.094, 127.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15196327527225564;  // std dev = 1.167, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07528811031415014;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12601928029105067;  // std dev = 0.126, 62.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04374572568130436;  // std dev = 0.964, 138.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11349496313270843;  // std dev = 0.130, 80.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06740864570176529;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080138
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.045 seconds
Total inference time: 0.712 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082511
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.862 seconds
Parameter learned model CLL: -0.082511


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [0.0, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.02e-08, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.052, 11, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.77e-08, 141, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.33e-07, 0, 67], 'true,false,true': [3.23e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.47e-08, 103, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.71e-08, 0, 67], 'true,true,false,true': [1.97e-08, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.145, 13, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.41e-08, 123, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.121, 7, 54], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 114, 13]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.167, 11, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.126, 8, 54], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.964, 125, 13]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.13, 13, 67], 'true,false': [0.0, 0, 0], 'false': [0.0, 119, 0]}]]
[{'': [0.09528888888888787, 0.0], 'true': [-9.544603913195376e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.0745279721288961, 5.19297866356928e-17], 'true': [0.0745279721288961, nan], 'true,true': [3.1815346377317917e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.05400309855141071, 6.771573057997409e-17], 'true': [0.05400309855141071, nan], 'true,true': [0.05400309855141071, nan], 'true,true,true': [0.05400309855141071, nan]}, {'': [0.027859239924156252, 1.9401955770148367e-17], 'true': [2.651278864776493e-16, 9.25185853854297e-18], 'true,false': [9.25185853854297e-18, nan]}, {'': [0.03870508255738661, 2.5480528434019987e-17], 'true': [0.03870508255738661, nan], 'true,true': [2.9164067512541426e-16, 2.1587669923266933e-17], 'true,true,false': [2.1587669923266933e-17, nan]}, {'': [0.02111494366489163, 3.339695277327707e-17], 'true': [0.02111494366489163, nan], 'true,true': [0.02111494366489163, nan]}, {'': [0.014720876747407957, 0.00890125932432547], 'true': [0.014720876747407957, nan], 'true,true': [0.014720876747407957, nan]}, {'': [0.01746020898290989, -4.336808689942018e-18], 'true': [0.01746020898290989, nan], 'true,true': [0.01746020898290989, nan]}, {'': [0.015845747641484734, 0.006734870898951088], 'true': [0.015845747641484734, nan], 'true,true': [0.015845747641484734, nan]}, {'': [0.016944055417348794, -7.463684199160716e-18], 'true': [0.016944055417348794, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360622;  // std dev = 8.02e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783635;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926086;  // std dev = 7.30e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0851847513883968;  // std dev = 6.58e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07877675473109166;  // std dev = 4.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07324622576333707;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06842697784420265;  // std dev = 5.58e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801095;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.05 seconds
Total inference time: 0.671 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.768 seconds
Refined model CLL: -0.064052


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7249999999999996 seconds
Total inference time: 0.671 seconds
AUC ROC: 1.0
Total revision time: 3.7249999999999996
Best scored revision CLL: -0.064052


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.7249999999999996, 'Inference time': 0.671, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080138, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.045, 'Inference time': 0.712}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4468679793185505;  // std dev = 3.116, 160.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360672;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44411193225878;  // std dev = 2.73e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.16514589025538295;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33880988903209236;  // std dev = 1.44e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1436162691397927;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 7.30e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.23018541174026327;  // std dev = 0.115, 148.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9.06e-08, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17406195269387442;  // std dev = 0.129, 127.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=110 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05448366342578557;  // std dev = 0.087, 275.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16975933957441913;  // std dev = 1.301, 147.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07491246255932184;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12289699259962654;  // std dev = 0.125, 126.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=110 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0486455807923124;  // std dev = 1.328, 278.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10468036849883317;  // std dev = 0.130, 165.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06678692984042688;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079728
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.508 seconds
Total inference time: 0.728 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081795
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.011 seconds
Parameter learned model CLL: -0.081795


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 231, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.116, 26, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 237, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [2.73e-07, 0, 134], 'true,false,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 248, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.44e-08, 0, 134], 'true,true,false,true': [0.0, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.3e-08, 275, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.115, 14, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.06e-08, 257, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.129, 17, 110], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 251, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.301, 13, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 283, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.125, 16, 110], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.328, 254, 24]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.13, 31, 134], 'true,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}]]
[{'': [0.12882550873257972, -2.249035483360832e-16], 'true': [4.772301956597688e-15, 9.25185853854297e-18], 'true,true': [4.772301956597688e-15, nan], 'true,false': [9.25185853854297e-18, nan], 'true,false,true': [9.25185853854297e-18, nan]}, {'': [0.07132290142518419, -6.151885158096106e-17], 'true': [0.07132290142518419, nan], 'true,true': [-1.908920782639075e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.06067064020778916, -6.74565888379842e-17], 'true': [0.06067064020778916, nan], 'true,true': [0.06067064020778916, nan], 'true,true,true': [0.06067064020778916, nan]}, {'': [0.049187277634874245, -7.341797420908293e-17], 'true': [5.567685616030636e-16, -2.2204460492503132e-17], 'true,false': [-2.2204460492503132e-17, nan]}, {'': [0.027259782918668055, 1.9378438248002734e-17], 'true': [0.027259782918668055, nan], 'true,true': [2.1210230918211945e-16, -1.3216940769347101e-17], 'true,true,false': [-1.3216940769347101e-17, nan]}, {'': [0.013317483378164846, 3.1967511214887773e-17], 'true': [0.013317483378164846, nan], 'true,true': [0.013317483378164846, nan]}, {'': [0.016693321617908926, 0.007622912408782139], 'true': [0.016693321617908926, nan], 'true,true': [0.016693321617908926, nan]}, {'': [0.011515657747801477, -7.846099113958703e-19], 'true': [0.011515657747801477, nan], 'true,true': [0.011515657747801477, nan]}, {'': [0.01564107042471352, 0.0063449836323574696], 'true': [0.01564107042471352, nan], 'true,true': [0.01564107042471352, nan]}, {'': [0.016919838817577925, -6.055761952500853e-17], 'true': [0.016919838817577925, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048846;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.11231637819360678;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783653;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 5.96e-08, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839678;  // std dev = 9.19e-08, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07877675473109144;  // std dev = 6.14e-08, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07324622576333666;  // std dev = 1.29e-07, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06842697784420261;  // std dev = 6.14e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return 0.13400703000801104;  // std dev = 5.58e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.06419184008202626;  // std dev = 2.11e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.518 seconds
Total inference time: 0.683 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.015 seconds
Refined model CLL: -0.064052


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.052 seconds
Total inference time: 0.683 seconds
AUC ROC: 1.0
Total revision time: 5.052
Best scored revision CLL: -0.064052


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.052, 'Inference time': 0.683, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079728, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.508, 'Inference time': 0.728}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048746;  // std dev = 2.56e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4766440087839376;  // std dev = 3.258, 229.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43677368354417495;  // std dev = 3.95e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.16929222781863523;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 7.88e-08, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3338017512018413;  // std dev = 1.54e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14679736325579695;  // std dev = 2.11e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.74e-07, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20883734926515318;  // std dev = 0.137, 235.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.19151332249942846;  // std dev = 0.109, 190.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=173 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05768486427220751;  // std dev = 0.082, 386.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16012630567235886;  // std dev = 1.747, 226.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07469091912972645;  // std dev = 9.19e-08, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1275637539100302;  // std dev = 0.119, 195.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=173 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.052851314681685434;  // std dev = 1.497, 408.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10781525286234028;  // std dev = 0.126, 243.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06634048163740046;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079548
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.909 seconds
Total inference time: 0.765 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081341
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.267 seconds
Parameter learned model CLL: -0.081341


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.56e-07, 375, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 27, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 369, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.258, 27, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 385, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [3.95e-07, 0, 202], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 358, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.54e-08, 0, 202], 'true,true,false,true': [2.11e-08, 24, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.74e-07, 377, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.137, 33, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.21e-07, 395, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.109, 17, 173], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.082, 357, 29]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.747, 24, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.19e-08, 371, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.119, 22, 173], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.497, 379, 29]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.126, 41, 202], 'true,false': [0.0, 0, 0], 'false': [0.0, 357, 0]}]]
[{'': [0.13563816049999672, 1.7526720815415805e-16], 'true': [5.768762805181012e-15, 4.2700885562506023e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [4.2700885562506023e-17, nan], 'true,false,true': [4.2700885562506023e-17, nan]}, {'': [0.07424604868299411, -1.155354041886342e-16], 'true': [0.07424604868299411, nan], 'true,true': [-3.728590593592605e-15, -6.1679056923619804e-18], 'true,true,false': [-6.1679056923619804e-18, nan]}, {'': [0.04636439163651719, -2.5376526277146434e-17], 'true': [0.04636439163651719, nan], 'true,true': [0.04636439163651719, nan], 'true,true,true': [0.04636439163651719, nan]}, {'': [0.04135579456805865, 1.7366617144974516e-17], 'true': [7.738584250852576e-16, -1.4802973661668754e-17], 'true,false': [-1.4802973661668754e-17, nan]}, {'': [0.021923589684922345, 8.010097153794232e-17], 'true': [0.021923589684922345, nan], 'true,true': [2.4622768070894563e-16, 1.850371707708594e-17], 'true,true,false': [1.850371707708594e-17, nan]}, {'': [0.01868403164201352, 3.710112386089131e-17], 'true': [0.01868403164201352, nan], 'true,true': [0.01868403164201352, nan]}, {'': [0.01178117924863735, 0.006647235130737957], 'true': [0.01178117924863735, nan], 'true,true': [0.01178117924863735, nan]}, {'': [0.013506664911838663, 2.2743113172914257e-17], 'true': [0.013506664911838663, nan], 'true,true': [0.013506664911838663, nan]}, {'': [0.014190180651462301, 0.005491151822209999], 'true': [0.014190180651462301, nan], 'true,true': [0.014190180651462301, nan]}, {'': [0.015814341342969416, -5.34897367606518e-17], 'true': [0.015814341342969416, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048754;  // std dev = 2.29e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5718178305283498;  // std dev = 0.321, 103.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=85 */
%   | | else return 0.6291768266357578;  // std dev = 0.261, 131.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=117 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5833991458720365;  // std dev = 0.098, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.20715254316125384;  // std dev = 0.024, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360651;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43867528103556924;  // std dev = 0.099, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.17603177219709842;  // std dev = 0.020, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.10159632948783606;  // std dev = 1.84e-07, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.33511682039842117;  // std dev = 0.090, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.15091521071781527;  // std dev = 0.019, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.94e-07, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2649898954495546;  // std dev = 0.079, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.13377312778483497;  // std dev = 0.018, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21667595356631314;  // std dev = 0.068, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11913846957744516;  // std dev = 0.016, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109148;  // std dev = 3.65e-08, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18215845691388852;  // std dev = 0.060, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10710791751783175;  // std dev = 0.014, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.07324622576333717;  // std dev = 5.16e-08, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15657584206383124;  // std dev = 0.053, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09648244790855814;  // std dev = 0.014, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420314;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13213386112656156;  // std dev = 0.447, 207.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=202 */
%   | else return -0.08416825914274123;  // std dev = 0.060, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.06419184008202573;  // std dev = 1.65e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.714 seconds
Total inference time: 0.685 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.152 seconds
Refined model CLL: -0.065954


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.042000000000001 seconds
Total inference time: 0.685 seconds
AUC ROC: 1.0
Total revision time: 6.042000000000001
Best scored revision CLL: -0.065954


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065371, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.042000000000001, 'Inference time': 0.685, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079548, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.909, 'Inference time': 0.765}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048757;  // std dev = 1.40e-07, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839127;  // std dev = 3.49e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4784950600262295;  // std dev = 3.716, 304.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360583;  // std dev = 0.000, 513.000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4363183738523769;  // std dev = 6.47e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.16955270491926888;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878356;  // std dev = 3.02e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3334914408220108;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1469966912621433;  // std dev = 4.83e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 1.52e-07, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22440503275251972;  // std dev = 0.118, 299.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.44e-07, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.1692369974669085;  // std dev = 0.132, 263.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=226 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05702836668051933;  // std dev = 0.081, 560.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=43 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1540049085350547;  // std dev = 2.171, 308.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07473630378363304;  // std dev = 0.000, 539.000 (wgt'ed) examples reached here.  /* #neg=539 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1355806163570257;  // std dev = 0.111, 250.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=226 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.051567445311387565;  // std dev = 1.803, 565.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=43 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08847200274913568;  // std dev = 0.144, 346.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06645795224602154;  // std dev = 0.000, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079382
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.269 seconds
Total inference time: 0.727 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081465
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.477 seconds
Parameter learned model CLL: -0.081465


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.98e-08, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.4e-07, 506, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [3.49e-08, 42, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 496, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.716, 35, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 513, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [6.47e-07, 0, 269], 'true,false,true': [0.0, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.02e-07, 476, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [4.83e-08, 43, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 464, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.118, 30, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.44e-07, 475, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.132, 37, 226], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 517, 43]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.171, 39, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 539, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.111, 24, 226], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.803, 522, 43]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.144, 77, 269], 'true,false': [0.0, 0, 0], 'false': [0.0, 487, 0]}]]
[{'': [0.09500998885222425, 3.8616453030440226e-17], 'true': [4.226276495227362e-15, 2.7755575615628914e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [2.7755575615628914e-17, nan], 'true,false,true': [2.7755575615628914e-17, nan]}, {'': [0.08338923106493273, -1.2892912544034077e-16], 'true': [0.08338923106493273, nan], 'true,true': [-4.5432472323694135e-15, 2.9077269692563625e-17], 'true,true,false': [2.9077269692563625e-17, nan]}, {'': [0.045416488637913824, -6.92536779493275e-18], 'true': [0.045416488637913824, nan], 'true,true': [0.045416488637913824, nan], 'true,true,true': [0.045416488637913824, nan]}, {'': [0.04784698360919024, 1.9218986812838845e-16], 'true': [1.5584394576150897e-15, -5.890979314337566e-17], 'true,false': [-5.890979314337566e-17, nan]}, {'': [0.027433225786568052, 4.976861834526564e-17], 'true': [0.027433225786568052, nan], 'true,true': [-5.018703338082492e-16, 5.4220194225879736e-17], 'true,true,false': [5.4220194225879736e-17, nan]}, {'': [0.013968592377738532, 4.39414586588483e-17], 'true': [0.013968592377738532, nan], 'true,true': [0.013968592377738532, nan]}, {'': [0.017421310811150087, 0.006612452543496168], 'true': [0.017421310811150087, nan], 'true,true': [0.017421310811150087, nan]}, {'': [0.015297710079855562, -2.9660874869391937e-17], 'true': [0.015297710079855562, nan], 'true,true': [0.015297710079855562, nan]}, {'': [0.012290153971530788, 0.005755345604432733], 'true': [0.012290153971530788, nan], 'true,true': [0.012290153971530788, nan]}, {'': [0.02087752058609319, -3.647549978234601e-18], 'true': [0.02087752058609319, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048724;  // std dev = 2.95e-07, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.6215118990817556;  // std dev = 0.271, 138.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=122 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109561;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 508.000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5662695497552459;  // std dev = 0.196, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.15415571249117996;  // std dev = 0.308, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.11231637819360582;  // std dev = 0.000, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4257314806008191;  // std dev = 0.196, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.141022359228989;  // std dev = 0.290, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.10159632948783548;  // std dev = 3.32e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3263406464670161;  // std dev = 0.176, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.11018822922946257;  // std dev = 0.240, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1.19e-07, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2590402591180882;  // std dev = 0.154, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11621358585021938;  // std dev = 0.237, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.08518475138839679;  // std dev = 1.46e-07, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21250493657102767;  // std dev = 0.134, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09700646256974924;  // std dev = 0.200, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109211;  // std dev = 1.12e-07, 509.000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17912058057534042;  // std dev = 0.118, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09114439009637919;  // std dev = 0.179, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07324622576333734;  // std dev = 0.000, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15428534951066214;  // std dev = 0.105, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0887676216786871;  // std dev = 0.182, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.06842697784420344;  // std dev = 0.000, 484.000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13521463562367983;  // std dev = 0.094, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.08472899781337219;  // std dev = 0.177, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.06419184008202614;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.0641918400820254;  // std dev = 2.45e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063835
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.015 seconds
Total inference time: 0.684 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065101
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.272 seconds
Refined model CLL: -0.065101


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063835
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.033000000000001 seconds
Total inference time: 0.684 seconds
AUC ROC: 1.0
Total revision time: 7.033000000000001
Best scored revision CLL: -0.065101


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:35
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063835, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.033000000000001, 'Inference time': 0.684, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079382, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.269, 'Inference time': 0.727}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004884;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.472122865013517;  // std dev = 4.328, 385.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360603;  // std dev = 0.000, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4378862120382789;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.1686573589806783;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783506;  // std dev = 4.42e-07, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3345601816551029;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14631128331758433;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926158;  // std dev = 0.000, 660.000 (wgt'ed) examples reached here.  /* #neg=660 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2068113310838519;  // std dev = 0.139, 395.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 631.000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18274475591455844;  // std dev = 0.121, 314.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05449412654656511;  // std dev = 0.086, 698.000 (wgt'ed) examples reached here.  /* #neg=639 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15903419439262373;  // std dev = 2.369, 382.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07491173746215142;  // std dev = 0.000, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.13328242564388015;  // std dev = 0.114, 310.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04867523798916759;  // std dev = 2.112, 682.000 (wgt'ed) examples reached here.  /* #neg=623 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11438074163197144;  // std dev = 0.121, 402.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06678447451864913;  // std dev = 2.90e-07, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079901
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.784 seconds
Total inference time: 0.769 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082188
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.739 seconds
Parameter learned model CLL: -0.082188


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.05e-08, 48, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 590, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 52, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 603, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.328, 48, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 632, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 337], 'true,false,true': [0.0, 52, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.42e-07, 617, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 53, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 660, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.139, 58, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.6e-07, 631, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.121, 36, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.086, 639, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.369, 45, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 634, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.114, 32, 278], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.112, 623, 59]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.121, 65, 337], 'true,false': [0.0, 0, 0], 'false': [2.9e-07, 596, 0]}]]
[{'': [0.10913138809243007, -2.9204510749461743e-16], 'true': [3.204821834882351e-15, 5.3198186596622086e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [5.3198186596622086e-17, nan], 'true,false,true': [5.3198186596622086e-17, nan]}, {'': [0.08267290887873702, -2.592361556670349e-16], 'true': [0.08267290887873702, nan], 'true,true': [-5.144582419153248e-15, -3.416070845000482e-17], 'true,true,false': [-3.416070845000482e-17, nan]}, {'': [0.04865081006535488, -9.977953765618496e-17], 'true': [0.04865081006535488, nan], 'true,true': [0.04865081006535488, nan], 'true,true,true': [0.04865081006535488, nan]}, {'': [0.04260475277398831, 3.1669246731609e-16], 'true': [0.0, -3.843079700625542e-17], 'true,false': [-3.843079700625542e-17, nan]}, {'': [0.027154047278104505, -5.652044489000796e-17], 'true': [0.027154047278104505, nan], 'true,true': [-1.8554231675634665e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.019404307299777372, 4.081961041411035e-17], 'true': [0.019404307299777372, nan], 'true,true': [0.019404307299777372, nan]}, {'': [0.014687196396445546, 0.0073939323620873625], 'true': [0.014687196396445546, nan], 'true,true': [0.014687196396445546, nan]}, {'': [0.014690088645074317, -9.87643195407868e-17], 'true': [0.014690088645074317, nan], 'true,true': [0.014690088645074317, nan]}, {'': [0.013093703295099237, 0.006541269094027577], 'true': [0.013093703295099237, nan], 'true,true': [0.013093703295099237, nan]}, {'': [0.014601572921674476, 1.415720635428052e-16], 'true': [0.014601572921674476, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048857;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.11231637819360567;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783517;  // std dev = 4.11e-07, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926153;  // std dev = 0.000, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109255;  // std dev = 0.000, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07324622576333636;  // std dev = 2.90e-07, 660.000 (wgt'ed) examples reached here.  /* #neg=660 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420365;  // std dev = 0.000, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1316821165758707;  // std dev = 0.394, 341.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=337 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.06419184008202526;  // std dev = 2.48e-07, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06388
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.168 seconds
Total inference time: 0.663 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064188
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.299 seconds
Refined model CLL: -0.064188


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06388
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.99 seconds
Total inference time: 0.663 seconds
AUC ROC: 1.0
Total revision time: 7.99
Best scored revision CLL: -0.064188


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:45
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06388, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.99, 'Inference time': 0.663, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079901, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.784, 'Inference time': 0.769}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.02e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4762987349770864;  // std dev = 1.881, 76.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 9.06e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4368586235941114;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.16924367668935947;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.333859646243648;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14676020325908112;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892609;  // std dev = 6.32e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19612222651489628;  // std dev = 0.149, 81.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 6.23e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18480300776310365;  // std dev = 0.121, 62.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04980864045896249;  // std dev = 0.090, 127.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1587431302676527;  // std dev = 1.085, 76.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07523708892498845;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1201430588026732;  // std dev = 0.131, 64.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04649074674983062;  // std dev = 0.957, 121.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.08113332348852499;  // std dev = 0.150, 91.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06719352208525001;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07443
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.068 seconds
Total inference time: 0.742 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083084
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.841 seconds
Parameter learned model CLL: -0.083084


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 137, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.83e-08, 0, 67], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.02e-08, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [1.881, 9, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.06e-08, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 131, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 130, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.149, 14, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.23e-08, 125, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.121, 7, 55], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 115, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.085, 9, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.131, 9, 55], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.957, 109, 12]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.15, 24, 67], 'true,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}]]
[{'': [0.1043975069252067, -3.889832495037045e-17], 'true': [-9.544603913195376e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.0538529514000756, 5.1105504308142124e-17], 'true': [0.0538529514000756, nan], 'true,true': [3.1815346377317917e-16, -2.3129646346357427e-18], 'true,true,false': [-2.3129646346357427e-18, nan]}, {'': [0.04654044422502281, 6.418476861114186e-17], 'true': [0.04654044422502281, nan], 'true,true': [0.04654044422502281, nan], 'true,true,true': [0.04654044422502281, nan]}, {'': [0.04151310489694188, -3.220494269905034e-17], 'true': [-7.158452934896532e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02201129879084603, 3.0744637605004337e-17], 'true': [0.02201129879084603, nan], 'true,true': [-2.386150978298844e-16, -3.469446951953614e-18], 'true,true,false': [-3.469446951953614e-18, nan]}, {'': [0.02213075059483935, 3.1086244689504386e-17], 'true': [0.02213075059483935, nan], 'true,true': [0.02213075059483935, nan]}, {'': [0.014527483398120529, 0.00804186992629678], 'true': [0.014527483398120529, nan], 'true,true': [0.014527483398120529, nan]}, {'': [0.015488554604076443, -1.850371707708594e-17], 'true': [0.015488554604076443, nan], 'true,true': [0.015488554604076443, nan]}, {'': [0.0170925556493076, 0.007573228095339919], 'true': [0.0170925556493076, nan], 'true,true': [0.0170925556493076, nan]}, {'': [0.022566112880956158, -2.161496154137473e-17], 'true': [0.022566112880956158, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1123163781936062;  // std dev = 8.43e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783634;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5.16e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839682;  // std dev = 5.05e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109164;  // std dev = 5.37e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07324622576333707;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06842697784420267;  // std dev = 4.47e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.11198493333134035;  // std dev = 0.062, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | else return 0.07737878141085759;  // std dev = 0.090, 49.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   else return -0.06419184008202626;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064268
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.075 seconds
Total inference time: 0.708 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065322
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.794 seconds
Refined model CLL: -0.065322


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064268
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.778 seconds
Total inference time: 0.708 seconds
AUC ROC: 1.0
Total revision time: 3.778
Best scored revision CLL: -0.065322


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:15:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064268, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.778, 'Inference time': 0.708, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07443, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.068, 'Inference time': 0.742}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4724515773746624;  // std dev = 2.724, 153.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360688;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4378053038132775;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.16870345343611734;  // std dev = 2.63e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3345050153648283;  // std dev = 1.97e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14634658703559694;  // std dev = 2.11e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926058;  // std dev = 5.96e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20690854107158665;  // std dev = 0.139, 157.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.16101596026345213;  // std dev = 0.143, 134.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=111 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05575645403618546;  // std dev = 0.082, 295.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13863219707925586;  // std dev = 1.848, 163.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07482430513403543;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12576231032518256;  // std dev = 0.130, 129.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=111 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050077757882151144;  // std dev = 1.337, 290.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10424291108578547;  // std dev = 0.138, 167.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0666240181582904;  // std dev = 1.19e-07, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.546 seconds
Total inference time: 0.743 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082392
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.097 seconds
Parameter learned model CLL: -0.082392


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.83e-08, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 257, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 22, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 245, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [2.724, 19, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 276, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 134], 'true,false,true': [2.63e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 239, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.97e-08, 0, 134], 'true,true,false,true': [2.11e-08, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 240, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.139, 23, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.69e-08, 239, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.143, 23, 111], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.082, 272, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.848, 29, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.13, 18, 111], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.337, 267, 23]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.138, 33, 134], 'true,false': [0.0, 0, 0], 'false': [1.19e-07, 253, 0]}]]
[{'': [0.10876158742364535, -1.4860572780974857e-16], 'true': [4.772301956597688e-15, 0.0], 'true,true': [4.772301956597688e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.08647836286765649, -5.2565661574089046e-17], 'true': [0.08647836286765649, nan], 'true,true': [-1.908920782639075e-15, -2.523234146875356e-18], 'true,true,false': [-2.523234146875356e-18, nan]}, {'': [0.048485952800975375, -9.975917032863725e-17], 'true': [0.048485952800975375, nan], 'true,true': [0.048485952800975375, nan], 'true,true,true': [0.048485952800975375, nan]}, {'': [0.03150529533580609, -7.618266779854631e-17], 'true': [-1.5907673188658958e-16, 7.93016446160826e-18], 'true,false': [7.93016446160826e-18, nan]}, {'': [0.033818140392249944, 1.4802973661668754e-17], 'true': [0.033818140392249944, nan], 'true,true': [3.97691829716474e-16, 1.5313421029312504e-17], 'true,true,false': [1.5313421029312504e-17, nan]}, {'': [0.019366287031982503, 3.1587935428665544e-17], 'true': [0.019366287031982503, nan], 'true,true': [0.019366287031982503, nan]}, {'': [0.020572105833136862, 0.006784422333743519], 'true': [0.020572105833136862, nan], 'true,true': [0.020572105833136862, nan]}, {'': [0.020955460256845374, -1.2636684833131862e-17], 'true': [0.020955460256845374, nan], 'true,true': [0.020955460256845374, nan]}, {'': [0.016923386363038112, 0.006165731142173229], 'true': [0.016923386363038112, nan], 'true,true': [0.016923386363038112, nan]}, {'': [0.01905904944691562, 5.616938622609487e-17], 'true': [0.01905904944691562, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048843;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109543;  // std dev = 1.19e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109541;  // std dev = 1.88e-07, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 3.77e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360672;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 1.69e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783659;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2554376697891905;  // std dev = 0.151, 76.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=64 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.32071184716015017;  // std dev = 9.42e-08, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.99e-08, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2611915383723577;  // std dev = 0.073, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10309266550095918;  // std dev = 0.071, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839678;  // std dev = 8.94e-08, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21400921208641724;  // std dev = 0.064, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09234184157098753;  // std dev = 0.083, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07877675473109143;  // std dev = 5.37e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1802138605679895;  // std dev = 0.056, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08758386213939649;  // std dev = 0.066, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333666;  // std dev = 1.29e-07, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15510810380249027;  // std dev = 0.050, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07620693902451245;  // std dev = 0.056, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.06842697784420261;  // std dev = 5.77e-08, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13437066296137812;  // std dev = 0.204, 135.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=134 */
%   | else return -0.07237073132106449;  // std dev = 0.054, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06419184008202626;  // std dev = 1.05e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064081
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.412 seconds
Total inference time: 0.702 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064751
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.013 seconds
Refined model CLL: -0.064751


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064081
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.068 seconds
Total inference time: 0.702 seconds
AUC ROC: 1.0
Total revision time: 5.068
Best scored revision CLL: -0.064751


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:15:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064081, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.068, 'Inference time': 0.702, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073909, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.546, 'Inference time': 0.743}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048754;  // std dev = 2.29e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839133;  // std dev = 1.83e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.46405938513057116;  // std dev = 3.509, 234.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360647;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.43987195592157485;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.16752978064679724;  // std dev = 4.17e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 1.01e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3359146237153886;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14544708292513595;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.81e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21166712281862718;  // std dev = 0.135, 234.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.23e-07, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.18973548517102898;  // std dev = 0.112, 187.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=169 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.056109427509782546;  // std dev = 0.083, 421.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14306103723536764;  // std dev = 2.127, 239.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07479987399025875;  // std dev = 1.44e-07, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12161405228428147;  // std dev = 0.129, 196.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=169 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04907303822162793;  // std dev = 1.573, 425.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=33 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10757346931340377;  // std dev = 0.132, 246.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0666660787440894;  // std dev = 1.19e-07, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.969 seconds
Total inference time: 0.746 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082521
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.328 seconds
Parameter learned model CLL: -0.082521


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [7.6e-08, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.79e-08, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.29e-07, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [1.83e-08, 36, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 358, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [3.509, 32, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 365, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 202], 'true,false,true': [4.17e-09, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.01e-07, 361, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 39, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.81e-07, 371, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.135, 32, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.23e-07, 393, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.112, 18, 169], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.083, 388, 33]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.127, 37, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.44e-07, 339, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.129, 27, 169], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.573, 392, 33]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.132, 44, 202], 'true,false': [0.0, 0, 0], 'false': [1.19e-07, 349, 0]}]]
[{'': [0.1125891795481624, 1.4475836122184362e-16], 'true': [5.768762805181012e-15, 2.590520390792032e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [2.590520390792032e-17, nan], 'true,false,true': [2.590520390792032e-17, nan]}, {'': [0.09164929592978208, -1.116425387891219e-16], 'true': [0.09164929592978208, nan], 'true,true': [-3.728590593592605e-15, 9.25185853854297e-18], 'true,true,false': [9.25185853854297e-18, nan]}, {'': [0.052627171571888454, -2.9200386401100005e-17], 'true': [0.052627171571888454, nan], 'true,true': [0.052627171571888454, nan], 'true,true,true': [0.052627171571888454, nan]}, {'': [0.04549444161732481, 2.829377237271867e-17], 'true': [-6.683322762099952e-16, 9.79608551139844e-18], 'true,false': [9.79608551139844e-18, nan]}, {'': [0.03142859509408218, 8.857844077871869e-17], 'true': [0.03142859509408218, nan], 'true,true': [-3.51753829584208e-17, -1.708035422500241e-17], 'true,true,false': [-1.708035422500241e-17, nan]}, {'': [0.018307653993628176, 3.8419931640972337e-17], 'true': [0.018307653993628176, nan], 'true,true': [0.018307653993628176, nan]}, {'': [0.012575121352412205, 0.0068769426181495745], 'true': [0.012575121352412205, nan], 'true,true': [0.012575121352412205, nan]}, {'': [0.01893254220430118, 6.156989045118863e-17], 'true': [0.01893254220430118, nan], 'true,true': [0.01893254220430118, nan]}, {'': [0.016766280709782703, 0.005821102441444511], 'true': [0.016766280709782703, nan], 'true,true': [0.016766280709782703, nan]}, {'': [0.017451825003987887, 4.0718781418916915e-17], 'true': [0.017451825003987887, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048754;  // std dev = 2.29e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.06e-07, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 5.59e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1123163781936063;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831286;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.10159632948783615;  // std dev = 1.60e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014894;  // std dev = 4.09e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09269127618926097;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.80e-07, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694884;  // std dev = 2.46e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 2.95e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109148;  // std dev = 2.98e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527791;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333767;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367153;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.06842697784420324;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( director(A) )
%   | then return -0.06419184008202614;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13400703000801117;  // std dev = 3.33e-08, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | | else return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.10569290570943433;  // std dev = 0.069, 126.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=108 */
%   else return -0.06419184008202572;  // std dev = 1.68e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063986
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.651 seconds
Total inference time: 0.695 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064621
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.144 seconds
Refined model CLL: -0.064621


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063986
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.0920000000000005 seconds
Total inference time: 0.695 seconds
AUC ROC: 1.0
Total revision time: 6.0920000000000005
Best scored revision CLL: -0.064621


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:16:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063986, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.0920000000000005, 'Inference time': 0.695, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074058, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.969, 'Inference time': 0.746}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048743;  // std dev = 2.15e-07, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.44202521816080725;  // std dev = 4.512, 324.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360582;  // std dev = 0.000, 522.000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44530781763165783;  // std dev = 1.46e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.16447928785468505;  // std dev = 2.63e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783574;  // std dev = 2.68e-07, 449.000 (wgt'ed) examples reached here.  /* #neg=449 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.33962733355397734;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14310340476578354;  // std dev = 1.83e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926112;  // std dev = 9.42e-08, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2169764437636292;  // std dev = 0.132, 309.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.44e-07, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.17852827786916015;  // std dev = 0.128, 263.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=229 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05617456941253055;  // std dev = 0.083, 513.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=40 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1467935234154602;  // std dev = 2.412, 317.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07479536597933151;  // std dev = 9.42e-08, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12218686309752325;  // std dev = 0.131, 267.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=229 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050127076481783314;  // std dev = 1.742, 540.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11524176262044475;  // std dev = 0.126, 319.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06659675542579871;  // std dev = 0.000, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073948
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.453 seconds
Total inference time: 0.741 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082025
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.459 seconds
Parameter learned model CLL: -0.082025


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [6.58e-08, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.58e-08, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.15e-07, 485, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 39, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 504, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.512, 55, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 522, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [1.46e-07, 0, 269], 'true,false,true': [2.63e-09, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.68e-07, 449, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [1.83e-08, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 507, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.132, 40, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.44e-07, 480, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.128, 34, 229], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.083, 473, 40]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.412, 48, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 500, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.131, 38, 229], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.742, 500, 40]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.126, 50, 269], 'true,false': [0.0, 0, 0], 'false': [0.0, 463, 0]}]]
[{'': [0.13923261988517494, 9.52273769575392e-17], 'true': [4.226276495227362e-15, 5.756711979537848e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [5.756711979537848e-17, nan], 'true,false,true': [5.756711979537848e-17, nan]}, {'': [0.07894863596592969, -1.356939252319636e-16], 'true': [0.07894863596592969, nan], 'true,true': [-4.5432472323694135e-15, -2.2773805633336544e-17], 'true,true,false': [-2.2773805633336544e-17, nan]}, {'': [0.06282975204342718, -1.701491225479167e-18], 'true': [0.06282975204342718, nan], 'true,true': [0.06282975204342718, nan], 'true,true,true': [0.06282975204342718, nan]}, {'': [0.03952461281361204, 1.6022817816416512e-16], 'true': [7.924268428551303e-17, 6.00120553851436e-18], 'true,false': [6.00120553851436e-18, nan]}, {'': [0.023214313634431903, 1.7518312025643496e-17], 'true': [0.023214313634431903, nan], 'true,true': [-5.546987899985912e-16, 9.79608551139844e-18], 'true,true,false': [9.79608551139844e-18, nan]}, {'': [0.017536282095182, 4.3483735131151964e-17], 'true': [0.017536282095182, nan], 'true,true': [0.017536282095182, nan]}, {'': [0.0162599476690149, 0.006906256957264221], 'true': [0.0162599476690149, nan], 'true,true': [0.0162599476690149, nan]}, {'': [0.018359421231783076, 1.7763568394002505e-17], 'true': [0.018359421231783076, nan], 'true,true': [0.018359421231783076, nan]}, {'': [0.017152459181484354, 0.005616616161120889], 'true': [0.017152459181484354, nan], 'true,true': [0.017152459181484354, nan]}, {'': [0.015907855564239102, -9.303812819752932e-17], 'true': [0.015907855564239102, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.1418510649004878;  // std dev = 0.000, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109554;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #pos=121 */
%   | | | else return -0.1254446385283914;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.614483595255179;  // std dev = 0.279, 169.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=148 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5695349704739524;  // std dev = 0.210, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.17218023777053706;  // std dev = 0.296, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.1123163781936059;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42820089379785126;  // std dev = 0.210, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1360604465853673;  // std dev = 0.268, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783551;  // std dev = 3.28e-07, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.31532115892791807;  // std dev = 1.63e-07, 121.000 (wgt'ed) examples reached here.  /* #pos=121 */
%   | | | else return -0.08505729265019556;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.2840372338635922;  // std dev = 0.156, 166.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=148 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 1.07e-07, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26607541692582326;  // std dev = 0.216, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then return -0.07866729718797898;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.20561366424923974;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.08518475138839678;  // std dev = 1.48e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21746849252627126;  // std dev = 0.188, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then return -0.07315126345169037;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.17405101210006715;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.0787767547310918;  // std dev = 1.80e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18275527824976093;  // std dev = 0.165, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then return -0.06834384915320446;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.15042960163674515;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.07324622576333704;  // std dev = 1.15e-07, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1570386851106238;  // std dev = 0.146, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then return -0.0641184905092474;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.1321977225121502;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.06842697784420354;  // std dev = 0.000, 531.000 (wgt'ed) examples reached here.  /* #neg=531 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.10173489229136258;  // std dev = 0.066, 141.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=121 */
%   | else if ( actor(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.14458198966143473;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #pos=148 */
%   | | | else return -0.11775507061690951;  // std dev = 7.45e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06419184008202615;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0641918400820254;  // std dev = 2.43e-07, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.091 seconds
Total inference time: 0.72 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066529
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.287 seconds
Refined model CLL: -0.066529


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.29 seconds
Total inference time: 0.72 seconds
AUC ROC: 1.0
Total revision time: 7.29
Best scored revision CLL: -0.066529


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:16:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064954, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.29, 'Inference time': 0.72, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073948, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.453, 'Inference time': 0.741}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;false
0;true,true,true;ta(F, A, G).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,false,true;publication(H, J), professor(J).;false;false
0;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B).;true;true
1;true,true;publication(C, A).;true;true
1;true,true,true;ta(D, A, E).;false;false
1;true,true,false;publication(F, A), tempadvisedby(G, B).;false;false
1;true,false;projectmember(H, B).;true;true
1;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
1;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), ta(D, A, E).;true;true
2;true,true;ta(D, F, E), publication(G, F).;true;true
2;true,true,true;ta(H, I, E), publication(C, I).;false;false
2;true,true,false;publication(C, J), ta(K, J, L).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,false,false;publication(Q, A), publication(R, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;false;true
3;true,false;tempadvisedby(D, B), publication(E, D).;true;true
3;true,false,true;ta(F, D, G).;false;false
3;true,false,false;publication(H, A), tempadvisedby(I, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;ta(D, A, E).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;tempadvisedby(G, B), ta(H, G, I).;true;true
4;true,false,true;ta(H, J, K), publication(L, J).;false;false
4;true,false,false;publication(M, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), ta(D, A, E).;true;true
5;true,true;ta(F, G, E), publication(C, G).;true;true
5;true,true,true;tempadvisedby(H, B), ta(D, H, I).;false;false
5;true,true,false;ta(D, J, K), tempadvisedby(J, L).;false;false
5;true,false;projectmember(M, B).;false;true
5;true,false,false;publication(N, A), publication(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), tempadvisedby(E, D).;true;true
6;true,true;publication(F, B).;true;true
6;true,true,true;projectmember(G, B).;false;false
6;true,true,false;publication(H, A).;false;false
6;true,false;publication(I, B), ta(J, A, K).;false;true
6;true,false,false;publication(L, B).;false;false
6;false;ta(M, A, N).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D).;true;true
7;true,true;publication(E, B).;true;true
7;true,true,true;ta(C, F, G), publication(E, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), inphase(J, K).;false;false
7;true,false,false;projectmember(L, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;publication(D, B), ta(E, A, F).;true;true
8;true,true;ta(G, H, F), publication(D, H).;true;true
8;true,true,true;samecourse(E, G).;false;false
8;true,true,false;ta(E, I, F), publication(J, I).;false;false
8;true,false;ta(K, A, L), publication(M, A).;true;true
8;true,false,true;publication(M, N), tempadvisedby(N, P).;false;false
8;true,false,false;hasposition(Q, C), tempadvisedby(R, Q).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;false
9;true;tempadvisedby(D, B), ta(E, A, F).;true;true
9;true,true;ta(G, D, H), publication(I, A).;true;true
9;true,true,true;samecourse(E, G).;false;false
9;true,true,false;publication(J, A).;false;false
9;true,false;student(A), publication(C, A).;true;true
9;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
9;true,false,false;publication(C, N), ta(P, N, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H), director(H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048885;  // std dev = 0.000, 657.000 (wgt'ed) examples reached here.  /* #neg=657 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4587727300163999;  // std dev = 4.662, 394.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360603;  // std dev = 0.000, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.44117491756990784;  // std dev = 6.64e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.1667937802889844;  // std dev = 5.89e-09, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783513;  // std dev = 4.20e-07, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.3368038701703252;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14488238398891373;  // std dev = 4.94e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926137;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2170071475397647;  // std dev = 0.130, 385.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 557.000 (wgt'ed) examples reached here.  /* #neg=557 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.16972847033569533;  // std dev = 0.135, 338.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05663685096271205;  // std dev = 0.082, 637.000 (wgt'ed) examples reached here.  /* #neg=588 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15749948088654456;  // std dev = 2.413, 384.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07476338191239237;  // std dev = 1.56e-07, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.12020286837480193;  // std dev = 0.131, 336.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05184155648325038;  // std dev = 1.931, 680.000 (wgt'ed) examples reached here.  /* #neg=631 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10630750042622274;  // std dev = 0.130, 414.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06646355643317751;  // std dev = 0.000, 566.000 (wgt'ed) examples reached here.  /* #neg=566 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073871
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.848 seconds
Total inference time: 0.759 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082434
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.571 seconds
Parameter learned model CLL: -0.082434


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'movie(F, H), director(H)'}, {'true,true,true': [5.58e-08, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.34e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 657, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 56, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 593, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,true,true,true': [4.662, 57, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 629, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)'}, {'true,true': [6.64e-07, 0, 337], 'true,false,true': [5.89e-09, 60, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.2e-07, 585, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [4.94e-08, 50, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 608, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.13, 48, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-07, 557, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)'}, {'true,true,true': [0.135, 50, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.082, 588, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.413, 47, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.56e-07, 636, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.131, 48, 288], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.931, 631, 49]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)'}, {'true,true': [0.13, 77, 337], 'true,false': [0.0, 0, 0], 'false': [0.0, 566, 0]}]]
[{'': [0.09670082024579686, -4.704506697955001e-16], 'true': [3.204821834882351e-15, 4.603363760640893e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [4.603363760640893e-17, nan], 'true,false,true': [4.603363760640893e-17, nan]}, {'': [0.0872292230007475, -2.3365233300711557e-16], 'true': [0.0872292230007475, nan], 'true,true': [-5.144582419153248e-15, -3.766828119263924e-17], 'true,true,false': [-3.766828119263924e-17, nan]}, {'': [0.05516361383506701, -9.884338534023651e-17], 'true': [0.05516361383506701, nan], 'true,true': [0.05516361383506701, nan], 'true,true,true': [0.05516361383506701, nan]}, {'': [0.047420112162324224, 3.021324880689315e-16], 'true': [1.3072299589651695e-15, 2.960594732333751e-17], 'true,false': [2.960594732333751e-17, nan]}, {'': [0.026103965169456275, -2.6294755846385285e-17], 'true': [0.026103965169456275, nan], 'true,true': [-6.746993336594423e-16, 4.884981308350689e-17], 'true,true,false': [4.884981308350689e-17, nan]}, {'': [0.016938034157621327, 3.9864381494619624e-17], 'true': [0.016938034157621327, nan], 'true,true': [0.016938034157621327, nan]}, {'': [0.01819995517693246, 0.0067501413456856965], 'true': [0.01819995517693246, nan], 'true,true': [0.01819995517693246, nan]}, {'': [0.01516779533293088, 3.8403941103385916e-17], 'true': [0.01516779533293088, nan], 'true,true': [0.01516779533293088, nan]}, {'': [0.017265733753007852, 0.005481324867771214], 'true': [0.017265733753007852, nan], 'true,true': [0.017265733753007852, nan]}, {'': [0.016815292946614442, -5.492269379771092e-18], 'true': [0.016815292946614442, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048854;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360565;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783627;  // std dev = 2.98e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783501;  // std dev = 4.56e-07, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892615;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109264;  // std dev = 0.000, 653.000 (wgt'ed) examples reached here.  /* #neg=653 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333645;  // std dev = 2.72e-07, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420365;  // std dev = 0.000, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13225821644839394;  // std dev = 0.342, 340.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return -0.06419184008202523;  // std dev = 2.48e-07, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063742
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.035 seconds
Total inference time: 0.689 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064214
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.334 seconds
Refined model CLL: -0.064214


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063742
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.788 seconds
Total inference time: 0.689 seconds
AUC ROC: 1.0
Total revision time: 7.788
Best scored revision CLL: -0.064214


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:16:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063742, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.788, 'Inference time': 0.689, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073871, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.848, 'Inference time': 0.759}}


