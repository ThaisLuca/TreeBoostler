Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( publication(K, A), publication(L, B) )
%   | | | then return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.5058762078267856;  // std dev = 4.481, 88.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=57 */
%   else return -0.14185106490048816;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7282568610794827;  // std dev = 0.126, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.1083842629954427;  // std dev = 2.622, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.810780616909574;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.6300019621515837;  // std dev = 1.810, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return 0.3835412865859893;  // std dev = 3.702, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   else return -0.12544463852839138;  // std dev = 2.11e-08, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), publication(F, B) )
%   | then if ( ta(D, G, E), publication(H, G) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.3965737758286825;  // std dev = 2.139, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return 0.046452679955084064;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(I, J, E), tempadvisedby(J, B) )
%   | | | then return 0.40912027274259855;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6533617033795991;  // std dev = 0.968, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( publication(K, A), publication(K, B) )
%   | | then if ( publication(K, L), tempadvisedby(M, L) )
%   | | | then return 0.5531964583575332;  // std dev = 2.98e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.41033931550039027;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(N, A), publication(P, B) )
%   | | | then return -0.014518453616772186;  // std dev = 1.678, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.36555112343163765;  // std dev = 3.390, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   else return -0.10994669075855133;  // std dev = 0.061, 201.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A) )
%   | | then if ( publication(D, E), tempadvisedby(F, E) )
%   | | | then return 0.417821896827931;  // std dev = 0.989, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.2843051048101525;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(D, G), professor(G) )
%   | | | then return -0.014012636155035355;  // std dev = 1.946, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.26178291546905647;  // std dev = 1.447, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | then if ( ta(K, H, L) )
%   | | | then return 0.38190468383909526;  // std dev = 1.319, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.22943934453451276;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( publication(M, A) )
%   | | | then return 0.6530607517036451;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.42329866344252226;  // std dev = 2.687, 48.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=39 */
%   else return -0.10181282585114852;  // std dev = 3.33e-08, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.14090124657971542;  // std dev = 0.920, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.32695415570568054;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3555705764623899;  // std dev = 0.230, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return -0.11596696370094255;  // std dev = 1.597, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.11996092146711727;  // std dev = 1.936, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.28631316846026394;  // std dev = 3.043, 59.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=47 */
%   | | | else return 0.1267782291445787;  // std dev = 2.401, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else return -0.09287251758580055;  // std dev = 0.000, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( publication(E, C), ta(F, A, G) )
%   | | | then return 0.07085510945877671;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2663449565619064;  // std dev = 0.110, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return -0.047818380839713605;  // std dev = 1.563, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.18974343152446813;  // std dev = 2.956, 48.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=36 */
%   | else if ( ta(J, A, K) )
%   | | then if ( ta(J, L, K), publication(M, L) )
%   | | | then return 0.422171446667736;  // std dev = 0.834, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.29788333702814324;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( publication(N, A) )
%   | | | then return 0.23261519679172946;  // std dev = 1.482, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.2851254317477885;  // std dev = 1.512, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.0853385478479084;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.25378556620043835;  // std dev = 0.152, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( publication(C, G), tempadvisedby(H, G) )
%   | | | then return 0.10703959345632749;  // std dev = 1.320, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.25145464978186766;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( projectmember(I, B) )
%   | | then if ( ta(J, A, K) )
%   | | | then return -0.05768366073439307;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4189914157299161;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(L, A) )
%   | | | then return -0.012648562236323066;  // std dev = 2.815, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.08416919159669457;  // std dev = 3.774, 71.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=50 */
%   else return -0.07890880097849501;  // std dev = 0.000, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B), ta(E, C, F) )
%   | | then if ( ta(G, A, F) )
%   | | | then return -0.04156718380456928;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18873928589910077;  // std dev = 0.032, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.22191687916413014;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.01664840806255616;  // std dev = 2.280, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | else if ( publication(I, B) )
%   | | then if ( publication(I, J), tempadvisedby(K, J) )
%   | | | then return 0.21430370867809218;  // std dev = 2.842, 74.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=64 */
%   | | | else return -0.1653466587416042;  // std dev = 1.150, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(L, A, M) )
%   | | | then return -0.30262325637051724;  // std dev = 0.908, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09154861910075944;  // std dev = 1.604, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.07336076314346941;  // std dev = 2.36e-08, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, E), professor(E) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.18295323049311427;  // std dev = 0.202, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 0.012096359493020247;  // std dev = 1.732, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.4786258634852712;  // std dev = 0.295, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( projectmember(F, B) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return -0.03183100417452528;  // std dev = 1.033, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.37057754158407924;  // std dev = 0.182, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.03926102126936579;  // std dev = 3.378, 61.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | | | else return -0.10215704671590115;  // std dev = 2.062, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else return -0.06852722508961408;  // std dev = 2.98e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), publication(D, A) )
%   then if ( student(A), publication(D, B) )
%   | then return 0.13549982284474488;  // std dev = 0.143, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.09820458088386336;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.19941338416345214;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( student(A), publication(I, B) )
%   | | | then return 0.008781438972950806;  // std dev = 1.914, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.060680835424427086;  // std dev = 1.106, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   else if ( tempadvisedby(J, B), publication(K, J) )
%   | then if ( ta(L, J, M), publication(K, B) )
%   | | then return -0.03751814796986822;  // std dev = 0.899, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(K, B), student(A) )
%   | | | then return -0.343343424055761;  // std dev = 0.910, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2261834760346771;  // std dev = 0.843, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.05116147280909493;  // std dev = 0.252, 254.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=51 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8.43e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48508403517366366;  // std dev = 1.547, 57.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03631996023296836;  // std dev = 2.352, 123.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4626161673311731;  // std dev = 0.430, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15813516594850846;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10874589420687643;  // std dev = 4.94e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3527087691121081;  // std dev = 0.408, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13428846333493097;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09864589642304315;  // std dev = 4.71e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27766786186604936;  // std dev = 0.366, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10824075485696041;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09021542213612911;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22600425455574624;  // std dev = 0.324, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10448388975443898;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0830794935728525;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18922775587050428;  // std dev = 0.036, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.09989271725724325;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07696599533467106;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16208773393143044;  // std dev = 0.256, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.08168276714601735;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07167310435673101;  // std dev = 4.34e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12641680713547895;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( movie(E, B) )
%   | | then return -0.08610563529290578;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.036789306477834294;  // std dev = 0.926, 122.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068619
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.222 seconds
Total inference time: 1.875 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070136
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.917 seconds
Parameter learned model CLL: -0.070136


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 65], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.19e-07, 0, 65], 'true,false,true,true': [5.27e-09, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 131, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.547, 6, 51], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.352, 109, 14]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.43, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.078, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 115, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.408, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.366, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.07, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.324, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.073, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 103, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.036, 0, 65], 'true,true,false': [0.018, 8, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.256, 0, 65], 'true,true,true,false': [0.077, 16, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.34e-08, 116, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 51], 'true,false,true': [0.032, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.926, 108, 14], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.05461037597143363, -7.162729191130042e-18], 'true': [-8.745141363201234e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0824935525515319, 5.4239903493137417e-17], 'true': [2.1862853408003084e-16, 2.7755575615628915e-18], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.04198673575192795, 0.04496604672645889], 'true': [0.04198673575192795, nan], 'true,true': [0.04198673575192795, nan], 'true,true,true': [0.04198673575192795, nan]}, {'': [0.04706924710691015, 2.1239049166742126e-17], 'true': [0.04706924710691015, nan], 'true,true': [0.0028392214658972503, 0.000609825040792189], 'true,true,true': [0.0028392214658972503, nan], 'true,true,false': [0.000609825040792189, nan]}, {'': [0.03163072604616831, 1.7763568394002505e-17], 'true': [0.002555642611305969, 0.0005984347953321372], 'true,true': [0.002555642611305969, nan], 'true,true,true': [0.002555642611305969, nan], 'true,false': [0.0005984347953321372, nan]}, {'': [0.016434900485697554, -4.4959444798869974e-17], 'true': [0.0020615720767974193, 0.0006133317536369375], 'true,true': [0.0020615720767974193, nan], 'true,false': [0.0006133317536369375, nan]}, {'': [0.014972008500501732, -4.311545726699637e-18], 'true': [0.0016163172467942128, 0.00047809596420791587], 'true,true': [0.0016163172467942128, nan], 'true,false': [0.00047809596420791587, nan]}, {'': [0.009323582544367591, -1.214306433183765e-17], 'true': [0.009323582544367591, nan], 'true,true': [0.0012702474037728788, 0.00032690153697598374]}, {'': [0.010303894586079998, 1.6270509843644534e-17], 'true': [0.010303894586079998, nan], 'true,true': [0.010303894586079998, nan], 'true,true,true': [0.0010112373579238656, 0.00036934275187475163]}, {'': [0.004810691964819011, 0.007024189259724416], 'false': [0.007024189259724416, nan], 'false,true': [0.007024189259724416, nan], 'true': [-3.918434204559376e-17, 0.00014527404531292285], 'true,false': [0.00014527404531292188, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048774;  // std dev = 5.16e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.12544463852839116;  // std dev = 7.30e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360628;  // std dev = 6.83e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 2.98e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926098;  // std dev = 4.94e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839682;  // std dev = 5.67e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109162;  // std dev = 5.87e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936707;  // std dev = 4.94e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 6.32e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.134007030008011;  // std dev = 3.33e-08, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.785 seconds
Total inference time: 1.684 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.206 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.130000000000001 seconds
Total inference time: 1.684 seconds
AUC ROC: 1.0
Total revision time: 7.130000000000001
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.130000000000001, 'Inference time': 1.684, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068619, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.222, 'Inference time': 1.875}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4847983343542627;  // std dev = 2.277, 123.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=110 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05994909859047743;  // std dev = 2.866, 255.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45559148610846684;  // std dev = 0.557, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15590452789695944;  // std dev = 0.126, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10647683582047887;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3476710195152774;  // std dev = 0.531, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13915460756393458;  // std dev = 0.022, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09676288199305495;  // std dev = 1.33e-07, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27413389827171064;  // std dev = 0.479, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11638456260722524;  // std dev = 0.112, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08862951868984417;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22346952718411084;  // std dev = 0.426, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1001982441660634;  // std dev = 0.100, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08172671998860732;  // std dev = 8.56e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18735039183727184;  // std dev = 0.033, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.0967706133155875;  // std dev = 0.020, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07579926073901794;  // std dev = 3.65e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16065337586760262;  // std dev = 0.339, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return -0.09221860692243648;  // std dev = 0.070, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0706570447461865;  // std dev = 1.13e-07, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1288359540141036;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else if ( movie(E, B) )
%   | | then return -0.08632424529684553;  // std dev = 0.046, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04495497276928886;  // std dev = 1.156, 257.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067244
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.679 seconds
Total inference time: 1.742 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068707
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.773 seconds
Parameter learned model CLL: -0.068707


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.66e-08, 0, 130], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 240, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 130], 'true,false,true,true': [7.45e-09, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.277, 13, 110], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.866, 235, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.557, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.126, 22, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 210, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.531, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.33e-07, 226, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.479, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.112, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.426, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.1, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.56e-08, 231, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 130], 'true,true,false': [0.02, 30, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 213, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.339, 0, 130], 'true,true,true,false': [0.07, 19, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.13e-07, 221, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 110], 'true,false,true': [0.046, 17, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.156, 237, 20], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.09757928316757827, -1.9984014443252818e-16], 'true': [4.481884948640632e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.06966053414934913, -6.774242184153498e-17], 'true': [-1.7490282726402467e-15, 3.469446951953614e-18], 'true,false': [3.469446951953614e-18, nan], 'true,false,true': [3.469446951953614e-18, nan]}, {'': [0.042137252174861674, 0.03222240068312899], 'true': [0.042137252174861674, nan], 'true,true': [0.042137252174861674, nan], 'true,true,true': [0.042137252174861674, nan]}, {'': [0.048431325270851595, -7.401486830834377e-17], 'true': [0.048431325270851595, nan], 'true,true': [0.002384726145794448, 0.000718557865884509], 'true,true,true': [0.002384726145794448, nan], 'true,true,false': [0.000718557865884509, nan]}, {'': [0.031259224170319226, 7.859986015045356e-17], 'true': [0.0021649740324880267, 0.0004831164985748613], 'true,true': [0.0021649740324880267, nan], 'true,true,true': [0.0021649740324880267, nan], 'true,false': [0.0004831164985748613, nan]}, {'': [0.020469225285066218, -1.5053871520341106e-17], 'true': [0.0017640293650365662, 0.0005683042558339568], 'true,true': [0.0017640293650365662, nan], 'true,false': [0.0005683042558339568, nan]}, {'': [0.012940581724716429, 3.172065784643304e-17], 'true': [0.0013955995014621081, 0.000530502220579873], 'true,true': [0.0013955995014621081, nan], 'true,false': [0.000530502220579873, nan]}, {'': [0.01326857187747453, 6.254777603522009e-18], 'true': [0.01326857187747453, nan], 'true,true': [0.001105094522078117, 0.0003881179759883243]}, {'': [0.007919877424492829, 5.827414970883175e-17], 'true': [0.007919877424492829, nan], 'true,true': [0.007919877424492829, nan], 'true,true,true': [0.0008852107108599371, 0.00026153133938478103]}, {'': [0.0053840803638657226, 0.00519824169533072], 'true': [-1.1102230246251565e-16, 0.00012515883812686633], 'false': [0.00519824169533072, nan], 'false,true': [0.00519824169533072, nan], 'true,false': [0.00012515883812686633, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048835;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.12544463852839177;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.11231637819360672;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2.53e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.09269127618926057;  // std dev = 6.32e-08, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5.96e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08518475138839678;  // std dev = 7.15e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07877675473109147;  // std dev = 7.30e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12296834131098283;  // std dev = 0.103, 74.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=58 */
%   | | else return 0.13634303112759652;  // std dev = 0.092, 86.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=72 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333677;  // std dev = 9.77e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15889071547168818;  // std dev = 0.010, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.08271935789790154;  // std dev = 0.002, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.99e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13868489943638967;  // std dev = 0.008, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else return -0.07436837882352215;  // std dev = 0.019, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1393537547178793;  // std dev = 0.003, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.07649817256590696;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.323 seconds
Total inference time: 1.47 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.759 seconds
Refined model CLL: -0.065269


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.534 seconds
Total inference time: 1.47 seconds
AUC ROC: 1.0
Total revision time: 9.534
Best scored revision CLL: -0.065269


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063874, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.534, 'Inference time': 1.47, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067244, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.679, 'Inference time': 1.742}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.17e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-07, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839202;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45844473780339534;  // std dev = 3.208, 186.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=159 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05115459361895996;  // std dev = 3.818, 393.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=36 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46464730424275236;  // std dev = 0.686, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14998539837351751;  // std dev = 0.167, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1073164411248824;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3539392006693188;  // std dev = 0.654, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13404763324741106;  // std dev = 0.023, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09746037251483958;  // std dev = 1.35e-07, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27839651004205074;  // std dev = 0.589, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11813399780503189;  // std dev = 0.116, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08921748380981745;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2264478489255074;  // std dev = 0.522, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11158790523647157;  // std dev = 0.081, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08222864317345938;  // std dev = 1.33e-07, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18950809118967635;  // std dev = 0.033, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.09364408585954526;  // std dev = 0.019, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07623245056312952;  // std dev = 1.28e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16227107037055732;  // std dev = 0.414, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return -0.08461892899078438;  // std dev = 0.105, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07103451574940685;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12883744339802417;  // std dev = 8.43e-08, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( movie(E, B) )
%   | | then return -0.08613832107140106;  // std dev = 0.058, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04332524384241585;  // std dev = 1.513, 415.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067618
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.283 seconds
Total inference time: 1.756 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069138
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.8 seconds
Parameter learned model CLL: -0.069138


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 195], 'true,false,true': [4.17e-09, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-07, 326, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 195], 'true,false,true,true': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 336, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.208, 27, 159], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.818, 357, 36]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.686, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.167, 39, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 385, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.654, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.023, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.35e-07, 329, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.589, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.116, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 342, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.522, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.081, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.33e-07, 369, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 195], 'true,true,false': [0.019, 48, 0], 'true,false': [0.0, 0, 0], 'false': [1.28e-07, 345, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.414, 0, 195], 'true,true,true,false': [0.105, 35, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 331, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [8.43e-08, 0, 159], 'true,false,true': [0.058, 35, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.513, 379, 36], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10072314049587351, 6.811184200154335e-17], 'true': [5.975846598187509e-15, 1.3322676295501878e-17], 'true,false': [1.3322676295501878e-17, nan]}, {'': [0.06737187543990741, -8.458842092382145e-17], 'true': [-3.643808901333847e-15, -2.413528314402514e-18], 'true,false': [-2.413528314402514e-18, nan], 'true,false,true': [-2.413528314402514e-18, nan]}, {'': [0.055319137052970396, 0.03709590859919213], 'true': [0.055319137052970396, nan], 'true,true': [0.055319137052970396, nan], 'true,true,true': [0.055319137052970396, nan]}, {'': [0.05460159560259464, -2.999044014571851e-17], 'true': [0.05460159560259464, nan], 'true,true': [0.0024166379233641977, 0.0007152513942694028], 'true,true,true': [0.0024166379233641977, nan], 'true,true,false': [0.0007152513942694028, nan]}, {'': [0.031428934381219034, 5.5342424327819355e-17], 'true': [0.002193477954240819, 0.0005191047698283989], 'true,true': [0.002193477954240819, nan], 'true,true,true': [0.002193477954240819, nan], 'true,false': [0.0005191047698283989, nan]}, {'': [0.019770379990148714, -5.4537271385095406e-17], 'true': [0.0017779957632021556, 0.00044929296563080053], 'true,true': [0.0017779957632021556, nan], 'true,false': [0.00044929296563080053, nan]}, {'': [0.013464612274264043, 4.8139751745264243e-17], 'true': [0.001398206855399236, 0.00024018280880351624], 'true,true': [0.001398206855399236, nan], 'true,false': [0.00024018280880351624, nan]}, {'': [0.013661972988170446, 4.7626958737542946e-17], 'true': [0.013661972988170446, nan], 'true,true': [0.0011010965450772812, 0.0003524458974778881]}, {'': [0.008656690528925778, 0.0], 'true': [0.008656690528925778, nan], 'true,true': [0.008656690528925778, nan], 'true,true,true': [0.0008778858398912439, 0.00031678436408165856]}, {'': [0.0068508776382162195, 0.0055136535928363385], 'true': [4.468822237484907e-17, 9.653857674986848e-05], 'false': [0.0055136535928363385, nan], 'false,true': [0.0055136535928363385, nan], 'true,false': [9.653857674986848e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.1418510649004875;  // std dev = 2.55e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.12544463852839213;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360668;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3558371587746099;  // std dev = 0.168, 101.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=89 */
%   | | else return 0.3249591034307028;  // std dev = 0.199, 129.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=106 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33804856986666104;  // std dev = 0.048, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.13687769910227837;  // std dev = 0.010, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.09269127618926055;  // std dev = 1.58e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2669731232335049;  // std dev = 0.042, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12119549097890633;  // std dev = 0.009, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.08518475138839678;  // std dev = 1.03e-07, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21806201384389598;  // std dev = 0.037, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1091550171113839;  // std dev = 0.008, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109148;  // std dev = 3.65e-08, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18316500168703473;  // std dev = 0.032, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.09911304068846291;  // std dev = 0.009, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333695;  // std dev = 9.88e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1573328227176006;  // std dev = 0.028, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.0907158622744087;  // std dev = 0.007, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420321;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13786933286918307;  // std dev = 0.022, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else return -0.07820670511390686;  // std dev = 0.052, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13630214174416244;  // std dev = 0.009, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.0831429950008319;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06419184008202602;  // std dev = 1.05e-07, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.905 seconds
Total inference time: 1.601 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065795
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.97 seconds
Refined model CLL: -0.065795


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.958 seconds
Total inference time: 1.601 seconds
AUC ROC: 1.0
Total revision time: 11.958
Best scored revision CLL: -0.065795


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064068, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.958, 'Inference time': 1.601, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067618, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.283, 'Inference time': 1.756}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004872;  // std dev = 2.92e-07, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.49084246723528496;  // std dev = 3.043, 238.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=215 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05551916331214162;  // std dev = 4.284, 529.000 (wgt'ed) examples reached here.  /* #neg=484 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4567786070731329;  // std dev = 0.828, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15519854095642358;  // std dev = 0.185, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10689903305163814;  // std dev = 1.33e-07, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34859383978969694;  // std dev = 0.788, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13664648510577496;  // std dev = 0.024, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0971137241190752;  // std dev = 0.000, 515.000 (wgt'ed) examples reached here.  /* #neg=515 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2748256896446258;  // std dev = 0.710, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11791921950070663;  // std dev = 0.167, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08892534669311422;  // std dev = 2.40e-07, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22399288919153662;  // std dev = 0.631, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11057503385233781;  // std dev = 0.125, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08197931448047056;  // std dev = 0.000, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18775514144365082;  // std dev = 0.035, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.09642880971990411;  // std dev = 0.020, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07601730825137379;  // std dev = 1.94e-07, 523.000 (wgt'ed) examples reached here.  /* #neg=523 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1609738414676731;  // std dev = 0.502, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return -0.0874030900444227;  // std dev = 0.130, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07084707918241685;  // std dev = 0.000, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12770722011997035;  // std dev = 1.13e-07, 215.000 (wgt'ed) examples reached here.  /* #pos=215 */
%   | else if ( movie(E, B) )
%   | | then return -0.08553560740890304;  // std dev = 0.068, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04224213797082146;  // std dev = 1.715, 508.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067563
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.906 seconds
Total inference time: 1.808 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069105
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.941 seconds
Parameter learned model CLL: -0.069105


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 260], 'true,false,true': [6.45e-09, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.92e-07, 472, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 260], 'true,false,true,true': [0.0, 46, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 490, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.043, 23, 215], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.284, 484, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.828, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.185, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.33e-07, 461, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.788, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 515, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.71, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.167, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.4e-07, 456, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.631, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.125, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 504, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 260], 'true,true,false': [0.02, 53, 0], 'true,false': [0.0, 0, 0], 'false': [1.94e-07, 523, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.502, 0, 260], 'true,true,true,false': [0.13, 49, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 476, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.13e-07, 0, 215], 'true,false,true': [0.068, 33, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.715, 463, 45], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11125624971848541, 1.8064645824409328e-16], 'true': [4.372570681600617e-15, 4.0902953538821554e-17], 'true,false': [4.0902953538821554e-17, nan]}, {'': [0.09118376147083755, -1.2688263138573217e-16], 'true': [-4.481884948640632e-15, -3.137586808723268e-17], 'true,false': [-3.137586808723268e-17, nan], 'true,false,true': [-3.137586808723268e-17, nan]}, {'': [0.038918202952744, 0.03469660069451059], 'true': [0.038918202952744, nan], 'true,true': [0.038918202952744, nan], 'true,true,true': [0.038918202952744, nan]}, {'': [0.04872876912705191, 3.853268632104665e-17], 'true': [0.04872876912705191, nan], 'true,true': [0.0026373125104588377, 0.0007776141546148131], 'true,true,true': [0.0026373125104588377, nan], 'true,true,false': [0.0007776141546148131, nan]}, {'': [0.03219356566649511, -1.2762175351030924e-16], 'true': [0.0023875573989625373, 0.0005998081945677568], 'true,true': [0.0023875573989625373, nan], 'true,true,true': [0.0023875573989625373, nan], 'true,false': [0.0005998081945677568, nan]}, {'': [0.02230382509275134, 1.2660438000111434e-16], 'true': [0.0019402051676509521, 0.0005672504781009204], 'true,true': [0.0019402051676509521, nan], 'true,false': [0.0005672504781009204, nan]}, {'': [0.014772591841854109, -4.1413081077287586e-17], 'true': [0.0015315047076895733, 0.00037274723102034965], 'true,true': [0.0015315047076895733, nan], 'true,false': [0.00037274723102034965, nan]}, {'': [0.012430978170116933, 7.217511058748628e-17], 'true': [0.012430978170116933, nan], 'true,true': [0.0012104589931834762, 0.00038962011451320954]}, {'': [0.00910095692545997, -6.810611831734154e-17], 'true': [0.00910095692545997, nan], 'true,true': [0.00910095692545997, nan], 'true,true,true': [0.0009681415519610906, 0.00034630212981068276]}, {'': [0.0052640523480821716, 0.005792199071685622], 'false': [0.005792199071685622, nan], 'false,true': [0.005792199071685622, nan], 'true': [5.990040504954333e-17, 0.00013842416142351827], 'true,false': [0.00013842416142352247, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1418510649004872;  // std dev = 2.98e-07, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.12544463852839227;  // std dev = 0.000, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360592;  // std dev = 0.000, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.10159632948783624;  // std dev = 3.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783577;  // std dev = 2.60e-07, 435.000 (wgt'ed) examples reached here.  /* #neg=435 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.33e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.09269127618926089;  // std dev = 1.58e-07, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839679;  // std dev = 1.38e-07, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07877675473109147;  // std dev = 2.27e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527722;  // std dev = 4.21e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633376;  // std dev = 0.000, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420346;  // std dev = 0.000, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 9.42e-08, 215.000 (wgt'ed) examples reached here.  /* #pos=215 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( actor(B) )
%   | then return -0.06419184008202554;  // std dev = 2.10e-07, 423.000 (wgt'ed) examples reached here.  /* #neg=423 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13400703000801134;  // std dev = 1.49e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202619;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2 seconds
Total inference time: 1.402 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.329 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.376000000000001 seconds
Total inference time: 1.402 seconds
AUC ROC: 1.0
Total revision time: 13.376000000000001
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.376000000000001, 'Inference time': 1.402, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067563, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.906, 'Inference time': 1.808}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.90e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048838;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4554266523444518;  // std dev = 4.221, 314.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=267 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05180441800704233;  // std dev = 4.891, 651.000 (wgt'ed) examples reached here.  /* #neg=592 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46482528977639764;  // std dev = 0.877, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14806971252694331;  // std dev = 0.202, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10725420407730675;  // std dev = 0.000, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3540375602475414;  // std dev = 0.836, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1344126356231081;  // std dev = 0.022, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09740869946989512;  // std dev = 1.12e-07, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2784478153824867;  // std dev = 0.752, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11724996570492763;  // std dev = 0.156, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08917394621928229;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2264741246549984;  // std dev = 0.667, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10441467178325717;  // std dev = 0.161, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08219149257732714;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18952106995454618;  // std dev = 0.033, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.096911815746406;  // std dev = 0.018, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07620039923973734;  // std dev = 0.000, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16227680628265523;  // std dev = 0.529, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return -0.08755516468028933;  // std dev = 0.119, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07100659610071605;  // std dev = 2.16e-07, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1291346554085249;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( movie(E, B) )
%   | | then return -0.08418937069440884;  // std dev = 0.078, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04228205998961416;  // std dev = 1.933, 651.000 (wgt'ed) examples reached here.  /* #neg=592 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067669
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.199 seconds
Total inference time: 2.126 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069229
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.526 seconds
Parameter learned model CLL: -0.069229


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.77e-08, 0, 326], 'true,false,true': [7.9e-09, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 590, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 326], 'true,false,true,true': [0.0, 67, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 624, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [4.221, 47, 267], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.891, 592, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.877, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.202, 55, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 592, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.836, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 47, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.12e-07, 598, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.752, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.156, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 581, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.667, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.161, 64, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 575, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 326], 'true,true,false': [0.018, 60, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 639, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.529, 0, 326], 'true,true,true,false': [0.119, 50, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.16e-07, 599, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 267], 'true,false,true': [0.078, 50, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.933, 592, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12667616522029912, -2.86023558886481e-16], 'true': [3.400143152717044e-15, 6.232831015439475e-17], 'true,false': [6.232831015439475e-17, nan]}, {'': [0.1009570097913493, -2.5335858767086904e-16], 'true': [-5.056623150194578e-15, -3.314098580970616e-17], 'true,false': [-3.314098580970616e-17, nan], 'true,false,true': [-3.314098580970616e-17, nan]}, {'': [0.05674011606761589, 0.03674109858927451], 'true': [0.05674011606761589, nan], 'true,true': [0.05674011606761589, nan], 'true,true,true': [0.05674011606761589, nan]}, {'': [0.048523292777789044, -1.5603134400137336e-16], 'true': [0.048523292777789044, nan], 'true,true': [0.0023577138374168984, 0.0007452736160537654], 'true,true,true': [0.0023577138374168984, nan], 'true,true,false': [0.0007452736160537654, nan]}, {'': [0.028209715071508556, 2.0793474708698583e-17], 'true': [0.0021415695009044935, 0.0005020281275047344], 'true,true': [0.0021415695009044935, nan], 'true,true,true': [0.0021415695009044935, nan], 'true,false': [0.0005020281275047344, nan]}, {'': [0.0203923429084084, -1.1312427376559255e-16], 'true': [0.001736655313579381, 0.00046164224498239186], 'true,true': [0.001736655313579381, nan], 'true,false': [0.00046164224498239186, nan]}, {'': [0.01622713014604683, -7.877756418209806e-17], 'true': [0.001366064433377096, 0.00040545036784571213], 'true,true': [0.001366064433377096, nan], 'true,false': [0.00040545036784571213, nan]}, {'': [0.011727712019393656, -1.2718047793828085e-16], 'true': [0.011727712019393656, nan], 'true,true': [0.0010759863209742289, 0.00031121227378298847]}, {'': [0.00797799121401757, 7.784535398039495e-17], 'true': [0.00797799121401757, nan], 'true,true': [0.00797799121401757, nan], 'true,true,true': [0.000857986424036768, 0.00028441055329630707]}, {'': [0.00606491424172867, 0.005736926056782574], 'true': [-9.979532805619384e-18, 0.0001221985319657326], 'false': [0.005736926056782574, nan], 'false,true': [0.005736926056782574, nan], 'true,false': [0.00012219853196573704, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048827;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.12544463852839233;  // std dev = 0.000, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360626;  // std dev = 5.05e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.11231637819360589;  // std dev = 0.000, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.32998923825285476;  // std dev = 0.194, 172.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=143 */
%   | | else return 0.3423154190974198;  // std dev = 0.183, 214.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783505;  // std dev = 4.49e-07, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3385211849685783;  // std dev = 0.025, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.13676961234474375;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926135;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26729117061913277;  // std dev = 0.022, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12143116193923063;  // std dev = 0.005, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.08518475138839678;  // std dev = 1.43e-07, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2182832150021273;  // std dev = 0.019, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10905305053440317;  // std dev = 0.005, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.07877675473109201;  // std dev = 0.000, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.18436137145039416;  // std dev = 1.30e-07, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.09824516278829586;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.18251506248774196;  // std dev = 1.86e-07, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | | else return -0.09934259746823747;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333703;  // std dev = 1.15e-07, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.12257624779676435;  // std dev = 0.087, 167.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=143 */
%   | | else return 0.11998356713403009;  // std dev = 0.088, 215.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420364;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.14196224100615848;  // std dev = 0.008, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.09184096033145052;  // std dev = 0.127, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( actor(B) )
%   | then return -0.06419184008202532;  // std dev = 2.45e-07, 538.000 (wgt'ed) examples reached here.  /* #neg=538 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.1424023762733202;  // std dev = 0.003, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.06419184008202612;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09515743094670434;  // std dev = 0.068, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064674
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.006 seconds
Total inference time: 1.736 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067355
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.31 seconds
Refined model CLL: -0.067355


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064674
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.041 seconds
Total inference time: 1.736 seconds
AUC ROC: 1.0
Total revision time: 16.041
Best scored revision CLL: -0.067355


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064674, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.041, 'Inference time': 1.736, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067669, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.199, 'Inference time': 2.126}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.49780757338939663;  // std dev = 1.427, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05356029047889595;  // std dev = 2.115, 125.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4551172154392602;  // std dev = 0.413, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1650445771770433;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1070861938940835;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34746138729906506;  // std dev = 0.393, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1259623421994081;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09726918344513366;  // std dev = 4.47e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2740642322816703;  // std dev = 0.354, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11893351773286502;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08905637868173251;  // std dev = 5.67e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22346566951587846;  // std dev = 0.315, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11457226221669752;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08209115968625741;  // std dev = 4.71e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18737613732143282;  // std dev = 0.035, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.09727949318769512;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07611382851493405;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16069162279264876;  // std dev = 0.251, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.0905279918829547;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07093117778575991;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12745996920063;  // std dev = 4.71e-08, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( movie(E, B) )
%   | | then return -0.08786917950122657;  // std dev = 0.034, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04450939445187322;  // std dev = 0.854, 137.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067813
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.334 seconds
Total inference time: 1.876 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.911 seconds
Parameter learned model CLL: -0.068895


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 64], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [8.43e-08, 0, 64], 'true,false,true,true': [5.27e-09, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 107, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.427, 5, 53], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.115, 114, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.413, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.061, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.393, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.028, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.47e-08, 115, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.354, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.076, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.67e-08, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.315, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.044, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 64], 'true,true,false': [0.02, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.251, 0, 64], 'true,true,true,false': [0.049, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 97, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [4.71e-08, 0, 53], 'true,false,true': [0.034, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.854, 126, 11], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12515555555555466, 2.590520390792032e-17], 'true': [-8.881784197001252e-16, -1.0092936587501423e-17], 'true,false': [-1.0092936587501423e-17, nan]}, {'': [0.08343450839622259, 5.602994703715743e-17], 'true': [1.1102230246251565e-16, 2.7755575615628915e-18], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.03511804115993018, 0.035778152196674025], 'true': [0.03511804115993018, nan], 'true,true': [0.03511804115993018, nan], 'true,true,true': [0.03511804115993018, nan]}, {'': [0.043963685428237004, -3.172065784643304e-17], 'true': [0.043963685428237004, nan], 'true,true': [0.0026705123352651072, 0.00041989677409681427], 'true,true,true': [0.0026705123352651072, nan], 'true,true,false': [0.00041989677409681427, nan]}, {'': [0.03196247615421838, 1.7377403863698104e-17], 'true': [0.0024147038418378536, 0.0008095192359021952], 'true,true': [0.0024147038418378536, nan], 'true,true,true': [0.0024147038418378536, nan], 'true,false': [0.0008095192359021952, nan]}, {'': [0.0198258119164821, 2.6830389761774617e-17], 'true': [0.001962345755977757, 0.0005760113294511343], 'true,true': [0.001962345755977757, nan], 'true,false': [0.0005760113294511343, nan]}, {'': [0.011579574437019537, 1.4512719276145838e-17], 'true': [0.0015496572121036362, 0.0002780526585106437], 'true,true': [0.0015496572121036362, nan], 'true,false': [0.0002780526585106437, nan]}, {'': [0.00834365477036853, -1.731540497121804e-17], 'true': [0.00834365477036853, nan], 'true,true': [0.001225428470780221, 0.00038451064570715107]}, {'': [0.00713823078246734, -2.1746636564822654e-17], 'true': [0.00713823078246734, nan], 'true,true': [0.00713823078246734, nan], 'true,true,true': [0.0009805815320745592, 0.00030049607649088213]}, {'': [0.00661715911526688, 0.005319496614293972], 'true': [4.1895208476421005e-17, 0.00010245921378488545], 'false': [0.005319496614293972, nan], 'false,true': [0.005319496614293972, nan], 'true,false': [0.00010245921378488292, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360621;  // std dev = 8.94e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3759847910666182;  // std dev = 0.141, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.35124423348007866;  // std dev = 0.173, 47.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783644;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33334368113552065;  // std dev = 0.021, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1400567874608141;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926105;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26377593029411245;  // std dev = 0.018, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12370911830501681;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839679;  // std dev = 5.05e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21581833147140264;  // std dev = 0.016, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11097415358233823;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109164;  // std dev = 5.27e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17918021111051313;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.10170999812639221;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.18284784416374492;  // std dev = 5.16e-08, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.09947174496934032;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1345539987865481;  // std dev = 0.067, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1570929788623081;  // std dev = 2.58e-08, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.0909095405410114;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5.67e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1374391560952088;  // std dev = 0.000558, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else return -0.07833391330686654;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), actor(A) )
%   | then return 0.10026073840900923;  // std dev = 0.087, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.004 seconds
Total inference time: 1.463 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066946
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.359 seconds
Refined model CLL: -0.066946


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.6080000000000005 seconds
Total inference time: 1.463 seconds
AUC ROC: 1.0
Total revision time: 7.6080000000000005
Best scored revision CLL: -0.066946


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06464, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.6080000000000005, 'Inference time': 1.463, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067813, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.334, 'Inference time': 1.876}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4685133876484118;  // std dev = 2.491, 123.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=107 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0633529717646809;  // std dev = 3.015, 300.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4613164538453327;  // std dev = 0.565, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1512432049264711;  // std dev = 0.130, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10615342648310289;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3516596248208341;  // std dev = 0.538, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13162615206087175;  // std dev = 0.025, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09649398421367188;  // std dev = 2.11e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27686657069283205;  // std dev = 0.486, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11479002063936332;  // std dev = 0.114, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0884026788447619;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22539263260822678;  // std dev = 0.431, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10435046998987096;  // std dev = 0.083, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08153295243745139;  // std dev = 8.82e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18875281843835479;  // std dev = 0.034, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.09103959497257161;  // std dev = 0.021, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07563193494910264;  // std dev = 7.15e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1617110887853182;  // std dev = 0.343, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.09040198936279274;  // std dev = 0.089, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07051117005045174;  // std dev = 9.19e-08, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12877484827801364;  // std dev = 4.94e-08, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( movie(E, B) )
%   | | then return -0.08567181326594552;  // std dev = 0.056, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04110453267728978;  // std dev = 1.192, 238.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067687
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.768 seconds
Total inference time: 2.247 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068731
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.504 seconds
Parameter learned model CLL: -0.068731


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 129], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 240, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 129], 'true,false,true,true': [0.0, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 230, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.491, 16, 107], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.015, 278, 22]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.565, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.13, 22, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 220, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.538, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 238, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.486, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.114, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.431, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.083, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.82e-08, 221, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 129], 'true,true,false': [0.021, 21, 0], 'true,false': [0.0, 0, 0], 'false': [7.15e-08, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.343, 0, 129], 'true,true,true,false': [0.089, 27, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.19e-08, 243, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [4.94e-08, 0, 107], 'true,false,true': [0.056, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.192, 216, 22], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10288046537812419, -2.0354088784794536e-16], 'true': [4.40646657835721e-15, -3.2653618371328133e-18], 'true,false': [-3.2653618371328133e-18, nan]}, {'': [0.08885618711355318, -6.178632484870436e-17], 'true': [-1.7625866313428842e-15, -2.523234146875356e-18], 'true,false': [-2.523234146875356e-18, nan], 'true,false,true': [-2.523234146875356e-18, nan]}, {'': [0.050446836170183716, 0.03029460986438685], 'true': [0.050446836170183716, nan], 'true,true': [0.050446836170183716, nan], 'true,true,true': [0.050446836170183716, nan]}, {'': [0.048926476578998075, -6.45947941600091e-17], 'true': [0.048926476578998075, nan], 'true,true': [0.0024713290542699717, 0.0007624080450270198], 'true,true,true': [0.0024713290542699717, nan], 'true,true,false': [0.0007624080450270198, nan]}, {'': [0.035397626682865495, 1.865921049790179e-18], 'true': [0.0022477071666592496, 0.0006401694853116911], 'true,true': [0.0022477071666592496, nan], 'true,true,true': [0.0022477071666592496, nan], 'true,false': [0.0006401694853116911, nan]}, {'': [0.021336328646308182, -6.099079276910731e-17], 'true': [0.0018280910059241963, 0.0005682789533462105], 'true,true': [0.0018280910059241963, nan], 'true,false': [0.0005682789533462105, nan]}, {'': [0.011486638217202824, 3.5165435169122604e-17], 'true': [0.00144228049075059, 0.0004636961319034664], 'true,true': [0.00144228049075059, nan], 'true,false': [0.0004636961319034664, nan]}, {'': [0.010465211271259846, 2.1824897065280855e-17], 'true': [0.010465211271259846, nan], 'true,true': [0.001138947683986287, 0.0004310528065246677]}, {'': [0.009899827839500115, 3.4723024638482264e-17], 'true': [0.009899827839500115, nan], 'true,true': [0.009899827839500115, nan], 'true,true,true': [0.0009101272901719248, 0.00029055820963827013]}, {'': [0.006720837513578735, 0.005972892584843572], 'true': [2.2827015459582657e-17, 0.00013619893523534248], 'false': [0.005972892584843572, nan], 'false,true': [0.005972892584843572, nan], 'true,false': [0.00013619893523533888, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048843;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839166;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360675;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2.49e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09269127618926057;  // std dev = 5.77e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 7.45e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2.09e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07877675473109148;  // std dev = 7.30e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527758;  // std dev = 3.65e-08, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527794;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333675;  // std dev = 1.03e-07, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.10698437479617987;  // std dev = 0.090, 58.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=46 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367122;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.50e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.135420072616201;  // std dev = 0.025, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.06570888064089273;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13940687140359426;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.07556964427352532;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.061287827333454274;  // std dev = 0.393, 273.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.283 seconds
Total inference time: 1.63 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064851
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.703 seconds
Refined model CLL: -0.064851


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.258 seconds
Total inference time: 1.63 seconds
AUC ROC: 1.0
Total revision time: 9.258
Best scored revision CLL: -0.064851


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063769, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.258, 'Inference time': 1.63, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067687, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.768, 'Inference time': 2.247}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.89e-09, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048757;  // std dev = 2.21e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.487847949842249;  // std dev = 2.686, 178.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=160 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05304427451748035;  // std dev = 3.716, 383.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4575748114479142;  // std dev = 0.712, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15294734942743773;  // std dev = 0.162, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10713554469540378;  // std dev = 2.84e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3491320229863038;  // std dev = 0.677, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12546937143999917;  // std dev = 0.028, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0973101680298142;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2751838687707458;  // std dev = 0.610, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12501281185959873;  // std dev = 0.104, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0890909182046886;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22423826150932402;  // std dev = 0.542, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11230475034272919;  // std dev = 0.119, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0821206378436975;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18792970936667186;  // std dev = 0.035, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.09390438077109255;  // std dev = 0.021, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0761392647346643;  // std dev = 1.81e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16110254645963862;  // std dev = 0.431, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.08452664517557348;  // std dev = 0.121, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07095333830220342;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12779116044384156;  // std dev = 1.15e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   | else if ( movie(E, B) )
%   | | then return -0.08948690274552284;  // std dev = 0.050, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04327736372970016;  // std dev = 1.490, 396.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067936
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.405 seconds
Total inference time: 1.919 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069013
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.366 seconds
Parameter learned model CLL: -0.069013


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 194], 'true,false,true': [5.89e-09, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.21e-07, 357, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 194], 'true,false,true,true': [0.0, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 352, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.686, 18, 160], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.716, 349, 34]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.712, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.162, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.84e-07, 367, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.677, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.028, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 346, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.61, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.104, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 362, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.542, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.119, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 329, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 194], 'true,true,false': [0.021, 30, 0], 'true,false': [0.0, 0, 0], 'false': [1.81e-07, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.431, 0, 194], 'true,true,true,false': [0.121, 39, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 382, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.15e-07, 0, 160], 'true,false,true': [0.05, 28, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.49, 362, 34], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1294788428901107, 1.3683421031794647e-16], 'true': [6.15315358802561e-15, 3.489272363107635e-17], 'true,false': [3.489272363107635e-17, nan]}, {'': [0.07656144534903939, -1.084990683156403e-16], 'true': [-3.516087764586063e-15, -4.11193712824132e-18], 'true,false': [-4.11193712824132e-18, nan], 'true,false,true': [-4.11193712824132e-18, nan]}, {'': [0.04052218732275959, 0.036061782755691905], 'true': [0.04052218732275959, nan], 'true,true': [0.04052218732275959, nan], 'true,true,true': [0.04052218732275959, nan]}, {'': [0.047661769849940604, 2.2022952641065775e-16], 'true': [0.047661769849940604, nan], 'true,true': [0.0026110789131204657, 0.0008212388293588405], 'true,true,true': [0.0026110789131204657, nan], 'true,true,false': [0.0008212388293588405, nan]}, {'': [0.03349250709002847, -5.390678269856251e-17], 'true': [0.002363172140585894, 0.0007967112863781831], 'true,true': [0.002363172140585894, nan], 'true,true,true': [0.002363172140585894, nan], 'true,false': [0.0007967112863781831, nan]}, {'': [0.018432168665995393, -1.0182155916451712e-16], 'true': [0.0019191606539240558, 0.0004149206165593572], 'true,true': [0.0019191606539240558, nan], 'true,false': [0.0004149206165593572, nan]}, {'': [0.018120524599796007, -1.3498152275077891e-18], 'true': [0.0015139014858320421, 0.0003317302639680519], 'true,true': [0.0015139014858320421, nan], 'true,false': [0.0003317302639680519, nan]}, {'': [0.01030572127341946, 9.078066720691888e-17], 'true': [0.01030572127341946, nan], 'true,true': [0.0011958653973691627, 0.00042367552229302847]}, {'': [0.009267628755763003, -4.475768214457437e-17], 'true': [0.009267628755763003, nan], 'true,true': [0.009267628755763003, nan], 'true,true,true': [0.0009560179720382795, 0.00037763844927758873]}, {'': [0.005997246424116777, 0.005608522644867319], 'true': [8.326672684688674e-17, 8.870961320299563e-05], 'false': [0.005608522644867319, nan], 'false,true': [0.005608522644867319, nan], 'true,false': [8.870961320299861e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1418510649004876;  // std dev = 2.13e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839216;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.11231637819360651;  // std dev = 0.000, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 1.25e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.09269127618926058;  // std dev = 1.33e-07, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839678;  // std dev = 1.05e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109147;  // std dev = 2.98e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527722;  // std dev = 8.43e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527744;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333702;  // std dev = 9.66e-08, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1183395058366686;  // std dev = 0.080, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | else return 0.12347124745483486;  // std dev = 0.075, 136.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=118 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420312;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1376311025140828;  // std dev = 0.004, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   | else return -0.07393535178626996;  // std dev = 0.027, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13790672392980724;  // std dev = 0.002, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07656459999060795;  // std dev = 0.000599, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06419184008202607;  // std dev = 9.66e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064028
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.838 seconds
Total inference time: 1.436 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065233
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.22 seconds
Refined model CLL: -0.065233


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064028
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.829 seconds
Total inference time: 1.436 seconds
AUC ROC: 1.0
Total revision time: 11.829
Best scored revision CLL: -0.065233


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064028, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.829, 'Inference time': 1.436, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067936, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.405, 'Inference time': 1.919}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.97e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004873;  // std dev = 2.67e-07, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47811387964579954;  // std dev = 3.322, 242.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=214 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05497720515487573;  // std dev = 4.282, 524.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.459430839491446;  // std dev = 0.808, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1467542200870738;  // std dev = 0.200, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10695078570452665;  // std dev = 0.000, 529.000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3503757599802007;  // std dev = 0.769, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13362058566680227;  // std dev = 0.025, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.097156715125846;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27600535348850774;  // std dev = 0.693, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12027144968655887;  // std dev = 0.137, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0889615856130552;  // std dev = 0.000, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22479754929770251;  // std dev = 0.616, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1093207536795836;  // std dev = 0.127, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08201024928488851;  // std dev = 1.48e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18832562212511209;  // std dev = 0.034, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.09091520768226703;  // std dev = 0.021, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07604400611405383;  // std dev = 1.40e-07, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16139324839113808;  // std dev = 0.489, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return -0.08626847210946567;  // std dev = 0.142, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07087034248582212;  // std dev = 0.000, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12830105762877844;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #pos=214 */
%   | else if ( movie(E, B) )
%   | | then return -0.08337164813047931;  // std dev = 0.074, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04369559300670473;  // std dev = 1.712, 537.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067864
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.232 seconds
Total inference time: 1.891 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.839 seconds
Parameter learned model CLL: -0.068954


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 259], 'true,false,true': [6.97e-09, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.67e-07, 479, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 259], 'true,false,true,true': [0.0, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 476, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.322, 28, 214], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.282, 479, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.808, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.2, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 529, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.769, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 470, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.693, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.137, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 499, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.616, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.127, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.48e-07, 457, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 259], 'true,true,false': [0.021, 53, 0], 'true,false': [0.0, 0, 0], 'false': [1.4e-07, 490, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.489, 0, 259], 'true,true,true,false': [0.142, 57, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 459, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 214], 'true,false,true': [0.074, 33, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.712, 492, 45], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1241272642115738, 1.4833877573279753e-16], 'true': [4.499189523731908e-15, 4.794144879063176e-17], 'true,false': [4.794144879063176e-17, nan]}, {'': [0.08423067639852808, -1.3061447348531254e-16], 'true': [-4.499189523731908e-15, -2.4370749321040022e-17], 'true,false': [-2.4370749321040022e-17, nan], 'true,false,true': [-2.4370749321040022e-17, nan]}, {'': [0.0456122472075933, 0.03499659969605931], 'true': [0.0456122472075933, nan], 'true,true': [0.0456122472075933, nan], 'true,true,true': [0.0456122472075933, nan]}, {'': [0.047897186005585034, -7.891188227959525e-17], 'true': [0.047897186005585034, nan], 'true,true': [0.0025197843653050837, 0.0009053219363690297], 'true,true,true': [0.0025197843653050837, nan], 'true,true,false': [0.0009053219363690297, nan]}, {'': [0.031584698202102586, -1.0015628988107795e-16], 'true': [0.0022844889567733753, 0.0006467467065782569], 'true,true': [0.0022844889567733753, nan], 'true,true,true': [0.0022844889567733753, nan], 'true,false': [0.0006467467065782569, nan]}, {'': [0.01920317151304189, -1.3883350047416786e-16], 'true': [0.0018556616932909088, 0.0004969007941218958], 'true,true': [0.0018556616932909088, nan], 'true,false': [0.0004969007941218958, nan]}, {'': [0.014716220266664849, 4.761569208458002e-17], 'true': [0.0014633834515212002, 0.0003839892881841035], 'true,true': [0.0014633834515212002, nan], 'true,false': [0.0003839892881841035, nan]}, {'': [0.01202884723841677, 3.9877398435515824e-17], 'true': [0.01202884723841677, nan], 'true,true': [0.0011554819512406605, 0.0004351137530841198]}, {'': [0.009888866084262033, -2.4187865460243063e-17], 'true': [0.009888866084262033, nan], 'true,true': [0.009888866084262033, nan], 'true,true,true': [0.0009233579307886163, 0.00035438029601019894]}, {'': [0.005208507747962276, 0.0054581389065948855], 'false': [0.0054581389065948855, nan], 'false,true': [0.0054581389065948855, nan], 'true': [-1.5771392499348017e-16, 0.0001656947516609514], 'true,false': [0.00016569475166095307, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048718;  // std dev = 2.92e-07, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.1254446385283923;  // std dev = 0.000, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.11231637819360599;  // std dev = 0.000, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.10159632948783621;  // std dev = 3.65e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783558;  // std dev = 3.13e-07, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.46e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.092691276189261;  // std dev = 1.37e-07, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839679;  // std dev = 1.37e-07, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.07877675473109147;  // std dev = 2.28e-07, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452781;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527816;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1527438580936714;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15274385809367144;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420343;  // std dev = 0.000, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 9.19e-08, 214.000 (wgt'ed) examples reached here.  /* #pos=214 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( actor(B) )
%   | then return -0.06419184008202532;  // std dev = 2.48e-07, 538.000 (wgt'ed) examples reached here.  /* #neg=538 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13400703000801134;  // std dev = 1.49e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06419184008202619;  // std dev = 4.56e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.597 seconds
Total inference time: 1.54 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.785 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.453 seconds
Total inference time: 1.54 seconds
AUC ROC: 1.0
Total revision time: 14.453
Best scored revision CLL: -0.064223


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.453, 'Inference time': 1.54, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067864, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.232, 'Inference time': 1.891}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.68e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.471630638172963;  // std dev = 3.849, 303.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=265 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.055879005584074444;  // std dev = 4.907, 698.000 (wgt'ed) examples reached here.  /* #neg=639 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46188259661388725;  // std dev = 0.911, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15078344902772944;  // std dev = 0.202, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10686468318277931;  // std dev = 2.09e-07, 564.000 (wgt'ed) examples reached here.  /* #neg=564 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3520873873048546;  // std dev = 0.867, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1280538963730232;  // std dev = 0.027, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0970851878254377;  // std dev = 3.29e-07, 577.000 (wgt'ed) examples reached here.  /* #neg=577 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2771785518694153;  // std dev = 0.781, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1220041770032285;  // std dev = 0.159, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.088901290949778;  // std dev = 2.25e-07, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22562305809611818;  // std dev = 0.693, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10803326724079254;  // std dev = 0.152, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08195877869472913;  // std dev = 0.000, 547.000 (wgt'ed) examples reached here.  /* #neg=547 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18892742016828648;  // std dev = 0.034, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.09532825179832617;  // std dev = 0.019, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07599958439361841;  // std dev = 4.71e-08, 539.000 (wgt'ed) examples reached here.  /* #neg=539 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16184695297202256;  // std dev = 0.550, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return -0.08780626390330154;  // std dev = 0.139, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07083163486203076;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12821895010593126;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( movie(E, B) )
%   | | then return -0.08491381382725854;  // std dev = 0.082, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04194653837769925;  // std dev = 1.946, 649.000 (wgt'ed) examples reached here.  /* #neg=590 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067882
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.167 seconds
Total inference time: 1.877 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069066
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.056 seconds
Parameter learned model CLL: -0.069066


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.87e-08, 0, 324], 'true,false,true': [7.68e-09, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 616, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 324], 'true,false,true,true': [0.0, 50, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 626, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.849, 38, 265], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.907, 639, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.911, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.202, 52, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.09e-07, 564, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.867, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.29e-07, 577, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.781, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.159, 59, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.25e-07, 616, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.693, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.152, 59, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 547, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 324], 'true,true,false': [0.019, 53, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 539, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.55, 0, 324], 'true,true,true,false': [0.139, 61, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 581, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 265], 'true,false,true': [0.082, 50, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.946, 590, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12081981861548624, -3.0855548996075777e-16], 'true': [3.333410365294297e-15, 5.86532918669894e-17], 'true,false': [5.86532918669894e-17, nan]}, {'': [0.08268009881563328, -2.752501811850228e-16], 'true': [-5.000115547941446e-15, -3.3306690738754695e-17], 'true,false': [-3.3306690738754695e-17, nan], 'true,false,true': [-3.3306690738754695e-17, nan]}, {'': [0.048897269739962425, 0.03449708678467568], 'true': [0.048897269739962425, nan], 'true,true': [0.048897269739962425, nan], 'true,true,true': [0.048897269739962425, nan]}, {'': [0.047046553053636565, 7.716443717252861e-17], 'true': [0.047046553053636565, nan], 'true,true': [0.002560287549131189, 0.0007819694567609046], 'true,true,true': [0.002560287549131189, nan], 'true,true,false': [0.0007819694567609046, nan]}, {'': [0.03032103771447656, 1.8779509047385663e-16], 'true': [0.002322483592056776, 0.000710374770275832], 'true,true': [0.002322483592056776, nan], 'true,true,true': [0.002322483592056776, nan], 'true,false': [0.000710374770275832, nan]}, {'': [0.02242607300832791, 8.218534078394016e-17], 'true': [0.001884715591715992, 0.00042951241394149035], 'true,true': [0.001884715591715992, nan], 'true,false': [0.00042951241394149035, nan]}, {'': [0.015823518302677794, -2.6791487979985496e-17], 'true': [0.0014843451014116035, 0.00039042880157426845], 'true,true': [0.0014843451014116035, nan], 'true,false': [0.00039042880157426845, nan]}, {'': [0.01082127690699787, 4.119565954082214e-18], 'true': [0.01082127690699787, nan], 'true,true': [0.0011705570876634733, 0.00037617522800427645]}, {'': [0.009146906846678723, -1.284113377879699e-16], 'true': [0.009146906846678723, nan], 'true,true': [0.009146906846678723, nan], 'true,true,true': [0.000934373811170436, 0.0003159894482392864]}, {'': [0.0060872654519245435, 0.005832550154777606], 'true': [-1.9439376733059345e-16, 0.00013460602529359546], 'false': [0.005832550154777606, nan], 'false,true': [0.005832550154777606, nan], 'true,false': [0.00013460602529359654, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048843;  // std dev = 0.000, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1254446385283923;  // std dev = 0.000, 589.000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.11231637819360614;  // std dev = 0.000, 648.000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830886;  // std dev = 4.54e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.33687515097055915;  // std dev = 0.188, 206.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=174 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783523;  // std dev = 4.01e-07, 582.000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3302794098337081;  // std dev = 0.160, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11586845821742775;  // std dev = 0.166, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926123;  // std dev = 0.000, 563.000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2617117861889206;  // std dev = 0.140, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10533524476610862;  // std dev = 0.133, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21437951485467255;  // std dev = 0.122, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09530177849874384;  // std dev = 0.129, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07877675473109186;  // std dev = 0.000, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1804870915569634;  // std dev = 0.107, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08836570219156008;  // std dev = 0.111, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333685;  // std dev = 1.74e-07, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1553164430593555;  // std dev = 0.095, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08298582045083581;  // std dev = 0.108, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420362;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1367536956125278;  // std dev = 0.075, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.07061047203882025;  // std dev = 0.107, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( actor(B) )
%   | then return -0.06419184008202523;  // std dev = 2.48e-07, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13270189454367437;  // std dev = 0.028, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.06419184008202612;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06762764455860969;  // std dev = 0.054, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.89 seconds
Total inference time: 1.388 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065117
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.863 seconds
Refined model CLL: -0.065117


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.975999999999999 seconds
Total inference time: 1.388 seconds
AUC ROC: 1.0
Total revision time: 15.975999999999999
Best scored revision CLL: -0.065117


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064191, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.975999999999999, 'Inference time': 1.388, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067882, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.167, 'Inference time': 1.877}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5211262923903924;  // std dev = 0.920, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09077822287296462;  // std dev = 1.138, 93.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4372478148222216;  // std dev = 0.253, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17564021298290522;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10357915188628197;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3347654686980437;  // std dev = 0.242, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.15163821947227682;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09434902315665995;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2651581168729356;  // std dev = 0.220, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1331432821379161;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08658987440111626;  // std dev = 3.65e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21705637293031077;  // std dev = 0.197, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11851263115742143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07998197424276408;  // std dev = 4.08e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1826088281380462;  // std dev = 0.028, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.06082458124984808;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07429073636867677;  // std dev = 2.58e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15703365645342116;  // std dev = 0.159, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.10102126525960804;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06934047658623761;  // std dev = 5.32e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1309461526767549;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( movie(E, B) )
%   | | then return -0.08540648153761973;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05370017607941739;  // std dev = 0.479, 75.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069807
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.794 seconds
Total inference time: 2.088 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066023
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.958 seconds
Parameter learned model CLL: -0.066023


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [3.94e-08, 0, 40], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 40], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 69, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [0.92, 2, 37], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.138, 90, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.253, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.242, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 67, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.22, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.65e-08, 82, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.197, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.08e-08, 87, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.028, 0, 40], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 72, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.159, 0, 40], 'true,true,true,false': [0.0, 6, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.32e-08, 92, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 37], 'true,false,true': [0.024, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.479, 72, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.09876543209876651, 7.401486830834377e-17], 'true': [1.5099033134902129e-15, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.04633119604965933, -3.539841527790354e-17], 'true': [-8.881784197001252e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0216891684819782, 0.013916764038482573], 'true': [0.0216891684819782, nan], 'true,true': [0.0216891684819782, nan], 'true,true,true': [0.0216891684819782, nan]}, {'': [0.025865414749541106, -3.34404525489505e-17], 'true': [0.025865414749541106, nan], 'true,true': [0.0015984556492317336, 0.0], 'true,true,true': [0.0015984556492317336, nan], 'true,true,false': [0.0, nan]}, {'': [0.01671398636586881, 0.0], 'true': [0.001461357585237577, 4.625929269271485e-18], 'true,true': [0.001461357585237577, nan], 'true,true,true': [0.001461357585237577, nan], 'true,false': [4.625929269271485e-18, nan]}, {'': [0.00495427525289047, 1.624716621402668e-17], 'true': [0.001208766171920017, 0.0], 'true,true': [0.001208766171920017, nan], 'true,false': [0.0, nan]}, {'': [0.00362716978173598, 1.914177628664063e-17], 'true': [0.0009713476481224836, 0.0], 'true,true': [0.0009713476481224836, nan], 'true,false': [0.0, nan]}, {'': [0.002170982807836918, 9.25185853854297e-18], 'true': [0.002170982807836918, nan], 'true,true': [0.0007798957973934705, 0.0]}, {'': [0.008102673026477422, 3.077248600863206e-17], 'true': [0.008102673026477422, nan], 'true,true': [0.008102673026477422, nan], 'true,true,true': [0.000632116247364109, -2.3129646346357427e-18]}, {'': [0.0041346955314704465, 0.0030629515546789538], 'true': [-1.800361661554308e-17, 0.00013884611792683212], 'false': [0.0030629515546789538, nan], 'false,true': [0.0030629515546789538, nan], 'true,false': [0.00013884611792683386, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360626;  // std dev = 5.58e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5.27e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926107;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0851847513883968;  // std dev = 1.49e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253542;  // std dev = 5.96e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109164;  // std dev = 4.71e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936709;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3.33e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801112;  // std dev = 1.05e-08, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066772
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.563 seconds
Total inference time: 1.515 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063598
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.356 seconds
Refined model CLL: -0.063598


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066772
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.670999999999999 seconds
Total inference time: 1.515 seconds
AUC ROC: 1.0
Total revision time: 6.670999999999999
Best scored revision CLL: -0.063598


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066772, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.670999999999999, 'Inference time': 1.515, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069807, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.794, 'Inference time': 2.088}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048818;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839116;  // std dev = 6.99e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5136362608125407;  // std dev = 1.446, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08613273839204189;  // std dev = 1.603, 153.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43871990440141145;  // std dev = 0.351, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15104266699667443;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1040112825153462;  // std dev = 9.31e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33573974594365064;  // std dev = 0.335, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1538521398453321;  // std dev = 2.63e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09470965865103041;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26580022331328157;  // std dev = 0.305, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.13487165496034711;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08689507960254166;  // std dev = 3.94e-08, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21749368156232673;  // std dev = 0.273, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10983144592881902;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08024340676011185;  // std dev = 4.71e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18291847455772808;  // std dev = 0.027, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10878062688267118;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07451704184552096;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15726091523562433;  // std dev = 0.220, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.09342652162003931;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0695381915230035;  // std dev = 8.23e-08, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13133667551475087;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( movie(E, B) )
%   | | then return -0.08557139524891258;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05420357161819318;  // std dev = 0.675, 155.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069742
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.416 seconds
Total inference time: 1.845 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066115
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.353 seconds
Parameter learned model CLL: -0.066115


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 162, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.53e-07, 0, 81], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.99e-08, 137, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.446, 5, 75], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.603, 147, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.351, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.081, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-08, 149, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.335, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 158, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.305, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 172, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.273, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.064, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 146, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.027, 0, 81], 'true,true,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 139, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.22, 0, 81], 'true,true,true,false': [0.039, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.23e-08, 163, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 75], 'true,false,true': [0.023, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.675, 149, 6], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1052693761814749, -1.507710280355151e-16], 'true': [-7.894919286223335e-16, -1.0092936587501423e-17], 'true,false': [-1.0092936587501423e-17, nan]}, {'': [0.045838135164233344, 3.565679787117291e-17], 'true': [7.894919286223335e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan]}, {'': [0.02612111375191839, 0.016796783334822648], 'true': [0.02612111375191839, nan], 'true,true': [0.02612111375191839, nan], 'true,true,true': [0.02612111375191839, nan]}, {'': [0.02382391353352776, 5.811905766494108e-17], 'true': [0.02382391353352776, nan], 'true,true': [0.0015191450899665147, 0.0011059755631152486], 'true,true,true': [0.0015191450899665147, nan], 'true,true,false': [0.0011059755631152486, nan]}, {'': [0.031302635070693134, -1.686414720949605e-17], 'true': [0.0013887249021598239, 7.93016446160826e-18], 'true,true': [0.0013887249021598239, nan], 'true,true,true': [0.0013887249021598239, nan], 'true,false': [7.93016446160826e-18, nan]}, {'': [0.008292890139485089, 9.036699037646624e-18], 'true': [0.0011476883295629646, 0.0], 'true,true': [0.0011476883295629646, nan], 'true,false': [0.0, nan]}, {'': [0.011344618056355475, 1.5208534583906253e-17], 'true': [0.0009213593961116026, 0.0004050915993348142], 'true,true': [0.0009213593961116026, nan], 'true,false': [0.0004050915993348142, nan]}, {'': [0.006910308105923963, 0.0], 'true': [0.006910308105923963, nan], 'true,true': [0.0007391024935986109, -5.9476233462061954e-18]}, {'': [0.005703272527639031, 4.154822362094144e-17], 'true': [0.005703272527639031, nan], 'true,true': [0.005703272527639031, nan], 'true,true,true': [0.0005986005325801959, 0.000192801525045333]}, {'': [0.002763286378539989, 0.002940052597879728], 'false': [0.002940052597879728, nan], 'false,true': [0.002940052597879728, nan], 'true': [-3.848773152033876e-17, 0.00010404034187696393], 'true,false': [0.00010404034187696254, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048796;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283915;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360629;  // std dev = 8.82e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4059778082995073;  // std dev = 0.077, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else return 0.3349279160782417;  // std dev = 0.190, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783648;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3304169882699502;  // std dev = 0.071, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.13962286681649513;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09362049682132474;  // std dev = 0.103, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2618006604693463;  // std dev = 0.062, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12344542652506052;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08511236670160943;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21443918918588908;  // std dev = 0.054, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11069804374855652;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07871459574703656;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18052890256963647;  // std dev = 0.047, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10134009816038353;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07319230041535947;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.14560176617260795;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else return 0.1360383219607143;  // std dev = 0.074, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06837977392788033;  // std dev = 6.32e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1378161033296225;  // std dev = 0.041, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.10338278609572672;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.0641501903969417;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else return 0.13653689926320556;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.037 seconds
Total inference time: 1.738 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065355
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.653 seconds
Refined model CLL: -0.065355


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.459 seconds
Total inference time: 1.738 seconds
AUC ROC: 1.0
Total revision time: 8.459
Best scored revision CLL: -0.065355


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075491, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.459, 'Inference time': 1.738, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069742, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.416, 'Inference time': 1.845}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.49753564175148984;  // std dev = 2.116, 127.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=116 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0941892429463696;  // std dev = 1.613, 221.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4388631961622095;  // std dev = 0.351, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17225059952896019;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10326286491855631;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33563319648583717;  // std dev = 0.336, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14438922684700428;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09408491837806426;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26559568658635113;  // std dev = 0.306, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12562777678399614;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08636625598275276;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.217265752485474;  // std dev = 0.275, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1130410105393077;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07979034772659724;  // std dev = 8.30e-08, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18269710485093127;  // std dev = 0.022, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10668404882948292;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07412479724070892;  // std dev = 5.96e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1570564724511236;  // std dev = 0.222, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return -0.09693510137941343;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06919545515553216;  // std dev = 8.16e-08, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.133279352578711;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else if ( movie(E, B) )
%   | | then return -0.08877475276313675;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05737402939272969;  // std dev = 0.682, 226.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069179
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.673 seconds
Total inference time: 1.848 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065545
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.93 seconds
Parameter learned model CLL: -0.065545


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.14e-08, 0, 122], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 248, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 122], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.116, 11, 116], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.613, 215, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.351, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.336, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.016, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 243, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.306, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.051, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 220, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.275, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.047, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.3e-08, 206, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.022, 0, 122], 'true,true,false': [0.0, 11, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 250, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.222, 0, 122], 'true,true,true,false': [5.27e-09, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 263, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 116], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.682, 220, 6], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1024994749002351, -1.360918546314708e-16], 'true': [3.843919718046444e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.045676090594181346, -5.52729059470035e-17], 'true': [-1.3395477805313363e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03526822714260745, 0.011774583656399546], 'true': [0.03526822714260745, nan], 'true,true': [0.03526822714260745, nan], 'true,true,true': [0.03526822714260745, nan]}, {'': [0.009732085276791992, -7.591268544445516e-18], 'true': [0.009732085276791992, nan], 'true,true': [0.0010083571383545434, -4.625929269271485e-18], 'true,true,true': [0.0010083571383545434, nan], 'true,true,false': [-4.625929269271485e-18, nan]}, {'': [0.020914435416717753, -2.1930331350620375e-17], 'true': [0.0009264143340760257, 0.0002615383021909915], 'true,true': [0.0009264143340760257, nan], 'true,true,true': [0.0009264143340760257, nan], 'true,false': [0.0002615383021909915, nan]}, {'': [0.010528407146392041, -8.175278635876152e-17], 'true': [0.0007683663977979269, 0.0002906672990439014], 'true,true': [0.0007683663977979269, nan], 'true,false': [0.0002906672990439014, nan]}, {'': [0.008227232937260003, 3.3414479381922185e-17], 'true': [0.0006185035904740756, 0.0002165185484355653], 'true,true': [0.0006185035904740756, nan], 'true,false': [0.0002165185484355653, nan]}, {'': [0.006809236890839461, 1.4210854715202004e-17], 'true': [0.006809236890839461, nan], 'true,true': [0.0004971997187601625, -2.523234146875356e-18]}, {'': [0.004503259264519194, 2.5328281930611937e-17], 'true': [0.004503259264519194, nan], 'true,true': [0.004503259264519194, nan], 'true,true,true': [0.000403364043484156, 3.0839528461809902e-18]}, {'': [0.004189256089675337, 0.002059974458607358], 'true': [-8.80521709185469e-17, 0.0], 'false': [0.002059974458607358, nan], 'false,true': [0.002059974458607358, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048843;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839183;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360664;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3454149850407901;  // std dev = 0.180, 72.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=62 */
%   | | else return 0.37758205233937614;  // std dev = 0.138, 65.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3331037532486276;  // std dev = 0.039, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1407758963730839;  // std dev = 0.006, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09269127618926051;  // std dev = 6.83e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2636144407033619;  // std dev = 0.034, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12446887506258245;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2157058765458736;  // std dev = 0.030, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11087874326987941;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109144;  // std dev = 7.15e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18144836886874538;  // std dev = 0.026, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10076219467540963;  // std dev = 0.006, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333666;  // std dev = 1.30e-07, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15603810160199952;  // std dev = 0.023, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.09176967273184662;  // std dev = 0.005, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.66e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13654308133055726;  // std dev = 0.020, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else return -0.08508126447030129;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.05932005869331132;  // std dev = 0.487, 248.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.164 seconds
Total inference time: 1.695 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064773
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.849 seconds
Refined model CLL: -0.064773


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.616 seconds
Total inference time: 1.695 seconds
AUC ROC: 1.0
Total revision time: 9.616
Best scored revision CLL: -0.064773


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070748, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.616, 'Inference time': 1.695, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069179, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.673, 'Inference time': 1.848}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004879;  // std dev = 5.96e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.125444638528392;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5076748071077194;  // std dev = 2.229, 168.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=156 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09806704982598724;  // std dev = 1.748, 328.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43560920442510537;  // std dev = 0.389, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17370105265908362;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10290433341485544;  // std dev = 6.99e-08, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3333795049444891;  // std dev = 0.373, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.15016315908899966;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09378538836403298;  // std dev = 1.66e-07, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26404177123598965;  // std dev = 0.340, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12772967866465973;  // std dev = 0.053, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08611253325633692;  // std dev = 1.41e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21616119019905514;  // std dev = 0.305, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11803046070595123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07957284217882783;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1818831907526413;  // std dev = 0.021, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10628666417552599;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0739363863146977;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15643661075454499;  // std dev = 0.247, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.09442211478798425;  // std dev = 0.040, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06903074700838732;  // std dev = 1.17e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.133217075376945;  // std dev = 8.16e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( movie(E, B) )
%   | | then return -0.083145893904941;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.058377140665250474;  // std dev = 0.744, 316.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069057
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.96 seconds
Total inference time: 2.337 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065348
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.647 seconds
Parameter learned model CLL: -0.065348


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [8.02e-08, 0, 163], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 292, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 163], 'true,false,true,true': [0.0, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 293, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.229, 12, 156], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.748, 321, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.389, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [7.45e-09, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 307, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.373, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.66e-07, 304, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.34, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.053, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.41e-07, 310, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.305, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 304, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.021, 0, 163], 'true,true,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 301, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.247, 0, 163], 'true,true,true,false': [0.04, 19, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.17e-07, 331, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [8.16e-08, 0, 156], 'true,false,true': [0.036, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.744, 309, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0895577058087422, 1.2166827667125003e-17], 'true': [6.3643705166242106e-15, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.06949356596603012, -8.184579294164976e-17], 'true': [-2.7898610483832155e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.029568389988567118, 0.009310988316566569], 'true': [0.029568389988567118, nan], 'true,true': [0.029568389988567118, nan], 'true,true,true': [0.029568389988567118, nan]}, {'': [0.031064104781060236, 1.5911991232412668e-17], 'true': [0.031064104781060236, nan], 'true,true': [0.0009281809975681879, 3.469446951953614e-18], 'true,true,true': [0.0009281809975681879, nan], 'true,true,false': [3.469446951953614e-18, nan]}, {'': [0.01882394072120418, 9.057082569310487e-17], 'true': [0.0008528197041379339, 1.1102230246251566e-17], 'true,true': [0.0008528197041379339, nan], 'true,true,true': [0.0008528197041379339, nan], 'true,false': [1.1102230246251566e-17, nan]}, {'': [0.01117190704827012, 6.446456272017038e-17], 'true': [0.0007086041223129211, 0.00021770994137746712], 'true,true': [0.0007086041223129211, nan], 'true,false': [0.00021770994137746712, nan]}, {'': [0.00866145416410254, -2.921639538487254e-18], 'true': [0.0005716153217975035, -1.586032892321652e-17], 'true,true': [0.0005716153217975035, nan], 'true,false': [-1.586032892321652e-17, nan]}, {'': [0.0023907795960083876, -3.393372699850977e-17], 'true': [0.0023907795960083876, nan], 'true,true': [0.0004604223204305913, 0.0]}, {'': [0.0062278508848448684, 4.1591436572060244e-17], 'true': [0.0062278508848448684, nan], 'true,true': [0.0062278508848448684, nan], 'true,true,true': [0.00037417516254580925, 8.57524804834969e-05]}, {'': [0.0033318266371032395, 0.0017531409981020438], 'true': [4.2700885562506023e-17, 0.00010180676559641982], 'false': [0.0017531409981020438, nan], 'false,true': [0.0017531409981020438, nan], 'true,false': [0.00010180676559642196, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048774;  // std dev = 1.52e-07, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.12544463852839202;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360671;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783659;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.09269127618926049;  // std dev = 1.50e-07, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839678;  // std dev = 9.54e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109147;  // std dev = 3.94e-08, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.073246225763337;  // std dev = 9.31e-08, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367108;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.1352253760391862;  // std dev = 0.060, 101.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=93 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420308;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13518745571611665;  // std dev = 0.013, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.07422270679440131;  // std dev = 0.023, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(B), actor(A) )
%   | then return -0.06419184008202596;  // std dev = 1.16e-07, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | else if ( actor(A) )
%   | | then return 0.1348839176768899;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06419184008202615;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.545 seconds
Total inference time: 1.446 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.501 seconds
Refined model CLL: -0.063955


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.652999999999999 seconds
Total inference time: 1.446 seconds
AUC ROC: 1.0
Total revision time: 11.652999999999999
Best scored revision CLL: -0.063955


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067438, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.652999999999999, 'Inference time': 1.446, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069057, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.96, 'Inference time': 2.337}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048738;  // std dev = 2.84e-07, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4986763864211978;  // std dev = 2.710, 212.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09510805822092902;  // std dev = 2.084, 388.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43858446042350524;  // std dev = 0.454, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17241330809654443;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10317781395916865;  // std dev = 0.000, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33544433616351754;  // std dev = 0.436, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1444970781849205;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0940138782355502;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26546828982730997;  // std dev = 0.397, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12424688749651923;  // std dev = 0.101, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08630609059490339;  // std dev = 2.37e-07, 419.000 (wgt'ed) examples reached here.  /* #neg=419 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21717702201506092;  // std dev = 0.356, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11060015525600103;  // std dev = 0.064, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07973877838360002;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18263292273477244;  // std dev = 0.022, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10713202760140586;  // std dev = 1.86e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07408013201699591;  // std dev = 1.03e-07, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15700840615039238;  // std dev = 0.288, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return -0.09730724727106749;  // std dev = 1.29e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06915641356146578;  // std dev = 1.34e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1332395308319259;  // std dev = 1.93e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(E, B) )
%   | | then return -0.08908845682315489;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0578067190221931;  // std dev = 0.882, 404.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069167
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.601 seconds
Total inference time: 1.699 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065527
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.061 seconds
Parameter learned model CLL: -0.065527


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 204], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.84e-07, 386, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 204], 'true,false,true,true': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 391, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.71, 18, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.084, 378, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.454, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 409, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.436, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.016, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 365, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.397, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.101, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.37e-07, 419, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.356, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.064, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 374, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.022, 0, 204], 'true,true,false': [1.86e-09, 21, 0], 'true,false': [0.0, 0, 0], 'false': [1.03e-07, 383, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.288, 0, 204], 'true,true,true,false': [1.29e-08, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.34e-07, 381, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.93e-07, 0, 194], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.882, 394, 10], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.07450693937180977, 2.0938921293448549e-16], 'true': [5.712206307091002e-15, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.06500330913633937, -1.2720713939439133e-16], 'true': [-3.692035783851501e-15, -2.413528314402514e-18], 'true,false': [-2.413528314402514e-18, nan], 'true,false,true': [-2.413528314402514e-18, nan]}, {'': [0.03463721057427848, 0.011193573243461317], 'true': [0.03463721057427848, nan], 'true,true': [0.03463721057427848, nan], 'true,true,true': [0.03463721057427848, nan]}, {'': [0.017594448091971665, -8.469182975135668e-17], 'true': [0.017594448091971665, nan], 'true,true': [0.0010121419191297725, 0.0], 'true,true,true': [0.0010121419191297725, nan], 'true,true,false': [0.0, nan]}, {'': [0.013862733312544891, -9.490125580357503e-17], 'true': [0.000929964108096056, 0.00026336160824188464], 'true,true': [0.000929964108096056, nan], 'true,true,true': [0.000929964108096056, nan], 'true,false': [0.00026336160824188464, nan]}, {'': [0.01726979802364482, 1.335447265897563e-16], 'true': [0.0007714726335533434, 0.00035232444886884595], 'true,true': [0.0007714726335533434, nan], 'true,false': [0.00035232444886884595, nan]}, {'': [0.0066536442665477685, -4.7496172176477284e-17], 'true': [0.000621141989732203, 0.00031601877692002527], 'true,true': [0.000621141989732203, nan], 'true,false': [0.00031601877692002527, nan]}, {'': [0.007558004132148256, 2.782804448146606e-17], 'true': [0.007558004132148256, nan], 'true,true': [0.0004994195012370865, 3.96508223080413e-18]}, {'': [0.005191220586703232, 4.720633333051847e-17], 'true': [0.005191220586703232, nan], 'true,true': [0.005191220586703232, nan], 'true,true,true': [0.0004052328477964272, 9.25185853854297e-18]}, {'': [0.0029093278579893776, 0.0019276447293046536], 'true': [1.9228604962580032e-16, -4.270088556250602e-18], 'false': [0.0019276447293046536, nan], 'false,true': [0.0019276447293046536, nan], 'true,false': [-4.270088556250602e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048735;  // std dev = 2.98e-07, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839224;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360628;  // std dev = 0.000, 415.000 (wgt'ed) examples reached here.  /* #neg=415 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878358;  // std dev = 2.53e-07, 423.000 (wgt'ed) examples reached here.  /* #neg=423 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926047;  // std dev = 2.05e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.0851847513883968;  // std dev = 1.21e-07, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07877675473109146;  // std dev = 2.11e-07, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442033;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.134007030008011;  // std dev = 1.37e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(B) )
%   | then return -0.06419184008202557;  // std dev = 2.04e-07, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
%   | else if ( female(A) )
%   | | then return 0.1056929057094347;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.09436725599000396;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066556
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.876 seconds
Total inference time: 1.757 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063594
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.528 seconds
Refined model CLL: -0.063594


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066556
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.066 seconds
Total inference time: 1.757 seconds
AUC ROC: 1.0
Total revision time: 13.066
Best scored revision CLL: -0.063594


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066556, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.066, 'Inference time': 1.757, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069167, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.601, 'Inference time': 1.699}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.49780757338939663;  // std dev = 1.427, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.057652288081568435;  // std dev = 2.394, 171.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4604059827811919;  // std dev = 0.459, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15917061024135928;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10669555085714325;  // std dev = 4.47e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35131202258131294;  // std dev = 0.436, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13132175473571747;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0969446594348743;  // std dev = 1.83e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27680565598424084;  // std dev = 0.393, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11920459574353155;  // std dev = 0.099, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08878281203929038;  // std dev = 3.80e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2254579413549515;  // std dev = 0.348, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11075220416657561;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08185762497379122;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18886861845645517;  // std dev = 0.038, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09323046832913945;  // std dev = 0.021, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07591227300180325;  // std dev = 5.27e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16184321911963276;  // std dev = 0.276, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.08775887772766862;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07075554645659811;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12563430464588082;  // std dev = 5.16e-08, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( movie(E, B) )
%   | | then return -0.08263271062625518;  // std dev = 0.052, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0403685640230693;  // std dev = 0.947, 145.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068611
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.141 seconds
Total inference time: 1.473 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069012
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.909 seconds
Parameter learned model CLL: -0.069012


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.427, 5, 53], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.394, 157, 14]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.459, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.083, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.47e-08, 130, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.436, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-08, 103, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.393, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.099, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.8e-08, 118, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.348, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.06, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.038, 0, 67], 'true,true,false': [0.021, 13, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-08, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.276, 0, 67], 'true,true,true,false': [0.057, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [5.16e-08, 0, 53], 'true,false,true': [0.052, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.947, 131, 14], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13609374999999896, 6.232831015439475e-17], 'true': [-9.544603913195376e-16, -1.2810265668751807e-17], 'true,false': [-1.2810265668751807e-17, nan]}, {'': [0.0745279721288961, -3.52451753849256e-18], 'true': [3.1815346377317917e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03511804115993018, 0.03351011081435592], 'true': [0.03511804115993018, nan], 'true,true': [0.03511804115993018, nan], 'true,true,true': [0.03511804115993018, nan]}, {'': [0.046206980907235566, 1.5372318802502168e-17], 'true': [0.046206980907235566, nan], 'true,true': [0.003146881579781885, 0.0006884079643442564], 'true,true,true': [0.003146881579781885, nan], 'true,true,false': [0.0006884079643442564, nan]}, {'': [0.037275501636102, 3.233659295024728e-18], 'true': [0.0028414648620246822, 0.0007556302657280727], 'true,true': [0.0028414648620246822, nan], 'true,true,true': [0.0028414648620246822, nan], 'true,false': [0.0007556302657280727, nan]}, {'': [0.027266449706730117, 1.2231270610277148e-17], 'true': [0.0023002726943905792, 0.0005766542901603663], 'true,true': [0.0023002726943905792, nan], 'true,false': [0.0005766542901603663, nan]}, {'': [0.013442581175115782, -8.921435019309294e-18], 'true': [0.0018089486245970756, 0.0003972419798271364], 'true,true': [0.0018089486245970756, nan], 'true,false': [0.0003972419798271364, nan]}, {'': [0.012097628711160057, 2.4781763942525817e-17], 'true': [0.012097628711160057, nan], 'true,true': [0.0014250721233118, 0.0004541815672366872]}, {'': [0.007549381090946351, -3.34981085016211e-17], 'true': [0.007549381090946351, nan], 'true,true': [0.007549381090946351, nan], 'true,true,true': [0.0011366428717302438, 0.00036522223371682205]}, {'': [0.007496955270487454, 0.00618951479680812], 'true': [5.02742501717052e-17, 0.0001790952928375426], 'false': [0.00618951479680812, nan], 'false,true': [0.00618951479680812, nan], 'true,false': [0.00017909529283754167, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048788;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839122;  // std dev = 6.66e-08, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360622;  // std dev = 8.16e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926093;  // std dev = 5.96e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839679;  // std dev = 4.47e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109164;  // std dev = 5.37e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1187175756416903;  // std dev = 0.080, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 6.32e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13574206558173996;  // std dev = 0.014, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else return -0.06724223138197426;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13800515546051684;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.0943672559900037;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064012
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.955 seconds
Total inference time: 1.295 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064853
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.447 seconds
Refined model CLL: -0.064853


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064012
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.452 seconds
Total inference time: 1.295 seconds
AUC ROC: 1.0
Total revision time: 7.452
Best scored revision CLL: -0.064853


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064012, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.452, 'Inference time': 1.295, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068611, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.141, 'Inference time': 1.473}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048816;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.457025557026455;  // std dev = 2.688, 129.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=110 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06128329679692666;  // std dev = 3.143, 314.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4646811388030703;  // std dev = 0.572, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15704566701482242;  // std dev = 0.096, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10634996747403741;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35397422032139014;  // std dev = 0.546, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12445408616825544;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0966574129319588;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2784291667377755;  // std dev = 0.492, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11402039590312725;  // std dev = 0.104, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08854055695819904;  // std dev = 6.14e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22647685348968974;  // std dev = 0.436, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1052731963516828;  // std dev = 0.091, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0816507366813415;  // std dev = 9.19e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1895333867381338;  // std dev = 0.033, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10061627208618763;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07573365237291277;  // std dev = 5.37e-08, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16229304642852369;  // std dev = 0.346, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.08621329544406559;  // std dev = 0.075, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07059985207017037;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12897683959670886;  // std dev = 1.02e-07, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else if ( movie(E, B) )
%   | | then return -0.08248037726219733;  // std dev = 0.054, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0443472324616936;  // std dev = 1.244, 297.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068186
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.758 seconds
Total inference time: 1.599 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068475
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.398 seconds
Parameter learned model CLL: -0.068475


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 265, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 262, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.688, 19, 110], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.143, 290, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.572, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.096, 19, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 253, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.546, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 275, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.492, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.104, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.14e-08, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.436, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.091, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.19e-08, 244, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 134], 'true,true,false': [0.016, 11, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 227, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.346, 0, 134], 'true,true,true,false': [0.075, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 259, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.02e-07, 0, 110], 'true,false,true': [0.054, 20, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.244, 273, 24], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.09528888888889364, -1.005485003434104e-16], 'true': [4.772301956597688e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.08926115588533495, -6.10198914297796e-17], 'true': [-1.908920782639075e-15, -2.413528314402514e-18], 'true,false': [-2.413528314402514e-18, nan], 'true,false,true': [-2.413528314402514e-18, nan]}, {'': [0.05598958677093207, 0.03146953604515177], 'true': [0.05598958677093207, nan], 'true,true': [0.05598958677093207, nan], 'true,true,true': [0.05598958677093207, nan]}, {'': [0.044238447364962304, -1.000517192152315e-16], 'true': [0.044238447364962304, nan], 'true,true': [0.002440512510174291, 0.0004818851159868114], 'true,true,true': [0.002440512510174291, nan], 'true,true,false': [0.0004818851159868114, nan]}, {'': [0.02788782718755871, -1.6148698540002277e-18], 'true': [0.002220999346997726, 0.0006883766000070097], 'true,true': [0.002220999346997726, nan], 'true,true,true': [0.002220999346997726, nan], 'true,false': [0.0006883766000070097, nan]}, {'': [0.019043847617925574, 1.613144565694672e-17], 'true': [0.0018037315233856168, 0.0005381297689878411], 'true,true': [0.0018037315233856168, nan], 'true,false': [0.0005381297689878411, nan]}, {'': [0.013726682375147965, 3.45807171604557e-17], 'true': [0.001420363919351387, 0.00041417962413455576], 'true,true': [0.001420363919351387, nan], 'true,false': [0.00041417962413455576, nan]}, {'': [0.006955534150643378, 1.2716210854737476e-17], 'true': [0.006955534150643378, nan], 'true,true': [0.0011196416012870503, 0.00024707828707040946]}, {'': [0.007271611656484182, -6.258400061593546e-17], 'true': [0.007271611656484182, nan], 'true,true': [0.007271611656484182, nan], 'true,true,true': [0.0008933233912682448, 0.00031216205135146176]}, {'': [0.0058429899585683885, 0.005214646629218815], 'true': [9.487360392251337e-17, 0.00014438087078177676], 'false': [0.005214646629218815, nan], 'false,true': [0.005214646629218815, nan], 'true,false': [0.0001443808707817823, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1418510649004882;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.12544463852839177;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360683;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926094;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.09269127618926054;  // std dev = 6.99e-08, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07877675473109147;  // std dev = 7.30e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333668;  // std dev = 1.28e-07, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367105;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15274385809367116;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420278;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080111;  // std dev = 4.71e-08, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else return -0.06419184008202616;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.69e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.596 seconds
Total inference time: 1.326 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.727 seconds
Refined model CLL: -0.064052


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.479000000000001 seconds
Total inference time: 1.326 seconds
AUC ROC: 1.0
Total revision time: 9.479000000000001
Best scored revision CLL: -0.064052


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.479000000000001, 'Inference time': 1.326, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068186, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.758, 'Inference time': 1.599}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.56e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048738;  // std dev = 2.89e-07, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839133;  // std dev = 1.83e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4917775972281981;  // std dev = 2.694, 189.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=171 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.061709612269067134;  // std dev = 3.574, 409.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=31 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4541549123056688;  // std dev = 0.704, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15036237679781633;  // std dev = 0.178, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10630945739894619;  // std dev = 8.43e-08, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3467107238236583;  // std dev = 0.671, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1341984420215449;  // std dev = 0.026, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09662373166890854;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2735003627086219;  // std dev = 0.606, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12418389098215822;  // std dev = 0.115, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08851214426069741;  // std dev = 1.07e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22303865595851285;  // std dev = 0.539, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10499469230658941;  // std dev = 0.123, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08162646682428269;  // std dev = 1.71e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18704576892543845;  // std dev = 0.034, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09986115516921987;  // std dev = 0.019, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07571269470407281;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1604300367273809;  // std dev = 0.430, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.09030286116666002;  // std dev = 0.092, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07058158139047063;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1285007341528089;  // std dev = 1.55e-07, 171.000 (wgt'ed) examples reached here.  /* #pos=171 */
%   | else if ( movie(E, B) )
%   | | then return -0.08392426097974956;  // std dev = 0.072, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.045376660535073124;  // std dev = 1.445, 411.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068187
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.461 seconds
Total inference time: 1.653 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.486 seconds
Parameter learned model CLL: -0.068371


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [4.56e-09, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.89e-07, 402, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [1.83e-08, 36, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 356, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.694, 18, 171], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.574, 378, 31]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.704, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.178, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.43e-08, 370, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.671, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 360, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.606, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.115, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.07e-07, 331, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.539, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.123, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.71e-07, 358, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 202], 'true,true,false': [0.019, 34, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.43, 0, 202], 'true,true,true,false': [0.092, 27, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 357, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.55e-07, 0, 171], 'true,false,true': [0.072, 33, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.445, 380, 31], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10400259339067314, 2.0768351107415863e-16], 'true': [5.768762805181012e-15, 2.05596856412066e-17], 'true,false': [2.05596856412066e-17, nan]}, {'': [0.09164929592978208, -1.0977486086181323e-16], 'true': [-3.728590593592605e-15, 9.25185853854297e-18], 'true,false': [9.25185853854297e-18, nan], 'true,false,true': [9.25185853854297e-18, nan]}, {'': [0.038413634856941374, 0.03122822317015992], 'true': [0.038413634856941374, nan], 'true,true': [0.038413634856941374, nan], 'true,true,true': [0.038413634856941374, nan]}, {'': [0.04729922047344718, 1.9203857723245952e-17], 'true': [0.04729922047344718, nan], 'true,true': [0.002455951873096526, 0.0009281415992694217], 'true,true,true': [0.002455951873096526, nan], 'true,true,false': [0.0009281415992694217, nan]}, {'': [0.02870155809913664, -7.894919286223336e-17], 'true': [0.00222858542735331, 0.0006995488299359476], 'true,true': [0.00222858542735331, nan], 'true,true,true': [0.00222858542735331, nan], 'true,false': [0.0006995488299359476, nan]}, {'': [0.01944519986639308, 3.4883140350760205e-17], 'true': [0.001816692791735946, 0.00044183719500894095], 'true,true': [0.001816692791735946, nan], 'true,false': [0.00044183719500894095, nan]}, {'': [0.013432653747899856, 8.187119511202272e-17], 'true': [0.0014382358728701377, 0.0005037430003236254], 'true,true': [0.0014382358728701377, nan], 'true,false': [0.0005037430003236254, nan]}, {'': [0.011175460632748073, -7.050998596505172e-17], 'true': [0.011175460632748073, nan], 'true,true': [0.0011395979181776175, 0.0003437336441054206]}, {'': [0.007380645331546511, -3.9806315728857154e-17], 'true': [0.007380645331546511, nan], 'true,true': [0.007380645331546511, nan], 'true,true,true': [0.0009133656977011739, 0.00031075679644986334]}, {'': [0.006144452278928737, 0.0050812039921132035], 'true': [1.4023869784738819e-16, 0.00015904008353558925], 'false': [0.0050812039921132035, nan], 'false,true': [0.0050812039921132035, nan], 'true,false': [0.00015904008353559093, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.14185106490048757;  // std dev = 2.21e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1254446385283913;  // std dev = 2.58e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839213;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360635;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830997;  // std dev = 1.98e-07, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.4175135841583096;  // std dev = 2.92e-07, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783619;  // std dev = 1.49e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.09269127618926053;  // std dev = 1.80e-07, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949117;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08518475138839678;  // std dev = 1.07e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 2.89e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.0787767547310915;  // std dev = 4.71e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333757;  // std dev = 0.000, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367125;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.1259893214882832;  // std dev = 0.072, 124.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420326;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13589557742037087;  // std dev = 0.020, 171.000 (wgt'ed) examples reached here.  /* #pos=171 */
%   | else return -0.06921140223924409;  // std dev = 0.038, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( female(A), director(B) )
%   | then return 0.11932563222356396;  // std dev = 0.052, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else return -0.06138445537631052;  // std dev = 0.492, 385.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064628
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.092 seconds
Total inference time: 1.306 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064906
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.407 seconds
Refined model CLL: -0.064906


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064628
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.446 seconds
Total inference time: 1.306 seconds
AUC ROC: 1.0
Total revision time: 12.446
Best scored revision CLL: -0.064906


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064628, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.446, 'Inference time': 1.306, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068187, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.461, 'Inference time': 1.653}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048743;  // std dev = 2.15e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47451422087465533;  // std dev = 3.485, 256.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=225 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06294151456779966;  // std dev = 4.262, 595.000 (wgt'ed) examples reached here.  /* #neg=551 #pos=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45914264276373445;  // std dev = 0.810, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1442032711971487;  // std dev = 0.189, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10619247387554492;  // std dev = 0.000, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3501445958208753;  // std dev = 0.772, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12954122300818377;  // std dev = 0.027, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09652645685790874;  // std dev = 0.000, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27582944482231825;  // std dev = 0.697, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1198986837622525;  // std dev = 0.144, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08843007741329242;  // std dev = 8.69e-08, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22466359261925148;  // std dev = 0.619, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10753866605430976;  // std dev = 0.130, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08155636005428284;  // std dev = 2.08e-07, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18822177709021964;  // std dev = 0.034, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09926663119911433;  // std dev = 0.018, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0756521510805296;  // std dev = 1.88e-07, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1613110042469619;  // std dev = 0.493, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.08643179627956543;  // std dev = 0.126, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07052879658882388;  // std dev = 0.000, 551.000 (wgt'ed) examples reached here.  /* #neg=551 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12881808183831817;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   | else if ( movie(E, B) )
%   | | then return -0.0893883056531747;  // std dev = 0.056, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04495230397926515;  // std dev = 1.706, 566.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.286 seconds
Total inference time: 1.518 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.266 seconds
Parameter learned model CLL: -0.068406


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [6.45e-09, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.15e-07, 491, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 497, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.485, 31, 225], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.262, 551, 44]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.81, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.189, 38, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 512, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.772, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 491, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.697, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.144, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 474, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.619, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.13, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.08e-07, 504, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 269], 'true,true,false': [0.018, 49, 0], 'true,false': [0.0, 0, 0], 'false': [1.88e-07, 498, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.493, 0, 269], 'true,true,true,false': [0.126, 45, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 551, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 225], 'true,false,true': [0.056, 39, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.706, 522, 44], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10845738416323118, 9.406370229003363e-17], 'true': [4.226276495227362e-15, 4.0902953538821554e-17], 'true,false': [4.0902953538821554e-17, nan]}, {'': [0.09564266664560139, -1.2688263138573217e-16], 'true': [-4.5432472323694135e-15, -3.2653618371328135e-17], 'true,false': [-3.2653618371328135e-17, nan], 'true,false,true': [-3.2653618371328135e-17, nan]}, {'': [0.04744655427594477, 0.03052887077488442], 'true': [0.04744655427594477, nan], 'true,true': [0.04744655427594477, nan], 'true,true,true': [0.04744655427594477, nan]}, {'': [0.04173616168496133, -2.636779683484747e-16], 'true': [0.04173616168496133, nan], 'true,true': [0.0024402379910908882, 0.0009422743780592011], 'true,true,true': [0.0024402379910908882, nan], 'true,true,false': [0.0009422743780592011, nan]}, {'': [0.028895408622945613, -5.2458603200211063e-17], 'true': [0.0022183991713224122, 0.0007312111496965317], 'true,true': [0.0022183991713224122, nan], 'true,true,true': [0.0022183991713224122, nan], 'true,false': [0.0007312111496965317, nan]}, {'': [0.019287128174198143, 1.5927250142301823e-17], 'true': [0.0018058233631808773, 0.0005200932497485628], 'true,true': [0.0018058233631808773, nan], 'true,false': [0.0005200932497485628, nan]}, {'': [0.013505582538353635, 8.54695503084446e-17], 'true': [0.0014263930209362302, 0.0004366229938142095], 'true,true': [0.0014263930209362302, nan], 'true,false': [0.0004366229938142095, nan]}, {'': [0.011778434957134761, 7.133963210442773e-17], 'true': [0.011778434957134761, nan], 'true,true': [0.0011276738027311537, 0.0003346685660038554]}, {'': [0.008358552745726599, -1.2411930729021714e-16], 'true': [0.008358552745726599, nan], 'true,true': [0.008358552745726599, nan], 'true,true,true': [0.0009020078814195134, 0.0003516202587129307]}, {'': [0.006006632908855483, 0.005141899096376623], 'true': [-8.68441121484567e-17, 8.014719636575179e-05], 'false': [0.005141899096376623, nan], 'false,true': [0.005141899096376623, nan], 'true,false': [8.014719636575179e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.1418510649004872;  // std dev = 2.92e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.12544463852839227;  // std dev = 0.000, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.11231637819360595;  // std dev = 0.000, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.35437859466080535;  // std dev = 0.170, 148.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=130 */
%   | | else return 0.33571444625043206;  // std dev = 0.189, 165.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=139 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783556;  // std dev = 3.10e-07, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3367728492623979;  // std dev = 0.034, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.13766545175021777;  // std dev = 0.006, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.09269127618926118;  // std dev = 6.66e-08, 517.000 (wgt'ed) examples reached here.  /* #neg=517 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26610488649579916;  // std dev = 0.030, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12201003094830852;  // std dev = 0.006, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.08518475138839679;  // std dev = 1.43e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21745215148195804;  // std dev = 0.026, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1097779522732214;  // std dev = 0.006, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109177;  // std dev = 1.87e-07, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1812803089787601;  // std dev = 1.40e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return -0.10022862092801703;  // std dev = 1.58e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.14394114600726685;  // std dev = 0.099, 162.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=139 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633376;  // std dev = 0.000, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15979251704066758;  // std dev = 0.062, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10093139585193821;  // std dev = 0.069, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420354;  // std dev = 0.000, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1399278485593914;  // std dev = 0.050, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   | else return -0.0853564200132356;  // std dev = 0.083, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(B) )
%   | then return -0.06419184008202546;  // std dev = 2.30e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13723854443268652;  // std dev = 0.017, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.06419184008202615;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08528279093923294;  // std dev = 0.071, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065956
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.364 seconds
Total inference time: 1.282 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.817 seconds
Refined model CLL: -0.06632


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065956
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.733 seconds
Total inference time: 1.282 seconds
AUC ROC: 1.0
Total revision time: 14.733
Best scored revision CLL: -0.06632


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065956, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.733, 'Inference time': 1.282, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068142, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.286, 'Inference time': 1.518}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 7.45e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048857;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4641302756985957;  // std dev = 4.115, 322.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=278 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05698872920280116;  // std dev = 4.911, 712.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.462532966992157;  // std dev = 0.904, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14342028050641475;  // std dev = 0.236, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10675881223006956;  // std dev = 2.94e-07, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3524797143660156;  // std dev = 0.861, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13449936265021303;  // std dev = 0.024, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09699722603297563;  // std dev = 1.07e-07, 673.000 (wgt'ed) examples reached here.  /* #neg=673 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2774090976822647;  // std dev = 0.776, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11874207113780089;  // std dev = 0.157, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08882713368388037;  // std dev = 2.00e-07, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22576180016628816;  // std dev = 0.689, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1077967966987776;  // std dev = 0.139, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08189546764568888;  // std dev = 1.63e-07, 665.000 (wgt'ed) examples reached here.  /* #neg=665 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18901374323557832;  // std dev = 0.033, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0935812103332725;  // std dev = 0.020, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07594493876083691;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1619022838203547;  // std dev = 0.547, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.08445292718051249;  // std dev = 0.132, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07078401462912609;  // std dev = 0.000, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1288851388957192;  // std dev = 2.25e-07, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, B) )
%   | | then return -0.08596399763810163;  // std dev = 0.072, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04419929788966398;  // std dev = 1.954, 718.000 (wgt'ed) examples reached here.  /* #neg=659 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.286 seconds
Total inference time: 1.565 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068682
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.716 seconds
Parameter learned model CLL: -0.068682


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [7.45e-09, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 608, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 620, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [4.115, 44, 278], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.911, 653, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.904, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.236, 63, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.94e-07, 633, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.861, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.07e-07, 673, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.776, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.157, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [2e-07, 626, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.689, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.139, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.63e-07, 665, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 337], 'true,true,false': [0.02, 50, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 598, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.547, 0, 337], 'true,true,true,false': [0.132, 50, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 635, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.25e-07, 0, 278], 'true,false,true': [0.072, 41, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.954, 659, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11416595812520232, -3.5351838415695773e-16], 'true': [3.204821834882351e-15, 5.659960517696876e-17], 'true,false': [5.659960517696876e-17, nan]}, {'': [0.07164078567958758, -2.549931592042295e-16], 'true': [-5.144582419153248e-15, -2.840105411831796e-17], 'true,false': [-2.840105411831796e-17, nan], 'true,false,true': [-2.840105411831796e-17, nan]}, {'': [0.052592779749909405, 0.03388017167933632], 'true': [0.052592779749909405, nan], 'true,true': [0.052592779749909405, nan], 'true,true,true': [0.052592779749909405, nan]}, {'': [0.050903366195063526, 1.3610317015941888e-16], 'true': [0.050903366195063526, nan], 'true,true': [0.0024233746949350685, 0.0008842521422219422], 'true,true,true': [0.0024233746949350685, nan], 'true,true,false': [0.0008842521422219422, nan]}, {'': [0.025815616382097173, 1.7156492505351602e-17], 'true': [0.0022018233417229888, 0.0005684721529385554], 'true,true': [0.0022018233417229888, nan], 'true,true,true': [0.0022018233417229888, nan], 'true,false': [0.0005684721529385554, nan]}, {'': [0.019533390455902418, 6.384669151198984e-17], 'true': [0.0017881972625067785, 0.0004832474772180019], 'true,true': [0.0017881972625067785, nan], 'true,false': [0.0004832474772180019, nan]}, {'': [0.01397613433333263, 4.0068199384968053e-17], 'true': [0.0014089248978164744, 0.00038150266797257903], 'true,true': [0.0014089248978164744, nan], 'true,false': [0.00038150266797257903, nan]}, {'': [0.010002701727369754, -4.752794219131105e-17], 'true': [0.010002701727369754, nan], 'true,true': [0.0011113703340896606, 0.0003881850784659613]}, {'': [0.007645490417469684, -1.8183180245829335e-17], 'true': [0.007645490417469684, nan], 'true,true': [0.007645490417469684, nan], 'true,true,true': [0.0008872892709824466, 0.0003460764142670336]}, {'': [0.005186370074071727, 0.0053170504526683865], 'false': [0.0053170504526683865, nan], 'false,true': [0.0053170504526683865, nan], 'true': [1.8210852490254366e-16, 0.00012514708006708736], 'true,false': [0.0001251470800670833, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.1418510649004885;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.12544463852839233;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360596;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783627;  // std dev = 2.98e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783523;  // std dev = 3.99e-07, 568.000 (wgt'ed) examples reached here.  /* #neg=568 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.09269127618926148;  // std dev = 0.000, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0787767547310917;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07877675473109234;  // std dev = 0.000, 660.000 (wgt'ed) examples reached here.  /* #neg=660 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333681;  // std dev = 1.87e-07, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.11862708020963744;  // std dev = 0.080, 188.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=159 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420373;  // std dev = 0.000, 693.000 (wgt'ed) examples reached here.  /* #neg=693 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1356077023607066;  // std dev = 0.033, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.06798589618076409;  // std dev = 0.038, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13726850074772257;  // std dev = 0.012, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.0688376230600726;  // std dev = 0.027, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06419184008202546;  // std dev = 2.40e-07, 574.000 (wgt'ed) examples reached here.  /* #neg=574 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064009
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.86 seconds
Total inference time: 1.336 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064518
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.006 seconds
Refined model CLL: -0.064518


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064009
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.868 seconds
Total inference time: 1.336 seconds
AUC ROC: 1.0
Total revision time: 16.868
Best scored revision CLL: -0.064518


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064009, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.868, 'Inference time': 1.336, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068387, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.286, 'Inference time': 1.565}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.16e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45571228526271784;  // std dev = 1.947, 67.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0635804063001836;  // std dev = 2.033, 137.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4611947585419126;  // std dev = 0.376, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15298288294016793;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10613184831822575;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3514257004052552;  // std dev = 0.360, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.11038552415319047;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09647603854998744;  // std dev = 5.77e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2766134972338449;  // std dev = 0.325, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11651740776436419;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08838753673456706;  // std dev = 4.59e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22515752504226705;  // std dev = 0.289, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11510213955324283;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08152001553939646;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18854522916021263;  // std dev = 0.031, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10845975734115763;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.075620761593967;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16153065922858387;  // std dev = 0.229, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.08820042011107648;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07050142770203285;  // std dev = 2.11e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1303574466449262;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( movie(E, B) )
%   | | then return -0.08257678132420469;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04629417048559017;  // std dev = 0.813, 136.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067454
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.373 seconds
Total inference time: 1.391 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068409
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.953 seconds
Parameter learned model CLL: -0.068409


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 117, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.947, 10, 57], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.033, 127, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.376, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.075, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.36, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 122, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.325, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.07, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.59e-08, 124, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.289, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.042, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 137, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.031, 0, 67], 'true,true,false': [1.32e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.229, 0, 67], 'true,true,true,false': [0.055, 11, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 121, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 57], 'true,false,true': [0.041, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.813, 126, 10], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.09528888888888787, 5.792467954566034e-17], 'true': [-9.544603913195376e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.08647836286765904, -7.591268544445516e-18], 'true': [3.1815346377317917e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.05660641447508415, 0.030164975946235233], 'true': [0.05660641447508415, nan], 'true,true': [0.05660641447508415, nan], 'true,true,true': [0.05660641447508415, nan]}, {'': [0.04131950247217228, -3.6369374944617196e-17], 'true': [0.04131950247217228, nan], 'true,true': [0.002115539878448732, 0.0006271484128989899], 'true,true,true': [0.002115539878448732, nan], 'true,true,false': [0.0006271484128989899, nan]}, {'': [0.017912111993830002, 2.7300566179307128e-17], 'true': [0.001929677510704716, 0.0006420320656124837], 'true,true': [0.001929677510704716, nan], 'true,true,true': [0.001929677510704716, nan], 'true,false': [0.0006420320656124837, nan]}, {'': [0.017585451778056285, 1.701148182893385e-17], 'true': [0.001572756684083252, 0.0005413620328659018], 'true,true': [0.001572756684083252, nan], 'true,false': [0.0005413620328659018, nan]}, {'': [0.0132061340565296, -1.5397253626188302e-17], 'true': [0.0012428419383507506, 0.00019994975437397398], 'true,true': [0.0012428419383507506, nan], 'true,false': [0.00019994975437397398, nan]}, {'': [0.010075442727245771, -1.83339582048191e-17], 'true': [0.010075442727245771, nan], 'true,true': [0.0009827070114972797, 1.5419764230904951e-18]}, {'': [0.008269226193268864, 3.670158759091427e-18], 'true': [0.008269226193268864, nan], 'true,true': [0.008269226193268864, nan], 'true,true,true': [0.0007860853364602894, 0.00027789528699139046]}, {'': [0.006537856861997245, 0.004863999252952167], 'true': [-5.4537271385095406e-17, 0.00013708028798937086], 'false': [0.004863999252952167, nan], 'false,true': [0.004863999252952167, nan], 'true,false': [0.0001370802879893697, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1418510649004877;  // std dev = 5.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360626;  // std dev = 7.60e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3.94e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.09269127618926093;  // std dev = 6.14e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839682;  // std dev = 6.50e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109164;  // std dev = 5.37e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333711;  // std dev = 4.21e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 6.32e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A), director(B) )
%   | then return 0.11418714299900742;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.06263121905769527;  // std dev = 0.197, 127.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063947
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.8 seconds
Total inference time: 1.141 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064305
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.228 seconds
Refined model CLL: -0.064305


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063947
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.354 seconds
Total inference time: 1.141 seconds
AUC ROC: 1.0
Total revision time: 7.354
Best scored revision CLL: -0.064305


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063947, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.354, 'Inference time': 1.141, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067454, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.373, 'Inference time': 1.391}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.17e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048838;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.46699665241600347;  // std dev = 2.639, 136.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=118 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06924006755232291;  // std dev = 2.583, 248.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45505808760988276;  // std dev = 0.500, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15355281514136293;  // std dev = 0.134, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10559612390448254;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34708941335840604;  // std dev = 0.478, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12902373343592052;  // std dev = 0.026, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09603031567560767;  // std dev = 8.69e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2736044552648404;  // std dev = 0.433, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11997922696094328;  // std dev = 0.107, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08801131394690373;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22301604127143673;  // std dev = 0.385, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10746831986794893;  // std dev = 0.079, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08119848543548099;  // std dev = 1.02e-07, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1869681574287408;  // std dev = 0.030, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09762346988862852;  // std dev = 0.018, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07534298795011034;  // std dev = 8.02e-08, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16033093441733978;  // std dev = 0.308, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09161161752176913;  // std dev = 0.078, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0702591725145041;  // std dev = 2.58e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13116626179148838;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | else if ( movie(E, B) )
%   | | then return -0.0881767756892636;  // std dev = 0.034, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04947481452577866;  // std dev = 1.051, 268.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2 seconds
Total inference time: 1.573 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067963
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.508 seconds
Parameter learned model CLL: -0.067963


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [4.17e-09, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.639, 18, 118], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.583, 232, 16]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.5, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.134, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 267, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.478, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 239, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.433, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.107, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 245, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.385, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.079, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.02e-07, 243, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.03, 0, 134], 'true,true,false': [0.018, 24, 0], 'true,false': [0.0, 0, 0], 'false': [8.02e-08, 243, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.308, 0, 134], 'true,true,true,false': [0.078, 26, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 245, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 118], 'true,false,true': [0.034, 17, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.051, 252, 16], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1325105810687916, -1.8564385001928848e-16], 'true': [4.772301956597688e-15, 1.3322676295501878e-17], 'true,false': [1.3322676295501878e-17, nan]}, {'': [0.09715549255580544, -4.954714324773426e-17], 'true': [-1.908920782639075e-15, -4.270088556250602e-18], 'true,false': [-4.270088556250602e-18, nan], 'true,false,true': [-4.270088556250602e-18, nan]}, {'': [0.051193767574694043, 0.02690574380773251], 'true': [0.051193767574694043, nan], 'true,true': [0.051193767574694043, nan], 'true,true,true': [0.051193767574694043, nan]}, {'': [0.052085629230694416, -1.0312183899140031e-16], 'true': [0.052085629230694416, nan], 'true,true': [0.0018667495372905222, 0.000689953270316824], 'true,true,true': [0.0018667495372905222, nan], 'true,true,false': [0.000689953270316824, nan]}, {'': [0.028118282429553706, 3.1587935428665544e-17], 'true': [0.00170517300252848, 0.0006873363952989193], 'true,true': [0.00170517300252848, nan], 'true,true,true': [0.00170517300252848, nan], 'true,false': [0.0006873363952989193, nan]}, {'': [0.02177607802766956, -2.7189135296942608e-18], 'true': [0.001395948880246723, 0.0004620771853365868], 'true,true': [0.001395948880246723, nan], 'true,false': [0.0004620771853365868, nan]}, {'': [0.01143947759694211, 4.2946898894964905e-17], 'true': [0.0011084206440838895, 0.0003922906682445326], 'true,true': [0.0011084206440838895, nan], 'true,false': [0.0003922906682445326, nan]}, {'': [0.011230378771429836, 2.649915038199962e-17], 'true': [0.011230378771429836, nan], 'true,true': [0.0008802014973672743, 0.00032911639056252065]}, {'': [0.009268049005729551, 2.7189135296942608e-18], 'true': [0.009268049005729551, nan], 'true,true': [0.009268049005729551, nan], 'true,true,true': [0.0007066736743013942, 0.00023170639176168538]}, {'': [0.005303953002919789, 0.0041178188081730125], 'true': [0.0, 6.672727106778432e-05], 'false': [0.0041178188081730125, nan], 'false,true': [0.0041178188081730125, nan], 'true,false': [6.672727106778921e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048835;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.12544463852839183;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360682;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926094;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.09269127618926057;  // std dev = 5.96e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.08518475138839678;  // std dev = 7.45e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109148;  // std dev = 7.15e-08, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333671;  // std dev = 1.19e-07, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367144;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420278;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801106;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | else return -0.06419184008202616;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(A), director(B) )
%   | then return 0.12161960062738389;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return -0.06342362740725864;  // std dev = 0.198, 258.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063903
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.179 seconds
Total inference time: 1.261 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064257
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.743 seconds
Refined model CLL: -0.064257


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063903
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.63 seconds
Total inference time: 1.261 seconds
AUC ROC: 1.0
Total revision time: 9.63
Best scored revision CLL: -0.064257


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063903, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.63, 'Inference time': 1.261, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067083, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2, 'Inference time': 1.573}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 1.88e-07, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.473609357365888;  // std dev = 3.064, 196.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=172 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.061348224381401056;  // std dev = 3.515, 393.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=30 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.457263785112822;  // std dev = 0.672, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16079851949163432;  // std dev = 0.117, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1063437969367241;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34876196724367603;  // std dev = 0.641, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13331697896498337;  // std dev = 0.024, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09665228269622164;  // std dev = 0.000, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27483599058854835;  // std dev = 0.579, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11719766344017558;  // std dev = 0.134, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08853622930958592;  // std dev = 4.21e-08, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22393585310507585;  // std dev = 0.515, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11315477115181392;  // std dev = 0.085, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08164704011438913;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18767282934101343;  // std dev = 0.032, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10239869183315221;  // std dev = 0.013, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0757304603411448;  // std dev = 2.11e-08, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16088488347525706;  // std dev = 0.410, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.09383311714285959;  // std dev = 0.062, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07059706932992896;  // std dev = 1.67e-07, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12959019525257562;  // std dev = 1.48e-07, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   | else if ( movie(E, B) )
%   | | then return -0.0874727655135766;  // std dev = 0.039, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04603925597716841;  // std dev = 1.416, 407.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067492
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.926 seconds
Total inference time: 1.625 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0684
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.323 seconds
Parameter learned model CLL: -0.0684


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [6.45e-09, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.88e-07, 349, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 36, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 340, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.064, 24, 172], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.515, 363, 30]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.672, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.117, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 360, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.641, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 47, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 393, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.579, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.134, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.21e-08, 355, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.515, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.085, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 372, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 202], 'true,true,false': [0.013, 42, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 366, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.41, 0, 202], 'true,true,true,false': [0.062, 28, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.67e-07, 387, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.48e-07, 0, 172], 'true,false,true': [0.039, 29, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.416, 377, 30], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13563816049999672, 1.017969535472923e-16], 'true': [5.768762805181012e-15, 4.2700885562506023e-17], 'true,false': [4.2700885562506023e-17, nan]}, {'': [0.09164929592978208, -1.1494073666707504e-16], 'true': [-3.728590593592605e-15, -1.850371707708594e-17], 'true,false': [-1.850371707708594e-17, nan], 'true,false,true': [-1.850371707708594e-17, nan]}, {'': [0.04790357687315633, 0.03143280770659843], 'true': [0.04790357687315633, nan], 'true,true': [0.04790357687315633, nan], 'true,true,true': [0.04790357687315633, nan]}, {'': [0.0460581304295534, -1.3816108750890837e-16], 'true': [0.0460581304295534, nan], 'true,true': [0.0022348700712240396, 0.0004393061938566095], 'true,true,true': [0.0022348700712240396, nan], 'true,true,false': [0.0004393061938566095, nan]}, {'': [0.03734635424244178, -9.265983513410976e-17], 'true': [0.002032991268775706, 0.000585257337717472], 'true,true': [0.002032991268775706, nan], 'true,true,true': [0.002032991268775706, nan], 'true,false': [0.000585257337717472, nan]}, {'': [0.020833087885076658, 5.003822082817607e-18], 'true': [0.0016573395263825776, 0.0005110563810304741], 'true,true': [0.0016573395263825776, nan], 'true,false': [0.0005110563810304741, nan]}, {'': [0.014873970391316984, -7.879002110243047e-17], 'true': [0.0013111660656097064, 0.00022124934957604568], 'true,true': [0.0013111660656097064, nan], 'true,false': [0.00022124934957604568, nan]}, {'': [0.012880862055238697, 1.2133584968580946e-18], 'true': [0.012880862055238697, nan], 'true,true': [0.001038049644092199, 0.00018103370340650873]}, {'': [0.0076840906793737285, 7.171983363211606e-17], 'true': [0.0076840906793737285, nan], 'true,true': [0.0076840906793737285, nan], 'true,true,true': [0.0008313310449716397, 0.00013918492868324295]}, {'': [0.005824692215097217, 0.004925435627552783], 'true': [1.2651378652705272e-16, 5.269196200644224e-05], 'false': [0.004925435627552783, nan], 'false,true': [0.004925435627552783, nan], 'true,false': [5.269196200643842e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048754;  // std dev = 2.33e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.12544463852839213;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.11231637819360667;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783603;  // std dev = 1.91e-07, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.09269127618926051;  // std dev = 1.76e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839678;  // std dev = 1.10e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109148;  // std dev = 5.16e-08, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527794;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333696;  // std dev = 1.02e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.12279364072708447;  // std dev = 0.076, 96.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=83 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367164;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | | else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420321;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13515110770099276;  // std dev = 0.022, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   | else return -0.06883915506169398;  // std dev = 0.040, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( actor(B) )
%   | then return -0.06419184008202579;  // std dev = 1.53e-07, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1375209829221696;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.054727481971996415;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.06986895781287034;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064002
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.833 seconds
Total inference time: 1.302 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06459
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.147 seconds
Refined model CLL: -0.06459


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064002
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.229000000000001 seconds
Total inference time: 1.302 seconds
AUC ROC: 1.0
Total revision time: 12.229000000000001
Best scored revision CLL: -0.06459


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064002, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.229000000000001, 'Inference time': 1.302, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067492, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.926, 'Inference time': 1.625}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 7.21e-09, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 526.000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4757581011188342;  // std dev = 3.489, 260.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=229 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0652135341061364;  // std dev = 4.071, 567.000 (wgt'ed) examples reached here.  /* #neg=527 #pos=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4569789445457915;  // std dev = 0.784, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15215480690251754;  // std dev = 0.202, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10597701657491353;  // std dev = 1.93e-07, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.348587772988346;  // std dev = 0.748, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13088525126734027;  // std dev = 0.026, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09634725467557521;  // std dev = 0.000, 484.000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27473227133602296;  // std dev = 0.676, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11872781502421789;  // std dev = 0.162, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08827885993082815;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2238727555190948;  // std dev = 0.601, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10929783612780461;  // std dev = 0.115, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08142715683733472;  // std dev = 0.000, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18763323961462924;  // std dev = 0.033, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09692603494147799;  // std dev = 0.019, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07554055451102239;  // std dev = 1.40e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16085934675860647;  // std dev = 0.479, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.09195928276297441;  // std dev = 0.093, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07043148779908485;  // std dev = 1.07e-07, 438.000 (wgt'ed) examples reached here.  /* #neg=438 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12942585304703252;  // std dev = 1.92e-07, 229.000 (wgt'ed) examples reached here.  /* #pos=229 */
%   | else if ( movie(E, B) )
%   | | then return -0.08866222360104933;  // std dev = 0.059, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04543181776786193;  // std dev = 1.637, 530.000 (wgt'ed) examples reached here.  /* #neg=490 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.434 seconds
Total inference time: 1.575 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06839
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.188 seconds
Parameter learned model CLL: -0.06839


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [7.21e-09, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 526, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 473, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.489, 31, 229], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.071, 527, 40]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.784, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.202, 52, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.93e-07, 498, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.748, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 484, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.676, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.162, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 494, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.601, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.115, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 467, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 269], 'true,true,false': [0.019, 57, 0], 'true,false': [0.0, 0, 0], 'false': [1.4e-07, 476, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.479, 0, 269], 'true,true,true,false': [0.093, 35, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.07e-07, 438, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.92e-07, 0, 229], 'true,false,true': [0.059, 49, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.637, 490, 40], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12470647518266965, -4.05252510889791e-17], 'true': [4.226276495227362e-15, 5.3097622916855314e-17], 'true,false': [5.3097622916855314e-17, nan]}, {'': [0.08192980588947166, -1.1829860558373762e-16], 'true': [-4.5432472323694135e-15, -2.4370749321040022e-17], 'true,false': [-2.4370749321040022e-17, nan], 'true,false,true': [-2.4370749321040022e-17, nan]}, {'': [0.04681563052304295, 0.029231081610868116], 'true': [0.04681563052304295, nan], 'true,true': [0.04681563052304295, nan], 'true,true,true': [0.04681563052304295, nan]}, {'': [0.052413742033667034, 7.490661370964911e-17], 'true': [0.052413742033667034, nan], 'true,true': [0.0022870956825056764, 0.0007856167493042914], 'true,true,true': [0.0022870956825056764, nan], 'true,true,false': [0.0007856167493042914, nan]}, {'': [0.029660550637914024, -1.2662047718865421e-16], 'true': [0.0020816192452043827, 0.0006911484514043255], 'true,true': [0.0020816192452043827, nan], 'true,true,true': [0.0020816192452043827, nan], 'true,false': [0.0006911484514043255, nan]}, {'': [0.021975774466944, -1.12370751480279e-16], 'true': [0.0016979341237332896, 0.0005247378291974991], 'true,true': [0.0016979341237332896, nan], 'true,false': [0.0005247378291974991, nan]}, {'': [0.012541462000186892, -1.0745627561682457e-16], 'true': [0.0013439100037492546, 0.00037991377774062267], 'true,true': [0.0013439100037492546, nan], 'true,false': [0.00037991377774062267, nan]}, {'': [0.012624447185149785, 4.105026309538394e-17], 'true': [0.012624447185149785, nan], 'true,true': [0.0010643637610571407, 0.00036397517830832893]}, {'': [0.007294394986506314, 2.6361459945437505e-17], 'true': [0.007294394986506314, nan], 'true,true': [0.007294394986506314, nan], 'true,true,true': [0.0008526484957934803, 0.000245453582486813]}, {'': [0.006918348386212878, 0.005057147480296282], 'true': [1.6095809789325414e-16, 7.193094373072971e-05], 'false': [0.005057147480296282, nan], 'false,true': [0.005057147480296282, nan], 'true,false': [7.193094373072404e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048718;  // std dev = 2.98e-07, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.12544463852839227;  // std dev = 0.000, 492.000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.11231637819360579;  // std dev = 0.000, 535.000 (wgt'ed) examples reached here.  /* #neg=535 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783563;  // std dev = 2.98e-07, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926096;  // std dev = 1.46e-07, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.37e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 1.49e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.08518475138839679;  // std dev = 1.49e-07, 524.000 (wgt'ed) examples reached here.  /* #neg=524 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.0787767547310916;  // std dev = 2.03e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452781;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.1360567070061608;  // std dev = 0.093, 183.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=153 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15580790024292565;  // std dev = 0.044, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07681893458741788;  // std dev = 0.050, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420346;  // std dev = 0.000, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1367904826074844;  // std dev = 0.035, 229.000 (wgt'ed) examples reached here.  /* #pos=229 */
%   | else return -0.06986627710303825;  // std dev = 0.048, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( actor(B) )
%   | then return -0.06419184008202544;  // std dev = 2.35e-07, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13413422970096328;  // std dev = 0.009, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06793769243049096;  // std dev = 0.023, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064011
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.661 seconds
Total inference time: 1.193 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064692
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.431 seconds
Refined model CLL: -0.064692


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064011
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.713999999999999 seconds
Total inference time: 1.193 seconds
AUC ROC: 1.0
Total revision time: 14.713999999999999
Best scored revision CLL: -0.064692


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064011, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.713999999999999, 'Inference time': 1.193, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067447, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.434, 'Inference time': 1.575}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.90e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048863;  // std dev = 0.000, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 643.000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.46513902932197304;  // std dev = 4.165, 333.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=288 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0655117173466041;  // std dev = 4.507, 699.000 (wgt'ed) examples reached here.  /* #neg=650 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45878043203578384;  // std dev = 0.853, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14639363417753198;  // std dev = 0.223, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10594876825798288;  // std dev = 3.04e-07, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3497779283787601;  // std dev = 0.815, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1320450898895267;  // std dev = 0.025, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09632375549751283;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27550730129861145;  // std dev = 0.736, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11446286846722208;  // std dev = 0.179, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08825902738901921;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22439332358236924;  // std dev = 0.655, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10861934513636524;  // std dev = 0.119, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08141020925605183;  // std dev = 1.10e-07, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18799706113841094;  // std dev = 0.032, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09962460896696583;  // std dev = 0.017, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0755259146855889;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1611232757562589;  // std dev = 0.521, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.09246252383880146;  // std dev = 0.110, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07041872101019447;  // std dev = 1.43e-07, 555.000 (wgt'ed) examples reached here.  /* #neg=555 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13006991884112315;  // std dev = 2.21e-07, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( movie(E, B) )
%   | | then return -0.08346552418768692;  // std dev = 0.085, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0461510442518606;  // std dev = 1.809, 671.000 (wgt'ed) examples reached here.  /* #neg=622 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067407
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.569 seconds
Total inference time: 1.706 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.866 seconds
Parameter learned model CLL: -0.068363


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [7.9e-09, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 629, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 52, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 643, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [4.165, 45, 288], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.507, 650, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.853, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.223, 58, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.04e-07, 609, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.815, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 65, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 575, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.736, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.179, 56, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 611, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.655, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.119, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.1e-07, 599, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 337], 'true,true,false': [0.017, 55, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 596, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.521, 0, 337], 'true,true,true,false': [0.11, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.43e-07, 555, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.21e-07, 0, 288], 'true,false,true': [0.085, 51, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.809, 622, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12374062717411209, -3.8407715446491904e-16], 'true': [3.204821834882351e-15, 6.232831015439475e-17], 'true,false': [6.232831015439475e-17, nan]}, {'': [0.08267290887873702, -2.9836164643114626e-16], 'true': [-5.144582419153248e-15, -3.416070845000482e-17], 'true,false': [-3.416070845000482e-17, nan], 'true,false,true': [-3.416070845000482e-17, nan]}, {'': [0.05210230432327894, 0.029059991429629523], 'true': [0.05210230432327894, nan], 'true,true': [0.05210230432327894, nan], 'true,true,true': [0.05210230432327894, nan]}, {'': [0.04785015148810347, 1.5167578924271434e-16], 'true': [0.04785015148810347, nan], 'true,true': [0.002160941390966734, 0.000860940620658063], 'true,true,true': [0.002160941390966734, nan], 'true,true,false': [0.000860940620658063, nan]}, {'': [0.03322175005524805, -6.642029921235719e-17], 'true': [0.0019699361675008594, 0.0006342088798877654], 'true,true': [0.0019699361675008594, nan], 'true,true,true': [0.0019699361675008594, nan], 'true,false': [0.0006342088798877654, nan]}, {'': [0.020041996090728497, -1.293745979595927e-16], 'true': [0.0016070651022920622, 0.0005740109974066967], 'true,true': [0.0016070651022920622, nan], 'true,false': [0.0005740109974066967, nan]}, {'': [0.011069476653410232, 2.0017376737815844e-17], 'true': [0.0012715715221320123, 0.0003835551625685331], 'true,true': [0.0012715715221320123, nan], 'true,false': [0.0003835551625685331, nan]}, {'': [0.010885641694766954, -4.470696743457006e-18], 'true': [0.010885641694766954, nan], 'true,true': [0.0010066427481589865, 0.00029773326948350827]}, {'': [0.008480427500131732, 3.680739396955474e-17], 'true': [0.008480427500131732, nan], 'true,true': [0.008480427500131732, nan], 'true,true,true': [0.0008060794556071417, 0.00021998473860415898]}, {'': [0.005848889143340146, 0.004879068221053697], 'true': [1.6961740653995446e-16, 0.00014030840726090332], 'false': [0.004879068221053697, nan], 'false,true': [0.004879068221053697, nan], 'true,false': [0.00014030840726089679, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048843;  // std dev = 0.000, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1254446385283923;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360599;  // std dev = 0.000, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878351;  // std dev = 4.30e-07, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926137;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109216;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1407094739794905;  // std dev = 0.088, 172.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=147 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527764;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333677;  // std dev = 1.98e-07, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15482396888123495;  // std dev = 0.043, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07638611204848968;  // std dev = 0.051, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420367;  // std dev = 0.000, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13532358258458993;  // std dev = 0.035, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.06804735836267423;  // std dev = 0.049, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1374281534508986;  // std dev = 0.010, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.06948784488434162;  // std dev = 0.028, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.0641918400820254;  // std dev = 2.44e-07, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063994
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.423 seconds
Total inference time: 1.302 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064552
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.239 seconds
Refined model CLL: -0.064552


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063994
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 17.096999999999998 seconds
Total inference time: 1.302 seconds
AUC ROC: 1.0
Total revision time: 17.096999999999998
Best scored revision CLL: -0.064552


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063994, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 17.096999999999998, 'Inference time': 1.302, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067407, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.569, 'Inference time': 1.706}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5208311187321515;  // std dev = 1.126, 58.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05524947093378663;  // std dev = 2.019, 117.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.44794001991053595;  // std dev = 0.416, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14984521807318835;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10692478375237847;  // std dev = 1.08e-07, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3425179185774972;  // std dev = 0.395, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12698770243774612;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09713511567376974;  // std dev = 1.49e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2707012969501808;  // std dev = 0.357, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11757000082361749;  // std dev = 0.098, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08894337882608852;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22111185244682785;  // std dev = 0.318, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1116778502409069;  // std dev = 0.075, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08199470755578805;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18566773059428462;  // std dev = 0.035, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.10534511831084924;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07603059320040718;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1594087323881343;  // std dev = 0.254, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.08533995520637287;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07085865520884864;  // std dev = 5.67e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1272160728899134;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else if ( movie(E, B) )
%   | | then return -0.08910376493456879;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.042806318406319585;  // std dev = 0.823, 117.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067626
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.208 seconds
Total inference time: 1.666 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.07 seconds
Parameter learned model CLL: -0.069174


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 65], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.19e-07, 0, 65], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 131, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.126, 3, 55], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.019, 107, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.416, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.094, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.08e-07, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.395, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.031, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 114, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.357, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.098, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.318, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.075, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 65], 'true,true,false': [0.018, 11, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 117, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.254, 0, 65], 'true,true,true,false': [0.079, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.67e-08, 102, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 55], 'true,false,true': [0.045, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.823, 107, 10], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1237880886426584, 6.45947941600091e-17], 'true': [-8.745141363201234e-16, -1.0092936587501423e-17], 'true,false': [-1.0092936587501423e-17, nan]}, {'': [0.06966053414935142, 0.0], 'true': [2.1862853408003084e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.021865950156183058, 0.03484596137494916], 'true': [0.021865950156183058, nan], 'true,true': [0.021865950156183058, nan], 'true,true,true': [0.021865950156183058, nan]}, {'': [0.037362039969278414, 9.806970050855549e-17], 'true': [0.037362039969278414, nan], 'true,true': [0.0026630722131414223, 0.0011052982093721596], 'true,true,true': [0.0026630722131414223, nan], 'true,true,false': [0.0011052982093721596, nan]}, {'': [0.02947982459928697, 1.947759692324836e-18], 'true': [0.0024048164467181856, 0.0009381232066795753], 'true,true': [0.0024048164467181856, nan], 'true,true,true': [0.0024048164467181856, nan], 'true,false': [0.0009381232066795753, nan]}, {'': [0.022694445270941107, -7.656710514656252e-18], 'true': [0.001960078361352876, 0.0007374459230905901], 'true,true': [0.001960078361352876, nan], 'true,false': [0.0007374459230905901, nan]}, {'': [0.015112707934028214, -8.881784197001253e-19], 'true': [0.001553909094254362, 0.0005133552124546858], 'true,true': [0.001553909094254362, nan], 'true,false': [0.0005133552124546858, nan]}, {'': [0.011584774362830551, -2.2773805633336544e-17], 'true': [0.011584774362830551, nan], 'true,true': [0.0012333518512987482, 0.00032133569540387805]}, {'': [0.009627699112612523, 3.1565164425617195e-17], 'true': [0.009627699112612523, nan], 'true,true': [0.009627699112612523, nan], 'true,true,true': [0.0009901131943468003, 0.0004443866516646855]}, {'': [0.0072654439786567675, 0.005784087068657628], 'true': [-1.2111523905001707e-17, 0.00015555238492707529], 'false': [0.005784087068657628, nan], 'false,true': [0.005784087068657628, nan], 'true,false': [0.00015555238492707529, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839136;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360624;  // std dev = 7.30e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.33e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0926912761892609;  // std dev = 6.32e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839682;  // std dev = 6.66e-08, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109164;  // std dev = 5.58e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452775;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1770964977452775;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936707;  // std dev = 4.94e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5.16e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801079;  // std dev = 5.16e-08, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.11198493333134014;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.06794073997799856;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.026 seconds
Total inference time: 1.638 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.439 seconds
Refined model CLL: -0.064477


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.743 seconds
Total inference time: 1.638 seconds
AUC ROC: 1.0
Total revision time: 7.743
Best scored revision CLL: -0.064477


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.743, 'Inference time': 1.638, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067626, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.208, 'Inference time': 1.666}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.93e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45306019897323613;  // std dev = 2.678, 124.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=105 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.051396413326827754;  // std dev = 3.182, 274.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46670595323815117;  // std dev = 0.564, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1448664755025396;  // std dev = 0.141, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10729327708787263;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3553769855247221;  // std dev = 0.537, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13518806432731612;  // std dev = 0.022, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09744114085068993;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27937949142672625;  // std dev = 0.483, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11650976232272887;  // std dev = 0.097, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08920128039627818;  // std dev = 7.30e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2271373386151654;  // std dev = 0.428, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1076869175157126;  // std dev = 0.092, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08221481710618456;  // std dev = 9.06e-08, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19000924202606312;  // std dev = 0.033, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.08997193552332819;  // std dev = 0.020, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07622052247664611;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1626479101590518;  // std dev = 0.339, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return -0.08896312356278753;  // std dev = 0.077, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07102412545928692;  // std dev = 3.65e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1287631198428899;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else if ( movie(E, B) )
%   | | then return -0.087359380344959;  // std dev = 0.046, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.043024000860959914;  // std dev = 1.255, 284.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.319 seconds
Total inference time: 1.956 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069155
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.817 seconds
Parameter learned model CLL: -0.069155


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.66e-08, 0, 130], 'true,false,true': [4.93e-09, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 219, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 130], 'true,false,true,true': [0.0, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.678, 19, 105], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.182, 249, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.564, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.141, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 227, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.537, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.483, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.097, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 231, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.428, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.092, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.06e-08, 254, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 130], 'true,true,false': [0.02, 32, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.339, 0, 130], 'true,true,true,false': [0.077, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 229, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 105], 'true,false,true': [0.046, 25, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.255, 259, 25], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.15234375000000452, -2.2711411645300005e-16], 'true': [4.481884948640632e-15, 2.590520390792032e-17], 'true,false': [2.590520390792032e-17, nan]}, {'': [0.09657153654575547, -6.073014835556412e-17], 'true': [-1.7490282726402467e-15, -4.440892098500626e-18], 'true,false': [-4.440892098500626e-18, nan], 'true,false,true': [-4.440892098500626e-18, nan]}, {'': [0.05784155053494424, 0.036963971508920695], 'true': [0.05784155053494424, nan], 'true,true': [0.05784155053494424, nan], 'true,true,true': [0.05784155053494424, nan]}, {'': [0.052773753686133844, -1.2129308815288054e-16], 'true': [0.052773753686133844, nan], 'true,true': [0.0024438984204558085, 0.000794106696998238], 'true,true,true': [0.0024438984204558085, nan], 'true,true,false': [0.000794106696998238, nan]}, {'': [0.027716565933943223, -1.4441925523579274e-17], 'true': [0.002218999545730846, 0.00048032639572489734], 'true,true': [0.002218999545730846, nan], 'true,true,true': [0.002218999545730846, nan], 'true,false': [0.00048032639572489734, nan]}, {'': [0.01973142532504066, 2.3069569342860397e-17], 'true': [0.0017970656770944953, 0.00047356863363089976], 'true,true': [0.0017970656770944953, nan], 'true,false': [0.00047356863363089976, nan]}, {'': [0.01640437768039168, 3.2345080244984874e-17], 'true': [0.0014115470091144453, 0.00034163443446918687], 'true,true': [0.0014115470091144453, nan], 'true,false': [0.00034163443446918687, nan]}, {'': [0.013393113077985196, -1.8817339400426382e-18], 'true': [0.013393113077985196, nan], 'true,true': [0.001110371617139757, 0.00038662821543119195]}, {'': [0.0086320426054326, 5.8177625744549685e-18], 'true': [0.0086320426054326, nan], 'true,true': [0.0086320426054326, nan], 'true,true,true': [0.0008844310808958866, 0.00026828739425117676]}, {'': [0.007271057353987698, 0.005546510556780991], 'true': [-1.2053849981644556e-16, 8.305067010652589e-05], 'false': [0.005546510556780991, nan], 'false,true': [0.005546510556780991, nan], 'true,false': [8.305067010652478e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048827;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.12544463852839174;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360679;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2.53e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.09269127618926055;  // std dev = 6.32e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5.96e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839682;  // std dev = 1.75e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839678;  // std dev = 7.45e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.0787767547310915;  // std dev = 7.45e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527766;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527791;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333671;  // std dev = 1.20e-07, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.10917990556045343;  // std dev = 0.088, 66.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=53 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1527438580936712;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | | else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 4.71e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1356703250154612;  // std dev = 0.025, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else return -0.0652900614622967;  // std dev = 0.016, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13791088123137926;  // std dev = 0.011, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.07091844603618304;  // std dev = 0.020, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063634
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.662 seconds
Total inference time: 1.77 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064704
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.713 seconds
Refined model CLL: -0.064704


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063634
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.511 seconds
Total inference time: 1.77 seconds
AUC ROC: 1.0
Total revision time: 10.511
Best scored revision CLL: -0.064704


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063634, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.511, 'Inference time': 1.77, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067632, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.319, 'Inference time': 1.956}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.59e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2.42e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4605043974652054;  // std dev = 3.153, 183.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=157 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04966959555727107;  // std dev = 3.918, 405.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46546701621521414;  // std dev = 0.702, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1506512333076258;  // std dev = 0.168, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10745878635897155;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3545524099137971;  // std dev = 0.668, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12983409861019987;  // std dev = 0.025, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09757853858676632;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27884082016124545;  // std dev = 0.601, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11601078382743972;  // std dev = 0.125, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08931703287765097;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22677474524852428;  // std dev = 0.533, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10043244049676953;  // std dev = 0.121, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0823135788590253;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1897552714765733;  // std dev = 0.034, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.09228826677579376;  // std dev = 0.020, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07630572089576887;  // std dev = 1.11e-07, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1624632158305321;  // std dev = 0.422, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return -0.08908012587753691;  // std dev = 0.100, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07109833549246766;  // std dev = 1.05e-07, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12831049453999235;  // std dev = 1.21e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | else if ( movie(E, B) )
%   | | then return -0.08435179772197843;  // std dev = 0.064, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04107932016749922;  // std dev = 1.543, 397.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.305 seconds
Total inference time: 1.802 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069468
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.967 seconds
Parameter learned model CLL: -0.069468


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 195], 'true,false,true': [5.59e-09, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.42e-07, 370, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 195], 'true,false,true,true': [0.0, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 380, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.153, 26, 157], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.918, 367, 38]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.702, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.168, 40, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 336, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.668, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 337, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.601, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.125, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 356, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.533, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.121, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 358, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 195], 'true,true,false': [0.02, 32, 0], 'true,false': [0.0, 0, 0], 'false': [1.11e-07, 338, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.422, 0, 195], 'true,true,true,false': [0.1, 34, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-07, 339, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.21e-07, 0, 157], 'true,false,true': [0.064, 29, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.543, 359, 38], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11835304252487057, 1.584318262167791e-16], 'true': [5.975846598187509e-15, 2.5069552168955147e-17], 'true,false': [2.5069552168955147e-17, nan]}, {'': [0.0883706468858349, -1.1219095827791056e-16], 'true': [-3.643808901333847e-15, -3.3643121958338078e-18], 'true,false': [-3.3643121958338078e-18, nan], 'true,false,true': [-3.3643121958338078e-18, nan]}, {'': [0.054338946921565975, 0.037903560802872015], 'true': [0.054338946921565975, nan], 'true,true': [0.054338946921565975, nan], 'true,true,true': [0.054338946921565975, nan]}, {'': [0.055830343244799206, -2.114710523095536e-17], 'true': [0.055830343244799206, nan], 'true,true': [0.0025245102391841974, 0.0007076366278461032], 'true,true,true': [0.0025245102391841974, nan], 'true,true,false': [0.0007076366278461032, nan]}, {'': [0.033474635237545805, -4.348648048976874e-17], 'true': [0.0022887543943690904, 0.0006218521052330168], 'true,true': [0.0022887543943690904, nan], 'true,true,true': [0.0022887543943690904, nan], 'true,false': [0.0006218521052330168, nan]}, {'': [0.020120469690615556, -1.0977486086181323e-16], 'true': [0.0018528588801109672, 0.0005074269945772672], 'true,true': [0.0018528588801109672, nan], 'true,false': [0.0005074269945772672, nan]}, {'': [0.013991675266745508, -6.326410531383573e-17], 'true': [0.0014554165228534161, 0.0004700886288707702], 'true,true': [0.0014554165228534161, nan], 'true,false': [0.0004700886288707702, nan]}, {'': [0.010672455327453615, 3.613151855288971e-17], 'true': [0.010672455327453615, nan], 'true,true': [0.0011450566440775497, 0.0003953771484020187]}, {'': [0.008819726326393447, 3.274994172935565e-17], 'true': [0.008819726326393447, nan], 'true,true': [0.008819726326393447, nan], 'true,true,true': [0.0009122189762866885, 0.000291954805164673]}, {'': [0.005974110944083291, 0.005996676427650465], 'false': [0.005996676427650465, nan], 'false,true': [0.005996676427650465, nan], 'true': [9.334359187931253e-17, 0.00014270976396479033], 'true,false': [0.00014270976396478938, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.14185106490048768;  // std dev = 1.81e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839213;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360685;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.35124423348007927;  // std dev = 0.173, 94.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830947;  // std dev = 3.15e-07, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 6.99e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3268535822162661;  // std dev = 0.101, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11708676820968475;  // std dev = 0.125, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926054;  // std dev = 1.62e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2593726797179626;  // std dev = 0.088, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0984835326965863;  // std dev = 0.115, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08518475138839678;  // std dev = 9.66e-08, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21272889538910658;  // std dev = 0.077, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.08856673096973985;  // std dev = 0.105, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07877675473109147;  // std dev = 2.11e-08, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17927796872843726;  // std dev = 0.067, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.0897690916081042;  // std dev = 0.099, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333698;  // std dev = 9.31e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15943122422187977;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | | else return -0.09776803496948115;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.12260690829203501;  // std dev = 0.073, 130.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=113 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420315;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13687161504442727;  // std dev = 0.021, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | else return -0.07762237621066544;  // std dev = 0.055, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1384714124351085;  // std dev = 0.009, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.07799767986924004;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06419184008202598;  // std dev = 1.15e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06397
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.903 seconds
Total inference time: 1.51 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065572
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.487 seconds
Refined model CLL: -0.065572


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06397
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.662 seconds
Total inference time: 1.51 seconds
AUC ROC: 1.0
Total revision time: 11.662
Best scored revision CLL: -0.065572


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:09
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06397, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.662, 'Inference time': 1.51, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06785, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.305, 'Inference time': 1.802}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.68e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048718;  // std dev = 2.95e-07, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.454684107509315;  // std dev = 3.793, 252.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=214 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05425700298144239;  // std dev = 4.327, 529.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=46 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46457062413514283;  // std dev = 0.779, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1472801834395422;  // std dev = 0.195, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10701959335622696;  // std dev = 0.000, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35385054472097605;  // std dev = 0.742, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13199461543352606;  // std dev = 0.024, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09721386868223912;  // std dev = 2.62e-07, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27831458522037195;  // std dev = 0.669, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1197030077374736;  // std dev = 0.151, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08900975907651468;  // std dev = 1.38e-07, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22637753381091208;  // std dev = 0.593, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10492344508358542;  // std dev = 0.141, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08205136912563653;  // std dev = 0.000, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18944895259848127;  // std dev = 0.033, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.09750616813038203;  // std dev = 0.017, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07607949199676481;  // std dev = 0.000, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16222135646829366;  // std dev = 0.470, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return -0.09126988207188873;  // std dev = 0.105, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07090126170997728;  // std dev = 0.000, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1293081227798645;  // std dev = 1.21e-07, 214.000 (wgt'ed) examples reached here.  /* #pos=214 */
%   | else if ( movie(E, B) )
%   | | then return -0.08556684126431512;  // std dev = 0.075, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04244447992054965;  // std dev = 1.710, 513.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067554
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.174 seconds
Total inference time: 1.872 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.814 seconds
Parameter learned model CLL: -0.06909


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 260], 'true,false,true': [7.68e-09, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.95e-07, 468, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 260], 'true,false,true,true': [0.0, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 480, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.793, 38, 214], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.327, 483, 46]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.779, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.195, 50, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 465, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.742, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.62e-07, 464, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.669, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.151, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.38e-07, 465, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.593, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.141, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 468, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 260], 'true,true,false': [0.017, 36, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 459, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.47, 0, 260], 'true,true,true,false': [0.105, 51, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 507, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.21e-07, 0, 214], 'true,false,true': [0.075, 57, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.71, 467, 46], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.14065673835601467, 1.8598607933891512e-16], 'true': [4.372570681600617e-15, 5.86532918669894e-17], 'true,false': [5.86532918669894e-17, nan]}, {'': [0.08097011483536762, -1.27675647831893e-16], 'true': [-4.481884948640632e-15, -2.2773805633336544e-17], 'true,false': [-2.2773805633336544e-17, nan], 'true,false,true': [-2.2773805633336544e-17, nan]}, {'': [0.05708692957906354, 0.035394356025281674], 'true': [0.05708692957906354, nan], 'true,true': [0.05708692957906354, nan], 'true,true,true': [0.05708692957906354, nan]}, {'': [0.052720638987445306, -1.5662501164604358e-16], 'true': [0.052720638987445306, nan], 'true,true': [0.0023316615591781444, 0.0007627835829914665], 'true,true,true': [0.0023316615591781444, nan], 'true,true,false': [0.0007627835829914665, nan]}, {'': [0.03064361190104622, 1.4739167740713286e-16], 'true': [0.0021196839950406708, 0.0005665630713456521], 'true,true': [0.0021196839950406708, nan], 'true,true,true': [0.0021196839950406708, nan], 'true,false': [0.0005665630713456521, nan]}, {'': [0.024322924804876155, 4.1066314029145573e-17], 'true': [0.0017201948203585278, 0.00041447598440789155], 'true,true': [0.0017201948203585278, nan], 'true,false': [0.00041447598440789155, nan]}, {'': [0.016047742149936945, -8.540177112501205e-18], 'true': [0.0013539369648697516, 0.0003984709178426682], 'true,true': [0.0013539369648697516, nan], 'true,false': [0.0003984709178426682, nan]}, {'': [0.00977035116718019, -6.579099405186112e-17], 'true': [0.00977035116718019, nan], 'true,true': [0.0010669450697946012, 0.0002997613182352008]}, {'': [0.00955611108244233, -7.708057291283138e-17], 'true': [0.00955611108244233, nan], 'true,true': [0.00955611108244233, nan], 'true,true,true': [0.0008511001583984435, 0.00021424417730368006]}, {'': [0.0076893675622308035, 0.005701923660931116], 'true': [6.848104637874797e-17, 9.826720578013839e-05], 'false': [0.005701923660931116, nan], 'false,true': [0.005701923660931116, nan], 'true,false': [9.826720578013935e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048718;  // std dev = 3.01e-07, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.12544463852839227;  // std dev = 0.000, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.112316378193606;  // std dev = 0.000, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.10159632948783627;  // std dev = 1.97e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878357;  // std dev = 2.76e-07, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.33e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.09269127618926078;  // std dev = 1.78e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.08518475138839679;  // std dev = 1.43e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109158;  // std dev = 2.08e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527722;  // std dev = 4.21e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333759;  // std dev = 0.000, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.0684269778442027;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420347;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 9.19e-08, 214.000 (wgt'ed) examples reached here.  /* #pos=214 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801134;  // std dev = 1.05e-08, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06419184008202566;  // std dev = 2.05e-07, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.333 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.469 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.790000000000001 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0
Total revision time: 13.790000000000001
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.790000000000001, 'Inference time': 1.431, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067554, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.174, 'Inference time': 1.872}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 8.33e-09, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0.000, 576.000 (wgt'ed) examples reached here.  /* #neg=576 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48995156636365833;  // std dev = 3.415, 296.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=267 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05463953180787685;  // std dev = 4.902, 683.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4579917745777585;  // std dev = 0.941, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14571772537200534;  // std dev = 0.239, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10698304194847462;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34946285910906827;  // std dev = 0.895, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13730352433277132;  // std dev = 0.025, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09718350878213777;  // std dev = 2.90e-07, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2754358439983523;  // std dev = 0.806, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1150887899374587;  // std dev = 0.183, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08898416991141345;  // std dev = 2.25e-07, 660.000 (wgt'ed) examples reached here.  /* #neg=660 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22443124023865652;  // std dev = 0.716, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10519393188673694;  // std dev = 0.171, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08202952714468831;  // std dev = 0.000, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18808040583831595;  // std dev = 0.035, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.09816762742016921;  // std dev = 0.020, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07606064294345809;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16122280363851646;  // std dev = 0.569, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return -0.09034693762382615;  // std dev = 0.122, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07088483855259471;  // std dev = 3.19e-07, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12739407218221285;  // std dev = 1.12e-07, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( movie(E, B) )
%   | | then return -0.08661770493358925;  // std dev = 0.088, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04129964946222485;  // std dev = 1.955, 634.000 (wgt'ed) examples reached here.  /* #neg=575 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067677
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.167 seconds
Total inference time: 2.078 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069308
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.375 seconds
Parameter learned model CLL: -0.069308


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.77e-08, 0, 326], 'true,false,true': [8.33e-09, 70, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 576, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 326], 'true,false,true,true': [0.0, 63, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 591, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.415, 29, 267], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.902, 624, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.941, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.239, 58, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 620, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.895, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 61, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.9e-07, 625, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.806, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.183, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.25e-07, 660, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.716, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.171, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 610, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 326], 'true,true,false': [0.02, 61, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 622, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.569, 0, 326], 'true,true,true,false': [0.122, 46, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.19e-07, 587, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.12e-07, 0, 267], 'true,false,true': [0.088, 54, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.955, 575, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.14552086521783797, -2.312964634635743e-16], 'true': [3.400143152717044e-15, 6.97854472621527e-17], 'true,false': [6.97854472621527e-17, nan]}, {'': [0.09689204534076232, -2.0739191525992772e-16], 'true': [-5.056623150194578e-15, -4.053195169266444e-17], 'true,false': [-4.053195169266444e-17, nan], 'true,false,true': [-4.053195169266444e-17, nan]}, {'': [0.03939727952882354, 0.03518322054267558], 'true': [0.03939727952882354, nan], 'true,true': [0.03939727952882354, nan], 'true,true,true': [0.03939727952882354, nan]}, {'': [0.049187614059427474, -3.294855427919819e-17], 'true': [0.049187614059427474, nan], 'true,true': [0.0027139429956110515, 0.0009859611742339268], 'true,true,true': [0.0027139429956110515, nan], 'true,true,false': [0.0009859611742339268, nan]}, {'': [0.03362622828186682, 1.3500311979441903e-16], 'true': [0.0024556052317232435, 0.0006160718301734931], 'true,true': [0.0024556052317232435, nan], 'true,true,true': [0.0024556052317232435, nan], 'true,false': [0.0006160718301734931, nan]}, {'': [0.020147785918492287, 7.670631806501082e-17], 'true': [0.001993407713966637, 0.0006320335144729531], 'true,true': [0.001993407713966637, nan], 'true,false': [0.0006320335144729531, nan]}, {'': [0.015177565884999338, -7.862563059640452e-17], 'true': [0.0015718135348668522, 0.0005104205536290838], 'true,true': [0.0015718135348668522, nan], 'true,false': [0.0005104205536290838, nan]}, {'': [0.01198697933552892, -3.070070100249629e-17], 'true': [0.01198697933552892, nan], 'true,true': [0.0012411439819839606, 0.00039288748789725105]}, {'': [0.007767617049876493, 1.7324774966893415e-16], 'true': [0.007767617049876493, nan], 'true,true': [0.007767617049876493, nan], 'true,true,true': [0.0009918918688138032, 0.00032540531043543546]}, {'': [0.006432877103143073, 0.006029271794823318], 'true': [4.6571153092890464e-17, 0.00014368778897883017], 'false': [0.006029271794823318, nan], 'false,true': [0.006029271794823318, nan], 'true,false': [0.00014368778897882708, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048838;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1254446385283923;  // std dev = 0.000, 568.000 (wgt'ed) examples reached here.  /* #neg=568 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360588;  // std dev = 0.000, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783509;  // std dev = 4.39e-07, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.09269127618926136;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109168;  // std dev = 3.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.0787767547310921;  // std dev = 0.000, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333716;  // std dev = 4.21e-08, 560.000 (wgt'ed) examples reached here.  /* #neg=560 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420361;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801129;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.06419184008202616;  // std dev = 9.13e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( actor(B) )
%   | then return -0.0641918400820252;  // std dev = 2.49e-07, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.1340070300080114;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.0641918400820261;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202619;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.909 seconds
Total inference time: 1.522 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.823 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.274 seconds
Total inference time: 1.522 seconds
AUC ROC: 1.0
Total revision time: 16.274
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.274, 'Inference time': 1.522, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067677, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.167, 'Inference time': 2.078}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.49177759722819886;  // std dev = 1.556, 63.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07551496319691944;  // std dev = 1.717, 127.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4484623822074025;  // std dev = 0.352, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15610203858010493;  // std dev = 0.101, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10500495272576714;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3425818928749656;  // std dev = 0.336, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.150380462764628;  // std dev = 3.23e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09553805170264856;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27056031949002235;  // std dev = 0.304, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11711096436891298;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08759550996085314;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22089846263884516;  // std dev = 0.272, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10559220670917913;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08084290803931381;  // std dev = 5.05e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18543915442098147;  // std dev = 0.030, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.0883354043836432;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07503563426167316;  // std dev = 1.49e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15918781709593968;  // std dev = 0.218, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.09629016469265708;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0699909920489159;  // std dev = 3.94e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1305017172341074;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( movie(E, B) )
%   | | then return -0.08760380055160455;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05045108822208823;  // std dev = 0.707, 128.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066688
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.202 seconds
Total inference time: 1.969 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067567
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.815 seconds
Parameter learned model CLL: -0.067567


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 64], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [8.43e-08, 0, 64], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 138, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.556, 6, 57], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.717, 120, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.352, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.101, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 119, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.336, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.23e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 104, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.304, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.063, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 119, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.272, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.057, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.05e-08, 108, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.03, 0, 64], 'true,true,false': [0.022, 13, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.218, 0, 64], 'true,true,true,false': [0.039, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.94e-08, 126, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 57], 'true,false,true': [0.034, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.707, 121, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0987654320987646, 6.344131569286608e-17], 'true': [-8.881784197001252e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.08934686307119757, 0.0], 'true': [1.1102230246251565e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.03841363485693928, 0.023217328213000682], 'true': [0.03841363485693928, nan], 'true,true': [0.03841363485693928, nan], 'true,true,true': [0.03841363485693928, nan]}, {'': [0.05302835488616846, -2.239105259748215e-17], 'true': [0.05302835488616846, nan], 'true,true': [0.001933159018193853, 0.0007832736548416669], 'true,true,true': [0.001933159018193853, nan], 'true,true,false': [0.0007832736548416669, nan]}, {'': [0.023186768639683122, -1.4945309946877107e-17], 'true': [0.0017639033111392782, 3.96508223080413e-18], 'true,true': [0.0017639033111392782, nan], 'true,true,true': [0.0017639033111392782, nan], 'true,false': [3.96508223080413e-18, nan]}, {'': [0.014717558105321016, -2.332401312237724e-17], 'true': [0.0014481431158599456, 0.0005661271451458989], 'true,true': [0.0014481431158599456, nan], 'true,false': [0.0005661271451458989, nan]}, {'': [0.010559956852752425, 2.3643638487387593e-17], 'true': [0.0011541201957354502, 0.0004695008300830218], 'true,true': [0.0011541201957354502, nan], 'true,false': [0.0004695008300830218, nan]}, {'': [0.011363509262396517, 1.8817339400426382e-18], 'true': [0.011363509262396517, nan], 'true,true': [0.0009196967986441276, 0.00048101205248728986]}, {'': [0.008289081330346811, 1.2335811384723961e-17], 'true': [0.008289081330346811, nan], 'true,true': [0.008289081330346811, nan], 'true,true,true': [0.0007406241236856508, 0.0001503432983624986]}, {'': [0.0068511423118881535, 0.003903801822289006], 'true': [-4.285071323114639e-17, 9.709782018765822e-05], 'false': [0.003903801822289006, nan], 'false,true': [0.003903801822289006, nan], 'true,false': [9.709782018765822e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839133;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.02e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10370450875246079;  // std dev = 0.156, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09319277739148989;  // std dev = 0.073, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.0860749534437222;  // std dev = 0.096, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08065479552260761;  // std dev = 0.126, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07345909986086849;  // std dev = 0.060, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06909107986961499;  // std dev = 0.079, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.06411689669451845;  // std dev = 0.000335, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B), actor(A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.06429478210496789;  // std dev = 0.053, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063127
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.874 seconds
Total inference time: 1.536 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.272 seconds
Refined model CLL: -0.064734


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063127
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.163 seconds
Total inference time: 1.536 seconds
AUC ROC: 1.0
Total revision time: 7.163
Best scored revision CLL: -0.064734


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063127, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.163, 'Inference time': 1.536, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066688, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.202, 'Inference time': 1.969}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45778202533199214;  // std dev = 2.689, 130.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=111 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0664450397626213;  // std dev = 2.734, 262.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45959899895282713;  // std dev = 0.513, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1344701581842749;  // std dev = 0.125, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10586039308255846;  // std dev = 1.69e-07, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3502914499810039;  // std dev = 0.490, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13780412867130837;  // std dev = 0.022, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09625023173348522;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27582354634460515;  // std dev = 0.443, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11981652158871837;  // std dev = 0.086, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08819697114051567;  // std dev = 8.02e-08, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22459395224303672;  // std dev = 0.394, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10832800511324991;  // std dev = 0.088, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08135717668893432;  // std dev = 8.56e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18812944529583872;  // std dev = 0.031, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08755362088078159;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07548010101558583;  // std dev = 0.000, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16121391387285466;  // std dev = 0.314, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.0824350117783421;  // std dev = 0.093, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07037876683203365;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13066909801938567;  // std dev = 2.98e-08, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else if ( movie(E, B) )
%   | | then return -0.08831818150334306;  // std dev = 0.043, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04727373156323501;  // std dev = 1.098, 263.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067238
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.744 seconds
Total inference time: 1.835 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.308 seconds
Parameter learned model CLL: -0.068346


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 129], 'true,false,true': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 212, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 129], 'true,false,true,true': [0.0, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.689, 19, 111], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.734, 244, 18]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.513, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.125, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.69e-07, 228, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.49, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 232, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.443, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.086, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.02e-08, 216, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.394, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.088, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.56e-08, 233, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.031, 0, 129], 'true,true,false': [0.021, 14, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 258, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.314, 0, 129], 'true,true,true,false': [0.093, 24, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 248, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.98e-08, 0, 111], 'true,false,true': [0.043, 18, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.098, 245, 18], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0883172771284705, -2.304236466203155e-16], 'true': [4.40646657835721e-15, -1.1895246692412391e-17], 'true,false': [-1.1895246692412391e-17, nan]}, {'': [0.08595193610080533, -6.099079276910731e-17], 'true': [-1.7625866313428842e-15, -2.64338815386942e-18], 'true,false': [-2.64338815386942e-18, nan], 'true,false,true': [-2.64338815386942e-18, nan]}, {'': [0.055632717156274304, 0.028523324679210225], 'true': [0.055632717156274304, nan], 'true,true': [0.055632717156274304, nan], 'true,true,true': [0.055632717156274304, nan]}, {'': [0.0382164092444222, 1.246566203087895e-16], 'true': [0.0382164092444222, nan], 'true,true': [0.002038119266048892, 0.0009208334915722992], 'true,true,true': [0.002038119266048892, nan], 'true,true,false': [0.0009208334915722992, nan]}, {'': [0.0293617299545437, -1.914177628664063e-17], 'true': [0.0018606894941201537, 0.00048430727936299987], 'true,true': [0.0018606894941201537, nan], 'true,true,true': [0.0018606894941201537, nan], 'true,false': [0.00048430727936299987, nan]}, {'': [0.016768348563595596, 2.9811544179749577e-17], 'true': [0.0015188405470145075, 0.0004588367907108846], 'true,true': [0.0015188405470145075, nan], 'true,false': [0.0004588367907108846, nan]}, {'': [0.014429901559962351, 3.144837752157096e-17], 'true': [0.0012020567016730996, 0.0003668172989611925], 'true,true': [0.0012020567016730996, nan], 'true,false': [0.0003668172989611925, nan]}, {'': [0.00761222503412002, -2.495850210397639e-17], 'true': [0.00761222503412002, nan], 'true,true': [0.0009517135210547795, 0.00042360046163174194]}, {'': [0.008551026987030943, -4.297637514678025e-17], 'true': [0.008551026987030943, nan], 'true,true': [0.008551026987030943, nan], 'true,true,true': [0.000762134869657387, 0.000363648475713272]}, {'': [0.005771775167120528, 0.004585299161889383], 'true': [8.001607384685813e-18, 0.00010041525741043123], 'false': [0.004585299161889383, nan], 'false,true': [0.004585299161889383, nan], 'true,false': [0.00010041525741043432, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1418510649004884;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839177;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360674;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 1.84e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.09269127618926057;  // std dev = 5.96e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.08518475138839678;  // std dev = 7.45e-08, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 1.55e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.0787767547310915;  // std dev = 8.30e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333677;  // std dev = 1.05e-07, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367097;  // std dev = 2.58e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15274385809367108;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | | else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 4.71e-08, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801087;  // std dev = 7.15e-08, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else return -0.06419184008202616;  // std dev = 8.33e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 2.36e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.315 seconds
Total inference time: 1.639 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064278
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.058 seconds
Refined model CLL: -0.064278


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.424999999999999 seconds
Total inference time: 1.639 seconds
AUC ROC: 1.0
Total revision time: 9.424999999999999
Best scored revision CLL: -0.064278


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.424999999999999, 'Inference time': 1.639, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067238, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.744, 'Inference time': 1.835}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.17e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048757;  // std dev = 2.19e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283921;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45451851157307005;  // std dev = 3.313, 192.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06044127227095833;  // std dev = 3.570, 399.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=31 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4626797251180957;  // std dev = 0.653, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.144467621505984;  // std dev = 0.165, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10643001972149654;  // std dev = 1.56e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3524874242649219;  // std dev = 0.624, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13035934713670913;  // std dev = 0.025, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09672396480720412;  // std dev = 1.52e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27735596432637677;  // std dev = 0.563, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12089965049798895;  // std dev = 0.114, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08859669422899928;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22568881421151138;  // std dev = 0.500, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10330585338472181;  // std dev = 0.143, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0816986854418635;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1889381134030514;  // std dev = 0.032, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.09817383763752813;  // std dev = 0.017, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07577505502149402;  // std dev = 9.66e-08, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1618305306135311;  // std dev = 0.397, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.08989592200835704;  // std dev = 0.080, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07063594464430871;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12998160317237994;  // std dev = 6.32e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(E, B) )
%   | | then return -0.08261168725865502;  // std dev = 0.079, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.044236126130648944;  // std dev = 1.419, 382.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067569
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.489 seconds
Total inference time: 1.855 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0687
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.221 seconds
Parameter learned model CLL: -0.0687


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 194], 'true,false,true': [4.17e-09, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.19e-07, 357, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 194], 'true,false,true,true': [0.0, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 321, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.313, 29, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.57, 368, 31]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.653, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.165, 33, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.56e-07, 345, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.624, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.52e-07, 373, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.563, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.114, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 328, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.5, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.143, 47, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 345, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 194], 'true,true,false': [0.017, 29, 0], 'true,false': [0.0, 0, 0], 'false': [9.66e-08, 328, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.397, 0, 194], 'true,true,true,false': [0.08, 25, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 363, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [6.32e-08, 0, 163], 'true,false,true': [0.079, 44, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.419, 351, 31], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10112382977836731, 1.3434631558489288e-16], 'true': [6.15315358802561e-15, 1.3322676295501878e-17], 'true,false': [1.3322676295501878e-17, nan]}, {'': [0.08280491674400434, -1.0790952762711802e-16], 'true': [-3.516087764586063e-15, -7.401486830834377e-18], 'true,false': [-7.401486830834377e-18, nan], 'true,false,true': [-7.401486830834377e-18, nan]}, {'': [0.057164122548758654, 0.03194509013325319], 'true': [0.057164122548758654, nan], 'true,true': [0.057164122548758654, nan], 'true,true,true': [0.057164122548758654, nan]}, {'': [0.04779910438293934, 7.079683055580708e-17], 'true': [0.04779910438293934, nan], 'true,true': [0.0022001645562888337, 0.0008267766568658164], 'true,true,true': [0.0022001645562888337, nan], 'true,true,false': [0.0008267766568658164, nan]}, {'': [0.030145482845881668, 6.191056008633581e-17], 'true': [0.00200468440630206, 0.0006191844359296067], 'true,true': [0.00200468440630206, nan], 'true,true,true': [0.00200468440630206, nan], 'true,false': [0.0006191844359296067, nan]}, {'': [0.020735147600560215, -2.572467983887558e-17], 'true': [0.0016312547406800231, 0.00040266735830936373], 'true,true': [0.0016312547406800231, nan], 'true,false': [0.00040266735830936373, nan]}, {'': [0.018113110119679306, -2.703151712130816e-17], 'true': [0.0012870675594378028, 0.00043635088303537557], 'true,true': [0.0012870675594378028, nan], 'true,false': [0.00043635088303537557, nan]}, {'': [0.01024918644070016, 2.843254087454669e-17], 'true': [0.01024918644070016, nan], 'true,true': [0.0010163189175347285, 0.00030063596817183507]}, {'': [0.007156233636323638, -1.4680635036365707e-17], 'true': [0.007156233636323638, nan], 'true,true': [0.007156233636323638, nan], 'true,true,true': [0.000812070608039805, 0.00025431705442556686]}, {'': [0.007594661579091877, 0.0052720650486229705], 'true': [2.4520263120555605e-17, 0.0001403829623412428], 'false': [0.0052720650486229705, nan], 'false,true': [0.0052720650486229705, nan], 'true,false': [0.00014038296234124409, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1418510649004876;  // std dev = 2.09e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1254446385283922;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.11231637819360686;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.33099526521728634;  // std dev = 0.193, 102.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=85 */
%   | | else return 0.3584279029302933;  // std dev = 0.165, 123.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783646;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33640260523319615;  // std dev = 0.042, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.13828121569533477;  // std dev = 0.008, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.09269127618926055;  // std dev = 1.63e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26585481095194685;  // std dev = 0.037, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12230857369988395;  // std dev = 0.008, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.08518475138839678;  // std dev = 1.03e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21727760451899586;  // std dev = 0.032, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10936064217237834;  // std dev = 0.009, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109148;  // std dev = 4.71e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18259360631765548;  // std dev = 0.028, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.09934972833830981;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333699;  // std dev = 9.54e-08, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1569019364528241;  // std dev = 0.025, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.09103359369064071;  // std dev = 0.007, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420318;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13699754934146288;  // std dev = 0.020, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07831255808286791;  // std dev = 0.047, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.138547997161482;  // std dev = 0.007, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.08380535927424462;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06419184008202597;  // std dev = 1.22e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.138 seconds
Total inference time: 1.546 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.187 seconds
Refined model CLL: -0.065748


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.034999999999998 seconds
Total inference time: 1.546 seconds
AUC ROC: 1.0
Total revision time: 12.034999999999998
Best scored revision CLL: -0.065748


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064347, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.034999999999998, 'Inference time': 1.546, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067569, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.489, 'Inference time': 1.855}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.72e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048738;  // std dev = 2.31e-07, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 452.000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4839271232136196;  // std dev = 3.217, 243.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=217 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06057711947132746;  // std dev = 4.156, 542.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=42 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4569213858796994;  // std dev = 0.803, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14835268141637767;  // std dev = 0.172, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10641710098067089;  // std dev = 0.000, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34863054069473914;  // std dev = 0.765, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13240476559981668;  // std dev = 0.027, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09671322527194802;  // std dev = 7.88e-08, 449.000 (wgt'ed) examples reached here.  /* #neg=449 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2748126155886985;  // std dev = 0.690, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11186354792211692;  // std dev = 0.156, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08858763569213486;  // std dev = 0.000, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22396051239153228;  // std dev = 0.613, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10484947116559384;  // std dev = 0.147, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08169094852039625;  // std dev = 0.000, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1877169710500103;  // std dev = 0.034, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.10228354328267059;  // std dev = 0.017, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07576837458254106;  // std dev = 7.60e-08, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1609355042045557;  // std dev = 0.488, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return -0.08725264301312649;  // std dev = 0.116, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07063012116569588;  // std dev = 0.000, 501.000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12847312089019886;  // std dev = 1.69e-07, 217.000 (wgt'ed) examples reached here.  /* #pos=217 */
%   | else if ( movie(E, B) )
%   | | then return -0.08651624468646966;  // std dev = 0.067, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04257093137348624;  // std dev = 1.663, 486.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06774
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.16 seconds
Total inference time: 1.789 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068891
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.955 seconds
Parameter learned model CLL: -0.068891


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 259], 'true,false,true': [6.72e-09, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.31e-07, 487, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 259], 'true,false,true,true': [0.0, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 452, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.217, 26, 217], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.156, 500, 42]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.803, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.172, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 489, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.765, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 449, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.69, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.156, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 463, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.613, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.147, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 495, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 259], 'true,true,false': [0.017, 35, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 472, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.488, 0, 259], 'true,true,true,false': [0.116, 37, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 501, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.69e-07, 0, 217], 'true,false,true': [0.067, 31, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.663, 444, 42], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12211087233016515, 1.0942649934703801e-16], 'true': [4.499189523731908e-15, 4.6474452193611206e-17], 'true,false': [4.6474452193611206e-17, nan]}, {'': [0.0857127126918689, -1.2968976924824838e-16], 'true': [-4.499189523731908e-15, -2.6433881538694202e-17], 'true,false': [-2.6433881538694202e-17, nan], 'true,false,true': [-2.6433881538694202e-17, nan]}, {'': [0.042595226438845224, 0.03186846301346342], 'true': [0.042595226438845224, nan], 'true,true': [0.042595226438845224, nan], 'true,true,true': [0.042595226438845224, nan]}, {'': [0.038171056958034494, -2.415699996321404e-16], 'true': [0.038171056958034494, nan], 'true,true': [0.002486712834025925, 0.0009211677129178988], 'true,true,true': [0.002486712834025925, nan], 'true,true,false': [0.0009211677129178988, nan]}, {'': [0.03380718645695903, 1.3846879594434024e-17], 'true': [0.002257011718807859, 0.0007058218224246957], 'true,true': [0.002257011718807859, nan], 'true,true,true': [0.002257011718807859, nan], 'true,false': [0.0007058218224246957, nan]}, {'': [0.018043303882933612, -5.1794421883160653e-17], 'true': [0.0018373733105137167, 0.0006561693908612465], 'true,true': [0.0018373733105137167, nan], 'true,false': [0.0006561693908612465, nan]}, {'': [0.014302198318538527, -1.6148698540002276e-17], 'true': [0.0014521766193713464, 0.0005139477359688283], 'true,true': [0.0014521766193713464, nan], 'true,false': [0.0005139477359688283, nan]}, {'': [0.009868080193950262, 1.2231270610277148e-17], 'true': [0.009868080193950262, nan], 'true,true': [0.0011488483473092882, 0.0003020378212571839]}, {'': [0.007587190219118965, -6.648042063623691e-17], 'true': [0.007587190219118965, nan], 'true,true': [0.007587190219118965, nan], 'true,true,true': [0.0009195374059718478, 0.0003630730442206727]}, {'': [0.005073424979605694, 0.005689820862880068], 'false': [0.005689820862880068, nan], 'false,true': [0.005689820862880068, nan], 'true': [1.3097561949494934e-16, 0.00014452593966881965], 'true,false': [0.00014452593966881607, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.12544463852839227;  // std dev = 0.000, 452.000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360624;  // std dev = 0.000, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583094;  // std dev = 3.32e-07, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.41751358415830897;  // std dev = 4.26e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783567;  // std dev = 2.87e-07, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 1.98e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.09269127618926082;  // std dev = 1.71e-07, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.255172242569488;  // std dev = 4.99e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839679;  // std dev = 1.40e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253556;  // std dev = 9.42e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07877675473109147;  // std dev = 2.14e-07, 437.000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527725;  // std dev = 1.69e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936717;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420343;  // std dev = 0.000, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 1.41e-07, 217.000 (wgt'ed) examples reached here.  /* #pos=217 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( actor(B) )
%   | then return -0.06419184008202543;  // std dev = 2.38e-07, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.12939775395940606;  // std dev = 0.196, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.448 seconds
Total inference time: 1.67 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064282
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.21 seconds
Refined model CLL: -0.064282


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.773 seconds
Total inference time: 1.67 seconds
AUC ROC: 1.0
Total revision time: 13.773
Best scored revision CLL: -0.064282


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.773, 'Inference time': 1.67, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06774, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.16, 'Inference time': 1.789}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.68e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48544019599244287;  // std dev = 3.517, 296.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=265 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.051804418007042316;  // std dev = 4.891, 651.000 (wgt'ed) examples reached here.  /* #neg=592 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4589227117563716;  // std dev = 0.927, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14240901148965093;  // std dev = 0.250, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10725420407730674;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35008064859784216;  // std dev = 0.882, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13675117156768551;  // std dev = 0.025, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09740869946989512;  // std dev = 1.07e-07, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27583935299005224;  // std dev = 0.795, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11293346759438767;  // std dev = 0.170, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08917394621928229;  // std dev = 0.000, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2247027530428159;  // std dev = 0.705, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11024329818456295;  // std dev = 0.167, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08219149257732711;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18827035376120788;  // std dev = 0.035, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.09130863282649827;  // std dev = 0.021, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07620039923973726;  // std dev = 0.000, 566.000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16136066595616305;  // std dev = 0.560, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return -0.09120743240157629;  // std dev = 0.122, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07100659610071605;  // std dev = 2.29e-07, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12761209343596455;  // std dev = 1.43e-07, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( movie(E, B) )
%   | | then return -0.0881101562241389;  // std dev = 0.081, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.042500210576263485;  // std dev = 1.953, 664.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.027 seconds
Total inference time: 1.924 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069264
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.503 seconds
Parameter learned model CLL: -0.069264


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.87e-08, 0, 324], 'true,false,true': [7.68e-09, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 604, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 324], 'true,false,true,true': [0.0, 58, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 585, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.517, 31, 265], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.891, 592, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.927, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.25, 63, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 597, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.882, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.07e-07, 586, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.795, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.17, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 591, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.705, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.167, 68, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 596, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 324], 'true,true,false': [0.021, 51, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 566, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.56, 0, 324], 'true,true,true,false': [0.122, 48, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.29e-07, 621, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.43e-07, 0, 265], 'true,false,true': [0.081, 52, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.953, 605, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1240592866939137, -3.0292177890434737e-16], 'true': [3.333410365294297e-15, 6.055761952500853e-17], 'true,false': [6.055761952500853e-17, nan]}, {'': [0.09193385147230947, -2.3381107116892186e-16], 'true': [-5.000115547941446e-15, -4.0197730201945323e-17], 'true,false': [-4.0197730201945323e-17, nan], 'true,false,true': [-4.0197730201945323e-17, nan]}, {'': [0.04179887011872465, 0.03674109858927452], 'true': [0.04179887011872465, nan], 'true,true': [0.04179887011872465, nan], 'true,true,true': [0.04179887011872465, nan]}, {'': [0.051665935607216655, -1.5472454882548245e-16], 'true': [0.051665935607216655, nan], 'true,true': [0.0026547543313162007, 0.0009886883873592984], 'true,true,true': [0.0026547543313162007, nan], 'true,true,false': [0.0009886883873592984, nan]}, {'': [0.026708218851243835, 1.9703616819286055e-17], 'true': [0.002401847439155005, 0.0006176841034893755], 'true,true': [0.002401847439155005, nan], 'true,true,true': [0.002401847439155005, nan], 'true,false': [0.0006176841034893755, nan]}, {'': [0.017973617731080967, -1.1271299742387375e-16], 'true': [0.0019486261838336854, 0.0006414832881738928], 'true,true': [0.0019486261838336854, nan], 'true,false': [0.0006414832881738928, nan]}, {'': [0.017426043819657386, -7.451161239095011e-17], 'true': [0.0015355142182636279, 0.0004122188294287023], 'true,true': [0.0015355142182636279, nan], 'true,false': [0.0004122188294287023, nan]}, {'': [0.010293507820127024, -1.059223380384425e-16], 'true': [0.010293507820127024, nan], 'true,true': [0.0012117909642149446, 0.00045507077052046847]}, {'': [0.00805231004195683, 8.438410106651754e-17], 'true': [0.00805231004195683, nan], 'true,true': [0.00805231004195683, nan], 'true,true,true': [0.0009679741817878067, 0.00031198366851025475]}, {'': [0.0064020908496611965, 0.005747103931845432], 'true': [7.708718359661464e-17, 0.00012572197242323446], 'false': [0.005747103931845432, nan], 'false,true': [0.005747103931845432, nan], 'true,false': [0.0001257219724232334, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048824;  // std dev = 0.000, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1254446385283923;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.11231637819360576;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783515;  // std dev = 4.26e-07, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926146;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109194;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527766;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527778;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return -0.07324622576333704;  // std dev = 7.45e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333706;  // std dev = 1.07e-07, 563.000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420362;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801115;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.06419184008202619;  // std dev = 5.27e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.06419184008202622;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.06419184008202555;  // std dev = 2.26e-07, 537.000 (wgt'ed) examples reached here.  /* #neg=537 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.491 seconds
Total inference time: 1.5 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.687 seconds
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.708 seconds
Total inference time: 1.5 seconds
AUC ROC: 1.0
Total revision time: 15.708
Best scored revision CLL: -0.064225


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:09:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.708, 'Inference time': 1.5, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068058, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.027, 'Inference time': 1.924}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5052902256257924;  // std dev = 1.112, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08101874624329897;  // std dev = 1.129, 64.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.44065481903858145;  // std dev = 0.242, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17335906233088877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10448883650221741;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33704274795573513;  // std dev = 0.232, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13980953580349664;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09510793333582401;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2666733120251858;  // std dev = 0.211, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1329441731788926;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08723194310024926;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21809772059494467;  // std dev = 0.189, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09392556335081283;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0805318117990491;  // std dev = 2.69e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1833525934704739;  // std dev = 0.027, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.1088983320947425;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07476658577758498;  // std dev = 1.05e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15758405367966605;  // std dev = 0.152, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.09877217531019927;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06975612450036167;  // std dev = 1.83e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13166487964298143;  // std dev = 2.79e-08, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( movie(E, B) )
%   | | then return -0.0903216144695211;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05447260174823733;  // std dev = 0.475, 77.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069809
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.833 seconds
Total inference time: 1.789 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066357
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.697 seconds
Parameter learned model CLL: -0.066357


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [3.94e-08, 0, 40], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 40], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 70, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.112, 3, 37], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.129, 61, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.242, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.232, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.023, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 68, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.211, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 87, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.189, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.049, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.69e-08, 68, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.027, 0, 40], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 85, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.152, 0, 40], 'true,true,true,false': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 70, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.79e-08, 0, 37], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.475, 74, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12675418741512087, 7.229359230117299e-17], 'true': [1.5099033134902129e-15, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.09048810479413706, -3.172065784643304e-17], 'true': [-8.881784197001252e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.03092739868227059, 0.019917349235837045], 'true': [0.03092739868227059, nan], 'true,true': [0.03092739868227059, nan], 'true,true,true': [0.03092739868227059, nan]}, {'': [0.010404670108959194, -2.5953265510717945e-17], 'true': [0.010404670108959194, nan], 'true,true': [0.0014693467027953044, 0.0], 'true,true,true': [0.0014693467027953044, nan], 'true,true,false': [0.0, nan]}, {'': [0.02702491158087674, 0.0], 'true': [0.001342927162402141, 0.000509357970944239], 'true,true': [0.001342927162402141, nan], 'true,true,true': [0.001342927162402141, nan], 'true,false': [0.000509357970944239, nan]}, {'': [0.011395307354653725, -1.403730261020313e-17], 'true': [0.0011085041634040448, 0.0], 'true,true': [0.0011085041634040448, nan], 'true,false': [0.0, nan]}, {'': [0.008908319847079, 1.0612425970681643e-17], 'true': [0.0008887055104994379, 0.0005967089180612326], 'true,true': [0.0008887055104994379, nan], 'true,false': [0.0005967089180612326, nan]}, {'': [0.0027270492174759266, 1.3061447348531253e-18], 'true': [0.0027270492174759266, nan], 'true,true': [0.000712039996846342, 0.0]}, {'': [0.003529083192376233, 4.758098676964957e-18], 'true': [0.003529083192376233, nan], 'true,true': [0.003529083192376233, nan], 'true,true,true': [0.0005760842023805502, 0.0]}, {'': [0.003418661497554995, 0.002925623113972476], 'true': [2.100421938480026e-17, -1.1564823173178713e-18], 'false': [0.002925623113972476, nan], 'false,true': [0.002925623113972476, nan], 'true,false': [-1.1564823173178713e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5.87e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0851847513883968;  // std dev = 1.49e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253542;  // std dev = 5.96e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109169;  // std dev = 3.33e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.11588205210402532;  // std dev = 0.082, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1527438580936709;  // std dev = 3.16e-08, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3.80e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13517886377469734;  // std dev = 0.012, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069686
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.622 seconds
Total inference time: 1.743 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063779
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.281 seconds
Refined model CLL: -0.063779


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069686
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.433 seconds
Total inference time: 1.743 seconds
AUC ROC: 1.0
Total revision time: 6.433
Best scored revision CLL: -0.063779


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:09:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069686, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.433, 'Inference time': 1.743, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069809, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.833, 'Inference time': 1.789}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048816;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 2.11e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5223944458850546;  // std dev = 1.302, 81.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0963239754405549;  // std dev = 1.319, 167.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4331313739310395;  // std dev = 0.299, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16369748062133857;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10306535679613874;  // std dev = 8.56e-08, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33175954703404836;  // std dev = 0.286, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1533455542048362;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09391993282455814;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2629847745962389;  // std dev = 0.261, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1249346519849575;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08622651618527413;  // std dev = 5.96e-08, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21544760230045878;  // std dev = 0.235, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12058744655603978;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07967056556260298;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18138194636078847;  // std dev = 0.023, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10837324275856568;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07402104587073652;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1560714781597001;  // std dev = 0.190, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.09833707512557992;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06910476235415555;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1322977552928364;  // std dev = 6.66e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( movie(E, B) )
%   | | then return -0.0899556381047485;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0574273231767554;  // std dev = 0.563, 157.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069194
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.334 seconds
Total inference time: 1.715 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065542
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.252 seconds
Parameter learned model CLL: -0.065542


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 164, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.53e-07, 0, 81], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 161, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.302, 4, 77], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.319, 163, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.299, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.066, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.56e-08, 158, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.286, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 180, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.261, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.052, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 168, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.235, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 163, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.023, 0, 81], 'true,true,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 158, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.19, 0, 81], 'true,true,true,false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 160, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [6.66e-08, 0, 77], 'true,false,true': [5.27e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.563, 153, 4], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.05475932936722547, -1.4893235696191125e-16], 'true': [-7.894919286223335e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.07515038783157835, 2.7583180736028732e-18], 'true': [7.894919286223335e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.020927679491046004, 0.010422095541994011], 'true': [0.020927679491046004, nan], 'true,true': [0.020927679491046004, nan], 'true,true,true': [0.020927679491046004, nan]}, {'': [0.023951564146460828, 4.6376404826114135e-17], 'true': [0.023951564146460828, nan], 'true,true': [0.0011054509423426596, 0.0007352508879108719], 'true,true,true': [0.0011054509423426596, nan], 'true,true,false': [0.0007352508879108719, nan]}, {'': [0.016053593575718967, -6.167905692361981e-17], 'true': [0.0010133031900233006, -4.625929269271485e-18], 'true,true': [0.0010133031900233006, nan], 'true,true,true': [0.0010133031900233006, nan], 'true,false': [-4.625929269271485e-18, nan]}, {'': [0.010477261941984027, 2.114710523095536e-17], 'true': [0.000841600515918798, 0.0004552428829932009], 'true,true': [0.000841600515918798, nan], 'true,false': [0.0004552428829932009, nan]}, {'': [0.006822993728466411, -1.362236840030867e-18], 'true': [0.0006790758285158892, 0.0], 'true,true': [0.0006790758285158892, nan], 'true,false': [0.0, nan]}, {'': [0.004286508385300087, -1.2648110407122036e-17], 'true': [0.004286508385300087, nan], 'true,true': [0.0005472198295420524, 0.0]}, {'': [0.0033264668857498287, -2.8449465006019634e-17], 'true': [0.0033264668857498287, nan], 'true,true': [0.0033264668857498287, nan], 'true,true,true': [0.00044491511495958893, 0.0]}, {'': [0.005025149897620779, 0.0020224221971203078], 'true': [5.767392335715098e-17, 2.7755575615628915e-18], 'false': [0.0020224221971203078, nan], 'false,true': [0.0020224221971203078, nan], 'true,false': [2.7755575615628915e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048813;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839124;  // std dev = 5.96e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 9.31e-08, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3482989290054909;  // std dev = 0.176, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | else return 0.358904400359552;  // std dev = 0.164, 62.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783646;  // std dev = 0.000, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33437019862944034;  // std dev = 0.010, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.13916796922402905;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926072;  // std dev = 7.60e-08, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26447196823290764;  // std dev = 0.009, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12309941010561982;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839679;  // std dev = 5.96e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2163060669079117;  // std dev = 0.008, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11038431944925063;  // std dev = 0.002, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109157;  // std dev = 7.07e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18188483655666904;  // std dev = 0.007, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10025306626208026;  // std dev = 0.000904, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333684;  // std dev = 7.81e-08, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13959708220395184;  // std dev = 0.064, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return 0.13913266235823302;  // std dev = 0.062, 59.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 6.66e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13887967231825293;  // std dev = 0.005, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else return -0.1035371448874435;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else return 0.08999306990783329;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074836
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.944 seconds
Total inference time: 1.641 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065307
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.582 seconds
Refined model CLL: -0.065307


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074836
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.112 seconds
Total inference time: 1.641 seconds
AUC ROC: 1.0
Total revision time: 8.112
Best scored revision CLL: -0.065307


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:09:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074836, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.112, 'Inference time': 1.641, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069194, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.334, 'Inference time': 1.715}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5072932740706113;  // std dev = 1.930, 125.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=116 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09753373284438402;  // std dev = 1.617, 271.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43662874529803325;  // std dev = 0.358, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17364629842218757;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10295357701639209;  // std dev = 2.98e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3341251614507237;  // std dev = 0.343, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1462380053606635;  // std dev = 0.015, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09382653770090635;  // std dev = 1.65e-07, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.264581616536255;  // std dev = 0.313, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1287042102568311;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08614739651337742;  // std dev = 3.65e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21656134378804764;  // std dev = 0.281, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1183038747509905;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0796027340887294;  // std dev = 9.31e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18218877648680484;  // std dev = 0.023, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10651013770387731;  // std dev = 1.32e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07396228363329259;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15667658842725798;  // std dev = 0.227, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return -0.09679056347846456;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06905338935451022;  // std dev = 1.06e-07, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13288611348168355;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else if ( movie(E, B) )
%   | | then return -0.08715857597248312;  // std dev = 0.023, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05761814742147638;  // std dev = 0.687, 239.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069043
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.751 seconds
Total inference time: 2.132 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06549
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.126 seconds
Parameter learned model CLL: -0.06549


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.14e-08, 0, 122], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 249, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 122], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 232, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.93, 9, 116], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.617, 265, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.358, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.98e-08, 236, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.343, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.015, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.65e-07, 230, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.313, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.054, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.65e-08, 233, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.281, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.31e-08, 238, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.023, 0, 122], 'true,true,false': [1.32e-09, 16, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 252, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.227, 0, 122], 'true,true,true,false': [0.0, 7, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.06e-07, 233, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 116], 'true,false,true': [0.023, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.687, 233, 6], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.08153263533081274, -1.319783193931913e-16], 'true': [3.843919718046444e-15, -1.1564823173178714e-17], 'true,false': [-1.1564823173178714e-17, nan]}, {'': [0.036635964283711464, -5.3596973602593766e-17], 'true': [-1.3395477805313363e-15, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.029786595608716198, 0.00965159165550602], 'true': [0.029786595608716198, nan], 'true,true': [0.029786595608716198, nan], 'true,true,true': [0.029786595608716198, nan]}, {'': [0.03910527089714454, 3.7634678800852764e-18], 'true': [0.03910527089714454, nan], 'true,true': [0.0010528885234735383, -1.734723475976807e-17], 'true,true,true': [0.0010528885234735383, nan], 'true,true,false': [-1.734723475976807e-17, nan]}, {'': [0.024532711503657878, 1.177801817428427e-16], 'true': [0.000966967468098749, 0.00022621856069740195], 'true,true': [0.000966967468098749, nan], 'true,true,true': [0.000966967468098749, nan], 'true,false': [0.00022621856069740195, nan]}, {'': [0.015816693799317546, 5.7178868221038105e-18], 'true': [0.0008027529400182704, 0.00019141909092745824], 'true,true': [0.0008027529400182704, nan], 'true,false': [0.00019141909092745824, nan]}, {'': [0.0048624478207572016, 3.638546047090849e-17], 'true': [0.000646975926345843, -2.7755575615628915e-18], 'true,true': [0.000646975926345843, nan], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.009003354817464084, -5.0224374923518987e-17], 'true': [0.009003354817464084, nan], 'true,true': [0.0005206950618117124, 1.734723475976807e-18]}, {'': [0.003696932201792137, 4.860203798788239e-17], 'true': [0.003696932201792137, nan], 'true,true': [0.003696932201792137, nan], 'true,true,true': [0.00042285607133837026, -1.982541115402065e-18]}, {'': [0.0051617101235128205, 0.0019720010222664297], 'true': [-1.148506577198438e-16, 3.349350830181633e-05], 'false': [0.0019720010222664297, nan], 'false,true': [0.0019720010222664297, nan], 'true,false': [3.349350830181633e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048843;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839177;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360671;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.34253104107608934;  // std dev = 0.182, 90.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=77 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10193274107261704;  // std dev = 0.079, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3311574124515693;  // std dev = 0.088, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11823733473259834;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09266298798477736;  // std dev = 4.94e-08, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2623049194023905;  // std dev = 0.077, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10941758994276456;  // std dev = 0.073, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08516074292306156;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21479406161316456;  // std dev = 0.067, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09857208506742125;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07875613870132789;  // std dev = 9.77e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18078821170736833;  // std dev = 0.059, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.09233393427863658;  // std dev = 0.064, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07322834114976166;  // std dev = 8.16e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15554294604936494;  // std dev = 0.052, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.08636339100774855;  // std dev = 0.055, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06841132288913346;  // std dev = 3.94e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13617531186730697;  // std dev = 0.046, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else return -0.08029703494514667;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.058954322933376165;  // std dev = 0.486, 226.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.094 seconds
Total inference time: 1.626 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064518
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.857 seconds
Refined model CLL: -0.064518


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.828 seconds
Total inference time: 1.626 seconds
AUC ROC: 1.0
Total revision time: 9.828
Best scored revision CLL: -0.064518


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:09:43
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068838, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.828, 'Inference time': 1.626, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069043, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.751, 'Inference time': 2.132}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 1.43e-07, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839197;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4932564074495489;  // std dev = 2.543, 172.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=156 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09806704982598728;  // std dev = 1.748, 328.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4389931462689534;  // std dev = 0.380, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16734525865885902;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10290433341485557;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33567250075858884;  // std dev = 0.364, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14306844834788263;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09378538836403298;  // std dev = 1.66e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26559040298055886;  // std dev = 0.332, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.13187822920224612;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08611253325633692;  // std dev = 1.46e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2172415680237001;  // std dev = 0.298, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11235662112042462;  // std dev = 0.065, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07957284217882779;  // std dev = 2.11e-08, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18266604460198746;  // std dev = 0.021, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10337050175008354;  // std dev = 0.011, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07393638631469775;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15702392036195154;  // std dev = 0.241, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.09690835015137697;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06903074700838732;  // std dev = 1.12e-07, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13376562195079827;  // std dev = 1.15e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( movie(E, B) )
%   | | then return -0.08574870616409729;  // std dev = 0.032, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.057967090155484666;  // std dev = 0.739, 295.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069093
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.381 seconds
Total inference time: 1.934 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.568 seconds
Parameter learned model CLL: -0.065436


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [8.02e-08, 0, 163], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.43e-07, 316, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 163], 'true,false,true,true': [7.45e-09, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 292, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.543, 16, 156], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.748, 321, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.38, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.067, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 305, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.364, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.018, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.66e-07, 301, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.332, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.46e-07, 335, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.298, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.065, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 325, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.021, 0, 163], 'true,true,false': [0.011, 15, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 308, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.241, 0, 163], 'true,true,true,false': [0.0, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.12e-07, 314, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.15e-07, 0, 156], 'true,false,true': [0.032, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.739, 288, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.08552469135803094, 6.464589763640152e-17], 'true': [6.3643705166242106e-15, -3.2653618371328133e-18], 'true,false': [-3.2653618371328133e-18, nan]}, {'': [0.05508939915974213, -7.908437983631252e-17], 'true': [-2.7898610483832155e-15, 3.7007434154171884e-18], 'true,false': [3.7007434154171884e-18, nan], 'true,false,true': [3.7007434154171884e-18, nan]}, {'': [0.03761214345760356, 0.009310988316566564], 'true': [0.03761214345760356, nan], 'true,true': [0.03761214345760356, nan], 'true,true,true': [0.03761214345760356, nan]}, {'': [0.03075548457917377, -2.912060392459427e-18], 'true': [0.03075548457917377, nan], 'true,true': [0.0008850175112068555, 0.0002768421897535456], 'true,true,true': [0.0008850175112068555, nan], 'true,true,false': [0.0002768421897535456, nan]}, {'': [0.013268897376072298, 9.147352495250459e-17], 'true': [0.0008144607158097313, 0.0003314628847557094], 'true,true': [0.0008144607158097313, nan], 'true,true,true': [0.0008144607158097313, nan], 'true,false': [0.0003314628847557094, nan]}, {'': [0.006885706509863845, 6.363069275463584e-17], 'true': [0.0006762987857282267, -1.982541115402065e-18], 'true,true': [0.0006762987857282267, nan], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.010668500206880704, 1.3664283380001927e-18], 'true': [0.000544855238648614, 0.00022476424287469853], 'true,true': [0.000544855238648614, nan], 'true,false': [0.00022476424287469853, nan]}, {'': [0.006725416530005673, -4.109267039197008e-17], 'true': [0.006725416530005673, nan], 'true,true': [0.000438279192053905, 0.00012341949722611636]}, {'': [0.0047405126385059474, 3.960031170637501e-17], 'true': [0.0047405126385059474, nan], 'true,true': [0.0047405126385059474, nan], 'true,true,true': [0.00035574502618838276, -5.337610695313253e-18]}, {'': [0.004071369119443024, 0.0018530911463111935], 'true': [8.540177112501205e-17, 6.314664653238149e-05], 'false': [0.0018530911463111935, nan], 'false,true': [0.0018530911463111935, nan], 'true,false': [6.314664653237802e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048777;  // std dev = 1.37e-07, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839208;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360668;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783662;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926046;  // std dev = 1.92e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08518475138839678;  // std dev = 9.88e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109146;  // std dev = 3.94e-08, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333699;  // std dev = 9.54e-08, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.152743858093671;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.1329964620277897;  // std dev = 0.063, 112.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420297;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1354571010117329;  // std dev = 0.014, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.07029114501896158;  // std dev = 0.024, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.05971547727498494;  // std dev = 0.522, 312.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067023
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.293 seconds
Total inference time: 1.643 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064229
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.347 seconds
Refined model CLL: -0.064229


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067023
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.589 seconds
Total inference time: 1.643 seconds
AUC ROC: 1.0
Total revision time: 11.589
Best scored revision CLL: -0.064229


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:09:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067023, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.589, 'Inference time': 1.643, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069093, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.381, 'Inference time': 1.934}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 2.44e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.510426247279175;  // std dev = 2.413, 208.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09570735294634557;  // std dev = 2.085, 402.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43585303374123807;  // std dev = 0.464, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17409631872446252;  // std dev = 2.79e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10312237311438129;  // std dev = 1.43e-07, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3335960430137684;  // std dev = 0.444, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14630625969658476;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09396756556185346;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2642216958173297;  // std dev = 0.405, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12942765690908906;  // std dev = 0.054, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08626686388898012;  // std dev = 1.13e-07, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21630852433477912;  // std dev = 0.363, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11586001395480268;  // std dev = 0.049, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07970515351092547;  // std dev = 1.44e-07, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18200441960163197;  // std dev = 0.023, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10692339616100463;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07405100686172265;  // std dev = 7.88e-08, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15653748031999093;  // std dev = 0.294, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return -0.09514804038225107;  // std dev = 0.041, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06913095391092758;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1327833714332209;  // std dev = 1.41e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(E, B) )
%   | | then return -0.08526806144307635;  // std dev = 0.039, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05755022723931669;  // std dev = 0.887, 393.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069175
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.005 seconds
Total inference time: 1.834 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065527
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.135 seconds
Parameter learned model CLL: -0.065527


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 204], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.44e-07, 364, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 204], 'true,false,true,true': [0.0, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 378, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.413, 14, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.085, 392, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.464, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [2.79e-08, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.43e-07, 399, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.444, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.016, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 367, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.405, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.054, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.13e-07, 382, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.363, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.049, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.44e-07, 403, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.023, 0, 204], 'true,true,false': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 396, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.294, 0, 204], 'true,true,true,false': [0.041, 21, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 396, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.41e-07, 0, 194], 'true,false,true': [0.039, 19, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.887, 383, 10], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.05631888551466933, 1.6348339043930878e-16], 'true': [5.712206307091002e-15, -1.2810265668751807e-17], 'true,false': [-1.2810265668751807e-17, nan]}, {'': [0.05804880761435235, -1.2453295302673713e-16], 'true': [-3.692035783851501e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0279861715779934, 0.010813701010834424], 'true': [0.0279861715779934, nan], 'true,true': [0.0279861715779934, nan], 'true,true,true': [0.0279861715779934, nan]}, {'': [0.03482346454258096, 5.11982547696814e-17], 'true': [0.03482346454258096, nan], 'true,true': [0.001054137752021373, 3.37893964016352e-17], 'true,true,true': [0.001054137752021373, nan], 'true,true,false': [3.37893964016352e-17, nan]}, {'': [0.015611692807491365, -1.0043434446200327e-16], 'true': [0.0009674167609223533, 0.00024202553431505272], 'true,true': [0.0009674167609223533, nan], 'true,true,true': [0.0009674167609223533, nan], 'true,false': [0.00024202553431505272, nan]}, {'': [0.011757519546050798, 3.3713578758250825e-17], 'true': [0.0008030275295061521, 0.00017159645049996675], 'true,true': [0.0008030275295061521, nan], 'true,false': [0.00017159645049996675, nan]}, {'': [0.009202663662014578, 5.179204184355569e-17], 'true': [0.000647259050498907, 0.00012557410812613341], 'true,true': [0.000647259050498907, nan], 'true,false': [0.00012557410812613341, nan]}, {'': [0.004215275867019682, 1.570012358055777e-17], 'true': [0.004215275867019682, nan], 'true,true': [0.0005210059752254106, -2.7755575615628915e-18]}, {'': [0.005751490102286593, -3.868959025208879e-17], 'true': [0.005751490102286593, nan], 'true,true': [0.005751490102286593, nan], 'true,true,true': [0.00042317936491170007, 7.887777272567546e-05]}, {'': [0.0038699031992862126, 0.002000014106357568], 'true': [1.0301038372810731e-16, 7.845488705734252e-05], 'false': [0.002000014106357568, nan], 'false,true': [0.002000014106357568, nan], 'true,false': [7.845488705734398e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048732;  // std dev = 3.01e-07, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.12544463852839224;  // std dev = 0.000, 410.000 (wgt'ed) examples reached here.  /* #neg=410 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360656;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783602;  // std dev = 1.95e-07, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926074;  // std dev = 1.72e-07, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07877675473109147;  // std dev = 8.69e-08, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333714;  // std dev = 5.96e-08, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367158;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.1258873994440724;  // std dev = 0.072, 140.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=123 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442033;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1359376619245079;  // std dev = 0.021, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07201275618673532;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.06419184008202575;  // std dev = 1.63e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
%   | else if ( female(A) )
%   | | then return 0.1340070300080115;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09434339164622821;  // std dev = 0.191, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.998 seconds
Total inference time: 1.512 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063969
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.314 seconds
Refined model CLL: -0.063969


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.452000000000002 seconds
Total inference time: 1.512 seconds
AUC ROC: 1.0
Total revision time: 13.452000000000002
Best scored revision CLL: -0.063969


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:10:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067653, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.452000000000002, 'Inference time': 1.512, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069175, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.005, 'Inference time': 1.834}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5319389695554104;  // std dev = 0.928, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050206348896872297;  // std dev = 2.203, 129.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.44910337406430567;  // std dev = 0.454, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15817383767301224;  // std dev = 0.103, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10740731644291493;  // std dev = 5.37e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34348218226152805;  // std dev = 0.430, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12941439510495775;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09753581434455233;  // std dev = 2.58e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27145976503648866;  // std dev = 0.388, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12031570343501428;  // std dev = 0.103, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08928104187689923;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22170652001989616;  // std dev = 0.345, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10202013495369981;  // std dev = 0.085, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08228287270489157;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18614025345760618;  // std dev = 0.037, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10002669740335773;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07627923317172508;  // std dev = 5.37e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15979084636289057;  // std dev = 0.275, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.08945366281812794;  // std dev = 0.086, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07107526509614635;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12551122539493778;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else if ( movie(E, B) )
%   | | then return -0.09393126950095126;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04277186472184652;  // std dev = 0.896, 139.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068858
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.195 seconds
Total inference time: 1.565 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069172
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.892 seconds
Parameter learned model CLL: -0.069172


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [0.928, 2, 55], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.203, 117, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.454, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.103, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.43, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.031, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.58e-08, 107, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.388, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.103, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 134, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.345, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.085, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.037, 0, 67], 'true,true,false': [0.022, 13, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.275, 0, 67], 'true,true,true,false': [0.086, 17, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.49e-08, 0, 55], 'true,false,true': [0.029, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.896, 127, 12], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1288255087325739, 6.111319401606367e-17], 'true': [-9.544603913195376e-16, -1.1564823173178714e-17], 'true,false': [-1.1564823173178714e-17, nan]}, {'': [0.08647836286765904, -3.581364595565021e-18], 'true': [3.1815346377317917e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.015093271021934996, 0.037612143457601006], 'true': [0.015093271021934996, nan], 'true,true': [0.015093271021934996, nan], 'true,true,true': [0.015093271021934996, nan]}, {'': [0.04744722564747198, 2.4054832200211726e-17], 'true': [0.04744722564747198, nan], 'true,true': [0.0030701680072594568, 0.0009664648791772261], 'true,true,true': [0.0030701680072594568, nan], 'true,true,false': [0.0009664648791772261, nan]}, {'': [0.03129403543109277, 6.22554967079527e-18], 'true': [0.0027614719241183644, 0.0009389675438851766], 'true,true': [0.0027614719241183644, nan], 'true,true,true': [0.0027614719241183644, nan], 'true,false': [0.0009389675438851766, nan]}, {'': [0.024902539346082102, -3.314098580970616e-17], 'true': [0.002242987413092081, 0.0007042633585220892], 'true,true': [0.002242987413092081, nan], 'true,false': [0.0007042633585220892, nan]}, {'': [0.014309764112183637, -1.2027416100105863e-17], 'true': [0.0017731080384121715, 0.0006497881204112349], 'true,true': [0.0017731080384121715, nan], 'true,false': [0.0006497881204112349, nan]}, {'': [0.012397731720687245, 2.4054832200211726e-17], 'true': [0.012397731720687245, nan], 'true,true': [0.001404057828670556, 0.00047328447245738634]}, {'': [0.01101242583937853, -6.8774877631646864e-18], 'true': [0.01101242583937853, nan], 'true,true': [0.01101242583937853, nan], 'true,true,true': [0.0011250139840246012, 0.0004301120021500927]}, {'': [0.006700715572515076, 0.005775566815145842], 'true': [4.037174635000569e-18, 7.511962998016123e-05], 'false': [0.005775566815145842, nan], 'false,true': [0.005775566815145842, nan], 'true,false': [7.511962998016123e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839133;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360622;  // std dev = 8.30e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3473635958277497;  // std dev = 0.177, 37.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=32 */
%   | | else return 0.2933786048081446;  // std dev = 0.221, 46.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3425307283710348;  // std dev = 0.050, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.13568113797112052;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926096;  // std dev = 5.05e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27002126053244124;  // std dev = 0.043, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11847305493140921;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839682;  // std dev = 5.67e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22020025063032175;  // std dev = 0.038, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10754068979966044;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109161;  // std dev = 6.23e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18472243380392067;  // std dev = 0.033, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.0967201568136887;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1472750824370623;  // std dev = 0.243, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return 0.12037044557865896;  // std dev = 0.093, 42.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4.94e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.14269461068898578;  // std dev = 0.035, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else return -0.08690638046821958;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), female(A) )
%   | then return 0.11787978442375363;  // std dev = 0.064, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.06467942485374262;  // std dev = 0.047, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06603
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.926 seconds
Total inference time: 1.278 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067456
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.41 seconds
Refined model CLL: -0.067456


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06603
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.423 seconds
Total inference time: 1.278 seconds
AUC ROC: 1.0
Total revision time: 7.423
Best scored revision CLL: -0.067456


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:10:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06603, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.423, 'Inference time': 1.278, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068858, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.195, 'Inference time': 1.565}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048838;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.46668981288707956;  // std dev = 2.564, 128.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=111 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.060435618924628204;  // std dev = 3.075, 296.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46171106832238573;  // std dev = 0.572, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15704993981667204;  // std dev = 0.097, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10643055737102712;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3519190127912835;  // std dev = 0.545, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13341093967916504;  // std dev = 0.024, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09672441175857248;  // std dev = 1.05e-07, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2770337921878075;  // std dev = 0.492, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11814210677199577;  // std dev = 0.095, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08859707121840427;  // std dev = 1.05e-07, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2255035715601144;  // std dev = 0.437, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11031775903104223;  // std dev = 0.071, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08169900742718977;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18882932760802507;  // std dev = 0.034, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09490805756424088;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07577533303769185;  // std dev = 5.37e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.161765837689703;  // std dev = 0.347, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09157141875829017;  // std dev = 0.069, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07063618699548414;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12886015543481108;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else if ( movie(E, B) )
%   | | then return -0.08083103996440913;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04377911312726633;  // std dev = 1.223, 277.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068214
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.188 seconds
Total inference time: 1.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068493
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.016 seconds
Parameter learned model CLL: -0.068493


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 241, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.564, 17, 111], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.075, 273, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.572, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.097, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 247, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.545, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-07, 243, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.492, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.095, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-07, 243, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.437, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.071, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 134], 'true,true,false': [0.019, 20, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 236, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.347, 0, 134], 'true,true,true,false': [0.069, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 251, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 111], 'true,false,true': [0.046, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.223, 254, 23], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10876158742364535, -1.8795476931413438e-16], 'true': [4.772301956597688e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.08361609348915536, -5.50523813863714e-17], 'true': [-1.908920782639075e-15, -2.64338815386942e-18], 'true,false': [-2.64338815386942e-18, nan], 'true,false,true': [-2.64338815386942e-18, nan]}, {'': [0.05134431421861396, 0.031948278207604666], 'true': [0.05134431421861396, nan], 'true,true': [0.05134431421861396, nan], 'true,true,true': [0.05134431421861396, nan]}, {'': [0.040478731237898524, -5.2140028686849456e-17], 'true': [0.040478731237898524, nan], 'true,true': [0.0024404071873345146, 0.0005490689741096677], 'true,true,true': [0.0024404071873345146, nan], 'true,true,false': [0.0005490689741096677, nan]}, {'': [0.03560703321716718, 4.568819031379245e-17], 'true': [0.0022186020706813237, 0.000560871981221658], 'true,true': [0.0022186020706813237, nan], 'true,true,true': [0.0022186020706813237, nan], 'true,false': [0.000560871981221658, nan]}, {'': [0.018622708097482583, 4.568819031379245e-17], 'true': [0.0018034301525444055, 0.000471801678129637], 'true,true': [0.0018034301525444055, nan], 'true,false': [0.000471801678129637, nan]}, {'': [0.012562200825208116, -2.9361270072731413e-17], 'true': [0.0014221286878704938, 0.00029284706463722173], 'true,true': [0.0014221286878704938, nan], 'true,false': [0.00029284706463722173, nan]}, {'': [0.01012027327694275, 1.2231270610277148e-17], 'true': [0.01012027327694275, nan], 'true,true': [0.0011225861831351141, 0.000353315105785923]}, {'': [0.008574999414174559, -3.5385594410363554e-17], 'true': [0.008574999414174559, nan], 'true,true': [0.008574999414174559, nan], 'true,true,true': [0.0008967668590930172, 0.000213642952599604]}, {'': [0.004628542908014512, 0.005400254319297442], 'false': [0.005400254319297442, nan], 'false,true': [0.005400254319297442, nan], 'true': [-8.001607384685813e-17, 0.00014393412174414736], 'true,false': [0.00014393412174414644, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048846;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839186;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360688;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.34672586866110866;  // std dev = 0.178, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3295670637089807;  // std dev = 0.090, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11662255453394839;  // std dev = 0.093, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.09269127618926054;  // std dev = 6.32e-08, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2612219448228038;  // std dev = 0.078, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10397258889375889;  // std dev = 0.092, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21403186772289998;  // std dev = 0.068, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09989408518101457;  // std dev = 0.086, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.07877675473109147;  // std dev = 7.30e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1802312017037875;  // std dev = 0.060, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09032566492829937;  // std dev = 0.082, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333668;  // std dev = 1.19e-07, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.14987848323260086;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0634456866563828;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.12434806575358914;  // std dev = 0.088, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.50e-08, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13906769897875057;  // std dev = 0.058, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else return -0.0882103643360461;  // std dev = 0.094, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1342476477296755;  // std dev = 0.023, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.09141283423658207;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06419184008202623;  // std dev = 2.98e-08, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065851
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.523 seconds
Total inference time: 1.28 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.119 seconds
Refined model CLL: -0.065734


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065851
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.846 seconds
Total inference time: 1.28 seconds
AUC ROC: 1.0
Total revision time: 10.846
Best scored revision CLL: -0.065734


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:10:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065851, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.846, 'Inference time': 1.28, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068214, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.188, 'Inference time': 1.693}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.89e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 2.13e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4585005361332416;  // std dev = 3.267, 193.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=165 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05264424255888197;  // std dev = 3.876, 414.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46451966484662116;  // std dev = 0.699, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1414786847857365;  // std dev = 0.169, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1071738167746545;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3538509219008912;  // std dev = 0.666, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12417105943082858;  // std dev = 0.027, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09734194997247321;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2783368954360871;  // std dev = 0.599, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11677822288547163;  // std dev = 0.113, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08911770077514344;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22640658858748916;  // std dev = 0.532, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10396927588020952;  // std dev = 0.123, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08214349464766829;  // std dev = 1.53e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1894785026354271;  // std dev = 0.033, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09507574014510611;  // std dev = 0.020, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07615898667474602;  // std dev = 6.66e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16224911147881335;  // std dev = 0.421, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.08774174854366684;  // std dev = 0.115, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07097051980052141;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1288725266932004;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   | else if ( movie(E, B) )
%   | | then return -0.08964445391899618;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04340587694623095;  // std dev = 1.536, 428.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068606
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.735 seconds
Total inference time: 1.581 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068928
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.461 seconds
Parameter learned model CLL: -0.068928


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [5.89e-09, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.13e-07, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 399, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.267, 28, 165], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.876, 377, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.699, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.169, 33, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 372, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.666, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 382, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.599, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.113, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 354, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.532, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.123, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.53e-07, 358, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 202], 'true,true,false': [0.02, 31, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 352, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.421, 0, 202], 'true,true,true,false': [0.115, 41, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 355, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 165], 'true,false,true': [0.035, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.536, 391, 37], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1283807640703394, 1.2513010885278008e-16], 'true': [5.768762805181012e-15, 3.700743415417188e-17], 'true,false': [3.700743415417188e-17, nan]}, {'': [0.08427500943412075, -1.2243060923184683e-16], 'true': [-3.728590593592605e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.05529269449142988, 0.03628129572285932], 'true': [0.05529269449142988, nan], 'true,true': [0.05529269449142988, nan], 'true,true,true': [0.05529269449142988, nan]}, {'': [0.046526223007094664, -1.408670074255575e-16], 'true': [0.046526223007094664, nan], 'true,true': [0.0024163514487670853, 0.0008671334510320616], 'true,true,true': [0.0024163514487670853, nan], 'true,true,false': [0.0008671334510320616, nan]}, {'': [0.03130531467283814, -1.7554311698261637e-16], 'true': [0.0021940672860260584, 0.000710527433476558], 'true,true': [0.0021940672860260584, nan], 'true,true,true': [0.0021940672860260584, nan], 'true,false': [0.000710527433476558, nan]}, {'': [0.01646437134856517, -5.519752890791739e-17], 'true': [0.0017791009040954216, 0.0005281265333053018], 'true,true': [0.0017791009040954216, nan], 'true,false': [0.0005281265333053018, nan]}, {'': [0.014441980436146815, 6.574505062026067e-17], 'true': [0.0013994751863423325, 0.00045690554221629613], 'true,true': [0.0013994751863423325, nan], 'true,false': [0.00045690554221629613, nan]}, {'': [0.010346129480294772, 1.2616170734376778e-17], 'true': [0.010346129480294772, nan], 'true,true': [0.001102342065278758, 0.00038170518188844976]}, {'': [0.009550135483465325, -3.4401276819371045e-17], 'true': [0.009550135483465325, nan], 'true,true': [0.009550135483465325, nan], 'true,true,true': [0.0008790334638969005, 0.0003202410427925638]}, {'': [0.003854646113905479, 0.005509082200357998], 'false': [0.005509082200357998, nan], 'false,true': [0.005509082200357998, nan], 'true': [-5.113754537667388e-17, 7.697872367379982e-05], 'true,false': [7.697872367379982e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048743;  // std dev = 2.70e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839222;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1123163781936065;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3495926608775062;  // std dev = 0.175, 107.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=93 */
%   | | else return 0.3370314270038688;  // std dev = 0.188, 129.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33720002007179245;  // std dev = 0.020, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1374911642532818;  // std dev = 0.005, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.09269127618926051;  // std dev = 1.86e-07, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2663942869994105;  // std dev = 0.017, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12188295327836973;  // std dev = 0.004, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21765465715111806;  // std dev = 0.015, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10951948408230032;  // std dev = 0.003, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109148;  // std dev = 4.71e-08, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1828674292337235;  // std dev = 0.013, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09926401422138223;  // std dev = 0.003, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333702;  // std dev = 9.54e-08, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.10714036777797553;  // std dev = 0.099, 116.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=93 */
%   | | else return 0.11779397838373398;  // std dev = 0.091, 130.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420328;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1427484900455801;  // std dev = 0.001, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   | else return -0.09046077181296179;  // std dev = 0.087, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( female(A), director(B) )
%   | then return 0.12786575714379433;  // std dev = 0.058, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else return -0.06164991239727669;  // std dev = 0.514, 389.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.855 seconds
Total inference time: 1.336 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067339
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.113 seconds
Refined model CLL: -0.067339


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.164 seconds
Total inference time: 1.336 seconds
AUC ROC: 1.0
Total revision time: 12.164
Best scored revision CLL: -0.067339


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:10:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066223, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.164, 'Inference time': 1.336, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068606, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.735, 'Inference time': 1.581}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.97e-09, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048732;  // std dev = 2.53e-07, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48778720446491736;  // std dev = 3.165, 247.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=222 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05473639231805663;  // std dev = 4.376, 545.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=47 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45758753239928956;  // std dev = 0.840, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15452081235762058;  // std dev = 0.183, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1069737884732186;  // std dev = 0.000, 501.000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34914489367788876;  // std dev = 0.799, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13042140620244105;  // std dev = 0.027, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09717582251075427;  // std dev = 0.000, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2751954600221188;  // std dev = 0.720, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1161451777431225;  // std dev = 0.155, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08897769126862047;  // std dev = 9.42e-08, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22424825472739898;  // std dev = 0.640, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10666847014864932;  // std dev = 0.117, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08202399707253218;  // std dev = 0.000, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18793822374705493;  // std dev = 0.035, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10008009937887317;  // std dev = 0.018, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07605587053301831;  // std dev = 0.000, 525.000 (wgt'ed) examples reached here.  /* #neg=525 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16110980973985994;  // std dev = 0.508, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.08729536495882169;  // std dev = 0.111, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07088068027744063;  // std dev = 7.60e-08, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.127790914294981;  // std dev = 3.65e-08, 222.000 (wgt'ed) examples reached here.  /* #pos=222 */
%   | else if ( movie(E, B) )
%   | | then return -0.08612648314222687;  // std dev = 0.069, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.043123359603327124;  // std dev = 1.753, 548.000 (wgt'ed) examples reached here.  /* #neg=501 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068562
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.731 seconds
Total inference time: 1.498 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068846
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.08 seconds
Parameter learned model CLL: -0.068846


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [6.97e-09, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.53e-07, 479, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 475, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.165, 25, 222], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.376, 498, 47]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.84, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.183, 43, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 501, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.799, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 58, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 469, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.72, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.155, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.42e-08, 471, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.64, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.117, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 475, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 269], 'true,true,false': [0.018, 42, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 525, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.508, 0, 269], 'true,true,true,false': [0.111, 35, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 489, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [3.65e-08, 0, 222], 'true,false,true': [0.069, 34, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.753, 501, 47], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12277374335673248, 1.3350489815951777e-16], 'true': [4.226276495227362e-15, 4.9343245538895844e-17], 'true,false': [4.9343245538895844e-17, nan]}, {'': [0.08338923106493273, -1.3275930062886082e-16], 'true': [-4.5432472323694135e-15, -2.6433881538694202e-17], 'true,false': [-2.6433881538694202e-17, nan], 'true,false,true': [-2.6433881538694202e-17, nan]}, {'': [0.040554539405361315, 0.03512971228015717], 'true': [0.040554539405361315, nan], 'true,true': [0.040554539405361315, nan], 'true,true,true': [0.040554539405361315, nan]}, {'': [0.046887613891351626, -7.623088232955167e-17], 'true': [0.046887613891351626, nan], 'true,true': [0.0026203112651478075, 0.0007771223213407379], 'true,true,true': [0.0026203112651478075, nan], 'true,true,false': [0.0007771223213407379, nan]}, {'': [0.035638719831026906, -5.491934791322736e-17], 'true': [0.002372459472541899, 0.0007337451889961465], 'true,true': [0.002372459472541899, nan], 'true,true,true': [0.002372459472541899, nan], 'true,false': [0.0007337451889961465, nan]}, {'': [0.01901458634377231, 1.8857291288750004e-17], 'true': [0.0019272438629743276, 0.0006043881770071257], 'true,true': [0.0019272438629743276, nan], 'true,false': [0.0006043881770071257, nan]}, {'': [0.01103817611312411, -6.450980100979857e-17], 'true': [0.001520578044779335, 0.000472836586957997], 'true,true': [0.001520578044779335, nan], 'true,false': [0.000472836586957997, nan]}, {'': [0.010774511787808774, -1.0996494720096789e-17], 'true': [0.010774511787808774, nan], 'true,true': [0.0012013094966109561, 0.000336904547902742]}, {'': [0.007176979470023522, 1.1806052613600847e-17], 'true': [0.007176979470023522, nan], 'true,true': [0.007176979470023522, nan], 'true,true,true': [0.0009604705298471572, 0.0003543693618503326]}, {'': [0.005289102700440211, 0.005607822146778577], 'false': [0.005607822146778577, nan], 'false,true': [0.005607822146778577, nan], 'true': [6.00120553851436e-18, 0.0001407658878988021], 'true,false': [0.0001407658878988021, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048732;  // std dev = 2.56e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839122;  // std dev = 4.71e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839227;  // std dev = 0.000, 446.000 (wgt'ed) examples reached here.  /* #neg=446 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360649;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1123163781936059;  // std dev = 0.000, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783553;  // std dev = 3.20e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.09269127618926107;  // std dev = 1.12e-07, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.37e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.08518475138839679;  // std dev = 1.49e-07, 534.000 (wgt'ed) examples reached here.  /* #neg=534 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.0787767547310915;  // std dev = 2.26e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333738;  // std dev = 0.000, 565.000 (wgt'ed) examples reached here.  /* #neg=565 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420346;  // std dev = 0.000, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 9.66e-08, 222.000 (wgt'ed) examples reached here.  /* #pos=222 */
%   | else return -0.0641918400820262;  // std dev = 9.13e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(B) )
%   | then return -0.06419184008202539;  // std dev = 2.45e-07, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.12591728020841797;  // std dev = 0.275, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | else return -0.0641918400820262;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.354 seconds
Total inference time: 1.199 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064117
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.885 seconds
Refined model CLL: -0.064117


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.049999999999999 seconds
Total inference time: 1.199 seconds
AUC ROC: 1.0
Total revision time: 15.049999999999999
Best scored revision CLL: -0.064117


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:11:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.049999999999999, 'Inference time': 1.199, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068562, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.731, 'Inference time': 1.498}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 7.21e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0.000, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.46592605966710726;  // std dev = 4.074, 321.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=278 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05850041360145696;  // std dev = 4.918, 732.000 (wgt'ed) examples reached here.  /* #neg=673 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46223290132774586;  // std dev = 0.909, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14669526368315086;  // std dev = 0.221, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10661474160862931;  // std dev = 0.000, 638.000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3522852595329073;  // std dev = 0.867, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13149619513889918;  // std dev = 0.025, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0968775044358375;  // std dev = 0.000, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2772855246515926;  // std dev = 0.781, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11916157144507807;  // std dev = 0.164, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08872618500153866;  // std dev = 0.000, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.225680942044176;  // std dev = 0.694, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10391297136682685;  // std dev = 0.132, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08180927191373377;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.188958709016251;  // std dev = 0.034, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09871505047118166;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07587053181768001;  // std dev = 1.26e-07, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16186339756847953;  // std dev = 0.551, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.09008927902201706;  // std dev = 0.105, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07071916686378119;  // std dev = 0.000, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12877258011514664;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, B) )
%   | | then return -0.08312223118960137;  // std dev = 0.086, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04358380089813727;  // std dev = 1.954, 701.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068353
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.17 seconds
Total inference time: 1.398 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068643
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.76 seconds
Parameter learned model CLL: -0.068643


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [7.21e-09, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 578, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 58, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 604, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [4.074, 43, 278], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.918, 673, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.909, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.221, 58, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 638, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.867, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 630, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.781, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.164, 56, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 629, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.694, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.132, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 622, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 337], 'true,true,false': [0.018, 45, 0], 'true,false': [0.0, 0, 0], 'false': [1.26e-07, 633, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.551, 0, 337], 'true,true,true,false': [0.105, 40, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 607, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 278], 'true,false,true': [0.086, 50, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.954, 642, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11250659348730684, -2.3971597486716185e-16], 'true': [3.204821834882351e-15, 5.773159728050814e-17], 'true,false': [5.773159728050814e-17, nan]}, {'': [0.08943198700621043, -2.382200397208945e-16], 'true': [-5.144582419153248e-15, -4.0197730201945323e-17], 'true,false': [-4.0197730201945323e-17, nan], 'true,false,true': [-4.0197730201945323e-17, nan]}, {'': [0.05171822168544408, 0.03303583668260731], 'true': [0.05171822168544408, nan], 'true,true': [0.05171822168544408, nan], 'true,true,true': [0.05171822168544408, nan]}, {'': [0.04866880214447694, -2.519753823914148e-16], 'true': [0.04866880214447694, nan], 'true,true': [0.002453889655039467, 0.0008454990788243135], 'true,true,true': [0.002453889655039467, nan], 'true,true,false': [0.0008454990788243135, nan]}, {'': [0.027966649536036652, -7.190015778524824e-17], 'true': [0.002229738858631255, 0.0006393815969297439], 'true,true': [0.002229738858631255, nan], 'true,true,true': [0.002229738858631255, nan], 'true,false': [0.0006393815969297439, nan]}, {'': [0.020826375391518253, -1.5532531982037165e-17], 'true': [0.001811294948152856, 0.000481880995571871], 'true,true': [0.001811294948152856, nan], 'true,false': [0.000481880995571871, nan]}, {'': [0.011221751006266776, -1.7135274978137466e-17], 'true': [0.001427465676807187, 0.00045750709938268216], 'true,true': [0.001427465676807187, nan], 'true,false': [0.00045750709938268216, nan]}, {'': [0.00963124022973914, 2.5256258380098347e-17], 'true': [0.00963124022973914, nan], 'true,true': [0.0011262260554996688, 0.0003169205426494718]}, {'': [0.0068535269465719905, -1.8070845936238132e-16], 'true': [0.0068535269465719905, nan], 'true,true': [0.0068535269465719905, nan], 'true,true,true': [0.0008992998196809428, 0.00027303381090510587]}, {'': [0.005823525466596267, 0.005446846435222556], 'true': [-6.070284163418123e-17, 0.00014733842035629996], 'false': [0.005446846435222556, nan], 'false,true': [0.005446846435222556, nan], 'true,false': [0.00014733842035629885, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1418510649004885;  // std dev = 0.000, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.12544463852839235;  // std dev = 0.000, 647.000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360588;  // std dev = 0.000, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 2.79e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783498;  // std dev = 4.70e-07, 654.000 (wgt'ed) examples reached here.  /* #neg=654 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926144;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.05e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109223;  // std dev = 0.000, 651.000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333675;  // std dev = 2.09e-07, 655.000 (wgt'ed) examples reached here.  /* #neg=655 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06842697784420271;  // std dev = 1.05e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420365;  // std dev = 0.000, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080114;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080114;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.06419184008202541;  // std dev = 2.43e-07, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.669 seconds
Total inference time: 1.264 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.239 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.838 seconds
Total inference time: 1.264 seconds
AUC ROC: 1.0
Total revision time: 16.838
Best scored revision CLL: -0.064062


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:11:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.838, 'Inference time': 1.264, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068353, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.17, 'Inference time': 1.398}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 7.88e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5108542490836243;  // std dev = 1.290, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05582014000638481;  // std dev = 2.119, 130.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.451481372530486;  // std dev = 0.427, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17415786831471636;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10687030171565408;  // std dev = 5.96e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3449762051224483;  // std dev = 0.406, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13079029152731594;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09708985554311059;  // std dev = 4.94e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2723874989980292;  // std dev = 0.366, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1307209057419434;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08890522584948299;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.222301189021438;  // std dev = 0.326, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10798494885361254;  // std dev = 0.072, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08196213787277352;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18653692423063742;  // std dev = 0.035, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10026261413187967;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07600248364517265;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1600654502529269;  // std dev = 0.259, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.08410816823413333;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07083416125945595;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12716897832223945;  // std dev = 5.37e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, B) )
%   | | then return -0.08495874621402155;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04578131476341973;  // std dev = 0.863, 145.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067747
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.214 seconds
Total inference time: 1.761 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.936 seconds
Parameter learned model CLL: -0.068646


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 132, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 129, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.29, 4, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.119, 119, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.427, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 137, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.406, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.028, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.94e-08, 136, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.366, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.052, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 136, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.326, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.072, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 67], 'true,true,false': [0.018, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 145, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.259, 0, 67], 'true,true,true,false': [0.071, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [5.37e-08, 0, 56], 'true,false,true': [0.044, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.863, 134, 11], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1043975069252067, -1.682156097916904e-17], 'true': [-9.544603913195376e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan]}, {'': [0.08647836286765904, 4.819572820078199e-17], 'true': [3.1815346377317917e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.027738687907221463, 0.03452974241705115], 'true': [0.027738687907221463, nan], 'true,true': [0.027738687907221463, nan], 'true,true,true': [0.027738687907221463, nan]}, {'': [0.03972614318676546, 2.5932216633580298e-17], 'true': [0.03972614318676546, nan], 'true,true': [0.0027176209023289225, 0.0], 'true,true,true': [0.0027176209023289225, nan], 'true,true,false': [0.0, nan]}, {'': [0.02588776152126037, 1.7959490104230474e-17], 'true': [0.002455689955236373, 0.0007778076258763977], 'true,true': [0.002455689955236373, nan], 'true,true,true': [0.002455689955236373, nan], 'true,false': [0.0007778076258763977, nan]}, {'': [0.02491748332073718, -1.6326809185664067e-17], 'true': [0.0019986821179381374, 0.00018972678268566745], 'true,true': [0.0019986821179381374, nan], 'true,false': [0.00018972678268566745, nan]}, {'': [0.015460853470676232, -9.175396897728567e-18], 'true': [0.001581486897485499, 0.0004355214479711267], 'true,true': [0.001581486897485499, nan], 'true,false': [0.0004355214479711267, nan]}, {'': [0.010425699472427066, -7.656710514656252e-19], 'true': [0.010425699472427066, nan], 'true,true': [0.0012529444378235465, 0.00031151744151973194]}, {'': [0.009018410293452721, -7.806255641895632e-18], 'true': [0.009018410293452721, nan], 'true,true': [0.009018410293452721, nan], 'true,true,true': [0.0010042291512992077, 0.00038988382842565934]}, {'': [0.007227525113697116, 0.005134481644773307], 'true': [5.15460690004537e-17, 0.00013908835493990336], 'false': [0.005134481644773307, nan], 'false,true': [0.005134481644773307, nan], 'true,false': [0.00013908835493990336, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048785;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839127;  // std dev = 5.58e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360626;  // std dev = 9.19e-08, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415831014;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.33300731914614673;  // std dev = 0.192, 43.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3307499969071593;  // std dev = 0.076, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10853882297254129;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926103;  // std dev = 2.58e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2620340523833112;  // std dev = 0.067, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09196501281012125;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839679;  // std dev = 3.65e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21460740740360654;  // std dev = 0.058, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.097813906491139;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109161;  // std dev = 5.87e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.180654313783457;  // std dev = 0.051, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.08763720623527581;  // std dev = 0.069, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.10999599154613411;  // std dev = 0.083, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | else return 0.14701458948727894;  // std dev = 0.057, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4.94e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13939023395488753;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07770996157090529;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), actor(A) )
%   | then return 0.13759262912615117;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065228
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.9 seconds
Total inference time: 1.3 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.389 seconds
Refined model CLL: -0.066837


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065228
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.439000000000001 seconds
Total inference time: 1.3 seconds
AUC ROC: 1.0
Total revision time: 7.439000000000001
Best scored revision CLL: -0.066837


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:11:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065228, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.439000000000001, 'Inference time': 1.3, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067747, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.214, 'Inference time': 1.761}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.44833331374065255;  // std dev = 2.804, 131.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=110 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0546746963282918;  // std dev = 3.127, 278.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4661513781326056;  // std dev = 0.555, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16085814700311202;  // std dev = 0.079, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10697968245853312;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3549318766680674;  // std dev = 0.530, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12706856816066817;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09718071828031555;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.279040015435331;  // std dev = 0.477, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11816178434247171;  // std dev = 0.092, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08898181784804891;  // std dev = 6.50e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22687797598757764;  // std dev = 0.423, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09830487583784145;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08202751946519388;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18980742492587957;  // std dev = 0.032, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09700076408849811;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07605891033610314;  // std dev = 2.11e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16248745193496975;  // std dev = 0.335, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09015259405361471;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07088332890868776;  // std dev = 1.18e-07, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12951522986757172;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else if ( movie(E, B) )
%   | | then return -0.0846324130496243;  // std dev = 0.042, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04296927559066381;  // std dev = 1.234, 272.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067928
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.957 seconds
Total inference time: 1.741 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068883
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.366 seconds
Parameter learned model CLL: -0.068883


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 251, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [7.45e-09, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 266, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.804, 21, 110], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.127, 254, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.555, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.079, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 247, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.53, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 272, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.477, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.092, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.5e-08, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.423, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.079, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 256, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 134], 'true,true,false': [0.017, 20, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 249, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.335, 0, 134], 'true,true,true,false': [0.056, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-07, 257, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 110], 'true,false,true': [0.042, 17, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.234, 248, 24], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1043975069252125, -1.4861949652352692e-16], 'true': [4.772301956597688e-15, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.061141850684104625, -6.344131569286608e-17], 'true': [-1.908920782639075e-15, 3.96508223080413e-18], 'true,false': [3.96508223080413e-18, nan], 'true,false,true': [3.96508223080413e-18, nan]}, {'': [0.060008087439870225, 0.03516379691744092], 'true': [0.060008087439870225, nan], 'true,true': [0.060008087439870225, nan], 'true,true,true': [0.060008087439870225, nan]}, {'': [0.055469563748805475, -3.595864047368928e-17], 'true': [0.055469563748805475, nan], 'true,true': [0.002299974165665337, 0.00024190741180676664], 'true,true,true': [0.002299974165665337, nan], 'true,true,false': [0.00024190741180676664, nan]}, {'': [0.01949523814754209, -7.34706413354883e-17], 'true': [0.002092585483262011, 0.0005955892829849416], 'true,true': [0.002092585483262011, nan], 'true,true,true': [0.002092585483262011, nan], 'true,false': [0.0005955892829849416, nan]}, {'': [0.02000095973189839, 1.8029262793058098e-17], 'true': [0.0016976880420023642, 0.00039918643907479084], 'true,true': [0.0016976880420023642, nan], 'true,false': [0.00039918643907479084, nan]}, {'': [0.010307874452447635, -4.5102810375396984e-17], 'true': [0.001335401522617748, 0.0004461712211752281], 'true,true': [0.001335401522617748, nan], 'true,false': [0.0004461712211752281, nan]}, {'': [0.010248447873705486, 1.783490802610693e-18], 'true': [0.010248447873705486, nan], 'true,true': [0.0010516748181673083, 0.0002908689283780075]}, {'': [0.0062467089878916, 5.443116774426837e-17], 'true': [0.0062467089878916, nan], 'true,true': [0.0062467089878916, nan], 'true,true,true': [0.0008384461456511696, 0.0002222061524118833]}, {'': [0.005330687411545512, 0.005595203075629829], 'false': [0.005595203075629829, nan], 'false,true': [0.005595203075629829, nan], 'true': [-2.62416351275037e-17, 0.00010279250233687903], 'true,false': [0.00010279250233687576, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.14185106490048827;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.12544463852839166;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.11231637819360667;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783653;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09269127618926064;  // std dev = 8.69e-08, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07877675473109151;  // std dev = 6.83e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452778;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.14090236904523729;  // std dev = 0.088, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633367;  // std dev = 1.27e-07, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367108;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.11095102652138943;  // std dev = 0.095, 88.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420275;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1397631514068689;  // std dev = 0.047, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else return -0.0823719916252749;  // std dev = 0.055, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13517095161439782;  // std dev = 0.015, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.08292290530840364;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.293 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065375
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.023 seconds
Refined model CLL: -0.065375


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.639000000000001 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0
Total revision time: 9.639000000000001
Best scored revision CLL: -0.065375


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064347, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.639000000000001, 'Inference time': 1.34, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067928, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.957, 'Inference time': 1.741}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.93e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2.38e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.490751970784358;  // std dev = 2.692, 186.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=168 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05927615457688627;  // std dev = 3.735, 428.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4563059599744518;  // std dev = 0.727, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1596646954355496;  // std dev = 0.155, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10654087634715154;  // std dev = 1.33e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3482585860080155;  // std dev = 0.692, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1402075254735254;  // std dev = 0.021, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09681611312059213;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2745927484559052;  // std dev = 0.624, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12132935733448913;  // std dev = 0.129, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08867441301187715;  // std dev = 1.67e-07, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2238272350878786;  // std dev = 0.555, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11609245017793135;  // std dev = 0.064, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0817650607750595;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18763339384685804;  // std dev = 0.035, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09862634939600431;  // std dev = 0.017, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07583236336538554;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16088147501918112;  // std dev = 0.441, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.09127707002801234;  // std dev = 0.087, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07068589893249898;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1278756492325147;  // std dev = 1.30e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else if ( movie(E, B) )
%   | | then return -0.08289602521991633;  // std dev = 0.061, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04306921713333583;  // std dev = 1.498, 398.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067745
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.787 seconds
Total inference time: 1.691 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068722
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.441 seconds
Parameter learned model CLL: -0.068722


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [4.93e-09, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.38e-07, 368, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 382, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.692, 18, 168], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.735, 394, 34]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.727, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.155, 39, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.33e-07, 365, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.692, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.021, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 384, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.624, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.129, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-07, 387, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.555, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.064, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 357, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 202], 'true,true,false': [0.017, 28, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 381, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.441, 0, 202], 'true,true,true,false': [0.087, 32, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 371, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.3e-07, 0, 168], 'true,false,true': [0.061, 28, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.498, 364, 34], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1125891795481624, 1.544658121217609e-16], 'true': [5.768762805181012e-15, 2.590520390792032e-17], 'true,false': [2.590520390792032e-17, nan]}, {'': [0.08234370390054616, -1.2090386865027883e-16], 'true': [-3.728590593592605e-15, -7.162729191130042e-18], 'true,false': [-7.162729191130042e-18, nan], 'true,false,true': [-7.162729191130042e-18, nan]}, {'': [0.03896693930775335, 0.032600780488141815], 'true': [0.03896693930775335, nan], 'true,true': [0.03896693930775335, nan], 'true,true,true': [0.03896693930775335, nan]}, {'': [0.053754547690026494, 4.866731066850001e-17], 'true': [0.053754547690026494, nan], 'true,true': [0.0026138184733734463, 0.000617343158804963], 'true,true,true': [0.0026138184733734463, nan], 'true,true,false': [0.000617343158804963, nan]}, {'': [0.02898564074143512, -1.9660199394403815e-17], 'true': [0.0023688418607216606, 0.0004596151417827136], 'true,true': [0.0023688418607216606, nan], 'true,true,true': [0.0023688418607216606, nan], 'true,false': [0.0004596151417827136, nan]}, {'': [0.02182943659540816, 7.229359230117299e-17], 'true': [0.0019270071931194168, 0.00046060204846367264], 'true,true': [0.0019270071931194168, nan], 'true,false': [0.00046060204846367264, nan]}, {'': [0.013708778620115372, -9.951578932214288e-18], 'true': [0.0015224183778204598, 0.0001456663943574759], 'true,true': [0.0015224183778204598, nan], 'true,false': [0.0001456663943574759, nan]}, {'': [0.009856181886599999, -9.324707818374018e-17], 'true': [0.009856181886599999, nan], 'true,true': [0.0012041240830649588, 0.00030582758696181704]}, {'': [0.008370084477349278, -2.8129639977025527e-17], 'true': [0.008370084477349278, nan], 'true,true': [0.008370084477349278, nan], 'true,true,true': [0.0009636171270109707, 0.00023471632830807804]}, {'': [0.005458664892851958, 0.005641152625269393], 'false': [0.005641152625269393, nan], 'false,true': [0.005641152625269393, nan], 'true': [1.0044874984703797e-16, 0.0001323410344076336], 'true,false': [0.00013234103440763558, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.1418510649004875;  // std dev = 2.49e-07, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1254446385283922;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360664;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830997;  // std dev = 1.98e-07, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.33033482003452985;  // std dev = 0.194, 131.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 1.30e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33111625248916104;  // std dev = 0.137, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10711344316290126;  // std dev = 0.112, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926054;  // std dev = 1.72e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2622847022658336;  // std dev = 0.119, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1029681075696857;  // std dev = 0.126, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839678;  // std dev = 1.05e-07, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21478453886001284;  // std dev = 0.104, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09682609593873044;  // std dev = 0.109, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07877675473109147;  // std dev = 5.58e-08, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17383501093735806;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | | else return -0.06990717790007725;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.1495334395199582;  // std dev = 0.097, 125.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333706;  // std dev = 8.43e-08, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15026516105728976;  // std dev = 6.66e-08, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | | else return -0.06549622031198646;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.16506114174568498;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | | | else return -0.11850632741572337;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420307;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13917694517644388;  // std dev = 0.072, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else return -0.08165100221963591;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1337575102856086;  // std dev = 0.024, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07286867088656529;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06419184008202594;  // std dev = 1.32e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064604
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.947 seconds
Total inference time: 1.412 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065893
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.279 seconds
Refined model CLL: -0.065893


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064604
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.454 seconds
Total inference time: 1.412 seconds
AUC ROC: 1.0
Total revision time: 12.454
Best scored revision CLL: -0.065893


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064604, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.454, 'Inference time': 1.412, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067745, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.787, 'Inference time': 1.691}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.97e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 1.79e-07, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47482882093641265;  // std dev = 3.486, 257.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=226 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.058752271771190204;  // std dev = 4.199, 536.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=43 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4584170282529031;  // std dev = 0.797, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14883387537830908;  // std dev = 0.170, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10659075498864294;  // std dev = 0.000, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3496101425302372;  // std dev = 0.760, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1293041161883997;  // std dev = 0.027, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09685756927175809;  // std dev = 2.09e-07, 442.000 (wgt'ed) examples reached here.  /* #neg=442 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2754447457959648;  // std dev = 0.685, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1216250540279862;  // std dev = 0.147, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08870937398210868;  // std dev = 0.000, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22438118949969477;  // std dev = 0.609, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10557886244699595;  // std dev = 0.126, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0817949163897398;  // std dev = 2.26e-07, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18800829157568621;  // std dev = 0.033, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09525509852975594;  // std dev = 0.020, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07585813867181582;  // std dev = 2.08e-07, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16114493864317686;  // std dev = 0.484, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.08913783547910659;  // std dev = 0.127, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07070836512382313;  // std dev = 0.000, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1290418109533614;  // std dev = 2.08e-07, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   | else if ( movie(E, B) )
%   | | then return -0.08710634305091412;  // std dev = 0.074, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.044809058706156375;  // std dev = 1.685, 543.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067739
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.247 seconds
Total inference time: 1.557 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068737
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.162 seconds
Parameter learned model CLL: -0.068737


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [6.97e-09, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.79e-07, 488, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 485, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.486, 31, 226], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.199, 493, 43]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.797, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.17, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 483, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.76, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.09e-07, 442, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.685, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.147, 47, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 458, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.609, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.126, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.26e-07, 481, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 269], 'true,true,false': [0.02, 42, 0], 'true,false': [0.0, 0, 0], 'false': [2.08e-07, 471, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.484, 0, 269], 'true,true,true,false': [0.127, 52, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 512, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.08e-07, 0, 226], 'true,false,true': [0.074, 48, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.685, 500, 43], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11681020667694077, 6.55213588303371e-17], 'true': [4.226276495227362e-15, 4.7580986769649563e-17], 'true,false': [4.7580986769649563e-17, nan]}, {'': [0.08482829234143342, -1.3002199546125545e-16], 'true': [-4.5432472323694135e-15, -2.840105411831796e-17], 'true,false': [-2.840105411831796e-17, nan], 'true,false,true': [-2.840105411831796e-17, nan]}, {'': [0.04728727447214438, 0.03289471985902657], 'true': [0.04728727447214438, nan], 'true,true': [0.04728727447214438, nan], 'true,true,true': [0.04728727447214438, nan]}, {'': [0.0389274238226561, -5.700524018779272e-17], 'true': [0.0389274238226561, nan], 'true,true': [0.0023614494849930143, 0.0008534475401223429], 'true,true,true': [0.0023614494849930143, nan], 'true,true,false': [0.0008534475401223429, nan]}, {'': [0.0232489228979451, 9.846321847354329e-17], 'true': [0.002145243510809137, 0.0007159479439138091], 'true,true': [0.002145243510809137, nan], 'true,true,true': [0.002145243510809137, nan], 'true,false': [0.0007159479439138091, nan]}, {'': [0.021516923132953288, -6.205613412751966e-17], 'true': [0.0017460459903440087, 0.0004593082372596775], 'true,true': [0.0017460459903440087, nan], 'true,false': [0.0004593082372596775, nan]}, {'': [0.012364550674194478, 1.0617517491217714e-16], 'true': [0.001379316099454444, 0.00045508270121481824], 'true,true': [0.001379316099454444, nan], 'true,false': [0.00045508270121481824, nan]}, {'': [0.010369347532502968, 9.145786275043753e-17], 'true': [0.010369347532502968, nan], 'true,true': [0.001090648219622779, 0.0003950792539912241]}, {'': [0.009285357485292555, -8.760353553682876e-17], 'true': [0.009285357485292555, nan], 'true,true': [0.009285357485292555, nan], 'true,true,true': [0.0008725573082407801, 0.0003114802854164252]}, {'': [0.006770891283739601, 0.005226460386429773], 'true': [1.9060466086484988e-16, 0.00011500976770696669], 'false': [0.005226460386429773, nan], 'false,true': [0.005226460386429773, nan], 'true,false': [0.00011500976770697131, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048763;  // std dev = 7.30e-08, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.12544463852839233;  // std dev = 0.000, 516.000 (wgt'ed) examples reached here.  /* #neg=516 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.11231637819360583;  // std dev = 0.000, 516.000 (wgt'ed) examples reached here.  /* #neg=516 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830925;  // std dev = 3.63e-07, 124.000 (wgt'ed) examples reached here.  /* #pos=124 */
%   | | | else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.35459117038301896;  // std dev = 0.169, 165.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=145 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783558;  // std dev = 3.08e-07, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3281827394724524;  // std dev = 0.113, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11015011514210744;  // std dev = 0.136, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926086;  // std dev = 1.60e-07, 444.000 (wgt'ed) examples reached here.  /* #neg=444 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.260276516003393;  // std dev = 0.099, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10229223754775267;  // std dev = 0.131, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839679;  // std dev = 1.40e-07, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2133646127602998;  // std dev = 0.086, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09684175155387321;  // std dev = 0.120, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.07877675473109173;  // std dev = 1.94e-07, 536.000 (wgt'ed) examples reached here.  /* #neg=536 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17475054125419154;  // std dev = 1.23e-07, 124.000 (wgt'ed) examples reached here.  /* #pos=124 */
%   | | | else return -0.06975281808148794;  // std dev = 8.33e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.18401122723471622;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | | | else return -0.10580699434724795;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 523.000 (wgt'ed) examples reached here.  /* #neg=523 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15096187395889518;  // std dev = 7.60e-08, 124.000 (wgt'ed) examples reached here.  /* #pos=124 */
%   | | | else return -0.06536034480767013;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15796939498930035;  // std dev = 2.98e-08, 145.000 (wgt'ed) examples reached here.  /* #pos=145 */
%   | | | else return -0.096205801987913;  // std dev = 1.49e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420346;  // std dev = 0.000, 484.000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13594775843303336;  // std dev = 0.040, 226.000 (wgt'ed) examples reached here.  /* #pos=226 */
%   | else return -0.07378795441378168;  // std dev = 0.082, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( actor(B) )
%   | then return -0.06419184008202551;  // std dev = 2.15e-07, 432.000 (wgt'ed) examples reached here.  /* #neg=432 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.12900994776930005;  // std dev = 0.196, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | else return -0.07429168698204686;  // std dev = 0.050, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064179
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.173 seconds
Total inference time: 1.358 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065098
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.411 seconds
Refined model CLL: -0.065098


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064179
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.992999999999999 seconds
Total inference time: 1.358 seconds
AUC ROC: 1.0
Total revision time: 13.992999999999999
Best scored revision CLL: -0.065098


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:35
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064179, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.992999999999999, 'Inference time': 1.358, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067739, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.247, 'Inference time': 1.557}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.68e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0.000, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4703886239357511;  // std dev = 4.042, 330.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=288 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06363117293757287;  // std dev = 4.500, 672.000 (wgt'ed) examples reached here.  /* #neg=623 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4576086032564985;  // std dev = 0.859, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1507662674648735;  // std dev = 0.217, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10612703229130611;  // std dev = 2.09e-07, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3489806493306308;  // std dev = 0.819, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13190767077455579;  // std dev = 0.025, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09647203318248648;  // std dev = 2.81e-07, 649.000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27497273033291375;  // std dev = 0.740, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11380901449842876;  // std dev = 0.178, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08838415704741272;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22402416390607346;  // std dev = 0.658, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10405735566284093;  // std dev = 0.166, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08151712800918885;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18773225857737952;  // std dev = 0.032, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1004599754139502;  // std dev = 0.017, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0756182676570344;  // std dev = 0.000, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16092644445149296;  // std dev = 0.524, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.09335838333300922;  // std dev = 0.112, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07049925314729467;  // std dev = 0.000, 649.000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12985337291306748;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( movie(E, B) )
%   | | then return -0.08650439705014429;  // std dev = 0.080, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.045573964787222476;  // std dev = 1.809, 649.000 (wgt'ed) examples reached here.  /* #neg=600 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067511
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.151 seconds
Total inference time: 1.585 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068461
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.823 seconds
Parameter learned model CLL: -0.068461


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [7.68e-09, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 580, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 52, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 621, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [4.042, 42, 288], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.5, 623, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.859, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.217, 60, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.09e-07, 622, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.819, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 61, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.81e-07, 649, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.74, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.178, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 600, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.658, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.166, 58, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 621, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 337], 'true,true,false': [0.017, 57, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 602, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.524, 0, 337], 'true,true,true,false': [0.112, 59, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 649, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 288], 'true,false,true': [0.08, 58, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.809, 600, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12062031445231457, -2.297013154396876e-16], 'true': [3.204821834882351e-15, 6.055761952500853e-17], 'true,false': [6.055761952500853e-17, nan]}, {'': [0.08267290887873702, -2.6602445420969934e-16], 'true': [-5.144582419153248e-15, -3.416070845000482e-17], 'true,false': [-3.416070845000482e-17, nan], 'true,false,true': [-3.416070845000482e-17, nan]}, {'': [0.04951699659470899, 0.030136025680451838], 'true': [0.04951699659470899, nan], 'true,true': [0.04951699659470899, nan], 'true,true,true': [0.04951699659470899, nan]}, {'': [0.04946013364844318, 6.996903949406132e-17], 'true': [0.04946013364844318, nan], 'true,true': [0.002188302720485883, 0.0007877963345808481], 'true,true,true': [0.002188302720485883, nan], 'true,true,false': [0.0007877963345808481, nan]}, {'': [0.03179731680125806, 1.2179950593730532e-16], 'true': [0.001992754097781745, 0.0006451216794305381], 'true,true': [0.001992754097781745, nan], 'true,true,true': [0.001992754097781745, nan], 'true,false': [0.0006451216794305381, nan]}, {'': [0.01947456099126157, -7.993605777301127e-17], 'true': [0.0016254811701753873, 0.0005899035222191431], 'true,true': [0.0016254811701753873, nan], 'true,false': [0.0005899035222191431, nan]}, {'': [0.014651787054849506, -4.004669203156764e-17], 'true': [0.0012864014862521067, 0.0004768000540654106], 'true,true': [0.0012864014862521067, nan], 'true,false': [0.0004768000540654106, nan]}, {'': [0.011191375621404664, -7.671973060532643e-17], 'true': [0.011191375621404664, nan], 'true,true': [0.001018668290545035, 0.00029605001054651295]}, {'': [0.008924442201332265, -3.352907747712337e-17], 'true': [0.008924442201332265, nan], 'true,true': [0.008924442201332265, nan], 'true,true,true': [0.0008159350396930534, 0.00021216414206325155]}, {'': [0.006549859829219038, 0.005043624392544726], 'true': [-2.4363227484829826e-16, 0.00010949488562087186], 'false': [0.005043624392544726, nan], 'false,true': [0.005043624392544726, nan], 'true,false': [0.00010949488562086708, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.1418510649004888;  // std dev = 0.000, 645.000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839233;  // std dev = 0.000, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.11231637819360611;  // std dev = 0.000, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583089;  // std dev = 4.42e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.33482350941821626;  // std dev = 0.190, 226.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783505;  // std dev = 4.46e-07, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33101527691611327;  // std dev = 0.166, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12301065900403924;  // std dev = 0.146, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926154;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2622132383538016;  // std dev = 0.145, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10863093629911746;  // std dev = 0.140, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21473262167963403;  // std dev = 0.127, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0954235121366776;  // std dev = 0.137, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109222;  // std dev = 0.000, 655.000 (wgt'ed) examples reached here.  /* #neg=655 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18074525265064417;  // std dev = 0.111, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08934558101982655;  // std dev = 0.118, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333677;  // std dev = 1.97e-07, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15551173823292178;  // std dev = 0.098, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08266012753747967;  // std dev = 0.113, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420369;  // std dev = 0.000, 645.000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13686165343633558;  // std dev = 0.079, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.07371582825474926;  // std dev = 0.090, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( female(A), director(B) )
%   | then return 0.12630935504990298;  // std dev = 0.187, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | else return -0.06223036602437675;  // std dev = 0.544, 611.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.719 seconds
Total inference time: 1.277 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065165
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.789 seconds
Refined model CLL: -0.065165


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.482 seconds
Total inference time: 1.277 seconds
AUC ROC: 1.0
Total revision time: 16.482
Best scored revision CLL: -0.065165


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06436, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.482, 'Inference time': 1.277, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067511, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.151, 'Inference time': 1.585}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4885981552522946;  // std dev = 1.552, 60.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0516179404717981;  // std dev = 2.111, 121.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4565524517618426;  // std dev = 0.406, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16036202684129153;  // std dev = 0.082, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10727206074699859;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3483941766560159;  // std dev = 0.386, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.10901922646155224;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09742352566410853;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27466200703858756;  // std dev = 0.348, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11875562871488667;  // std dev = 0.085, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08918643851220502;  // std dev = 3.49e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22386083569581175;  // std dev = 0.309, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10919675849310759;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08220215250008509;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18764798923874546;  // std dev = 0.034, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.10835207460260739;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07620959618067323;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16088578077301052;  // std dev = 0.246, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.07639644774014931;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07101460763011745;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12805977292540047;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else if ( movie(E, B) )
%   | | then return -0.09188243514926361;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.044104183636755424;  // std dev = 0.850, 135.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067636
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.126 seconds
Total inference time: 1.932 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069364
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.763 seconds
Parameter learned model CLL: -0.069364


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 65], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.19e-07, 0, 65], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 119, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.552, 6, 54], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.111, 110, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.406, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.082, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.386, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.348, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.085, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.49e-08, 114, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.309, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.057, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 65], 'true,true,false': [0.011, 14, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.246, 0, 65], 'true,true,true,false': [0.054, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 125, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 54], 'true,false,true': [0.027, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.85, 124, 11], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.138888888888888, 6.926161988487215e-17], 'true': [-8.745141363201234e-16, -1.2810265668751807e-17], 'true,false': [-1.2810265668751807e-17, nan]}, {'': [0.12495037455987758, -3.731842099580358e-18], 'true': [2.1862853408003084e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.040122030722945144, 0.03684300341868216], 'true': [0.040122030722945144, nan], 'true,true': [0.040122030722945144, nan], 'true,true,true': [0.040122030722945144, nan]}, {'': [0.05229480755285892, -1.101047627727428e-17], 'true': [0.05229480755285892, nan], 'true,true': [0.0025334540074690238, 0.0005637088999786386], 'true,true,true': [0.0025334540074690238, nan], 'true,true,false': [0.0005637088999786386, nan]}, {'': [0.020497299076271513, -2.2970131543968756e-17], 'true': [0.002292830171893115, 0.0006532906586421357], 'true,true': [0.002292830171893115, nan], 'true,true,true': [0.002292830171893115, nan], 'true,false': [0.0006532906586421357, nan]}, {'': [0.02202843804649762, 1.0712678307786598e-17], 'true': [0.0018630106720311282, 0.0006015590791376956], 'true,true': [0.0018630106720311282, nan], 'true,false': [0.0006015590791376956, nan]}, {'': [0.011108198420964364, -1.850371707708594e-17], 'true': [0.0014705572027054632, 0.00045782466125650546], 'true,true': [0.0014705572027054632, nan], 'true,false': [0.00045782466125650546, nan]}, {'': [0.013753729986401807, -1.047380211910525e-18], 'true': [0.013753729986401807, nan], 'true,true': [0.0011623351027103, 0.0001246326402344265]}, {'': [0.006362142774353874, -1.2434497875801754e-17], 'true': [0.006362142774353874, nan], 'true,true': [0.006362142774353874, nan], 'true,true,true': [0.0009297086925063532, 0.0003679897177055061]}, {'': [0.00681199326010384, 0.00534834372316381], 'true': [-3.4951465590051226e-17, 6.45790736226158e-05], 'false': [0.00534834372316381, nan], 'false,true': [0.00534834372316381, nan], 'true,false': [6.45790736226158e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.12544463852839138;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.88e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.524311422097917;  // std dev = 0.141, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4222892901547357;  // std dev = 0.029, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10344357421436148;  // std dev = 0.127, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3239561246450775;  // std dev = 0.026, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09308849071754521;  // std dev = 0.069, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2573876012717301;  // std dev = 0.023, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08501000723932249;  // std dev = 1.49e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21132311278769736;  // std dev = 0.020, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07908672213987498;  // std dev = 0.060, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12565738269156115;  // std dev = 0.099, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1799199543419834;  // std dev = 5.77e-08, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07308485397555665;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15601300280050184;  // std dev = 0.012, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.07237550310377397;  // std dev = 0.023, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06913309759158656;  // std dev = 0.075, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13640512069877778;  // std dev = 0.009, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else return -0.06750927982874105;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1372869061083535;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.06915156217891541;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06441059214066089;  // std dev = 0.050, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063515
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.092 seconds
Total inference time: 1.405 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065168
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.392 seconds
Refined model CLL: -0.065168


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063515
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.372999999999999 seconds
Total inference time: 1.405 seconds
AUC ROC: 1.0
Total revision time: 7.372999999999999
Best scored revision CLL: -0.065168


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063515, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.372999999999999, 'Inference time': 1.405, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067636, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.126, 'Inference time': 1.932}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839166;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4372379387184571;  // std dev = 2.905, 130.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=107 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04779240868260827;  // std dev = 3.043, 238.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4678353379162289;  // std dev = 0.525, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1497765768146615;  // std dev = 0.119, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10763896268610984;  // std dev = 3.65e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35602095186590677;  // std dev = 0.501, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1286208927188549;  // std dev = 0.023, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09772807427326355;  // std dev = 1.28e-07, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2797290421321339;  // std dev = 0.451, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11728918660420988;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08944298372925512;  // std dev = 1.19e-07, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22732676527519968;  // std dev = 0.400, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10572108327220754;  // std dev = 0.087, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08242102179212028;  // std dev = 3.33e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19011162408390614;  // std dev = 0.031, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.08919076658747314;  // std dev = 0.019, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07639839306332558;  // std dev = 6.99e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1627016185697109;  // std dev = 0.316, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return -0.0833869814653928;  // std dev = 0.072, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07117904371352586;  // std dev = 5.37e-08, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13026863735847133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( movie(E, B) )
%   | | then return -0.0857523644114551;  // std dev = 0.048, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04404590454627951;  // std dev = 1.202, 270.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067713
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.787 seconds
Total inference time: 1.927 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069288
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.451 seconds
Parameter learned model CLL: -0.069288


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.66e-08, 0, 130], 'true,false,true': [0.0, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 238, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 130], 'true,false,true,true': [0.0, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 203, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.905, 23, 107], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.043, 215, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.525, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.119, 24, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.501, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.023, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.28e-07, 223, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.451, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.096, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.19e-07, 231, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.4, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.087, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.33e-08, 247, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.031, 0, 130], 'true,true,false': [0.019, 18, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 249, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.316, 0, 130], 'true,true,true,false': [0.072, 17, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 256, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 107], 'true,false,true': [0.048, 24, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.202, 247, 23], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11555555555556017, -2.1271499967608042e-16], 'true': [4.481884948640632e-15, 2.7755575615628915e-18], 'true,false': [2.7755575615628915e-18, nan]}, {'': [0.08837064688583612, -5.2503157814785726e-17], 'true': [-1.7490282726402467e-15, -2.523234146875356e-18], 'true,false': [-2.523234146875356e-18, nan], 'true,false,true': [-2.523234146875356e-18, nan]}, {'': [0.06491802604153174, 0.03891820295274273], 'true': [0.06491802604153174, nan], 'true,true': [0.06491802604153174, nan], 'true,true,true': [0.06491802604153174, nan]}, {'': [0.052063036764154205, 5.693451408334136e-18], 'true': [0.052063036764154205, nan], 'true,true': [0.00211951539649298, 0.000591859508148912], 'true,true,true': [0.00211951539649298, nan], 'true,true,false': [0.000591859508148912, nan]}, {'': [0.024695944608035824, 7.36829630692929e-17], 'true': [0.001928656795951757, 0.0005424643967804413], 'true,true': [0.001928656795951757, nan], 'true,true,true': [0.001928656795951757, nan], 'true,false': [0.0005424643967804413, nan]}, {'': [0.021521297588776203, 6.151885158096106e-17], 'true': [0.001563306444118472, 0.0003988925759591267], 'true,true': [0.001563306444118472, nan], 'true,false': [0.0003988925759591267, nan]}, {'': [0.015261262161519976, 4.49483005921116e-18], 'true': [0.0012284264043208883, 0.0003307999957738643], 'true,true': [0.0012284264043208883, nan], 'true,false': [0.0003307999957738643, nan]}, {'': [0.009226106793145476, 1.9618398828717626e-17], 'true': [0.009226106793145476, nan], 'true,true': [0.0009665404202631674, 0.00035638663434128494]}, {'': [0.006909354425035332, 1.1275702593849246e-17], 'true': [0.006909354425035332, nan], 'true,true': [0.006909354425035332, nan], 'true,true,true': [0.0007699875901838533, 0.00030134573172519374]}, {'': [0.007000695722018923, 0.005352951798174577], 'true': [0.0, 9.638399916467658e-05], 'false': [0.005352951798174577, nan], 'false,true': [0.005352951798174577, nan], 'true,false': [9.638399916467542e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.1418510649004885;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839186;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360678;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878365;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2.53e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09269127618926058;  // std dev = 5.77e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5.96e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839683;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0787767547310915;  // std dev = 7.74e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527814;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333673;  // std dev = 1.15e-07, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367141;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4.21e-08, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801112;  // std dev = 4.47e-08, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.06419184008202618;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.304 seconds
Total inference time: 1.375 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.906 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.448 seconds
Total inference time: 1.375 seconds
AUC ROC: 1.0
Total revision time: 9.448
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.448, 'Inference time': 1.375, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067713, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.787, 'Inference time': 1.927}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.89e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 2.11e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839133;  // std dev = 1.83e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45451851157307005;  // std dev = 3.313, 192.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05724975428103813;  // std dev = 3.618, 388.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=32 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46310292282373483;  // std dev = 0.658, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15595003690635048;  // std dev = 0.121, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10673392307637308;  // std dev = 1.37e-07, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3527882871047485;  // std dev = 0.628, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1341899357316681;  // std dev = 0.022, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09697654514732815;  // std dev = 5.16e-08, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27756485336119596;  // std dev = 0.566, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11559194333658226;  // std dev = 0.133, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08880969697131735;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22583719121016838;  // std dev = 0.503, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10246113934976185;  // std dev = 0.141, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08188058015757249;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18904706837759372;  // std dev = 0.032, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.09022712059818304;  // std dev = 0.020, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07593208813012671;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16191315080238966;  // std dev = 0.399, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return -0.09011742891491072;  // std dev = 0.103, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07077281549895413;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12983772310111166;  // std dev = 4.21e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(E, B) )
%   | | then return -0.08482498589245573;  // std dev = 0.064, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.045521280114555876;  // std dev = 1.442, 414.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067279
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.629 seconds
Total inference time: 1.712 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068778
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.236 seconds
Parameter learned model CLL: -0.068778


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 195], 'true,false,true': [5.89e-09, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-07, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 195], 'true,false,true,true': [1.83e-08, 36, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 348, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.313, 29, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.618, 356, 32]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.658, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.121, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.37e-07, 320, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.628, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.16e-08, 371, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.566, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.133, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 359, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.503, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.141, 47, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 357, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 195], 'true,true,false': [0.02, 38, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 345, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.399, 0, 195], 'true,true,true,false': [0.103, 43, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 357, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [4.21e-08, 0, 163], 'true,false,true': [0.064, 36, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.442, 382, 32], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12642779504586668, 1.2370172976324865e-16], 'true': [5.975846598187509e-15, 3.2653618371328135e-17], 'true,false': [3.2653618371328135e-17, nan]}, {'': [0.09391659297062208, -1.148506577198438e-16], 'true': [-3.643808901333847e-15, 9.25185853854297e-18], 'true,false': [9.25185853854297e-18, nan], 'true,false,true': [9.25185853854297e-18, nan]}, {'': [0.057164122548758654, 0.033734705394052114], 'true': [0.057164122548758654, nan], 'true,true': [0.057164122548758654, nan], 'true,true,true': [0.057164122548758654, nan]}, {'': [0.045189260216432006, 5.828670879282072e-17], 'true': [0.045189260216432006, nan], 'true,true': [0.0022205129468009324, 0.0005046303876093987], 'true,true,true': [0.0022205129468009324, nan], 'true,true,false': [0.0005046303876093987, nan]}, {'': [0.03835157983601099, 7.182035738815029e-18], 'true': [0.0020213751072762492, 0.0004769901968447973], 'true,true': [0.0020213751072762492, nan], 'true,true,true': [0.0020213751072762492, nan], 'true,false': [0.0004769901968447973, nan]}, {'': [0.022177240650253, -4.205858811950454e-17], 'true': [0.001643354949326045, 0.00047571271718577376], 'true,true': [0.001643354949326045, nan], 'true,false': [0.00047571271718577376, nan]}, {'': [0.01799360591607454, -2.487894733053572e-18], 'true': [0.001295630805385091, 0.00042508427483298254], 'true,true': [0.001295630805385091, nan], 'true,false': [0.00042508427483298254, nan]}, {'': [0.011564905292093744, -2.960594732333751e-17], 'true': [0.011564905292093744, nan], 'true,true': [0.001022455840029447, 0.00039030767299331516]}, {'': [0.010116233747921925, -4.664802624475448e-17], 'true': [0.010116233747921925, nan], 'true,true': [0.010116233747921925, nan], 'true,true,true': [0.0008165747345514318, 0.00024588939195613205]}, {'': [0.006848846316092516, 0.005023231156548758], 'true': [1.0897894720246936e-17, 0.00011491646403152502], 'false': [0.005023231156548758, nan], 'false,true': [0.005023231156548758, nan], 'true,false': [0.00011491646403152502, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048757;  // std dev = 2.19e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1254446385283913;  // std dev = 2.58e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839216;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.11231637819360671;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.32551942224633523;  // std dev = 0.198, 237.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=195 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 1.07e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34107480188304423;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1353930876304409;  // std dev = 1.83e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.09269127618926055;  // std dev = 1.74e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2690234148355094;  // std dev = 3.79e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12031127856546438;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839678;  // std dev = 1.03e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21949590281606335;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1081482425351137;  // std dev = 1.97e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07877675473109147;  // std dev = 3.65e-08, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18420672878480107;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.09815053289645183;  // std dev = 1.29e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333698;  // std dev = 1.02e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1581165646816738;  // std dev = 1.12e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.08979865784497275;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420315;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13818757760972064;  // std dev = 1.44e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07721466204622628;  // std dev = 0.052, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1381875776097211;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.08272431749261865;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.06419184008202605;  // std dev = 1.01e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.77 seconds
Total inference time: 1.58 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.326 seconds
Refined model CLL: -0.065838


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.961 seconds
Total inference time: 1.58 seconds
AUC ROC: 1.0
Total revision time: 11.961
Best scored revision CLL: -0.065838


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06406, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.961, 'Inference time': 1.58, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067279, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.629, 'Inference time': 1.712}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.90e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004872;  // std dev = 2.92e-07, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47874709732695103;  // std dev = 3.324, 244.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=216 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06285839190176296;  // std dev = 4.262, 594.000 (wgt'ed) examples reached here.  /* #neg=550 #pos=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45903028876267826;  // std dev = 0.814, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15100900371284887;  // std dev = 0.220, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10620036377422087;  // std dev = 2.98e-08, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3501112643033833;  // std dev = 0.775, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13418858644175707;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09653301803899718;  // std dev = 0.000, 455.000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27583461580788604;  // std dev = 0.699, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11684997299637331;  // std dev = 0.158, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08843561319997198;  // std dev = 0.000, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2246844718031283;  // std dev = 0.621, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10467298027562948;  // std dev = 0.147, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.081561089361254;  // std dev = 0.000, 447.000 (wgt'ed) examples reached here.  /* #neg=447 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18824794882223245;  // std dev = 0.034, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.0973418062048372;  // std dev = 0.019, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07565623548372356;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16133797890181717;  // std dev = 0.494, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return -0.08727208190518523;  // std dev = 0.140, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07053235772852394;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.128351235883688;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | else if ( movie(E, B) )
%   | | then return -0.08489743531469857;  // std dev = 0.081, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.042593913579521886;  // std dev = 1.698, 510.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067285
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.802 seconds
Total inference time: 1.843 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06886
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.99 seconds
Parameter learned model CLL: -0.06886


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 260], 'true,false,true': [7.9e-09, 52, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.92e-07, 472, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 260], 'true,false,true,true': [0.0, 38, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 467, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.324, 28, 216], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.262, 550, 44]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.814, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.22, 58, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.98e-08, 480, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.775, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 56, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 455, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.699, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.158, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 486, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.621, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.147, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 447, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 260], 'true,true,false': [0.019, 42, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 470, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.494, 0, 260], 'true,true,true,false': [0.14, 57, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 494, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 216], 'true,false,true': [0.081, 44, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.698, 466, 44], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13888888888889303, 1.8064645824409328e-16], 'true': [4.372570681600617e-15, 5.551115123125783e-17], 'true,false': [5.551115123125783e-17, nan]}, {'': [0.07942433610147914, -1.3122978792143178e-16], 'true': [-4.481884948640632e-15, -2.0451476769410777e-17], 'true,false': [-2.0451476769410777e-17, nan], 'true,false,true': [-2.0451476769410777e-17, nan]}, {'': [0.04528689304928096, 0.03057615510055197], 'true': [0.04528689304928096, nan], 'true,true': [0.04528689304928096, nan], 'true,true,true': [0.04528689304928096, nan]}, {'': [0.05772969299922318, 1.8503717077085942e-18], 'true': [0.05772969299922318, nan], 'true,true': [0.0025461028137764483, 0.000832508332281526], 'true,true,true': [0.0025461028137764483, nan], 'true,true,false': [0.000832508332281526, nan]}, {'': [0.036213588636523866, 0.0], 'true': [0.0023125938618154015, 0.0006298940842857767], 'true,true': [0.0023125938618154015, nan], 'true,true,true': [0.0023125938618154015, nan], 'true,false': [0.0006298940842857767, nan]}, {'': [0.02077938138691833, -7.127357688951622e-17], 'true': [0.0018814357385908446, 0.0005664666852595388], 'true,true': [0.0018814357385908446, nan], 'true,false': [0.0005664666852595388, nan]}, {'': [0.014980789523542655, -5.464184908669674e-17], 'true': [0.0014855267941731685, 0.0004817919959066626], 'true,true': [0.0014855267941731685, nan], 'true,false': [0.0004817919959066626, nan]}, {'': [0.010828160114505015, -4.724353296277262e-18], 'true': [0.010828160114505015, nan], 'true,true': [0.0011740701716096698, 0.00037305707363662]}, {'': [0.00994741977319872, -3.9554504521058206e-17], 'true': [0.00994741977319872, nan], 'true,true': [0.00994741977319872, nan], 'true,true,true': [0.0009388958543682362, 0.00034552479247415216]}, {'': [0.006418627478816419, 0.00565069147317194], 'true': [-1.0485439677015367e-16, 0.00014902603060231774], 'false': [0.00565069147317194, nan], 'false,true': [0.00565069147317194, nan], 'true,false': [0.0001490260306023215, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048785;  // std dev = 0.000, 534.000 (wgt'ed) examples reached here.  /* #neg=534 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1254446385283922;  // std dev = 0.000, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360608;  // std dev = 0.000, 508.000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3355488609510238;  // std dev = 0.189, 133.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=112 */
%   | | else return 0.3182302673407407;  // std dev = 0.204, 183.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=148 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783567;  // std dev = 2.90e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34103896505257264;  // std dev = 0.031, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1356348142895754;  // std dev = 0.007, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0926912761892608;  // std dev = 1.74e-07, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26900014567955016;  // std dev = 0.027, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12041025259972557;  // std dev = 0.006, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839679;  // std dev = 1.35e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21948024061037522;  // std dev = 0.024, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10793695253679214;  // std dev = 0.004, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109173;  // std dev = 1.94e-07, 529.000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1841957332984376;  // std dev = 0.021, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.09827812700134957;  // std dev = 0.005, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333759;  // std dev = 0.000, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15810854330096635;  // std dev = 0.018, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.08982274457140522;  // std dev = 0.005, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420346;  // std dev = 0.000, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1383346084743899;  // std dev = 0.015, 216.000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | else return -0.07779241866635578;  // std dev = 0.053, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13743005842878;  // std dev = 0.006, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return -0.08263000246942918;  // std dev = 0.002, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.0641918400820258;  // std dev = 1.69e-07, 448.000 (wgt'ed) examples reached here.  /* #neg=448 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064057
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.492 seconds
Total inference time: 1.464 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065814
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.401 seconds
Refined model CLL: -0.065814


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064057
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.684999999999999 seconds
Total inference time: 1.464 seconds
AUC ROC: 1.0
Total revision time: 13.684999999999999
Best scored revision CLL: -0.065814


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064057, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.684999999999999, 'Inference time': 1.464, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067285, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.802, 'Inference time': 1.843}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.97e-09, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004884;  // std dev = 0.000, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4500536899103376;  // std dev = 4.333, 317.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=267 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.052899657105441616;  // std dev = 4.895, 663.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4659595919344416;  // std dev = 0.869, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14221110060436215;  // std dev = 0.212, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10714937922433888;  // std dev = 2.87e-07, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35480659063763803;  // std dev = 0.829, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12933412051697799;  // std dev = 0.025, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09732165672090334;  // std dev = 3.38e-07, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27895947573150304;  // std dev = 0.746, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1158470975672786;  // std dev = 0.156, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08910059984749293;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22682449047303516;  // std dev = 0.662, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10682015509184256;  // std dev = 0.152, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08212890046959645;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18977038987309214;  // std dev = 0.033, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.09708336785938981;  // std dev = 0.018, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07614639420504751;  // std dev = 1.91e-07, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16246078577161818;  // std dev = 0.524, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return -0.0865264220906444;  // std dev = 0.126, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07095954946774925;  // std dev = 1.63e-07, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12937937250847376;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( movie(E, B) )
%   | | then return -0.08651037888767511;  // std dev = 0.074, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04240481687321655;  // std dev = 1.930, 656.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.819 seconds
Total inference time: 2.008 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069213
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.319 seconds
Parameter learned model CLL: -0.069213


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.77e-08, 0, 326], 'true,false,true': [6.97e-09, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 602, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 326], 'true,false,true,true': [0.0, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 619, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [4.333, 50, 267], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.895, 604, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.869, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.212, 55, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.87e-07, 592, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.829, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 69, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.38e-07, 590, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.746, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.156, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 605, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.662, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.152, 62, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 608, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 326], 'true,true,false': [0.018, 62, 0], 'true,false': [0.0, 0, 0], 'false': [1.91e-07, 592, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.524, 0, 326], 'true,true,true,false': [0.126, 53, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.63e-07, 578, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 267], 'true,false,true': [0.074, 55, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.93, 597, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10658161448987179, -2.8917436920469196e-16], 'true': [3.400143152717044e-15, 4.9343245538895844e-17], 'true,false': [4.9343245538895844e-17, nan]}, {'': [0.08587054644824933, -2.69753704206177e-16], 'true': [-5.056623150194578e-15, -3.561092720495785e-17], 'true,false': [-3.561092720495785e-17, nan], 'true,false,true': [-3.561092720495785e-17, nan]}, {'': [0.05922473661034411, 0.036141176845774545], 'true': [0.05922473661034411, nan], 'true,true': [0.05922473661034411, nan], 'true,true,true': [0.05922473661034411, nan]}, {'': [0.04778780855783185, 1.3952802877045887e-16], 'true': [0.04778780855783185, nan], 'true,true': [0.0023183645408345684, 0.0008195495374202075], 'true,true,true': [0.0023183645408345684, nan], 'true,true,false': [0.0008195495374202075, nan]}, {'': [0.03563905868133382, 1.9419494261240026e-16], 'true': [0.002107823679057821, 0.0006142320503710909], 'true,true': [0.002107823679057821, nan], 'true,true,true': [0.002107823679057821, nan], 'true,false': [0.0006142320503710909, nan]}, {'': [0.019257028155970676, -2.202095255454856e-17], 'true': [0.0017093617384875664, 0.0004978016202869971], 'true,true': [0.0017093617384875664, nan], 'true,false': [0.0004978016202869971, nan]}, {'': [0.016134949803233763, -4.382459307730881e-18], 'true': [0.0013442571385472194, 0.000374664161051231], 'true,true': [0.0013442571385472194, nan], 'true,false': [0.000374664161051231, nan]}, {'': [0.011987218220328173, 6.151235676977219e-17], 'true': [0.011987218220328173, nan], 'true,true': [0.0010584809350024163, 0.0003147921576580328]}, {'': [0.008225083850936085, 4.6099225935992657e-17], 'true': [0.008225083850936085, nan], 'true,true': [0.008225083850936085, nan], 'true,true,true': [0.0008437788427871491, 0.00030187716911577974]}, {'': [0.006618483845059061, 0.005679215513654053], 'true': [-9.979532805619384e-17, 0.00010088926151781343], 'false': [0.005679215513654053, nan], 'false,true': [0.005679215513654053, nan], 'true,false': [0.00010088926151780939, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.1418510649004881;  // std dev = 0.000, 569.000 (wgt'ed) examples reached here.  /* #neg=569 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839227;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360626;  // std dev = 5.05e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.1123163781936058;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783519;  // std dev = 4.13e-07, 583.000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.09269127618926139;  // std dev = 0.000, 588.000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07877675473109179;  // std dev = 0.000, 563.000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333692;  // std dev = 1.56e-07, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420365;  // std dev = 0.000, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801129;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080114;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.0641918400820255;  // std dev = 2.43e-07, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.254 seconds
Total inference time: 1.393 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.486 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.878 seconds
Total inference time: 1.393 seconds
AUC ROC: 1.0
Total revision time: 14.878
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:14:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.878, 'Inference time': 1.393, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067632, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.819, 'Inference time': 2.008}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.43017590894505414;  // std dev = 2.085, 64.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04872753867552151;  // std dev = 2.200, 126.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4705729976945512;  // std dev = 0.372, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.13827594041106278;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10754917376745958;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3579385713931394;  // std dev = 0.355, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.11992593500172613;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09765355972526929;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.281041107248949;  // std dev = 0.319, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1135840766401326;  // std dev = 0.088, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08938022521769105;  // std dev = 4.83e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22824733478553075;  // std dev = 0.283, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09452600780679742;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08236748799887562;  // std dev = 2.36e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1907809036295589;  // std dev = 0.031, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.10448819400902594;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07635222083339957;  // std dev = 4.34e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16320505140406566;  // std dev = 0.224, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.08335878979833082;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0711388338192915;  // std dev = 5.16e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13015553941585972;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else if ( movie(E, B) )
%   | | then return -0.0840728524643102;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.043254311798768375;  // std dev = 0.863, 135.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.276 seconds
Total inference time: 2.112 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069194
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.844 seconds
Parameter learned model CLL: -0.069194


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 64], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [8.43e-08, 0, 64], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 129, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.085, 12, 52], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.2, 114, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.372, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.082, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 103, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.355, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 123, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.319, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.088, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.83e-08, 101, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.283, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.054, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.36e-08, 101, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.031, 0, 64], 'true,true,false': [0.012, 9, 0], 'true,false': [0.0, 0, 0], 'false': [4.34e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.224, 0, 64], 'true,true,true,false': [0.053, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 119, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 52], 'true,false,true': [0.042, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.863, 123, 12], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.14032720526226933, 6.80136627698294e-17], 'true': [-8.881784197001252e-16, -1.2810265668751807e-17], 'true,false': [-1.2810265668751807e-17, nan]}, {'': [0.08934686307119757, 0.0], 'true': [1.1102230246251565e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.06791489575498508, 0.03841363485693883], 'true': [0.06791489575498508, nan], 'true,true': [0.06791489575498508, nan], 'true,true,true': [0.06791489575498508, nan]}, {'': [0.042056380468797484, -4.958277585704583e-17], 'true': [0.042056380468797484, nan], 'true,true': [0.002161970384372741, 0.0007553073506963684], 'true,true,true': [0.002161970384372741, nan], 'true,true,false': [0.0007553073506963684, nan]}, {'': [0.008637858922949505, 0.0], 'true': [0.001968511089242786, 0.0006223360529504767], 'true,true': [0.001968511089242786, nan], 'true,true,true': [0.001968511089242786, nan], 'true,false': [0.0006223360529504767, nan]}, {'': [0.026288688006234455, 2.308384506646365e-17], 'true': [0.00159385847340357, 0.0004847775299647132], 'true,true': [0.00159385847340357, nan], 'true,false': [0.0004847775299647132, nan]}, {'': [0.010427799080541662, 5.4961535872532505e-18], 'true': [0.0012505612301899616, 0.00042286999336593945], 'true,true': [0.0012505612301899616, nan], 'true,false': [0.00042286999336593945, nan]}, {'': [0.010302956346358675, 1.797503944631206e-17], 'true': [0.010302956346358675, nan], 'true,true': [0.0009825518392993574, 0.0001462409814969744]}, {'': [0.0072943518002065244, 2.239105259748215e-17], 'true': [0.0072943518002065244, nan], 'true,true': [0.0072943518002065244, nan], 'true,true,true': [0.0007817698115621594, 0.0003074352778043962]}, {'': [0.007370211262764688, 0.005518233313984143], 'true': [-5.124106267500723e-17, 0.00013601320377273159], 'false': [0.005518233313984143, nan], 'false,true': [0.005518233313984143, nan], 'true,false': [0.00013601320377273159, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839133;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360622;  // std dev = 8.43e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3136916014290807;  // std dev = 0.208, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583102;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33078578652934626;  // std dev = 0.091, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11335286961455578;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926098;  // std dev = 4.21e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26207029892833245;  // std dev = 0.080, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10721833808615072;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839682;  // std dev = 5.37e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21464009382570234;  // std dev = 0.070, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09741051054333219;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109164;  // std dev = 5.67e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1806827259618388;  // std dev = 0.061, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.07274776703887276;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1554678157129937;  // std dev = 0.054, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.0767007685592384;  // std dev = 0.057, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5.05e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13548769618635975;  // std dev = 0.043, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.07468375322697614;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1430326239572326;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.09258497719888488;  // std dev = 0.171, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06361
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.888 seconds
Total inference time: 1.67 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065327
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.368 seconds
Refined model CLL: -0.065327


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06361
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.376 seconds
Total inference time: 1.67 seconds
AUC ROC: 1.0
Total revision time: 7.376
Best scored revision CLL: -0.065327


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06361, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.376, 'Inference time': 1.67, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068083, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.276, 'Inference time': 2.112}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.17e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.46155976026712564;  // std dev = 2.552, 121.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=104 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.049327433387956046;  // std dev = 3.177, 265.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4651048816048644;  // std dev = 0.570, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15723315444635508;  // std dev = 0.094, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10749160801819704;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3542999839669609;  // std dev = 0.543, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12685297578447163;  // std dev = 0.026, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09760578156510852;  // std dev = 9.42e-08, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27866846685660934;  // std dev = 0.489, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11750872055470893;  // std dev = 0.100, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08933998120845228;  // std dev = 9.77e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2266539662155776;  // std dev = 0.433, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10038175474557956;  // std dev = 0.089, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08233315660430125;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1896675485264461;  // std dev = 0.034, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.09984450427134092;  // std dev = 0.016, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07632260836257902;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16239729206259595;  // std dev = 0.343, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.07967555989764667;  // std dev = 0.089, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07111304369650946;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12831116302931939;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else if ( movie(E, B) )
%   | | then return -0.08684642847321422;  // std dev = 0.051, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04086237312305153;  // std dev = 1.251, 260.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06818
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.774 seconds
Total inference time: 1.963 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06939
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.186 seconds
Parameter learned model CLL: -0.06939


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 129], 'true,false,true': [4.17e-09, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 256, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 129], 'true,false,true,true': [0.0, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.552, 17, 104], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.177, 240, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.57, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.094, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.543, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.42e-08, 255, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.489, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.1, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.77e-08, 223, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.433, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.089, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 129], 'true,true,false': [0.016, 19, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.343, 0, 129], 'true,true,true,false': [0.089, 23, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 217, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 104], 'true,false,true': [0.051, 24, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.251, 235, 25], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13960457856400044, -1.3877787807814457e-16], 'true': [4.40646657835721e-15, 1.708035422500241e-17], 'true,false': [1.708035422500241e-17, nan]}, {'': [0.08296145228413639, -5.3217302006825687e-17], 'true': [-1.7625866313428842e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.053833413259695845, 0.038089028810200994], 'true': [0.053833413259695845, nan], 'true,true': [0.053833413259695845, nan], 'true,true,true': [0.053833413259695845, nan]}, {'': [0.04389075274679351, -2.3468128975816318e-17], 'true': [0.04389075274679351, nan], 'true,true': [0.002520938916167855, 0.000494844288212917], 'true,true,true': [0.002520938916167855, nan], 'true,true,false': [0.000494844288212917, nan]}, {'': [0.027981206599014916, 3.483052626275001e-17], 'true': [0.0022851661072497394, 0.0006562701616290987], 'true,true': [0.0022851661072497394, nan], 'true,true,true': [0.0022851661072497394, nan], 'true,false': [0.0006562701616290987, nan]}, {'': [0.020554882353802414, 4.281577583756209e-17], 'true': [0.0018501234332058978, 0.000473071404987284], 'true,true': [0.0018501234332058978, nan], 'true,false': [0.000473071404987284, nan]}, {'': [0.012341779550496531, -2.9542415247536353e-17], 'true': [0.001453497633533451, 0.00046561921104909206], 'true,true': [0.001453497633533451, nan], 'true,false': [0.00046561921104909206, nan]}, {'': [0.010410649568715843, -4.404190510909712e-17], 'true': [0.010410649568715843, nan], 'true,true': [0.0011437290916784734, 0.0002712534686689258]}, {'': [0.008350870558172819, -2.967416379182446e-17], 'true': [0.008350870558172819, nan], 'true,true': [0.008350870558172819, nan], 'true,true,true': [0.0009112907284336317, 0.00034493809240723517]}, {'': [0.007072730330121344, 0.0060225721572809265], 'true': [-5.764619550938313e-17, 0.00010833721761263394], 'false': [0.0060225721572809265, nan], 'false,true': [0.0060225721572809265, nan], 'true,false': [0.00010833721761263279, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1418510649004883;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.12544463852839172;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.11231637819360678;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.3362072121414441;  // std dev = 0.189, 83.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=70 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783652;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33046032222695365;  // std dev = 0.102, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12036842582519158;  // std dev = 0.110, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09269127618926055;  // std dev = 6.99e-08, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2618351845337125;  // std dev = 0.089, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10921078459550929;  // std dev = 0.097, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839678;  // std dev = 7.60e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21446648347853733;  // std dev = 0.077, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10075695577889203;  // std dev = 0.075, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109148;  // std dev = 7.30e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1805507238243691;  // std dev = 0.068, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08792952661771665;  // std dev = 0.073, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333675;  // std dev = 1.07e-07, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15536461183445954;  // std dev = 0.060, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07554164874754721;  // std dev = 0.077, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1.49e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13683829924652322;  // std dev = 0.047, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else return -0.07312275078872618;  // std dev = 0.060, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13278825216675214;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.07502168866657197;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.363 seconds
Total inference time: 1.456 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065151
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.879 seconds
Refined model CLL: -0.065151


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.202 seconds
Total inference time: 1.456 seconds
AUC ROC: 1.0
Total revision time: 10.202
Best scored revision CLL: -0.065151


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064158, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.202, 'Inference time': 1.456, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06818, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.774, 'Inference time': 1.963}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048754;  // std dev = 2.37e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839144;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283921;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.49123870875770587;  // std dev = 2.617, 177.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=160 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05556333892371577;  // std dev = 3.724, 400.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45699630030942506;  // std dev = 0.719, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15801811890804943;  // std dev = 0.141, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10689481560724341;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3487566840479543;  // std dev = 0.684, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12344124435565963;  // std dev = 0.029, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09711022053754169;  // std dev = 1.33e-07, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2749442671770074;  // std dev = 0.617, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11978273242632735;  // std dev = 0.116, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08892239327326389;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22408065390809764;  // std dev = 0.548, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10975173262402668;  // std dev = 0.116, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0819767932613754;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1878218794124554;  // std dev = 0.035, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.09497224200898227;  // std dev = 0.021, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07601513228948298;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.161025979528388;  // std dev = 0.436, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.08904332491458718;  // std dev = 0.116, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07084518310375176;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1275845100865566;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   | else if ( movie(E, B) )
%   | | then return -0.08739980706897953;  // std dev = 0.063, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.043693022439426556;  // std dev = 1.495, 408.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067836
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.838 seconds
Total inference time: 1.896 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069048
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.999 seconds
Parameter learned model CLL: -0.069048


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 194], 'true,false,true': [6.45e-09, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.37e-07, 370, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 194], 'true,false,true,true': [0.0, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 345, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.617, 17, 160], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.724, 366, 34]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.719, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.141, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 329, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.684, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.029, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.33e-07, 379, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.617, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.116, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 361, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.548, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.116, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 354, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 194], 'true,true,false': [0.021, 31, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 365, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.436, 0, 194], 'true,true,true,false': [0.116, 39, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 357, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 160], 'true,false,true': [0.063, 31, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.495, 374, 34], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13696492271106386, 1.5123037957056187e-16], 'true': [6.15315358802561e-15, 4.0902953538821554e-17], 'true,false': [4.0902953538821554e-17, nan]}, {'': [0.09058162965951318, -1.1070049868726199e-16], 'true': [-3.516087764586063e-15, -1.6326809185664067e-17], 'true,false': [-1.6326809185664067e-17, nan], 'true,false,true': [-1.6326809185664067e-17, nan]}, {'': [0.0387046164421381, 0.03467212154974548], 'true': [0.0387046164421381, nan], 'true,true': [0.0387046164421381, nan], 'true,true,true': [0.0387046164421381, nan]}, {'': [0.045201288349040705, -1.8357487094105932e-16], 'true': [0.045201288349040705, nan], 'true,true': [0.0026677452005893277, 0.0006818066453181508], 'true,true,true': [0.0026677452005893277, nan], 'true,true,false': [0.0006818066453181508, nan]}, {'': [0.026788790278385054, 4.68695735989512e-17], 'true': [0.0024146977670821516, 0.0008180014468437552], 'true,true': [0.0024146977670821516, nan], 'true,true,true': [0.0024146977670821516, nan], 'true,false': [0.0008180014468437552, nan]}, {'': [0.01707255731338561, -5.5357380729232184e-17], 'true': [0.00196179126247231, 0.0005618409135809502], 'true,true': [0.00196179126247231, nan], 'true,false': [0.0005618409135809502, nan]}, {'': [0.014934072665149765, -1.6308360813702865e-17], 'true': [0.001548184810504796, 0.00042164572304928365], 'true,true': [0.001548184810504796, nan], 'true,false': [0.00042164572304928365, nan]}, {'': [0.010614507713023637, -3.650048300137501e-17], 'true': [0.010614507713023637, nan], 'true,true': [0.0012233953058490277, 0.0004306153400476207]}, {'': [0.009587010891750678, -6.21973683263393e-17], 'true': [0.009587010891750678, nan], 'true,true': [0.009587010891750678, nan], 'true,true,true': [0.0009783213947565231, 0.00034224007575600054]}, {'': [0.006304921928222805, 0.005477291908398392], 'true': [-1.0824674490095276e-16, 0.00012959027432059604], 'false': [0.005477291908398392, nan], 'false,true': [0.005477291908398392, nan], 'true,false': [0.00012959027432058885, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1418510649004876;  // std dev = 2.13e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839213;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360668;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583102;  // std dev = 1.52e-07, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.349987091326291;  // std dev = 0.175, 123.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32892194328859986;  // std dev = 0.103, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11396739229531322;  // std dev = 0.125, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926053;  // std dev = 1.70e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2607815672504449;  // std dev = 0.090, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10903222944984498;  // std dev = 0.122, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.08518475138839678;  // std dev = 1.05e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21372121287056073;  // std dev = 0.078, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09622518840720083;  // std dev = 0.116, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109147;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1800037103261139;  // std dev = 0.069, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.08456663589841878;  // std dev = 0.099, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333693;  // std dev = 1.02e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15494939369182584;  // std dev = 0.061, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.08639211063660539;  // std dev = 0.094, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420321;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13630927472413776;  // std dev = 0.048, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   | else return -0.07527726923150001;  // std dev = 0.069, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( actor(B) )
%   | then return -0.06419184008202591;  // std dev = 1.24e-07, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.12736452091570033;  // std dev = 0.195, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | else return -0.07525314366989036;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.701 seconds
Total inference time: 1.583 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.339 seconds
Refined model CLL: -0.065191


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.877 seconds
Total inference time: 1.583 seconds
AUC ROC: 1.0
Total revision time: 11.877
Best scored revision CLL: -0.065191


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064191, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.877, 'Inference time': 1.583, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067836, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.838, 'Inference time': 1.896}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 437.000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4719060848787964;  // std dev = 3.421, 240.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=210 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05420544048125402;  // std dev = 4.466, 563.000 (wgt'ed) examples reached here.  /* #neg=514 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4626796059634991;  // std dev = 0.824, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14857035601582871;  // std dev = 0.189, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10702452109859438;  // std dev = 0.000, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3526649076303921;  // std dev = 0.785, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12900297636437597;  // std dev = 0.026, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09721796158087181;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2775867618551025;  // std dev = 0.707, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11686750135619522;  // std dev = 0.169, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08901320872949482;  // std dev = 1.62e-07, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22591760183814905;  // std dev = 0.627, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10633806112137853;  // std dev = 0.147, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08205431355735383;  // std dev = 0.000, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.189146664501923;  // std dev = 0.035, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.09944940217729928;  // std dev = 0.018, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07608203291348041;  // std dev = 1.88e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16201517957269157;  // std dev = 0.497, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return -0.08294721074337456;  // std dev = 0.118, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07090347556921818;  // std dev = 2.03e-07, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12791296549675807;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #pos=210 */
%   | else if ( movie(E, B) )
%   | | then return -0.08748488501658885;  // std dev = 0.071, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.042347935665310296;  // std dev = 1.770, 546.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06794
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.182 seconds
Total inference time: 1.856 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.911 seconds
Parameter learned model CLL: -0.069171


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 259], 'true,false,true': [6.45e-09, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-07, 437, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 259], 'true,false,true,true': [0.0, 48, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 478, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.421, 30, 210], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.466, 514, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.824, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.189, 43, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 489, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.785, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 470, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.707, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.169, 52, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.62e-07, 453, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.627, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.147, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 483, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 259], 'true,true,false': [0.018, 50, 0], 'true,false': [0.0, 0, 0], 'false': [1.88e-07, 478, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.497, 0, 259], 'true,true,true,false': [0.118, 38, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.03e-07, 462, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 210], 'true,false,true': [0.071, 44, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.77, 497, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11374487635692498, 2.0324448963389595e-16], 'true': [4.499189523731908e-15, 4.2700885562506023e-17], 'true,false': [4.2700885562506023e-17, nan]}, {'': [0.09416584921820832, -1.2635174171466218e-16], 'true': [-4.499189523731908e-15, -3.0068540250264654e-17], 'true,false': [-3.0068540250264654e-17, nan], 'true,false,true': [-3.0068540250264654e-17, nan]}, {'': [0.048759412336913915, 0.0354227933887705], 'true': [0.048759412336913915, nan], 'true,true': [0.048759412336913915, nan], 'true,true,true': [0.048759412336913915, nan]}, {'': [0.04799216272061853, -1.3803999978979452e-16], 'true': [0.04799216272061853, nan], 'true,true': [0.002623154181094351, 0.0008332686063993772], 'true,true,true': [0.002623154181094351, nan], 'true,true,false': [0.0008332686063993772, nan]}, {'': [0.02854741608386616, -5.102301559979443e-17], 'true': [0.0023776308282900884, 0.000700613629749053], 'true,true': [0.0023776308282900884, nan], 'true,true,true': [0.0023776308282900884, nan], 'true,false': [0.000700613629749053, nan]}, {'': [0.02336289874866, 5.783943351248056e-17], 'true': [0.0019275220941795486, 0.000549142231908418], 'true,true': [0.0019275220941795486, nan], 'true,false': [0.000549142231908418, nan]}, {'': [0.016113990738578807, -1.1952711652279119e-17], 'true': [0.00151663692471535, 0.00044026082521178285], 'true,true': [0.00151663692471535, nan], 'true,false': [0.00044026082521178285, nan]}, {'': [0.012349378743213226, 7.432455394980127e-17], 'true': [0.012349378743213226, nan], 'true,true': [0.001195074290754112, 0.0003179585480379765]}, {'': [0.007573378479543347, 8.939458120358404e-17], 'true': [0.007573378479543347, nan], 'true,true': [0.007573378479543347, nan], 'true,true,true': [0.000953319548823286, 0.0003653424097157623]}, {'': [0.006664737064026665, 0.005738240203251911], 'true': [-9.727668406239467e-17, 0.00011461830793113959], 'false': [0.005738240203251911, nan], 'false,true': [0.005738240203251911, nan], 'true,false': [0.00011461830793113707, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048732;  // std dev = 3.04e-07, 427.000 (wgt'ed) examples reached here.  /* #neg=427 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.12544463852839222;  // std dev = 0.000, 435.000 (wgt'ed) examples reached here.  /* #neg=435 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.11231637819360626;  // std dev = 0.000, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783565;  // std dev = 2.94e-07, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.46e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.092691276189261;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926089;  // std dev = 1.55e-07, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839679;  // std dev = 1.43e-07, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109146;  // std dev = 2.26e-07, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527722;  // std dev = 4.21e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633376;  // std dev = 0.000, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420347;  // std dev = 0.000, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 8.94e-08, 210.000 (wgt'ed) examples reached here.  /* #pos=210 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(B) )
%   | then return -0.06419184008202541;  // std dev = 2.38e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13400703000801137;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.06419184008202615;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202616;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.312 seconds
Total inference time: 1.547 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.221 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.626 seconds
Total inference time: 1.547 seconds
AUC ROC: 1.0
Total revision time: 13.626
Best scored revision CLL: -0.064223


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.626, 'Inference time': 1.547, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06794, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.182, 'Inference time': 1.856}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.97e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048868;  // std dev = 0.000, 638.000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 577.000 (wgt'ed) examples reached here.  /* #neg=577 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45844473780339523;  // std dev = 4.141, 310.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=265 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05463953180787687;  // std dev = 4.902, 683.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4644841210960789;  // std dev = 0.886, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.13939804455643953;  // std dev = 0.229, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10698304194847454;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3538295997376532;  // std dev = 0.845, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13112078388686105;  // std dev = 0.025, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09718350878213777;  // std dev = 2.84e-07, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27832480016913685;  // std dev = 0.761, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11677457037356463;  // std dev = 0.175, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08898416991141314;  // std dev = 2.81e-07, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2263997714942496;  // std dev = 0.675, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10481013767727704;  // std dev = 0.162, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08202952714468822;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18947467145414126;  // std dev = 0.033, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.09705609417359509;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07606064294345787;  // std dev = 8.94e-08, 554.000 (wgt'ed) examples reached here.  /* #neg=554 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1622470062236891;  // std dev = 0.535, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return -0.08409456836158813;  // std dev = 0.140, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07088483855259475;  // std dev = 2.99e-07, 562.000 (wgt'ed) examples reached here.  /* #neg=562 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12888796529983815;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( movie(E, B) )
%   | | then return -0.08736391041534061;  // std dev = 0.078, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0422938933598697;  // std dev = 1.937, 653.000 (wgt'ed) examples reached here.  /* #neg=594 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067928
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.68 seconds
Total inference time: 1.603 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069134
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.309 seconds
Parameter learned model CLL: -0.069134


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.87e-08, 0, 324], 'true,false,true': [6.97e-09, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 638, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 324], 'true,false,true,true': [0.0, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 577, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [4.141, 45, 265], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.902, 624, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.886, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.229, 59, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 601, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.845, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.84e-07, 592, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.761, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.175, 59, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.81e-07, 630, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.675, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.162, 60, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 596, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 324], 'true,true,false': [0.019, 58, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 554, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.535, 0, 324], 'true,true,true,false': [0.14, 57, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.99e-07, 562, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 265], 'true,false,true': [0.078, 55, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.937, 594, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10158559527009187, -4.0093320513109104e-16], 'true': [3.333410365294297e-15, 4.7580986769649563e-17], 'true,false': [4.7580986769649563e-17, nan]}, {'': [0.07252058632405971, -2.2165977891996193e-16], 'true': [-5.000115547941446e-15, -2.6433881538694202e-17], 'true,false': [-2.6433881538694202e-17, nan], 'true,false,true': [-2.6433881538694202e-17, nan]}, {'': [0.05531913705296818, 0.035183220542675586], 'true': [0.05531913705296818, nan], 'true,true': [0.05531913705296818, nan], 'true,true,true': [0.05531913705296818, nan]}, {'': [0.04970968123042626, -2.5123183252748966e-17], 'true': [0.04970968123042626, nan], 'true,true': [0.002423428268925027, 0.0008865554575002127], 'true,true,true': [0.002423428268925027, nan], 'true,true,false': [0.0008865554575002127, nan]}, {'': [0.026770595116849653, 1.365274260012017e-16], 'true': [0.0022015686332426177, 0.0006300715073924157], 'true,true': [0.0022015686332426177, nan], 'true,true,true': [0.0022015686332426177, nan], 'true,false': [0.0006300715073924157, nan]}, {'': [0.021933419669383315, 1.2547282437033515e-16], 'true': [0.001785855025959041, 0.0005180479301369268], 'true,true': [0.001785855025959041, nan], 'true,false': [0.0005180479301369268, nan]}, {'': [0.01571645510868361, -6.258975440839808e-17], 'true': [0.0014051779930725518, 0.00043797321416584877], 'true,true': [0.0014051779930725518, nan], 'true,false': [0.00043797321416584877, nan]}, {'': [0.01156401857488072, 1.4428891294767376e-17], 'true': [0.01156401857488072, nan], 'true,true': [0.0011070617288303703, 0.0003442901273409117]}, {'': [0.008522919219710214, 1.588290590389014e-16], 'true': [0.008522919219710214, nan], 'true,true': [0.008522919219710214, nan], 'true,true,true': [0.0008829342913424781, 0.000344764900600497]}, {'': [0.006675194300401544, 0.005744952651260181], 'true': [-1.2065820041209248e-16, 0.00011033303693336933], 'false': [0.005744952651260181, nan], 'false,true': [0.005744952651260181, nan], 'true,false': [0.00011033303693337337, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048816;  // std dev = 0.000, 569.000 (wgt'ed) examples reached here.  /* #neg=569 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.1254446385283923;  // std dev = 0.000, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360593;  // std dev = 0.000, 572.000 (wgt'ed) examples reached here.  /* #neg=572 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783498;  // std dev = 4.71e-07, 658.000 (wgt'ed) examples reached here.  /* #neg=658 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.09269127618926144;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0787767547310918;  // std dev = 0.000, 533.000 (wgt'ed) examples reached here.  /* #neg=533 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527766;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.143468370706807;  // std dev = 0.085, 201.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=174 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333696;  // std dev = 1.43e-07, 577.000 (wgt'ed) examples reached here.  /* #neg=577 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15510839088654643;  // std dev = 0.040, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07553992839277443;  // std dev = 0.061, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420365;  // std dev = 0.000, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13615877899640166;  // std dev = 0.031, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.07025791464370461;  // std dev = 0.049, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13446818182391584;  // std dev = 0.012, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.07206507404685664;  // std dev = 0.034, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.06419184008202547;  // std dev = 2.45e-07, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063888
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.784 seconds
Total inference time: 1.505 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064818
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.702 seconds
Refined model CLL: -0.064818


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063888
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.475 seconds
Total inference time: 1.505 seconds
AUC ROC: 1.0
Total revision time: 15.475
Best scored revision CLL: -0.064818


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063888, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.475, 'Inference time': 1.505, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067928, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.68, 'Inference time': 1.603}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4719060848787978;  // std dev = 1.397, 40.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06658467854018918;  // std dev = 1.441, 73.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45466488443248443;  // std dev = 0.280, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16862696597587334;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10584717644528771;  // std dev = 3.16e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34685638670750196;  // std dev = 0.267, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14628800429983263;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09623923532273759;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27346986269436757;  // std dev = 0.242, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1289466370448342;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08818768924476397;  // std dev = 2.79e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22293667068549153;  // std dev = 0.215, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10623134289044041;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08134924404379447;  // std dev = 1.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1869200187919457;  // std dev = 0.030, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.09454701211007945;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07547324784414439;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16030107785268938;  // std dev = 0.172, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.09621296944473355;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07037278991390103;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1307120821174825;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, B) )
%   | | then return -0.08816551800500473;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05034456447179693;  // std dev = 0.588, 87.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070141
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.791 seconds
Total inference time: 1.795 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067075
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.636 seconds
Parameter learned model CLL: -0.067075


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [3.94e-08, 0, 40], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 40], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 74, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.397, 5, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.441, 68, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.28, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 71, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.267, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 65, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.242, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.79e-08, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.215, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.04, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-08, 84, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.03, 0, 40], 'true,true,false': [0.018, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 64, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.172, 0, 40], 'true,true,true,false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 91, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 35], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.588, 82, 5], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.09876543209876651, 7.229359230117299e-17], 'true': [1.5099033134902129e-15, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.04633119604965933, -2.700542492331462e-17], 'true': [-8.881784197001252e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04875941233691283, 0.028442881603388898], 'true': [0.04875941233691283, nan], 'true,true': [0.04875941233691283, nan], 'true,true,true': [0.04875941233691283, nan]}, {'': [0.04011023257097306, 1.407324960792452e-17], 'true': [0.04011023257097306, nan], 'true,true': [0.0019581526661807567, 0.0], 'true,true,true': [0.0019581526661807567, nan], 'true,true,false': [0.0, nan]}, {'': [0.012730045221942331, -2.2204460492503132e-17], 'true': [0.0017860050838968355, 0.0], 'true,true': [0.0017860050838968355, nan], 'true,true,true': [0.0017860050838968355, nan], 'true,false': [0.0, nan]}, {'': [0.014711451313142453, 1.0092936587501423e-17], 'true': [0.001460865602424799, 0.0], 'true,true': [0.001460865602424799, nan], 'true,false': [0.0, nan]}, {'': [0.011767210138769668, 3.96508223080413e-18], 'true': [0.0011593380254596775, 0.0003176704572274286], 'true,true': [0.0011593380254596775, nan], 'true,false': [0.0003176704572274286, nan]}, {'': [0.007412455407605419, -1.3010426069826053e-17], 'true': [0.007412455407605419, nan], 'true,true': [0.000920291873106427, 0.0003125548573211824]}, {'': [0.006109478308247487, -1.525031627232358e-17], 'true': [0.006109478308247487, nan], 'true,true': [0.006109478308247487, nan], 'true,true,true': [0.0007386573698990873, 0.0]}, {'': [0.007254771808494458, 0.003971327421329407], 'true': [-1.586032892321652e-17, -1.734723475976807e-18], 'false': [0.003971327421329407, nan], 'false,true': [0.003971327421329407, nan], 'true,false': [-1.734723475976807e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839152;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360626;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2877361057467734;  // std dev = 0.225, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3315511311683291;  // std dev = 0.089, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1465277125760932;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2626087521468914;  // std dev = 0.077, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12681762057613358;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0851847513883968;  // std dev = 1.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21502945706496912;  // std dev = 0.068, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11553148456584182;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109168;  // std dev = 3.57e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18097382399295256;  // std dev = 0.059, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.10424011876743776;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.15079100549159286;  // std dev = 0.061, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.12307174496995313;  // std dev = 0.076, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4.59e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1388411160204398;  // std dev = 0.035, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1036889705126806;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0.13919289138901786;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073268
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.536 seconds
Total inference time: 1.539 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065334
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.458 seconds
Refined model CLL: -0.065334


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073268
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.420999999999999 seconds
Total inference time: 1.539 seconds
AUC ROC: 1.0
Total revision time: 6.420999999999999
Best scored revision CLL: -0.065334


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:15:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073268, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.420999999999999, 'Inference time': 1.539, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070141, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.791, 'Inference time': 1.795}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048816;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839122;  // std dev = 6.32e-08, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5215597119392007;  // std dev = 1.301, 79.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=75 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0871208002713462;  // std dev = 1.604, 159.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43694303196804635;  // std dev = 0.356, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17570297693776935;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10391923814912686;  // std dev = 8.82e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3345431600705298;  // std dev = 0.340, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14468291945573455;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09463286223667565;  // std dev = 0.000, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2649973820978581;  // std dev = 0.309, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1199042209846797;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08683010105159995;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21693729707906592;  // std dev = 0.277, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11427816014479487;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08018775796053625;  // std dev = 6.50e-08, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18251790659886644;  // std dev = 0.028, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10906725137600208;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07446887816811733;  // std dev = 3.16e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15696224985998505;  // std dev = 0.224, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.09359261989816553;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06949611876708951;  // std dev = 2.36e-08, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13100713959406923;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( movie(E, B) )
%   | | then return -0.08572907722299015;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05392480219087931;  // std dev = 0.677, 151.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069729
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.195 seconds
Total inference time: 1.844 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.327 seconds
Parameter learned model CLL: -0.066121


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 160, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.53e-07, 0, 81], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.32e-08, 145, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.301, 4, 75], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.604, 153, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.356, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [7.45e-09, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.82e-08, 147, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.34, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.02, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 175, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.309, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.049, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 165, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.277, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.048, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.5e-08, 164, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.028, 0, 81], 'true,true,false': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 139, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.224, 0, 81], 'true,true,true,false': [0.04, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.36e-08, 175, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 75], 'true,false,true': [0.023, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.677, 145, 6], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0732179752066116, -1.4432899320127036e-16], 'true': [-7.894919286223335e-16, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.052269324970010474, 2.7564157852762507e-17], 'true': [7.894919286223335e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.021429274540910686, 0.016187837244335333], 'true': [0.021429274540910686, nan], 'true,true': [0.021429274540910686, nan], 'true,true,true': [0.021429274540910686, nan]}, {'': [0.035187731456914485, 5.2867763077388404e-17], 'true': [0.035187731456914485, nan], 'true,true': [0.001563966173749108, 6.1679056923619804e-18], 'true,true,true': [0.001563966173749108, nan], 'true,true,false': [6.1679056923619804e-18, nan]}, {'': [0.02199429136771718, -2.283887364943179e-17], 'true': [0.0014287452322013852, 0.0003923348190584572], 'true,true': [0.0014287452322013852, nan], 'true,true,true': [0.0014287452322013852, nan], 'true,false': [0.0003923348190584572, nan]}, {'': [0.007797382241309853, -1.74944234183358e-17], 'true': [0.0011813105199064327, 0.0005953196762448522], 'true,true': [0.0011813105199064327, nan], 'true,false': [0.0005953196762448522, nan]}, {'': [0.009864157348970636, 2.572467983887558e-17], 'true': [0.0009490743868808947, 0.00028669809939957554], 'true,true': [0.0009490743868808947, nan], 'true,false': [0.00028669809939957554, nan]}, {'': [0.0061685660431134185, 7.188494404047776e-18], 'true': [0.0061685660431134185, nan], 'true,true': [0.000761917250692227, 0.0]}, {'': [0.005715510763314107, 3.1720657846433043e-18], 'true': [0.005715510763314107, nan], 'true,true': [0.005715510763314107, nan], 'true,true,true': [0.0006174994046103096, 0.0001980761800616307]}, {'': [0.002759044505038505, 0.0030366146291503577], 'false': [0.0030366146291503577, nan], 'false,true': [0.0030366146291503577, nan], 'true': [-2.0724163126336256e-17, 0.00010603613045596233], 'true,false': [0.00010603613045596233, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048827;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839133;  // std dev = 4.21e-08, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360649;  // std dev = 2.98e-08, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783645;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926068;  // std dev = 7.88e-08, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839678;  // std dev = 5.77e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109154;  // std dev = 7.60e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333684;  // std dev = 7.74e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367116;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420262;  // std dev = 6.83e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 5.16e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.06419184008202619;  // std dev = 4.56e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( female(A) )
%   | | then return 0.08445731248550183;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.079 seconds
Total inference time: 1.546 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063603
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.572 seconds
Refined model CLL: -0.063603


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.173000000000002 seconds
Total inference time: 1.546 seconds
AUC ROC: 1.0
Total revision time: 8.173000000000002
Best scored revision CLL: -0.063603


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:15:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066734, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.173000000000002, 'Inference time': 1.546, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069729, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.195, 'Inference time': 1.844}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004885;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5072932740706113;  // std dev = 1.930, 125.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=116 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0960314314877556;  // std dev = 1.615, 246.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43661073688550556;  // std dev = 0.358, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1736462984221875;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10309240354479982;  // std dev = 1.10e-07, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33411074329657503;  // std dev = 0.343, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13978568158457844;  // std dev = 0.023, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09394252880157915;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26457033962910137;  // std dev = 0.312, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11923452398899735;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08624565666194464;  // std dev = 7.74e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2165524390698146;  // std dev = 0.280, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1199747883167286;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07968697395256769;  // std dev = 4.94e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1821816157185245;  // std dev = 0.023, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.1078739785551571;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07403525945724923;  // std dev = 6.83e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1566707201436006;  // std dev = 0.226, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return -0.09327042296895455;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06911718786920705;  // std dev = 8.16e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13289367687252718;  // std dev = 1.03e-07, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else if ( movie(E, B) )
%   | | then return -0.08998745419825432;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05785518212406648;  // std dev = 0.686, 247.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069226
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.589 seconds
Total inference time: 1.944 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065523
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.988 seconds
Parameter learned model CLL: -0.065523


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.14e-08, 0, 122], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 226, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 122], 'true,false,true,true': [5.27e-09, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.93, 9, 116], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.615, 240, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.358, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.1e-07, 233, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.343, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.023, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 248, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.312, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.048, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 223, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.28, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [9.13e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.94e-08, 240, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.023, 0, 122], 'true,true,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [6.83e-08, 224, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.226, 0, 122], 'true,true,true,false': [0.039, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 250, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.03e-07, 0, 116], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.686, 241, 6], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.08153263533081274, -2.2793959443631533e-16], 'true': [3.843919718046444e-15, -1.1564823173178714e-17], 'true,false': [-1.1564823173178714e-17, nan]}, {'': [0.05820504868840508, -7.462154755677281e-17], 'true': [-1.3395477805313363e-15, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.029786595608716198, 0.010607979568496167], 'true': [0.029786595608716198, nan], 'true,true': [0.029786595608716198, nan], 'true,true,true': [0.029786595608716198, nan]}, {'': [0.012461827163228634, 5.146098139893429e-17], 'true': [0.012461827163228634, nan], 'true,true': [0.0010477561320493321, 0.0], 'true,true,true': [0.0010477561320493321, nan], 'true,true,false': [0.0, nan]}, {'': [0.026068826287055785, -3.40229636578677e-17], 'true': [0.0009619474133118614, 0.0005341418093992177], 'true,true': [0.0009619474133118614, nan], 'true,true,true': [0.0009619474133118614, nan], 'true,false': [0.0005341418093992177, nan]}, {'': [0.00531941380425939, 2.6884324363120383e-17], 'true': [0.000798401898044458, 0.0005804900620464959], 'true,true': [0.000798401898044458, nan], 'true,false': [0.0005804900620464959, nan]}, {'': [0.009819366204688443, 1.0177044392397268e-17], 'true': [0.0006433629865723008, 6.938893903907228e-18], 'true,true': [0.0006433629865723008, nan], 'true,false': [6.938893903907228e-18, nan]}, {'': [0.004807216433958554, 2.0816681711721685e-17], 'true': [0.004807216433958554, nan], 'true,true': [0.0005177245572745379, -1.982541115402065e-18]}, {'': [0.0044004302624398445, 2.6645352591003756e-17], 'true': [0.0044004302624398445, nan], 'true,true': [0.0044004302624398445, nan], 'true,true,true': [0.0004204052806476461, 0.00017317656149985915]}, {'': [0.0029981351904981805, 0.0019071540943475741], 'true': [9.188052617587502e-17, 0.0], 'false': [0.0019071540943475741, nan], 'false,true': [0.0019071540943475741, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048824;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1254446385283918;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936068;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.36560259279369584;  // std dev = 0.156, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0.39187852669430334;  // std dev = 0.112, 81.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3284623516032945;  // std dev = 0.031, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.14207218891030737;  // std dev = 0.005, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0926912761892605;  // std dev = 8.69e-08, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2604561142052702;  // std dev = 0.027, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1259079758057596;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21348456985503253;  // std dev = 0.024, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11267120019778855;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109146;  // std dev = 7.45e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17982598162873106;  // std dev = 0.021, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10142832424606689;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07349124551229173;  // std dev = 0.060, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1548118360229876;  // std dev = 0.018, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.09340887548882015;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06841136077879462;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1355988223973768;  // std dev = 0.016, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else return -0.08616694120398173;  // std dev = 0.039, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.06417806095422487;  // std dev = 3.94e-08, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | else if ( female(A) )
%   | | then return 0.1375686803882057;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07935546364274844;  // std dev = 0.191, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071668
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.284 seconds
Total inference time: 1.621 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.838 seconds
Refined model CLL: -0.064591


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071668
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.699 seconds
Total inference time: 1.621 seconds
AUC ROC: 1.0
Total revision time: 9.699
Best scored revision CLL: -0.064591


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:09
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071668, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.699, 'Inference time': 1.621, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069226, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.589, 'Inference time': 1.944}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 1.23e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.125444638528392;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5151445804246029;  // std dev = 2.047, 166.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=156 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09723966946915773;  // std dev = 1.746, 310.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43385011346525626;  // std dev = 0.393, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16520312187331918;  // std dev = 0.095, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10298073815697958;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3321875145042654;  // std dev = 0.377, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1431376289220633;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0938492330214696;  // std dev = 1.32e-07, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26323563845134496;  // std dev = 0.343, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.13193791820885506;  // std dev = 0.055, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08616662389554362;  // std dev = 8.94e-08, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2155978970554514;  // std dev = 0.309, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11698999225733527;  // std dev = 0.050, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07961921902943328;  // std dev = 1.93e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18147439815740518;  // std dev = 0.022, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10329140319428876;  // std dev = 0.014, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07397656508504714;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1561295087780551;  // std dev = 0.250, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.09062135505596985;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06906587539481254;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13293634397965445;  // std dev = 5.58e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( movie(E, B) )
%   | | then return -0.08898361596723717;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05871909631451479;  // std dev = 0.747, 333.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069276
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.302 seconds
Total inference time: 1.831 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065426
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.793 seconds
Parameter learned model CLL: -0.065426


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [8.02e-08, 0, 163], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.23e-07, 310, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 163], 'true,false,true,true': [7.45e-09, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 300, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.047, 10, 156], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.746, 303, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.393, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.095, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 319, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.377, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.32e-07, 309, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.343, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.055, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.94e-08, 320, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.309, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.05, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.93e-07, 317, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.022, 0, 163], 'true,true,false': [0.014, 19, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 281, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.25, 0, 163], 'true,true,true,false': [0.067, 16, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 315, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [5.58e-08, 0, 156], 'true,false,true': [0.025, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.747, 326, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.07716828683247688, 4.870655849968429e-17], 'true': [6.3643705166242106e-15, -1.4802973661668754e-17], 'true,false': [-1.4802973661668754e-17, nan]}, {'': [0.04883540547241815, -8.585724723767877e-17], 'true': [-2.7898610483832155e-15, 4.270088556250602e-18], 'true,false': [4.270088556250602e-18, nan], 'true,false,true': [4.270088556250602e-18, nan]}, {'': [0.0252376445250075, 0.009839152175206858], 'true': [0.0252376445250075, nan], 'true,true': [0.0252376445250075, nan], 'true,true,true': [0.0252376445250075, nan]}, {'': [0.0286116456618384, -5.011665064138638e-17], 'true': [0.0286116456618384, nan], 'true,true': [0.000948392245825875, 0.0005956346208220571], 'true,true,true': [0.000948392245825875, nan], 'true,true,false': [0.0005956346208220571, nan]}, {'': [0.01729775648381786, 5.605009444709528e-17], 'true': [0.0008705305628421702, 0.0004940944027401353], 'true,true': [0.0008705305628421702, nan], 'true,true,true': [0.0008705305628421702, nan], 'true,false': [0.0004940944027401353, nan]}, {'': [0.01644635979902553, 2.4980018054066023e-17], 'true': [0.0007234701425339704, 0.00014664493266315306], 'true,true': [0.0007234701425339704, nan], 'true,false': [0.00014664493266315306, nan]}, {'': [0.01000277122462313, 1.1767663604859704e-16], 'true': [0.0005839415879485803, 0.00014496613650107643], 'true,true': [0.0005839415879485803, nan], 'true,false': [0.00014496613650107643, nan]}, {'': [0.00802458970611342, -3.5558744560948077e-17], 'true': [0.00802458970611342, nan], 'true,true': [0.00047064537801914117, 0.00020352148799325143]}, {'': [0.005329104503821569, -6.555602621596163e-17], 'true': [0.005329104503821569, nan], 'true,true': [0.005329104503821569, nan], 'true,true,true': [0.00038270536279999236, 0.00027687997162405276]}, {'': [0.003725471426157705, 0.0016743823183430727], 'true': [1.9927079929169476e-17, 4.515493432591686e-05], 'false': [0.0016743823183430727, nan], 'false,true': [0.0016743823183430727, nan], 'true,false': [4.515493432591686e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048766;  // std dev = 1.86e-07, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839213;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.11231637819360693;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.41751358415830975;  // std dev = 2.53e-07, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783652;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3.15e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926044;  // std dev = 1.59e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.255172242569489;  // std dev = 2.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08518475138839678;  // std dev = 1.05e-07, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2.73e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07877675473109146;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527778;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.15250926597211042;  // std dev = 0.075, 112.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=101 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333699;  // std dev = 9.54e-08, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15473234976325584;  // std dev = 0.020, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.08095556924211643;  // std dev = 0.028, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.068426977844203;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13556404438722852;  // std dev = 0.017, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.06980163733658572;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.05978701222109738;  // std dev = 0.523, 311.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067031
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.427 seconds
Total inference time: 1.671 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064231
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.747 seconds
Refined model CLL: -0.064231


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067031
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.269 seconds
Total inference time: 1.671 seconds
AUC ROC: 1.0
Total revision time: 12.269
Best scored revision CLL: -0.064231


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067031, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.269, 'Inference time': 1.671, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069276, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.302, 'Inference time': 1.831}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048743;  // std dev = 2.70e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5134346657597199;  // std dev = 2.331, 207.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09554042806948869;  // std dev = 2.085, 398.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4351505868154842;  // std dev = 0.466, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16560537613558243;  // std dev = 0.094, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10313781271012983;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3331205288569528;  // std dev = 0.446, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.15193990569496757;  // std dev = 3.23e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09398046345783961;  // std dev = 2.20e-07, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26390056526921707;  // std dev = 0.407, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12268687926561854;  // std dev = 0.101, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08627778865104553;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21608446799148337;  // std dev = 0.365, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11446835945482255;  // std dev = 0.068, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07971451835301484;  // std dev = 1.01e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1818420542616165;  // std dev = 0.023, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10165017678529671;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07405911864825841;  // std dev = 1.52e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15641567166881787;  // std dev = 0.295, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return -0.09600113977760989;  // std dev = 0.041, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06913804492182259;  // std dev = 9.19e-08, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13266813559217722;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(E, B) )
%   | | then return -0.09060971885647737;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05737600300232971;  // std dev = 0.887, 382.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069324
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.725 seconds
Total inference time: 2.102 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065586
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.025 seconds
Parameter learned model CLL: -0.065586


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 204], 'true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.7e-07, 381, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 204], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 411, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.331, 13, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.085, 388, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.466, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.094, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 384, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.446, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.23e-09, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.2e-07, 386, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.407, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.101, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 383, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.365, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.068, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.01e-07, 391, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.023, 0, 204], 'true,true,false': [0.016, 14, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 385, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.295, 0, 204], 'true,true,true,false': [0.041, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.19e-08, 384, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 194], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.887, 372, 10], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.07794244806853698, 1.9115651027666737e-16], 'true': [5.712206307091002e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.05318949910258813, -1.2750006511510313e-16], 'true': [-3.692035783851501e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026238849469656017, 0.01091958109959499], 'true': [0.026238849469656017, nan], 'true,true': [0.026238849469656017, nan], 'true,true,true': [0.026238849469656017, nan]}, {'': [0.025365984196805576, -1.3877787807814457e-16], 'true': [0.025365984196805576, nan], 'true,true': [0.001063916371546711, 0.000557456640044713], 'true,true,true': [0.001063916371546711, nan], 'true,true,false': [0.000557456640044713, nan]}, {'': [0.020795162540559176, 1.2540342972449955e-16], 'true': [0.000976036021729452, 1.057355261547768e-17], 'true,true': [0.000976036021729452, nan], 'true,true,true': [0.000976036021729452, nan], 'true,false': [1.057355261547768e-17, nan]}, {'': [0.013426770236536711, -4.058256486880468e-17], 'true': [0.0008102684684796773, 0.00048587373297578234], 'true,true': [0.0008102684684796773, nan], 'true,false': [0.00048587373297578234, nan]}, {'': [0.009134768866753752, 2.6122894697062506e-17], 'true': [0.000653256061836381, 0.0002438495571418041], 'true,true': [0.000653256061836381, nan], 'true,false': [0.0002438495571418041, nan]}, {'': [0.0053388481163908295, 5.998088029143702e-17], 'true': [0.0053388481163908295, nan], 'true,true': [0.0005259713438394665, 0.0002627309231547577]}, {'': [0.00447084615648912, 2.1973164029039556e-17], 'true': [0.00447084615648912, nan], 'true,true': [0.00447084615648912, nan], 'true,true,true': [0.0004273154670119803, 0.00011260633265004852]}, {'': [0.0035089277299648705, 0.0020607274344207763], 'true': [-3.433679457603577e-17, -5.204170427930421e-18], 'false': [0.0020607274344207763, nan], 'false,true': [0.0020607274344207763, nan], 'true,false': [-5.204170427930421e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048738;  // std dev = 2.90e-07, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839224;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360643;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783599;  // std dev = 2.02e-07, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926093;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926067;  // std dev = 1.80e-07, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07877675473109146;  // std dev = 7.60e-08, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333766;  // std dev = 0.000, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420335;  // std dev = 0.000, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.134007030008011;  // std dev = 1.37e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202618;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(B) )
%   | then return -0.06419184008202558;  // std dev = 1.98e-07, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
%   | else if ( female(A) )
%   | | then return 0.08445731248550209;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.1340070300080115;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.078 seconds
Total inference time: 1.616 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063597
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.467 seconds
Refined model CLL: -0.063597


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.295 seconds
Total inference time: 1.616 seconds
AUC ROC: 1.0
Total revision time: 13.295
Best scored revision CLL: -0.063597


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:43
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066734, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.295, 'Inference time': 1.616, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069324, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.725, 'Inference time': 2.102}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4756431155594314;  // std dev = 1.772, 67.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07646763645186719;  // std dev = 1.837, 149.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4533948815891499;  // std dev = 0.364, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.13703348581728558;  // std dev = 0.045, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10491545521396796;  // std dev = 2.11e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34599118638382775;  // std dev = 0.348, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1314124470496464;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09546349026279513;  // std dev = 2.11e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27288907514100263;  // std dev = 0.315, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12158027772063765;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08753250240043164;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2225355304519868;  // std dev = 0.281, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10526769201153878;  // std dev = 0.078, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08078900653412367;  // std dev = 1.49e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1866324993660381;  // std dev = 0.031, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09788479353265629;  // std dev = 0.020, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07498902767193985;  // std dev = 5.37e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16008767235466123;  // std dev = 0.225, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.09306242414018345;  // std dev = 0.062, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06995031390505345;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13069856402888294;  // std dev = 4.71e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else if ( movie(E, B) )
%   | | then return -0.0895408888414226;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04981672998632021;  // std dev = 0.748, 140.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067434
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.387 seconds
Total inference time: 1.638 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067593
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.036 seconds
Parameter learned model CLL: -0.067593


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [7.45e-09, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.772, 8, 59], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.837, 141, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.364, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.045, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 139, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.348, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 124, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.315, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.064, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 119, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.281, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.078, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 129, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.031, 0, 67], 'true,true,false': [0.02, 14, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 144, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.225, 0, 67], 'true,true,true,false': [0.062, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 135, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [4.71e-08, 0, 59], 'true,false,true': [0.026, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.748, 132, 8], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11300387923764449, 4.4408920985006264e-17], 'true': [-9.544603913195376e-16, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan]}, {'': [0.11108816103391964, -3.828355257328126e-18], 'true': [3.1815346377317917e-16, 3.469446951953614e-18], 'true,false': [3.469446951953614e-18, nan], 'true,false,true': [3.469446951953614e-18, nan]}, {'': [0.0468740835653326, 0.022650456513711614], 'true': [0.0468740835653326, nan], 'true,true': [0.0468740835653326, nan], 'true,true,true': [0.0468740835653326, nan]}, {'': [0.011761735802551809, 3.1948864017990118e-18], 'true': [0.011761735802551809, nan], 'true,true': [0.001977527524124852, 0.0010315678898356433], 'true,true,true': [0.001977527524124852, nan], 'true,true,false': [0.0010315678898356433, nan]}, {'': [0.031007544556085287, 3.581364595565021e-18], 'true': [0.0018072234187073005, 0.0007483246097707794], 'true,true': [0.0018072234187073005, nan], 'true,true,true': [0.0018072234187073005, nan], 'true,false': [0.0007483246097707794, nan]}, {'': [0.01620592947006445, -5.224578939412501e-17], 'true': [0.001481406733969688, 0.0005157178747982171], 'true,true': [0.001481406733969688, nan], 'true,false': [0.0005157178747982171, nan]}, {'': [0.014918409193699645, 1.7212760071707853e-18], 'true': [0.0011778482548934178, 0.0005038597343053735], 'true,true': [0.0011778482548934178, nan], 'true,false': [0.0005038597343053735, nan]}, {'': [0.012415058514655379, 2.0045693500176437e-17], 'true': [0.012415058514655379, nan], 'true,true': [0.0009364195835197608, 0.00038982844260270134]}, {'': [0.010240824273399847, -1.6447748512965283e-18], 'true': [0.010240824273399847, nan], 'true,true': [0.010240824273399847, nan], 'true,true,true': [0.0007525305923093292, 0.0002597586407048787]}, {'': [0.005109976926383771, 0.00400075751791462], 'true': [3.763467880085276e-17, 8.233169225367772e-05], 'false': [0.00400075751791462, nan], 'false,true': [0.00400075751791462, nan], 'true,false': [8.233169225367598e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004879;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839113;  // std dev = 7.60e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1123163781936062;  // std dev = 8.56e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3482989290054904;  // std dev = 0.176, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | else return 0.37137048072309714;  // std dev = 0.148, 45.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3328362188072756;  // std dev = 0.020, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.13835880011894083;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926097;  // std dev = 4.71e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2634308030764097;  // std dev = 0.018, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12317424565557553;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839679;  // std dev = 5.37e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21557582725086424;  // std dev = 0.016, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11141935240263061;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109161;  // std dev = 5.67e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1813528344497988;  // std dev = 0.014, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10041006320113607;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.12377658081545485;  // std dev = 0.083, 77.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5.67e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.14021954349826968;  // std dev = 0.010, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else return -0.09169573967970647;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), female(A) )
%   | then return 0.10727130407408315;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.06195384439296611;  // std dev = 0.295, 129.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066305
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.891 seconds
Total inference time: 1.265 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067125
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.228 seconds
Refined model CLL: -0.067125


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066305
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.542 seconds
Total inference time: 1.265 seconds
AUC ROC: 1.0
Total revision time: 7.542
Best scored revision CLL: -0.067125


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:16:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066305, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.542, 'Inference time': 1.265, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067434, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.387, 'Inference time': 1.638}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.17e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48755490085395103;  // std dev = 2.282, 128.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=115 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06515662546550978;  // std dev = 2.806, 269.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45355949569087645;  // std dev = 0.554, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15281836458764184;  // std dev = 0.123, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10598240855554028;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34623415788929907;  // std dev = 0.529, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1419876236769985;  // std dev = 0.020, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09635174003909122;  // std dev = 9.88e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2731350138161921;  // std dev = 0.478, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1149647035784979;  // std dev = 0.119, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08828264535107891;  // std dev = 6.14e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22275751693789123;  // std dev = 0.425, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10610119456571414;  // std dev = 0.097, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08143039154795957;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18682546433142488;  // std dev = 0.033, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09373066530162472;  // std dev = 0.021, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07554334870538267;  // std dev = 1.26e-07, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16025377419456863;  // std dev = 0.339, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09468535693039808;  // std dev = 0.064, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07043392446639503;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12921215881864256;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( movie(E, B) )
%   | | then return -0.08827098342654052;  // std dev = 0.042, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.045027586048924775;  // std dev = 1.134, 249.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.219 seconds
Total inference time: 1.599 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068334
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.91 seconds
Parameter learned model CLL: -0.068334


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [4.17e-09, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 245, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 268, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.282, 13, 115], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.806, 250, 19]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.554, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.123, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 223, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.529, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.02, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.88e-08, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.478, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.119, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.14e-08, 249, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.425, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.097, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 231, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 134], 'true,true,false': [0.021, 22, 0], 'true,false': [0.0, 0, 0], 'false': [1.26e-07, 253, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.339, 0, 134], 'true,true,true,false': [0.064, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 268, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 115], 'true,false,true': [0.042, 19, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.134, 230, 19], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1325105810687916, -1.740104659004327e-16], 'true': [4.772301956597688e-15, 1.3322676295501878e-17], 'true,false': [1.3322676295501878e-17, nan]}, {'': [0.0919667931456479, -6.296787303844171e-17], 'true': [-1.908920782639075e-15, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan], 'true,false,true': [-4.625929269271485e-18, nan]}, {'': [0.04067819276991444, 0.029263714175989296], 'true': [0.04067819276991444, nan], 'true,true': [0.04067819276991444, nan], 'true,true,true': [0.04067819276991444, nan]}, {'': [0.04050857997383905, -9.957157171526068e-17], 'true': [0.04050857997383905, nan], 'true,true': [0.0022939753765838368, 0.0008436949144003577], 'true,true,true': [0.0022939753765838368, nan], 'true,true,false': [0.0008436949144003577, nan]}, {'': [0.029777385641094247, 4.175197699445033e-17], 'true': [0.00208563164303081, 0.0004106455611199235], 'true,true': [0.00208563164303081, nan], 'true,true,true': [0.00208563164303081, nan], 'true,false': [0.0004106455611199235, nan]}, {'': [0.020376117987139074, 1.5159671822190893e-17], 'true': [0.0017030840092919243, 0.0006110010853939575], 'true,true': [0.0017030840092919243, nan], 'true,false': [0.0006110010853939575, nan]}, {'': [0.013457174258255437, -4.806160279762582e-18], 'true': [0.0013502104649975315, 0.00047098111683223506], 'true,true': [0.0013502104649975315, nan], 'true,false': [0.00047098111683223506, nan]}, {'': [0.010516525708686579, 6.319055950435674e-17], 'true': [0.010516525708686579, nan], 'true,true': [0.0010710814178549366, 0.00043650018683325344]}, {'': [0.008118956196770381, -2.1541640776309008e-17], 'true': [0.008118956196770381, nan], 'true,true': [0.008118956196770381, nan], 'true,true,true': [0.000859252425697485, 0.00020578498534250256]}, {'': [0.00576886665278352, 0.005167494199093341], 'true': [-3.089316242435218e-17, 9.333685033355592e-05], 'false': [0.005167494199093341, nan], 'false,true': [0.005167494199093341, nan], 'true,false': [9.333685033355883e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048816;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839183;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360685;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926093;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926053;  // std dev = 7.60e-08, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.75e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.0787767547310915;  // std dev = 6.83e-08, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333673;  // std dev = 1.10e-07, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.10235050306985173;  // std dev = 0.093, 79.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=61 */
%   | | else return 0.12378101053037817;  // std dev = 0.075, 84.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.32e-08, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13845010310565378;  // std dev = 0.013, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.0710772031933747;  // std dev = 0.030, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13929010046721996;  // std dev = 0.005, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.07624981142287963;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064634
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.33 seconds
Total inference time: 1.229 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065024
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.88 seconds
Refined model CLL: -0.065024


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064634
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.338999999999999 seconds
Total inference time: 1.229 seconds
AUC ROC: 1.0
Total revision time: 10.338999999999999
Best scored revision CLL: -0.065024


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:17:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064634, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.338999999999999, 'Inference time': 1.229, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068052, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.219, 'Inference time': 1.599}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.72e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 2.09e-07, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48038601367816675;  // std dev = 2.883, 187.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=166 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.054257002981442114;  // std dev = 3.828, 414.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=36 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.459532736541173;  // std dev = 0.723, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15516590191624866;  // std dev = 0.145, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10701959335622684;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3504735024100174;  // std dev = 0.688, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13785350173173228;  // std dev = 0.022, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09721386868223914;  // std dev = 2.37e-07, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2760887614624471;  // std dev = 0.620, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1172983812820815;  // std dev = 0.126, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08900975907651454;  // std dev = 1.52e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22486626807189802;  // std dev = 0.550, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10230417541123715;  // std dev = 0.140, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0820513691256365;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.188382051248687;  // std dev = 0.034, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09829832001369654;  // std dev = 0.018, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07607949199676473;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16143996007166347;  // std dev = 0.437, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.09562759983998348;  // std dev = 0.063, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07090126170997726;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1279963746662566;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( movie(E, B) )
%   | | then return -0.08299340145873296;  // std dev = 0.071, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04157090252094021;  // std dev = 1.524, 391.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068595
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.12 seconds
Total inference time: 1.581 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068957
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.825 seconds
Parameter learned model CLL: -0.068957


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [6.72e-09, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.09e-07, 349, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 356, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.883, 21, 166], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.828, 378, 36]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.723, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.145, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 361, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.688, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.37e-07, 402, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.62, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.126, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.52e-07, 355, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.55, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.14, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 350, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 202], 'true,true,false': [0.018, 35, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 367, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.437, 0, 202], 'true,true,true,false': [0.063, 27, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 359, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 166], 'true,false,true': [0.071, 35, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.524, 355, 36], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1447063723448616, 1.2470126809543305e-16], 'true': [5.768762805181012e-15, 4.6474452193611206e-17], 'true,false': [4.6474452193611206e-17, nan]}, {'': [0.10173026692680659, -1.1476462726462293e-16], 'true': [-3.728590593592605e-15, -2.6433881538694202e-17], 'true,false': [-2.6433881538694202e-17, nan], 'true,false,true': [-2.6433881538694202e-17, nan]}, {'': [0.04444107609603232, 0.0353943560252828], 'true': [0.04444107609603232, nan], 'true,true': [0.04444107609603232, nan], 'true,true,true': [0.04444107609603232, nan]}, {'': [0.04488472321848612, -1.279370576853366e-16], 'true': [0.04488472321848612, nan], 'true,true': [0.0025855093491317744, 0.000705498660682539], 'true,true,true': [0.0025855093491317744, nan], 'true,true,false': [0.000705498660682539, nan]}, {'': [0.02895275563816795, 1.391921404007659e-16], 'true': [0.0023424376713133874, 0.0005014004048213357], 'true,true': [0.0023424376713133874, nan], 'true,true,true': [0.0023424376713133874, nan], 'true,false': [0.0005014004048213357, nan]}, {'': [0.01914811737214821, 6.504968707662889e-17], 'true': [0.0019016768608819687, 0.0005319272881174286], 'true,true': [0.0019016768608819687, nan], 'true,false': [0.0005319272881174286, nan]}, {'': [0.016100891119703472, -6.3441315692866086e-18], 'true': [0.001499016729581659, 0.0004925021783787203], 'true,true': [0.001499016729581659, nan], 'true,false': [0.0004925021783787203, nan]}, {'': [0.01140335938002567, -5.566240777412229e-17], 'true': [0.01140335938002567, nan], 'true,true': [0.0011832086603346015, 0.0003397131130959598]}, {'': [0.0077242685856738335, -3.5873501631342106e-17], 'true': [0.0077242685856738335, nan], 'true,true': [0.0077242685856738335, nan], 'true,true,true': [0.0009452521048222129, 0.00014915601792973184]}, {'': [0.006426973815835759, 0.005937181000574351], 'true': [-1.0700944815664159e-16, 0.00014416853269475505], 'false': [0.005937181000574351, nan], 'false,true': [0.005937181000574351, nan], 'true,false': [0.00014416853269475028, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048743;  // std dev = 2.70e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.12544463852839213;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360649;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.359337473146242;  // std dev = 0.164, 116.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=103 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583098;  // std dev = 2.46e-07, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 4.71e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32724058809826495;  // std dev = 0.091, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1132435218354661;  // std dev = 0.116, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926055;  // std dev = 1.60e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2596332578690842;  // std dev = 0.079, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10925570999750876;  // std dev = 0.115, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08518475138839678;  // std dev = 1.12e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21291062303121827;  // std dev = 0.069, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09721848376725108;  // std dev = 0.105, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.07877675473109147;  // std dev = 2.98e-08, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.18360513030839345;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | | else return -0.10527011250262965;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17504484382018193;  // std dev = 1.37e-07, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | | | else return -0.06907884018210905;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333689;  // std dev = 1.14e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.12544886984660264;  // std dev = 0.084, 118.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=103 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15118568343081806;  // std dev = 6.32e-08, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | | | else return -0.06476666775177886;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420318;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13676576475761906;  // std dev = 0.057, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else return -0.07765505950371329;  // std dev = 0.121, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13997491104366183;  // std dev = 0.021, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.07776463305387699;  // std dev = 0.074, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06419184008202594;  // std dev = 1.27e-07, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064224
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.785 seconds
Total inference time: 1.179 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065579
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.541 seconds
Refined model CLL: -0.065579


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064224
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.271 seconds
Total inference time: 1.179 seconds
AUC ROC: 1.0
Total revision time: 13.271
Best scored revision CLL: -0.065579


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:17:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064224, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.271, 'Inference time': 1.179, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068595, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.12, 'Inference time': 1.581}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 7.45e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 519.000 (wgt'ed) examples reached here.  /* #neg=519 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 529.000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4629992489087484;  // std dev = 3.667, 253.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=218 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04949013545941046;  // std dev = 4.538, 542.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=51 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46429053014392524;  // std dev = 0.819, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15604841812357353;  // std dev = 0.143, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10747599983997688;  // std dev = 0.000, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3537248865549593;  // std dev = 0.780, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14097967038968157;  // std dev = 0.017, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09759282646466239;  // std dev = 0.000, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.278271201444775;  // std dev = 0.702, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1128753238962253;  // std dev = 0.149, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08932906849888649;  // std dev = 1.84e-07, 516.000 (wgt'ed) examples reached here.  /* #neg=516 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22637280146447236;  // std dev = 0.622, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11201852394791646;  // std dev = 0.100, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08232384680970506;  // std dev = 1.46e-07, 518.000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18946160750360055;  // std dev = 0.034, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09478999576574393;  // std dev = 0.018, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07631457794027435;  // std dev = 1.60e-07, 484.000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16224140391949982;  // std dev = 0.493, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.08891516879046688;  // std dev = 0.096, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07110604961960568;  // std dev = 2.13e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12842195729011413;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #pos=218 */
%   | else if ( movie(E, B) )
%   | | then return -0.08328617537166089;  // std dev = 0.072, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04092399116605067;  // std dev = 1.791, 529.000 (wgt'ed) examples reached here.  /* #neg=478 #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068728
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.018 seconds
Total inference time: 1.526 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069071
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.328 seconds
Parameter learned model CLL: -0.069071


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [7.45e-09, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 519, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 529, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.667, 35, 218], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.538, 491, 51]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.819, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.143, 37, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 499, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.78, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.017, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 491, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.702, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.149, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.84e-07, 516, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.622, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.1, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.46e-07, 518, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 269], 'true,true,false': [0.018, 44, 0], 'true,false': [0.0, 0, 0], 'false': [1.6e-07, 484, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.493, 0, 269], 'true,true,true,false': [0.096, 37, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.13e-07, 469, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 218], 'true,false,true': [0.072, 44, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.791, 478, 51], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13397460937500397, -3.764918156725001e-17], 'true': [4.226276495227362e-15, 5.659960517696876e-17], 'true,false': [5.659960517696876e-17, nan]}, {'': [0.06782634959106411, -1.37676049934613e-16], 'true': [-4.5432472323694135e-15, -1.0408340855860843e-17], 'true,false': [-1.0408340855860843e-17, nan], 'true,false,true': [-1.0408340855860843e-17, nan]}, {'': [0.053140286594433414, 0.03800086582476783], 'true': [0.053140286594433414, nan], 'true,true': [0.053140286594433414, nan], 'true,true,true': [0.053140286594433414, nan]}, {'': [0.043163776031919, -1.7621175060182846e-16], 'true': [0.043163776031919, nan], 'true,true': [0.002494509306195827, 0.000550498624180596], 'true,true,true': [0.002494509306195827, nan], 'true,true,false': [0.000550498624180596, nan]}, {'': [0.02803487872610628, -1.2119746256600487e-16], 'true': [0.0022613806939882426, 0.0002744267330830795], 'true,true': [0.0022613806939882426, nan], 'true,true,true': [0.0022613806939882426, nan], 'true,false': [0.0002744267330830795, nan]}, {'': [0.019526805392497792, 6.540848827248985e-17], 'true': [0.0018317956535787326, 0.0005253111742440153], 'true,true': [0.0018317956535787326, nan], 'true,false': [0.0005253111742440153, nan]}, {'': [0.015541273815428297, 4.115112369266989e-17], 'true': [0.001439926101817739, 0.00021671752914604253], 'true,true': [0.001439926101817739, nan], 'true,false': [0.00021671752914604253, nan]}, {'': [0.01078245836358239, 5.3217302006825687e-17], 'true': [0.01078245836358239, nan], 'true,true': [0.0011336415575156184, 0.0003311639122120904]}, {'': [0.007529643868917066, 9.658230150257226e-17], 'true': [0.007529643868917066, nan], 'true,true': [0.007529643868917066, nan], 'true,true,true': [0.0009036557281500957, 0.0002500192437307375]}, {'': [0.006282714777763584, 0.0060629316475873385], 'true': [-1.4463455917135066e-16, 0.00011745618450665554], 'false': [0.0060629316475873385, nan], 'false,true': [0.0060629316475873385, nan], 'true,false': [0.000117456184506653, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048766;  // std dev = 0.000, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1254446385283923;  // std dev = 0.000, 526.000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.11231637819360615;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830914;  // std dev = 3.95e-07, 133.000 (wgt'ed) examples reached here.  /* #pos=133 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.33690645471015035;  // std dev = 0.188, 161.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=136 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783544;  // std dev = 3.46e-07, 518.000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3297153767081068;  // std dev = 0.146, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11850802768231523;  // std dev = 0.117, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.09269127618926093;  // std dev = 1.49e-07, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26132812701710806;  // std dev = 0.128, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10235273669976923;  // std dev = 0.133, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839679;  // std dev = 1.38e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21410973853875764;  // std dev = 0.111, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0990661872666479;  // std dev = 0.110, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.07877675473109148;  // std dev = 2.26e-07, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18029009035049035;  // std dev = 0.098, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.08288616588577154;  // std dev = 0.102, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.12947135672250215;  // std dev = 0.063, 147.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=133 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.16038873113320992;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #pos=136 */
%   | | | else return -0.0957367103522248;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442035;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1374682253623203;  // std dev = 0.043, 218.000 (wgt'ed) examples reached here.  /* #pos=218 */
%   | else return -0.0762148404449039;  // std dev = 0.057, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13522475218193375;  // std dev = 0.017, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return -0.075473242363683;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.06419184008202557;  // std dev = 2.18e-07, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.424 seconds
Total inference time: 1.315 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065283
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.506 seconds
Refined model CLL: -0.065283


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.276 seconds
Total inference time: 1.315 seconds
AUC ROC: 1.0
Total revision time: 14.276
Best scored revision CLL: -0.065283


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:17:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065103, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.276, 'Inference time': 1.315, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068728, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.018, 'Inference time': 1.526}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.68e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004884;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4864443397202295;  // std dev = 3.577, 310.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=278 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.055224659234978414;  // std dev = 4.904, 690.000 (wgt'ed) examples reached here.  /* #neg=631 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4579282270814599;  // std dev = 0.939, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1506061936067789;  // std dev = 0.218, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10692715309111231;  // std dev = 7.88e-08, 631.000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3493784705876411;  // std dev = 0.894, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12888122236906763;  // std dev = 0.028, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09713708388396249;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2753532292388112;  // std dev = 0.805, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12433479972930798;  // std dev = 0.139, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08894503791066272;  // std dev = 2.31e-07, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22435791455414053;  // std dev = 0.715, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10226704169355266;  // std dev = 0.174, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08199612380653401;  // std dev = 2.72e-07, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18801732816734912;  // std dev = 0.035, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09681892091468436;  // std dev = 0.020, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07603181547513947;  // std dev = 0.000, 691.000 (wgt'ed) examples reached here.  /* #neg=691 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16116889945045126;  // std dev = 0.568, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.08697594312735685;  // std dev = 0.139, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07085972024251883;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12783137653873686;  // std dev = 2.06e-07, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, B) )
%   | | then return -0.0875220593081592;  // std dev = 0.076, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04253429390869502;  // std dev = 1.961, 669.000 (wgt'ed) examples reached here.  /* #neg=610 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.384 seconds
Total inference time: 1.452 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.259 seconds
Parameter learned model CLL: -0.068879


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [7.68e-09, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 596, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 59, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 640, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.577, 32, 278], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.904, 631, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.939, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.218, 54, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 631, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.894, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.028, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 611, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.805, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.139, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.31e-07, 615, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.715, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.174, 58, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.72e-07, 614, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 337], 'true,true,false': [0.02, 54, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 691, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.568, 0, 337], 'true,true,true,false': [0.139, 53, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 598, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.06e-07, 0, 278], 'true,false,true': [0.076, 45, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.961, 610, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12062031445231457, -2.891050560768864e-16], 'true': [3.204821834882351e-15, 6.055761952500853e-17], 'true,false': [6.055761952500853e-17, nan]}, {'': [0.09051503371687042, -2.9698465908722935e-16], 'true': [-5.144582419153248e-15, -3.95164127408954e-17], 'true,false': [-3.95164127408954e-17, nan], 'true,false,true': [-3.95164127408954e-17, nan]}, {'': [0.04126784429544691, 0.034859695250401924], 'true': [0.04126784429544691, nan], 'true,true': [0.04126784429544691, nan], 'true,true,true': [0.04126784429544691, nan]}, {'': [0.04645592108127693, 9.853009410302499e-18], 'true': [0.04645592108127693, nan], 'true,true': [0.0026163056175070756, 0.0008765836720615307], 'true,true,true': [0.0026163056175070756, nan], 'true,true,false': [0.0008765836720615307, nan]}, {'': [0.029011154873557196, -4.942400371490059e-17], 'true': [0.0023694271243040748, 0.0007641332078868065], 'true,true': [0.0023694271243040748, nan], 'true,true,true': [0.0023694271243040748, nan], 'true,false': [0.0007641332078868065, nan]}, {'': [0.018350205524411058, 8.665155314147564e-17], 'true': [0.0019247688365149188, 0.00042673392410318053], 'true,true': [0.0019247688365149188, nan], 'true,false': [0.00042673392410318053, nan]}, {'': [0.014737246557006416, 1.2006320657184104e-16], 'true': [0.0015184906475821693, 0.0005238866868536508], 'true,true': [0.0015184906475821693, nan], 'true,false': [0.0005238866868536508, nan]}, {'': [0.010746499059969186, -1.9087481233787062e-16], 'true': [0.010746499059969186, nan], 'true,true': [0.0011995353582196686, 0.0003998235587648767]}, {'': [0.008108779281931868, -6.089517593261728e-17], 'true': [0.008108779281931868, nan], 'true,true': [0.008108779281931868, nan], 'true,true,true': [0.0009589578713280418, 0.00036299025315131035]}, {'': [0.005578908265620314, 0.00574936697650478], 'false': [0.00574936697650478, nan], 'false,true': [0.00574936697650478, nan], 'true': [1.5335454728635257e-16, 0.00012826764928018314], 'true,false': [0.00012826764928019054, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1418510649004886;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.12544463852839235;  // std dev = 0.000, 663.000 (wgt'ed) examples reached here.  /* #neg=663 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.11231637819360618;  // std dev = 0.000, 654.000 (wgt'ed) examples reached here.  /* #neg=654 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878352;  // std dev = 4.02e-07, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.0926912761892615;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0787767547310917;  // std dev = 2.98e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07877675473109207;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333686;  // std dev = 1.70e-07, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0684269778442027;  // std dev = 1.39e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420368;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080114;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080114;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.06419184008202541;  // std dev = 2.42e-07, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.594 seconds
Total inference time: 1.337 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.807 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.044 seconds
Total inference time: 1.337 seconds
AUC ROC: 1.0
Total revision time: 16.044
Best scored revision CLL: -0.064062


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.044, 'Inference time': 1.337, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068591, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.384, 'Inference time': 1.452}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4937341769056787;  // std dev = 1.558, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06704974667225781;  // std dev = 1.823, 118.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4492047686588829;  // std dev = 0.370, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1552327376054;  // std dev = 0.099, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10580316881323472;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34313459134957736;  // std dev = 0.353, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13899145262306986;  // std dev = 0.024, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0962026188661278;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2709623424326837;  // std dev = 0.319, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11940407614194332;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08815678075438098;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2211960604402018;  // std dev = 0.285, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1125558602843237;  // std dev = 0.062, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08132282769597234;  // std dev = 4.08e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18566554866184576;  // std dev = 0.031, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10474368863527787;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07545042560490399;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1593647557585101;  // std dev = 0.228, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.09934806851578136;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07035288526867607;  // std dev = 3.16e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13000838882047372;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else if ( movie(E, B) )
%   | | then return -0.0845763250902462;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.048656354877894194;  // std dev = 0.748, 129.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067183
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.139 seconds
Total inference time: 1.695 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067951
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.946 seconds
Parameter learned model CLL: -0.067951


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.66e-08, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.558, 6, 59], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.823, 110, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.37, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.099, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 132, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.353, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.319, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.078, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 127, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.285, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.062, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.08e-08, 118, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.031, 0, 67], 'true,true,false': [0.013, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 133, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.228, 0, 67], 'true,true,true,false': [0.0, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 133, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 59], 'true,false,true': [0.031, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.748, 121, 8], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.07543629198723856, 3.763467880085276e-17], 'true': [-9.544603913195376e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.061141850684107026, -3.670158759091427e-18], 'true': [3.1815346377317917e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.03735226528842212, 0.028174684027731267], 'true': [0.03735226528842212, nan], 'true,true': [0.03735226528842212, nan], 'true,true,true': [0.03735226528842212, nan]}, {'': [0.04891935956392947, -5.3828995133340925e-17], 'true': [0.04891935956392947, nan], 'true,true': [0.002039770992206736, 0.0008144274236598174], 'true,true,true': [0.002039770992206736, nan], 'true,true,false': [0.0008144274236598174, nan]}, {'': [0.036360156253976865, -4.1503664471968466e-18], 'true': [0.0018563204996118851, 0.0005522893811175951], 'true,true': [0.0018563204996118851, nan], 'true,true,true': [0.0018563204996118851, nan], 'true,false': [0.0005522893811175951, nan]}, {'': [0.019843614789074444, -1.1364487653643335e-17], 'true': [0.0015204870534648253, 0.0005525043146804046], 'true,true': [0.0015204870534648253, nan], 'true,false': [0.0005525043146804046, nan]}, {'': [0.015424275682058808, 1.4113004550319786e-17], 'true': [0.0012094864326219028, 0.00031989007981445455], 'true,true': [0.0012094864326219028, nan], 'true,false': [0.00031989007981445455, nan]}, {'': [0.01039024912151047, -2.0868853846337528e-17], 'true': [0.01039024912151047, nan], 'true,true': [0.000962362364771138, 0.00017249062280250415]}, {'': [0.007069386929701435, 7.51278738468151e-18], 'true': [0.007069386929701435, nan], 'true,true': [0.007069386929701435, nan], 'true,true,true': [0.0007740447843974569, -1.734723475976807e-18]}, {'': [0.004855511803947943, 0.0043412760323120235], 'true': [-1.3172137580298468e-17, 0.00011641334008524219], 'false': [0.0043412760323120235, nan], 'false,true': [0.0043412760323120235, nan], 'true,false': [0.00011641334008524219, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839133;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360621;  // std dev = 8.30e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583101;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.4175135841583102;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926086;  // std dev = 7.30e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839682;  // std dev = 6.23e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109162;  // std dev = 5.96e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.14560931499890073;  // std dev = 0.039, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 4.28e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13433063677987975;  // std dev = 0.003, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else return -0.0670159849449496;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B), female(A) )
%   | then return 0.13483715172715272;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.06240626467580971;  // std dev = 0.197, 111.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064258
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.923 seconds
Total inference time: 1.32 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064806
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.493 seconds
Refined model CLL: -0.064806


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064258
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.501 seconds
Total inference time: 1.32 seconds
AUC ROC: 1.0
Total revision time: 7.501
Best scored revision CLL: -0.064806


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:18:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064258, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.501, 'Inference time': 1.32, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067183, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.139, 'Inference time': 1.695}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.59e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283919;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5019518115510924;  // std dev = 2.025, 125.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=115 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06764745747579663;  // std dev = 2.811, 284.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45061368657049233;  // std dev = 0.571, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17288117013969306;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10574663339884341;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34426487079631723;  // std dev = 0.544, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12777902428955332;  // std dev = 0.028, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09615557520565335;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2718335471555688;  // std dev = 0.492, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11616908789043269;  // std dev = 0.124, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08811706797749452;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22187047799026927;  // std dev = 0.438, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11205405840210746;  // std dev = 0.098, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0812888847755863;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18619701143080425;  // std dev = 0.034, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09185226955104418;  // std dev = 0.022, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07542109941687335;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15979211640850782;  // std dev = 0.350, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.0824491764394811;  // std dev = 0.092, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07032730705481563;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1285158013379024;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( movie(E, B) )
%   | | then return -0.08700017777080427;  // std dev = 0.069, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.045019231373740275;  // std dev = 1.142, 250.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067437
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.918 seconds
Total inference time: 1.588 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.228 seconds
Parameter learned model CLL: -0.068436


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [5.59e-09, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 257, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 279, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.025, 10, 115], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.811, 265, 19]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.571, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [7.45e-09, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.544, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.028, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.492, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.124, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.438, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.098, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 277, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 134], 'true,true,false': [0.022, 20, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.35, 0, 134], 'true,true,true,false': [0.092, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 245, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 115], 'true,false,true': [0.069, 33, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.142, 231, 19], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1525803489439901, -1.2441409770118486e-16], 'true': [4.772301956597688e-15, 2.5069552168955147e-17], 'true,false': [2.5069552168955147e-17, nan]}, {'': [0.08926115588533495, -7.003557431327152e-17], 'true': [-1.908920782639075e-15, -2.413528314402514e-18], 'true,false': [-2.413528314402514e-18, nan], 'true,false,true': [-2.413528314402514e-18, nan]}, {'': [0.032810905124543266, 0.027829358247099884], 'true': [0.032810905124543266, nan], 'true,true': [0.032810905124543266, nan], 'true,true,true': [0.032810905124543266, nan]}, {'': [0.02738694642867998, -9.109522253334617e-17], 'true': [0.02738694642867998, nan], 'true,true': [0.002434509765965646, 5.551115123125783e-18], 'true,true,true': [0.002434509765965646, nan], 'true,true,false': [5.551115123125783e-18, nan]}, {'': [0.026271803121038825, -1.5582077538598687e-17], 'true': [0.002210688648356484, 0.0008116729216875743], 'true,true': [0.002210688648356484, nan], 'true,true,true': [0.002210688648356484, nan], 'true,false': [0.0008116729216875743, nan]}, {'': [0.02102293868836161, -2.8589434110519052e-18], 'true': [0.0018065372127214559, 0.0006362224322870267], 'true,true': [0.0018065372127214559, nan], 'true,false': [0.0006362224322870267, nan]}, {'': [0.01681745469365971, -1.2024076078972814e-17], 'true': [0.0014340056196223445, 0.00035904291028870526], 'true,true': [0.0014340056196223445, nan], 'true,false': [0.00035904291028870526, nan]}, {'': [0.009789296283080853, -1.0437994248612583e-17], 'true': [0.009789296283080853, nan], 'true,true': [0.0011389540323553022, 0.0004756286116033723]}, {'': [0.007481732822672079, -4.89404435344967e-17], 'true': [0.007481732822672079, nan], 'true,true': [0.007481732822672079, nan], 'true,true,true': [0.0009146923348117841, 0.0004209489567310348]}, {'': [0.008079116171197071, 0.005215586980352796], 'true': [-5.213221159109431e-17, 0.00014293094710409788], 'false': [0.005215586980352796, nan], 'false,true': [0.005215586980352796, nan], 'true,false': [0.0001429309471040962, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048846;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.12544463852839186;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.11231637819360672;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926055;  // std dev = 6.32e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.08518475138839678;  // std dev = 8.94e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109147;  // std dev = 6.32e-08, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452778;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.14090236904523729;  // std dev = 0.088, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333673;  // std dev = 1.15e-07, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15525698968190263;  // std dev = 0.027, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07565769671511294;  // std dev = 0.040, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.32e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1362647118830331;  // std dev = 0.022, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.07205794245959829;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then return -0.06419184008202622;  // std dev = 4.21e-08, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13416285498830036;  // std dev = 0.006, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.07439818427558109;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064013
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.625 seconds
Total inference time: 1.278 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.797 seconds
Refined model CLL: -0.064726


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064013
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.568000000000001 seconds
Total inference time: 1.278 seconds
AUC ROC: 1.0
Total revision time: 9.568000000000001
Best scored revision CLL: -0.064726


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:18:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064013, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.568000000000001, 'Inference time': 1.278, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067437, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.918, 'Inference time': 1.588}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.93e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048746;  // std dev = 2.58e-07, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4581310753472695;  // std dev = 3.380, 206.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=176 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06663281717140344;  // std dev = 3.286, 380.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=26 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4581199454564682;  // std dev = 0.621, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14303606848741945;  // std dev = 0.178, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10584262052070116;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3492161814226433;  // std dev = 0.593, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12787127957104413;  // std dev = 0.026, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09623544468569356;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2750588964104396;  // std dev = 0.536, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.117641817454998;  // std dev = 0.138, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08818448959218259;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2240384554900635;  // std dev = 0.477, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10749280628612051;  // std dev = 0.116, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08134650947784622;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18771320309896913;  // std dev = 0.030, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.1019212325272525;  // std dev = 0.015, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07547088537758623;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1608925500065264;  // std dev = 0.381, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.08717103655932448;  // std dev = 0.104, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07037072949922797;  // std dev = 1.62e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13115411788999742;  // std dev = 0.000, 176.000 (wgt'ed) examples reached here.  /* #pos=176 */
%   | else if ( movie(E, B) )
%   | | then return -0.08362279483299347;  // std dev = 0.064, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04933861104939809;  // std dev = 1.329, 430.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067208
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.951 seconds
Total inference time: 1.613 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068145
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.286 seconds
Parameter learned model CLL: -0.068145


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [4.93e-09, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.58e-07, 379, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 396, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.38, 30, 176], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.286, 354, 26]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.621, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.178, 36, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 347, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.593, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 340, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.536, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.138, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 358, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.477, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.116, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 372, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.03, 0, 202], 'true,true,false': [0.015, 31, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 376, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.381, 0, 202], 'true,true,true,false': [0.104, 35, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.62e-07, 381, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 176], 'true,false,true': [0.064, 29, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.329, 404, 26], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10691871455577107, 1.7576090099606699e-16], 'true': [5.768762805181012e-15, 2.3790493384824782e-17], 'true,false': [2.3790493384824782e-17, nan]}, {'': [0.08427500943412075, -1.2335811384723962e-16], 'true': [-3.728590593592605e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.055467664304196494, 0.028415140872113883], 'true': [0.055467664304196494, nan], 'true,true': [0.055467664304196494, nan], 'true,true,true': [0.055467664304196494, nan]}, {'': [0.04814751115236005, -3.583428782651802e-17], 'true': [0.04814751115236005, nan], 'true,true': [0.0019075530889950015, 0.0008803152728700555], 'true,true,true': [0.0019075530889950015, nan], 'true,true,false': [0.0008803152728700555, nan]}, {'': [0.021798659981167274, -3.918434204559376e-18], 'true': [0.0017425114759781128, 0.0006929172942731714], 'true,true': [0.0017425114759781128, nan], 'true,true,true': [0.0017425114759781128, nan], 'true,false': [0.0006929172942731714, nan]}, {'': [0.02146126808885035, -8.187119511202272e-17], 'true': [0.0014241325738592653, 0.0005134572194614214], 'true,true': [0.0014241325738592653, nan], 'true,false': [0.0005134572194614214, nan]}, {'': [0.014576736401572905, -2.7457128565998495e-17], 'true': [0.001128555108352583, 0.0003966976304678623], 'true,true': [0.001128555108352583, nan], 'true,false': [0.0003966976304678623, nan]}, {'': [0.010482443798359902, -1.7716324861039733e-17], 'true': [0.010482443798359902, nan], 'true,true': [0.0008945481230128623, 0.00023138138689977747]}, {'': [0.008402596539982458, 6.876972016050839e-17], 'true': [0.008402596539982458, nan], 'true,true': [0.008402596539982458, nan], 'true,true,true': [0.0007170593219587265, 0.0003111100912401822]}, {'': [0.005622437709366885, 0.004109099911575891], 'true': [-1.3625464393126921e-16, 0.00014127919751302117], 'false': [0.004109099911575891, nan], 'false,true': [0.004109099911575891, nan], 'true,false': [0.00014127919751302212, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1418510649004876;  // std dev = 2.09e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839133;  // std dev = 1.83e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.12544463852839216;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360668;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10159632948783634;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 1.52e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926051;  // std dev = 1.93e-07, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.08518475138839678;  // std dev = 1.10e-07, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.07877675473109147;  // std dev = 4.71e-08, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452781;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.15286978256702502;  // std dev = 0.074, 124.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=112 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333703;  // std dev = 8.94e-08, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.12482909239277487;  // std dev = 0.073, 103.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=90 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15590555850129004;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | | else return -0.08432435961953248;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442032;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1367831653864269;  // std dev = 0.005, 176.000 (wgt'ed) examples reached here.  /* #pos=176 */
%   | else return -0.07325842372597854;  // std dev = 0.035, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(B) )
%   | then return -0.06419184008202573;  // std dev = 1.65e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13715524130346163;  // std dev = 0.001, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07007617467642685;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064284
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.873 seconds
Total inference time: 1.318 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065169
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.222 seconds
Refined model CLL: -0.065169


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064284
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.331999999999999 seconds
Total inference time: 1.318 seconds
AUC ROC: 1.0
Total revision time: 12.331999999999999
Best scored revision CLL: -0.065169


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:18:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064284, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.331999999999999, 'Inference time': 1.318, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067208, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.951, 'Inference time': 1.613}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 7.21e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048718;  // std dev = 2.95e-07, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4829047359000931;  // std dev = 3.336, 258.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=230 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0635530265406934;  // std dev = 4.015, 534.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.454917612262164;  // std dev = 0.784, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15459719903315755;  // std dev = 0.167, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10613444580594945;  // std dev = 2.72e-07, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3471656856170188;  // std dev = 0.748, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1357857228605143;  // std dev = 0.024, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09647819880287957;  // std dev = 1.30e-07, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2737652523390362;  // std dev = 0.675, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1242108803897201;  // std dev = 0.124, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08838935952478508;  // std dev = 0.000, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22319632189947544;  // std dev = 0.601, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10294491046359426;  // std dev = 0.135, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0815215728848521;  // std dev = 0.000, 484.000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18714245556092776;  // std dev = 0.033, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09929654389428262;  // std dev = 0.018, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07562210665611173;  // std dev = 0.000, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1604908282631019;  // std dev = 0.479, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.09068069041660137;  // std dev = 0.110, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07050260050720515;  // std dev = 2.04e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1292951546709425;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | else if ( movie(E, B) )
%   | | then return -0.08804629489154712;  // std dev = 0.067, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04561103083145742;  // std dev = 1.622, 522.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067495
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.489 seconds
Total inference time: 1.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.856 seconds
Parameter learned model CLL: -0.068436


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [7.21e-09, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.95e-07, 462, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 467, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.336, 28, 230], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.015, 495, 39]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.784, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.167, 37, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.72e-07, 481, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.748, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.3e-07, 506, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.675, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.124, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 457, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.601, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.135, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 484, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 269], 'true,true,false': [0.018, 49, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 486, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.479, 0, 269], 'true,true,true,false': [0.11, 44, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.04e-07, 476, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 230], 'true,false,true': [0.067, 55, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.622, 483, 39], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13217244327394978, 1.8840148296669324e-16], 'true': [4.226276495227362e-15, 5.773159728050814e-17], 'true,false': [5.773159728050814e-17, nan]}, {'': [0.08192980588947166, -1.293279069370632e-16], 'true': [-4.5432472323694135e-15, -2.4370749321040022e-17], 'true,false': [-2.4370749321040022e-17, nan], 'true,false,true': [-2.4370749321040022e-17, nan]}, {'': [0.043130734306794524, 0.030180587433095124], 'true': [0.043130734306794524, nan], 'true,true': [0.043130734306794524, nan], 'true,true,true': [0.043130734306794524, nan]}, {'': [0.04158922112300893, 1.5326155682975135e-16], 'true': [0.04158922112300893, nan], 'true,true': [0.002284896237987402, 0.000754919501901865], 'true,true,true': [0.002284896237987402, nan], 'true,true,false': [0.000754919501901865, nan]}, {'': [0.03094754355239406, 3.335057307174383e-17], 'true': [0.0020774784050937773, 0.0005933464031772736], 'true,true': [0.0020774784050937773, nan], 'true,true,true': [0.0020774784050937773, nan], 'true,false': [0.0005933464031772736, nan]}, {'': [0.019697715196521873, -9.717488180526534e-17], 'true': [0.0016952136043511367, 0.00037438067784432473], 'true,true': [0.0016952136043511367, nan], 'true,false': [0.00037438067784432473, nan]}, {'': [0.012546590610016407, -8.991888959773995e-17], 'true': [0.0013428237491220176, 0.000494402990927051], 'true,true': [0.0013428237491220176, nan], 'true,false': [0.000494402990927051, nan]}, {'': [0.011644013003000516, -6.030841121420603e-17], 'true': [0.011644013003000516, nan], 'true,true': [0.0010643841001493949, 0.0003192247163853955]}, {'': [0.00839351077159416, 8.769828934013841e-17], 'true': [0.00839351077159416, nan], 'true,true': [0.00839351077159416, nan], 'true,true,true': [0.0008533037439198072, 0.0002729414405741012]}, {'': [0.007372685219625009, 0.005038056835288215], 'true': [0.0, 8.257989698879819e-05], 'false': [0.005038056835288215, nan], 'false,true': [0.005038056835288215, nan], 'true,false': [8.257989698879415e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.1418510649004875;  // std dev = 1.84e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.12544463852839227;  // std dev = 0.000, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.11231637819360593;  // std dev = 0.000, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830936;  // std dev = 3.37e-07, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.34126015051537273;  // std dev = 0.184, 177.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=151 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783551;  // std dev = 3.32e-07, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3301615506301295;  // std dev = 0.137, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11262379730637657;  // std dev = 0.137, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.09269127618926096;  // std dev = 1.43e-07, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26162912528001536;  // std dev = 0.120, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11004602566241027;  // std dev = 0.114, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.08518475138839679;  // std dev = 1.48e-07, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21431988825445836;  // std dev = 0.104, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09351795206552799;  // std dev = 0.132, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109172;  // std dev = 1.95e-07, 509.000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18044260330020745;  // std dev = 0.091, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09289817226622725;  // std dev = 0.107, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.14968732253101666;  // std dev = 4.71e-08, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | | else return -0.06354849878972367;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.14086477935308572;  // std dev = 0.067, 163.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=151 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420351;  // std dev = 0.000, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13794080502502912;  // std dev = 0.073, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | else return -0.0820976627442514;  // std dev = 0.168, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.133159675184992;  // std dev = 0.023, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.0841647884848495;  // std dev = 0.084, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06419184008202564;  // std dev = 2.06e-07, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064573
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.432 seconds
Total inference time: 1.285 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065857
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.488 seconds
Refined model CLL: -0.065857


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064573
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.264999999999999 seconds
Total inference time: 1.285 seconds
AUC ROC: 1.0
Total revision time: 14.264999999999999
Best scored revision CLL: -0.065857


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:19:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064573, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.264999999999999, 'Inference time': 1.285, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067495, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.489, 'Inference time': 1.693}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.97e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048877;  // std dev = 0.000, 656.000 (wgt'ed) examples reached here.  /* #neg=656 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48859815525229366;  // std dev = 3.583, 320.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=288 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06649500854086883;  // std dev = 4.511, 714.000 (wgt'ed) examples reached here.  /* #neg=665 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4538837408887441;  // std dev = 0.892, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.156234882710484;  // std dev = 0.198, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10585566343245784;  // std dev = 3.45e-07, 572.000 (wgt'ed) examples reached here.  /* #neg=572 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34648592458084815;  // std dev = 0.851, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1348763656823353;  // std dev = 0.025, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09624629662892203;  // std dev = 2.73e-07, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2733243010983821;  // std dev = 0.769, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12391391932289057;  // std dev = 0.164, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08819364959908177;  // std dev = 0.000, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2229013409776774;  // std dev = 0.684, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10436475618631647;  // std dev = 0.165, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08135433799223818;  // std dev = 3.18e-07, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18693720301256134;  // std dev = 0.033, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09728571547658862;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07547764861847607;  // std dev = 2.76e-07, 662.000 (wgt'ed) examples reached here.  /* #neg=662 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16034263258445347;  // std dev = 0.546, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.08976878500045044;  // std dev = 0.129, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07037662800850601;  // std dev = 1.28e-07, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12897010723066715;  // std dev = 2.98e-08, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( movie(E, B) )
%   | | then return -0.0864321535934135;  // std dev = 0.084, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04523657878554778;  // std dev = 1.823, 649.000 (wgt'ed) examples reached here.  /* #neg=600 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067427
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.478 seconds
Total inference time: 1.636 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068388
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.782 seconds
Parameter learned model CLL: -0.068388


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [6.97e-09, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 656, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 60, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 622, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.583, 32, 288], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.511, 665, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.892, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.198, 53, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.45e-07, 572, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.851, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.73e-07, 581, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.769, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.164, 65, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 624, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.684, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.165, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.18e-07, 601, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 337], 'true,true,false': [0.019, 58, 0], 'true,false': [0.0, 0, 0], 'false': [2.76e-07, 662, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.546, 0, 337], 'true,true,true,false': [0.129, 54, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.28e-07, 607, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.98e-08, 0, 288], 'true,false,true': [0.084, 58, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.823, 600, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10214864874174497, -4.3596562674304927e-16], 'true': [3.204821834882351e-15, 4.794144879063176e-17], 'true,false': [4.794144879063176e-17, nan]}, {'': [0.09158604700268083, -2.713085204871765e-16], 'true': [-5.144582419153248e-15, -4.070817756958907e-17], 'true,false': [-4.070817756958907e-17, nan], 'true,false,true': [-4.070817756958907e-17, nan]}, {'': [0.040122030722945026, 0.028494543157287323], 'true': [0.040122030722945026, nan], 'true,true': [0.040122030722945026, nan], 'true,true,true': [0.040122030722945026, nan]}, {'': [0.045854796223357946, 2.0806976965002934e-16], 'true': [0.045854796223357946, nan], 'true,true': [0.002362448585063189, 0.0007428485078234326], 'true,true,true': [0.002362448585063189, nan], 'true,true,false': [0.0007428485078234326, nan]}, {'': [0.028022772814485602, 1.284113377879699e-16], 'true': [0.0021477599613705695, 0.0006473528236548898], 'true,true': [0.0021477599613705695, nan], 'true,true,true': [0.0021477599613705695, nan], 'true,false': [0.0006473528236548898, nan]}, {'': [0.022925565392357603, -1.6226336513752287e-16], 'true': [0.0017534474538583968, 0.00041128495461155884], 'true,true': [0.0017534474538583968, nan], 'true,false': [0.00041128495461155884, nan]}, {'': [0.014182889961515656, 1.684731112243166e-16], 'true': [0.001389798594824136, 0.0004937718693765924], 'true,true': [0.001389798594824136, nan], 'true,false': [0.0004937718693765924, nan]}, {'': [0.011115892444005536, 1.1471186538423068e-16], 'true': [0.011115892444005536, nan], 'true,true': [0.001102229351989052, 0.0003778193580629524]}, {'': [0.008250867588392097, 2.7069688244567243e-17], 'true': [0.008250867588392097, nan], 'true,true': [0.008250867588392097, nan], 'true,true,true': [0.0008840574581361891, 0.0003089075581102167]}, {'': [0.006494338647947312, 0.005118280286640667], 'true': [3.0839528461809902e-18, 0.00012167708660959605], 'false': [0.005118280286640667, nan], 'false,true': [0.005118280286640667, nan], 'true,false': [0.00012167708660960849, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048835;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.12544463852839233;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360626;  // std dev = 5.05e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.11231637819360588;  // std dev = 0.000, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3637034101827942;  // std dev = 0.158, 164.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=147 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830986;  // std dev = 3.26e-07, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783513;  // std dev = 4.28e-07, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3258739337743541;  // std dev = 0.108, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11223648240024846;  // std dev = 0.177, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926144;  // std dev = 0.000, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25870073113032327;  // std dev = 0.094, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1065399399314215;  // std dev = 0.157, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839678;  // std dev = 1.46e-07, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21225266135159002;  // std dev = 0.082, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0939273317424334;  // std dev = 0.147, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109229;  // std dev = 0.000, 654.000 (wgt'ed) examples reached here.  /* #neg=654 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.18339405421190133;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.10634679078810104;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.13921615014058325;  // std dev = 0.087, 223.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333682;  // std dev = 1.81e-07, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15678633894036764;  // std dev = 0.012, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08464074955224087;  // std dev = 0.062, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420364;  // std dev = 0.000, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13707345576207194;  // std dev = 0.009, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.07647914076491709;  // std dev = 0.076, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1376351806627634;  // std dev = 0.003, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.0840571462962048;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06419184008202544;  // std dev = 2.41e-07, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064411
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.777 seconds
Total inference time: 1.212 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065356
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.87 seconds
Refined model CLL: -0.065356


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064411
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.907 seconds
Total inference time: 1.212 seconds
AUC ROC: 1.0
Total revision time: 16.907
Best scored revision CLL: -0.065356


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:19:21
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064411, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.907, 'Inference time': 1.212, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067427, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.478, 'Inference time': 1.636}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47319009029214326;  // std dev = 1.768, 65.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07547870564519854;  // std dev = 1.836, 145.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4543982928524821;  // std dev = 0.361, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14560752628344978;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10500836021985253;  // std dev = 6.83e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34669319097735934;  // std dev = 0.345, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.141169427817433;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09554089033133305;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27337302213979287;  // std dev = 0.312, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1322875329370046;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08759790858006875;  // std dev = 4.94e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22287826338353062;  // std dev = 0.278, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11072061778863534;  // std dev = 0.060, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08084495989728976;  // std dev = 2.98e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18688389335021138;  // std dev = 0.031, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.08992266024646275;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07503740834615871;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16027825931538686;  // std dev = 0.222, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.07895122293216425;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06999254040553811;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13063937540221615;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( movie(E, B) )
%   | | then return -0.0838781820815121;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04945997391400908;  // std dev = 0.746, 137.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066413
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.184 seconds
Total inference time: 1.758 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067857
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.771 seconds
Parameter learned model CLL: -0.067857


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 65], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.19e-07, 0, 65], 'true,false,true,true': [5.27e-09, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 129, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.768, 8, 57], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.836, 137, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.361, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.102, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.83e-08, 109, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.345, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.02, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.312, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.94e-08, 110, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.278, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.06, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-08, 123, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.031, 0, 65], 'true,true,false': [0.021, 5, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.222, 0, 65], 'true,true,true,false': [0.062, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 57], 'true,false,true': [0.038, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.746, 129, 8], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13155675493337735, 2.5480528434019987e-17], 'true': [-8.745141363201234e-16, -1.1564823173178714e-17], 'true,false': [-1.1564823173178714e-17, nan]}, {'': [0.0824935525515319, 5.163828021512356e-17], 'true': [2.1862853408003084e-16, 2.7755575615628915e-18], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.04811478240542542, 0.02323886678417113], 'true': [0.04811478240542542, nan], 'true,true': [0.04811478240542542, nan], 'true,true,true': [0.04811478240542542, nan]}, {'': [0.046415635648619356, 4.2779235811244566e-17], 'true': [0.046415635648619356, nan], 'true,true': [0.0020049202210483505, 0.0009418813057483034], 'true,true,true': [0.0020049202210483505, nan], 'true,true,false': [0.0009418813057483034, nan]}, {'': [0.02258310558275636, -2.4671622769447922e-17], 'true': [0.0018320424195340096, 0.0004014691978415324], 'true,true': [0.0018320424195340096, nan], 'true,true,true': [0.0018320424195340096, nan], 'true,false': [0.0004014691978415324, nan]}, {'': [0.02031656546621195, 2.2204460492503132e-17], 'true': [0.001500792796523434, 0.0], 'true,true': [0.001500792796523434, nan], 'true,false': [0.0, nan]}, {'': [0.016496659775937835, 7.220962761789637e-18], 'true': [0.0011924043781426702, 0.00027775883214605694], 'true,true': [0.0011924043781426702, nan], 'true,false': [0.00027775883214605694, nan]}, {'': [0.005992270713536417, -1.047380211910525e-18], 'true': [0.005992270713536417, nan], 'true,true': [0.0009473715136399445, 0.0004270827776986869]}, {'': [0.00732382337161227, -7.93016446160826e-18], 'true': [0.00732382337161227, nan], 'true,true': [0.00732382337161227, nan], 'true,true,true': [0.000760904780473642, 0.0003828150611062002]}, {'': [0.005864640039256025, 0.004062734466907264], 'true': [-1.5582077538598687e-17, 0.00014363153584044108], 'false': [0.004062734466907264, nan], 'false,true': [0.004062734466907264, nan], 'true,false': [0.00014363153584044387, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839133;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360624;  // std dev = 7.30e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926098;  // std dev = 4.34e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839683;  // std dev = 5.48e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109168;  // std dev = 3.94e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936707;  // std dev = 4.94e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5.05e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.897 seconds
Total inference time: 1.485 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064252
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.339 seconds
Refined model CLL: -0.064252


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.191000000000001 seconds
Total inference time: 1.485 seconds
AUC ROC: 1.0
Total revision time: 7.191000000000001
Best scored revision CLL: -0.064252


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:19:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.191000000000001, 'Inference time': 1.485, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066413, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.184, 'Inference time': 1.758}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048774;  // std dev = 2.63e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47058131738883735;  // std dev = 2.495, 126.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=110 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06513031353354326;  // std dev = 2.879, 283.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4587457254038046;  // std dev = 0.548, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1535707486266583;  // std dev = 0.122, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10598490164056162;  // std dev = 2.98e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.349815047684093;  // std dev = 0.523, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12748212572112302;  // std dev = 0.027, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09635381392035522;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2755710025175192;  // std dev = 0.472, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11648716688431776;  // std dev = 0.118, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08828439559337455;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2244617588909936;  // std dev = 0.420, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10725562085899248;  // std dev = 0.096, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08143188715544623;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18806198400676158;  // std dev = 0.033, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.10051630646377634;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07554464062998137;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16118218489223793;  // std dev = 0.334, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return -0.08987222944272272;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0704350510809308;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1294262373922059;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else if ( movie(E, B) )
%   | | then return -0.08393315765983023;  // std dev = 0.057, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04471746003698655;  // std dev = 1.152, 259.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067059
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.781 seconds
Total inference time: 1.798 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068564
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.614 seconds
Parameter learned model CLL: -0.068564


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.66e-08, 0, 130], 'true,false,true': [2.63e-09, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 130], 'true,false,true,true': [0.0, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 232, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.495, 16, 110], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.879, 263, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.548, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.122, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.98e-08, 244, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.523, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 220, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.472, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.118, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 253, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.42, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.096, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 225, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 130], 'true,true,false': [0.017, 20, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 215, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.334, 0, 130], 'true,true,true,false': [0.067, 16, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 210, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 110], 'true,false,true': [0.057, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.152, 239, 20], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12378808864266383, -2.239424220611427e-16], 'true': [4.481884948640632e-15, 5.046468293750712e-18], 'true,false': [5.046468293750712e-18, nan]}, {'': [0.09915090450905026, -6.125368411725002e-17], 'true': [-1.7490282726402467e-15, -4.270088556250602e-18], 'true,false': [-4.270088556250602e-18, nan], 'true,false,true': [-4.270088556250602e-18, nan]}, {'': [0.04942105069313941, 0.029278799780062897], 'true': [0.04942105069313941, nan], 'true,true': [0.04942105069313941, nan], 'true,true,true': [0.04942105069313941, nan]}, {'': [0.04697560453847176, 3.640075490574284e-18], 'true': [0.04697560453847176, nan], 'true,true': [0.002306875688332829, 0.0007076290104325497], 'true,true,true': [0.002306875688332829, nan], 'true,true,false': [0.0007076290104325497, nan]}, {'': [0.02727022021486337, -7.670631806501082e-17], 'true': [0.0021003473050425826, 0.0007224761894032778], 'true,true': [0.0021003473050425826, nan], 'true,true,true': [0.0021003473050425826, nan], 'true,false': [0.0007224761894032778, nan]}, {'': [0.022318512329234534, -1.7552933195654648e-18], 'true': [0.0017119649584986317, 0.0005548227518121074], 'true,true': [0.0017119649584986317, nan], 'true,false': [0.0005548227518121074, nan]}, {'': [0.014839775908006178, -2.269789294789209e-17], 'true': [0.0013536994081433384, 0.000420131875903277], 'true,true': [0.0013536994081433384, nan], 'true,false': [0.000420131875903277, nan]}, {'': [0.010589412372623128, -2.8917436920469193e-17], 'true': [0.010589412372623128, nan], 'true,true': [0.0010711234196610652, 0.0002845181334315425]}, {'': [0.006944580343906982, -5.709718412357947e-17], 'true': [0.006944580343906982, nan], 'true,true': [0.006944580343906982, nan], 'true,true,true': [0.000857369461858801, 0.00028206283986959707]}, {'': [0.006535334769795742, 0.005121955816001403], 'true': [-3.027880976250427e-17, 0.00014131780215137743], 'false': [0.005121955816001403, nan], 'false,true': [0.005121955816001403, nan], 'true,false': [0.00014131780215137624, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.14185106490048827;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.12544463852839183;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360674;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2.53e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926055;  // std dev = 6.32e-08, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5.96e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839678;  // std dev = 7.15e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07877675473109147;  // std dev = 7.88e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527814;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333675;  // std dev = 1.10e-07, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.10720868598881464;  // std dev = 0.089, 68.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=54 */
%   | | else return 0.11628712689512057;  // std dev = 0.082, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13864976608320184;  // std dev = 0.005, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else return -0.07254229694734689;  // std dev = 0.024, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( female(A), director(B) )
%   | then return 0.12806600036966911;  // std dev = 0.048, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return -0.06274709623777865;  // std dev = 0.286, 247.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063941
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.375 seconds
Total inference time: 1.473 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065509
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.634 seconds
Refined model CLL: -0.065509


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063941
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.404 seconds
Total inference time: 1.473 seconds
AUC ROC: 1.0
Total revision time: 9.404
Best scored revision CLL: -0.065509


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:19:45
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063941, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.404, 'Inference time': 1.473, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067059, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.781, 'Inference time': 1.798}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.89e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 2.06e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4488213067026831;  // std dev = 3.353, 188.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=158 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05086298477874091;  // std dev = 3.870, 402.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4672070174679252;  // std dev = 0.680, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15417582926366583;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1073443803408409;  // std dev = 6.32e-08, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3556943853888737;  // std dev = 0.648, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12795546111346928;  // std dev = 0.024, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09748356784409051;  // std dev = 1.37e-07, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2795760800442557;  // std dev = 0.584, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11614679684563282;  // std dev = 0.111, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08923702613415292;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22726268559623594;  // std dev = 0.517, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10739843116165307;  // std dev = 0.106, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08224531780611362;  // std dev = 1.48e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19009241054367465;  // std dev = 0.033, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.09576019895852968;  // std dev = 0.018, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07624683582731617;  // std dev = 1.23e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16270521707580582;  // std dev = 0.409, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return -0.09053406821116144;  // std dev = 0.085, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07104704616481435;  // std dev = 1.47e-07, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12909532416870914;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | else if ( movie(E, B) )
%   | | then return -0.08206742266321501;  // std dev = 0.061, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.040461908115474336;  // std dev = 1.517, 378.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067792
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.622 seconds
Total inference time: 1.739 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069344
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.159 seconds
Parameter learned model CLL: -0.069344


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 195], 'true,false,true': [5.89e-09, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.06e-07, 355, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 195], 'true,false,true,true': [1.05e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 368, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.353, 30, 158], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.87, 365, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.68, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.128, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 333, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.648, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.37e-07, 332, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.584, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.111, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 362, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.517, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.106, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.48e-07, 348, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 195], 'true,true,false': [0.018, 32, 0], 'true,false': [0.0, 0, 0], 'false': [1.23e-07, 335, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.409, 0, 195], 'true,true,true,false': [0.085, 34, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.47e-07, 338, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 158], 'true,false,true': [0.061, 29, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.517, 341, 37], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13155675493338387, 1.2009172998762255e-16], 'true': [5.975846598187509e-15, 3.700743415417188e-17], 'true,false': [3.700743415417188e-17, nan]}, {'': [0.09025509768394857, -1.1584935909132068e-16], 'true': [-3.643808901333847e-15, 3.2653618371328133e-18], 'true,false': [3.2653618371328133e-18, nan], 'true,false,true': [3.2653618371328133e-18, nan]}, {'': [0.059786487609642225, 0.03725485514064418], 'true': [0.059786487609642225, nan], 'true,true': [0.059786487609642225, nan], 'true,true,true': [0.059786487609642225, nan]}, {'': [0.04781846070127863, 1.200241107702872e-17], 'true': [0.04781846070127863, nan], 'true,true': [0.002373789159922159, 0.0005263643059706641], 'true,true,true': [0.002373789159922159, nan], 'true,true,false': [0.0005263643059706641, nan]}, {'': [0.03438495920925158, 5.617996028223683e-17], 'true': [0.0021566255347899607, 0.0005956492301104963], 'true,true': [0.0021566255347899607, nan], 'true,true,true': [0.0021566255347899607, nan], 'true,false': [0.0005956492301104963, nan]}, {'': [0.018319279816122504, -2.821561278052884e-17], 'true': [0.0017467899460181676, 0.0004584209996168302], 'true,true': [0.0017467899460181676, nan], 'true,false': [0.0004584209996168302, nan]}, {'': [0.015376795494554495, 6.252980253635939e-17], 'true': [0.001372032431931467, 0.00032870101853851375], 'true,true': [0.001372032431931467, nan], 'true,false': [0.00032870101853851375, nan]}, {'': [0.010865800627370083, 4.507174070120038e-17], 'true': [0.010865800627370083, nan], 'true,true': [0.0010792254938101619, 0.0003098604684350498]}, {'': [0.008871501306104538, 6.372285999327822e-17], 'true': [0.008871501306104538, nan], 'true,true': [0.008871501306104538, nan], 'true,true,true': [0.0008595695711911152, 0.0002136554944762709]}, {'': [0.005862388558188623, 0.006087546772137681], 'false': [0.006087546772137681, nan], 'false,true': [0.006087546772137681, nan], 'true': [-9.275280965222827e-17, 0.00012757407427985528], 'true,false': [0.0001275740742798572, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.14185106490048763;  // std dev = 2.00e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1254446385283921;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360686;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4.00e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.09269127618926054;  // std dev = 1.53e-07, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 2.17e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08518475138839678;  // std dev = 9.88e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109147;  // std dev = 2.11e-08, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527758;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333695;  // std dev = 9.88e-08, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420328;  // std dev = 0.000, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080108;  // std dev = 9.19e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(B) )
%   | then return -0.06419184008202575;  // std dev = 1.60e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13400703000801112;  // std dev = 1.05e-08, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.06419184008202615;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202619;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.786 seconds
Total inference time: 1.676 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.138 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.705 seconds
Total inference time: 1.676 seconds
AUC ROC: 1.0
Total revision time: 11.705
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:20:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.705, 'Inference time': 1.676, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067792, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.622, 'Inference time': 1.739}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048718;  // std dev = 2.95e-07, 447.000 (wgt'ed) examples reached here.  /* #neg=447 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4615154386623623;  // std dev = 3.662, 249.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=214 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05585790487148373;  // std dev = 4.333, 544.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=46 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4632537587045305;  // std dev = 0.791, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15109300065958114;  // std dev = 0.179, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10686669714903746;  // std dev = 2.87e-07, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35297204406420574;  // std dev = 0.754, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12877614691946476;  // std dev = 0.026, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0970868609758875;  // std dev = 0.000, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2777391774695021;  // std dev = 0.680, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1145713580893179;  // std dev = 0.171, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08890270142372723;  // std dev = 1.83e-07, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22598936258753977;  // std dev = 0.603, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10915693727277014;  // std dev = 0.118, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08195998280228088;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18917661454938023;  // std dev = 0.033, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.099659161584567;  // std dev = 0.017, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07600062364090945;  // std dev = 1.83e-07, 451.000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16202306445323766;  // std dev = 0.478, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return -0.08893948269774374;  // std dev = 0.111, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07083254045976604;  // std dev = 2.06e-07, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12894807260867583;  // std dev = 1.65e-07, 214.000 (wgt'ed) examples reached here.  /* #pos=214 */
%   | else if ( movie(E, B) )
%   | | then return -0.08552593175180265;  // std dev = 0.066, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.044552015990393205;  // std dev = 1.723, 568.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067382
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.173 seconds
Total inference time: 1.837 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.465 seconds
Parameter learned model CLL: -0.068913


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 260], 'true,false,true': [6.45e-09, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.95e-07, 447, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 260], 'true,false,true,true': [0.0, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 479, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.662, 35, 214], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.333, 498, 46]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.791, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.179, 45, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.87e-07, 465, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.754, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 474, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.68, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.171, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-07, 462, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.603, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.118, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 493, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 260], 'true,true,false': [0.017, 43, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-07, 451, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.478, 0, 260], 'true,true,true,false': [0.111, 45, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.06e-07, 466, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.65e-07, 0, 214], 'true,false,true': [0.066, 39, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.723, 522, 46], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10905916629822769, 1.9472368038168294e-16], 'true': [4.372570681600617e-15, 3.900783600034334e-17], 'true,false': [3.900783600034334e-17, nan]}, {'': [0.08249355255152949, -1.2423372467621793e-16], 'true': [-4.481884948640632e-15, -2.4980018054066023e-17], 'true,false': [-2.4980018054066023e-17, nan], 'true,false,true': [-2.4980018054066023e-17, nan]}, {'': [0.053854688744243526, 0.03450879318505829], 'true': [0.053854688744243526, nan], 'true,true': [0.053854688744243526, nan], 'true,true,true': [0.053854688744243526, nan]}, {'': [0.049627725046995794, 1.7763568394002506e-16], 'true': [0.049627725046995794, nan], 'true,true': [0.002408831875438339, 0.0007112603353479161], 'true,true,true': [0.002408831875438339, nan], 'true,true,false': [0.0007112603353479161, nan]}, {'': [0.029285890041718162, -5.62138240316535e-17], 'true': [0.002188611110504532, 0.0006533791524706567], 'true,true': [0.002188611110504532, nan], 'true,true,true': [0.002188611110504532, nan], 'true,false': [0.0006533791524706567, nan]}, {'': [0.023480910049989517, 7.209240419643874e-17], 'true': [0.0017767452522261735, 0.000543066424766639], 'true,true': [0.0017767452522261735, nan], 'true,false': [0.000543066424766639, nan]}, {'': [0.014238363456262964, -1.2160657876218752e-16], 'true': [0.0013992418235665046, 0.00034601740007525055], 'true,true': [0.0013992418235665046, nan], 'true,false': [0.00034601740007525055, nan]}, {'': [0.011144872985902068, 7.385075551830309e-17], 'true': [0.011144872985902068, nan], 'true,true': [0.001103260178093573, 0.00027484433226703577]}, {'': [0.008712616959051242, 9.148618915366097e-17], 'true': [0.008712616959051242, nan], 'true,true': [0.008712616959051242, nan], 'true,true,true': [0.0008804949266271674, 0.00027513326672978664]}, {'': [0.006014802514468648, 0.005227369080806316], 'true': [1.2658617663950382e-16, 0.00011077507653870159], 'false': [0.005227369080806316, nan], 'false,true': [0.005227369080806316, nan], 'true,false': [0.00011077507653870586, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048718;  // std dev = 2.98e-07, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.12544463852839227;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.11231637819360642;  // std dev = 0.000, 429.000 (wgt'ed) examples reached here.  /* #neg=429 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878357;  // std dev = 2.83e-07, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.33e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.092691276189261;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926098;  // std dev = 1.33e-07, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.08518475138839679;  // std dev = 1.33e-07, 449.000 (wgt'ed) examples reached here.  /* #neg=449 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109154;  // std dev = 2.21e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13726924627799827;  // std dev = 0.092, 132.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=111 */
%   | | else return 0.14236687136258;  // std dev = 0.087, 173.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=149 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333759;  // std dev = 0.000, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15758170747258582;  // std dev = 0.005, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.08334855349799779;  // std dev = 0.001, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420342;  // std dev = 0.000, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1377150134837274;  // std dev = 0.004, 214.000 (wgt'ed) examples reached here.  /* #pos=214 */
%   | else return -0.07392375487794366;  // std dev = 0.037, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1381197678649597;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.07699170727719971;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06209863109407197;  // std dev = 0.494, 509.000 (wgt'ed) examples reached here.  /* #neg=503 #pos=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.799 seconds
Total inference time: 1.46 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.335 seconds
Refined model CLL: -0.065464


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.771999999999998 seconds
Total inference time: 1.46 seconds
AUC ROC: 1.0
Total revision time: 13.771999999999998
Best scored revision CLL: -0.065464


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:20:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064001, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.771999999999998, 'Inference time': 1.46, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067382, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.173, 'Inference time': 1.837}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 8.12e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048868;  // std dev = 0.000, 641.000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.483908744177465;  // std dev = 3.569, 299.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=267 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0561205349960981;  // std dev = 4.908, 701.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4592734030231183;  // std dev = 0.933, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1536672369605698;  // std dev = 0.218, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10684163268802918;  // std dev = 0.000, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3503295583454611;  // std dev = 0.888, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13363702007505754;  // std dev = 0.026, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0970660377249436;  // std dev = 2.86e-07, 546.000 (wgt'ed) examples reached here.  /* #neg=546 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27601335198361404;  // std dev = 0.800, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12038892493484406;  // std dev = 0.146, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08888514706683917;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22482762215639843;  // std dev = 0.710, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1095517936539792;  // std dev = 0.147, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08194499663415153;  // std dev = 1.95e-07, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18836308613835184;  // std dev = 0.035, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.09465093153282116;  // std dev = 0.020, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07598768916037571;  // std dev = 1.46e-07, 558.000 (wgt'ed) examples reached here.  /* #neg=558 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16143177877247483;  // std dev = 0.564, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return -0.08960668144877713;  // std dev = 0.126, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07082126927389984;  // std dev = 2.10e-07, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12766433034721575;  // std dev = 1.71e-07, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( movie(E, B) )
%   | | then return -0.0846280447810404;  // std dev = 0.073, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04035667139911288;  // std dev = 1.948, 618.000 (wgt'ed) examples reached here.  /* #neg=559 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.195 seconds
Total inference time: 1.784 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069229
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.303 seconds
Parameter learned model CLL: -0.069229


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.77e-08, 0, 326], 'true,false,true': [8.12e-09, 61, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 641, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 326], 'true,false,true,true': [0.0, 50, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 626, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.569, 32, 267], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.908, 642, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.933, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.218, 61, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 573, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.888, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 60, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.86e-07, 546, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.8, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.146, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 622, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.71, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.147, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.95e-07, 607, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 326], 'true,true,false': [0.02, 62, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 558, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.564, 0, 326], 'true,true,true,false': [0.126, 52, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.1e-07, 609, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.71e-07, 0, 267], 'true,false,true': [0.073, 37, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.948, 559, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13277781116252677, -4.073704452290746e-16], 'true': [3.400143152717044e-15, 6.188128333976282e-17], 'true,false': [6.188128333976282e-17, nan]}, {'': [0.08230781853484344, -2.4119861237862824e-16], 'true': [-5.056623150194578e-15, -3.3306690738754695e-17], 'true,false': [-3.3306690738754695e-17, nan], 'true,false,true': [-3.3306690738754695e-17, nan]}, {'': [0.04260487149619816, 0.03436302598135314], 'true': [0.04260487149619816, nan], 'true,true': [0.04260487149619816, nan], 'true,true,true': [0.04260487149619816, nan]}, {'': [0.052255434656102544, -1.426045630234058e-16], 'true': [0.052255434656102544, nan], 'true,true': [0.002669146655996538, 0.0007796043432848743], 'true,true,true': [0.002669146655996538, nan], 'true,true,false': [0.0007796043432848743, nan]}, {'': [0.03289173550177981, 1.4965643701906873e-16], 'true': [0.0024176777786764202, 0.0006516211950263306], 'true,true': [0.0024176777786764202, nan], 'true,true,true': [0.0024176777786764202, nan], 'true,false': [0.0006516211950263306, nan]}, {'': [0.01796924985131375, -1.699248101998632e-16], 'true': [0.0019627532309749057, 0.0004971610272416061], 'true,true': [0.0019627532309749057, nan], 'true,false': [0.0004971610272416061, nan]}, {'': [0.015537078031715671, 6.291873483872386e-17], 'true': [0.0015472350979158485, 0.00037963854503316564], 'true,true': [0.0015472350979158485, nan], 'true,false': [0.00037963854503316564, nan]}, {'': [0.011844514105706602, 3.820122235269356e-17], 'true': [0.011844514105706602, nan], 'true,true': [0.0012213277546540779, 0.0004039737479699352]}, {'': [0.008360052429623552, 7.219184199533037e-17], 'true': [0.008360052429623552, nan], 'true,true': [0.008360052429623552, nan], 'true,true,true': [0.0009757420004038868, 0.00030315050176472474]}, {'': [0.0048349400424448135, 0.006139002202219468], 'false': [0.006139002202219468, nan], 'false,true': [0.006139002202219468, nan], 'true': [1.0977486086181323e-16, 0.00014211663794951447], 'true,false': [0.00014211663794951897, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.1418510649004882;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.12544463852839233;  // std dev = 0.000, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360567;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783621;  // std dev = 3.80e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783513;  // std dev = 4.29e-07, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926135;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109194;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527764;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.14285150254834456;  // std dev = 0.086, 212.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333689;  // std dev = 1.67e-07, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.11761672532706761;  // std dev = 0.081, 170.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=143 */
%   | | else return 0.11950220891378276;  // std dev = 0.088, 217.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420358;  // std dev = 0.000, 559.000 (wgt'ed) examples reached here.  /* #neg=559 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.14064713919954736;  // std dev = 0.030, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.07879638681030743;  // std dev = 0.084, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13886288235485125;  // std dev = 0.012, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.08397761754931493;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06419184008202547;  // std dev = 2.44e-07, 589.000 (wgt'ed) examples reached here.  /* #neg=589 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06417
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.596 seconds
Total inference time: 1.526 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066127
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.658 seconds
Refined model CLL: -0.066127


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06417
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.752 seconds
Total inference time: 1.526 seconds
AUC ROC: 1.0
Total revision time: 15.752
Best scored revision CLL: -0.066127


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:20:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06417, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.752, 'Inference time': 1.526, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067645, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.195, 'Inference time': 1.784}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4629180469853757;  // std dev = 1.859, 65.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06888985364467035;  // std dev = 1.826, 123.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45667233682369485;  // std dev = 0.350, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16737066596869482;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10562920462995834;  // std dev = 7.60e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34821953077807505;  // std dev = 0.334, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13624234626053475;  // std dev = 0.020, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09605784905672744;  // std dev = 4.71e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2743833310602507;  // std dev = 0.302, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11583794282587148;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08803456154190074;  // std dev = 5.48e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22356743074906088;  // std dev = 0.269, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1092778586807006;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08121835893617478;  // std dev = 3.94e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18737248186536906;  // std dev = 0.030, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.09649473405989273;  // std dev = 0.017, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07536016103704293;  // std dev = 2.58e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16063740741386062;  // std dev = 0.215, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.09047453404248895;  // std dev = 0.059, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.070274152880545;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1310857319534247;  // std dev = 4.94e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, B) )
%   | | then return -0.08553142598264452;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.048579031949119;  // std dev = 0.739, 126.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066934
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.345 seconds
Total inference time: 1.866 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068054
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.869 seconds
Parameter learned model CLL: -0.068054


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 64], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [8.43e-08, 0, 64], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 111, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.859, 9, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.826, 115, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.35, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 131, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.334, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.02, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.302, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.072, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.48e-08, 110, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.269, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.041, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 114, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.03, 0, 64], 'true,true,false': [0.017, 13, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.215, 0, 64], 'true,true,true,false': [0.059, 17, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [4.94e-08, 0, 56], 'true,false,true': [0.031, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.739, 118, 8], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.15382150296426775, 5.947623346206196e-17], 'true': [-8.881784197001252e-16, -1.4802973661668754e-17], 'true,false': [-1.4802973661668754e-17, nan]}, {'': [0.06344399079238257, -8.001607384685813e-18], 'true': [1.1102230246251565e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.053179496342838535, 0.027109281119490545], 'true': [0.053179496342838535, nan], 'true,true': [0.053179496342838535, nan], 'true,true,true': [0.053179496342838535, nan]}, {'': [0.06383688870906154, 4.406992158817415e-17], 'true': [0.06383688870906154, nan], 'true,true': [0.0019101770194984713, -1.0408340855860843e-17], 'true,true,true': [0.0019101770194984713, nan], 'true,true,false': [-1.0408340855860843e-17, nan]}, {'': [0.03274173755438102, 2.000401846171453e-17], 'true': [0.0017450565158906028, 0.00041247687227516605], 'true,true': [0.0017450565158906028, nan], 'true,true,true': [0.0017450565158906028, nan], 'true,false': [0.00041247687227516605, nan]}, {'': [0.0203457642015894, 2.7250928786253842e-17], 'true': [0.0014274557797842868, 0.0004766006124689783], 'true,true': [0.0014274557797842868, nan], 'true,false': [0.0004766006124689783, nan]}, {'': [0.009741022234046007, 1.3634317846273851e-17], 'true': [0.0011323137025054941, 0.00027720159166021396], 'true,true': [0.0011323137025054941, nan], 'true,false': [0.00027720159166021396, nan]}, {'': [0.012104319401751681, 6.1679056923619804e-18], 'true': [0.012104319401751681, nan], 'true,true': [0.0008983382216056074, 0.00029614672758907157]}, {'': [0.011069378758195816, -1.850371707708594e-17], 'true': [0.011069378758195816, nan], 'true,true': [0.011069378758195816, nan], 'true,true,true': [0.0007206516563183843, 0.0002063140709492072]}, {'': [0.006832972938383177, 0.004336703684080761], 'true': [4.3615904538845435e-17, 7.771506815947363e-05], 'false': [0.004336703684080761, nan], 'false,true': [0.004336703684080761, nan], 'true,false': [7.771506815947478e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048766;  // std dev = 8.43e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1254446385283913;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360622;  // std dev = 7.45e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.09269127618926097;  // std dev = 4.71e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08518475138839683;  // std dev = 4.83e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.07877675473109165;  // std dev = 5.05e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.12202568643563286;  // std dev = 0.076, 36.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4.94e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13593831457962893;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06833694155060105;  // std dev = 0.020, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then return 0.09348423200279991;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063857
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.809 seconds
Total inference time: 1.54 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06506
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.463 seconds
Refined model CLL: -0.06506


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063857
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.486000000000001 seconds
Total inference time: 1.54 seconds
AUC ROC: 1.0
Total revision time: 7.486000000000001
Best scored revision CLL: -0.06506


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:20:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063857, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.486000000000001, 'Inference time': 1.54, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066934, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.345, 'Inference time': 1.866}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4824262972990688;  // std dev = 2.272, 119.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=106 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.057859978393544106;  // std dev = 3.069, 282.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4592882837622361;  // std dev = 0.584, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1522669345319137;  // std dev = 0.161, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10667575717599657;  // std dev = 1.26e-07, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35032818452054665;  // std dev = 0.556, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12134359461438254;  // std dev = 0.028, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09692821100842561;  // std dev = 1.28e-07, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2760054191365312;  // std dev = 0.501, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11376571312592337;  // std dev = 0.119, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08876894278465694;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2248178859751908;  // std dev = 0.445, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10070989353767193;  // std dev = 0.110, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08184578260020459;  // std dev = 7.15e-08, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18835342041763917;  // std dev = 0.035, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.0972658963509291;  // std dev = 0.020, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07590205027114295;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1614228286826177;  // std dev = 0.353, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.09066240113167447;  // std dev = 0.075, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07074663704804995;  // std dev = 6.32e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12783205540672288;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( movie(E, B) )
%   | | then return -0.08583818322051182;  // std dev = 0.062, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.040219636302955594;  // std dev = 1.217, 238.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06801
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.001 seconds
Total inference time: 1.781 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069274
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.609 seconds
Parameter learned model CLL: -0.069274


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 129], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 240, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 129], 'true,false,true,true': [0.0, 17, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 225, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.272, 13, 106], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.069, 259, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.584, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.161, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.26e-07, 255, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.556, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.028, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.28e-07, 216, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.501, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.119, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 263, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.445, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.11, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.15e-08, 255, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 129], 'true,true,false': [0.02, 24, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 226, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.353, 0, 129], 'true,true,true,false': [0.075, 17, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 231, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 106], 'true,false,true': [0.062, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.217, 215, 23], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10745522698875926, -1.9984014443252818e-16], 'true': [4.40646657835721e-15, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.07344497662957833, -5.5264435003563346e-17], 'true': [-1.7625866313428842e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04338061368564688, 0.03339410283081355], 'true': [0.04338061368564688, nan], 'true,true': [0.04338061368564688, nan], 'true,true,true': [0.04338061368564688, nan]}, {'': [0.06183804016591575, 6.269494727295002e-17], 'true': [0.06183804016591575, nan], 'true,true': [0.002640587354900358, 0.0008133477858386189], 'true,true,true': [0.002640587354900358, nan], 'true,true,false': [0.0008133477858386189, nan]}, {'': [0.026104749505091635, 7.607083687246443e-17], 'true': [0.0023935093106930688, 0.0008027840073421493], 'true,true': [0.0023935093106930688, nan], 'true,true,true': [0.0023935093106930688, nan], 'true,false': [0.0008027840073421493, nan]}, {'': [0.020664092532058587, -6.078787663346865e-17], 'true': [0.0019441131675780622, 0.0006439721719037592], 'true,true': [0.0019441131675780622, nan], 'true,false': [0.0006439721719037592, nan]}, {'': [0.01457977664954783, 2.0027552601081255e-17], 'true': [0.0015330998616945842, 0.0005515050525784922], 'true,true': [0.0015330998616945842, nan], 'true,false': [0.0005515050525784922, nan]}, {'': [0.0118757622211174, 0.0], 'true': [0.0118757622211174, nan], 'true,true': [0.0012104985909338717, 0.0004197709630052703]}, {'': [0.007431276381512789, 1.7302177007145296e-17], 'true': [0.007431276381512789, nan], 'true,true': [0.007431276381512789, nan], 'true,true,true': [0.0009672920346954479, 0.000333851373630905]}, {'': [0.0067186868340812856, 0.006226942461157686], 'true': [-6.28428127146315e-18, 0.00016813232647438334], 'false': [0.006226942461157686, nan], 'false,true': [0.006226942461157686, nan], 'true,false': [0.00016813232647438454, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.14185106490048846;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839166;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360678;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.35761628642990895;  // std dev = 0.166, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3277651655158978;  // std dev = 0.075, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11400528386241303;  // std dev = 0.114, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.09269127618926055;  // std dev = 6.66e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25999104056166794;  // std dev = 0.065, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09873463110541239;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08518475138839678;  // std dev = 7.74e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21316291900873893;  // std dev = 0.057, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.0937592253054725;  // std dev = 0.083, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07877675473109148;  // std dev = 7.88e-08, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17959445536333726;  // std dev = 0.050, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.09311278867718883;  // std dev = 0.082, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333671;  // std dev = 1.16e-07, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15827509061952744;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else return -0.09782682004250498;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.11224616763087082;  // std dev = 0.082, 73.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.99e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13745719846334586;  // std dev = 0.008, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.07631595858098966;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13795299703092248;  // std dev = 0.003, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.07424479260697436;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064014
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.513 seconds
Total inference time: 1.516 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065526
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.662 seconds
Refined model CLL: -0.065526


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064014
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.785 seconds
Total inference time: 1.516 seconds
AUC ROC: 1.0
Total revision time: 9.785
Best scored revision CLL: -0.065526


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:21:04
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064014, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.785, 'Inference time': 1.516, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06801, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.001, 'Inference time': 1.781}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.27e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1.95e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48488880628040554;  // std dev = 2.752, 180.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=161 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05667614361528223;  // std dev = 3.672, 396.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45763689734942636;  // std dev = 0.704, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1499907242290869;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10678862448371337;  // std dev = 2.65e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3491526495894399;  // std dev = 0.670, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14769121341202388;  // std dev = 0.012, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09702199662248416;  // std dev = 1.59e-07, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2751845407449269;  // std dev = 0.604, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11712596534388335;  // std dev = 0.147, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08884801783484761;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22423072878025022;  // std dev = 0.537, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10672000167985408;  // std dev = 0.111, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08191329802839359;  // std dev = 1.25e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18791926322501748;  // std dev = 0.034, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.0900378273607997;  // std dev = 0.021, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07596032924759404;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16109145845987938;  // std dev = 0.427, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.08758840870392559;  // std dev = 0.103, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07079742689793303;  // std dev = 2.11e-08, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12811528424406432;  // std dev = 1.52e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   | else if ( movie(E, B) )
%   | | then return -0.08066960787820442;  // std dev = 0.075, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04311132276711686;  // std dev = 1.471, 386.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067825
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.823 seconds
Total inference time: 1.798 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068996
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.305 seconds
Parameter learned model CLL: -0.068996


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 194], 'true,false,true': [5.27e-09, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.95e-07, 345, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 194], 'true,false,true,true': [1.49e-08, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 366, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.752, 19, 161], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.672, 363, 33]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.704, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.157, 28, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.65e-07, 354, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.67, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.012, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.59e-07, 346, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.604, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.147, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 350, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.537, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.111, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.25e-07, 344, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 194], 'true,true,false': [0.021, 25, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 320, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.427, 0, 194], 'true,true,true,false': [0.103, 31, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 342, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.52e-07, 0, 161], 'true,false,true': [0.075, 33, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.471, 353, 33], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12154436525961876, 1.1070049868726199e-16], 'true': [6.15315358802561e-15, 2.7755575615628914e-17], 'true,false': [2.7755575615628914e-17, nan]}, {'': [0.09243319958884037, -1.1648241569837709e-16], 'true': [-3.516087764586063e-15, 6.3441315692866086e-18], 'true,false': [6.3441315692866086e-18, nan], 'true,false,true': [6.3441315692866086e-18, nan]}, {'': [0.04208960630366793, 0.034054192743240855], 'true': [0.04208960630366793, nan], 'true,true': [0.04208960630366793, nan], 'true,true,true': [0.04208960630366793, nan]}, {'': [0.04303927830957058, 1.982093083511579e-16], 'true': [0.04303927830957058, nan], 'true,true': [0.0025563373294236157, 0.0008840943579832918], 'true,true,true': [0.0025563373294236157, nan], 'true,true,false': [0.0008840943579832918, nan]}, {'': [0.024677019166738215, 7.315920509090627e-17], 'true': [0.002316950655309349, 0.00014086369700906526], 'true,true': [0.002316950655309349, nan], 'true,true,true': [0.002316950655309349, nan], 'true,false': [0.00014086369700906526, nan]}, {'': [0.023466055423820385, -5.075305255429287e-17], 'true': [0.0018835119036843706, 0.0005428383409000953], 'true,true': [0.0018835119036843706, nan], 'true,false': [0.0005428383409000953, nan]}, {'': [0.013740501452846004, 4.5183495188233115e-17], 'true': [0.0014868461471442091, 0.0004284458233201453], 'true,true': [0.0014868461471442091, nan], 'true,false': [0.0004284458233201453, nan]}, {'': [0.008904494774492656, -3.469446951953614e-17], 'true': [0.008904494774492656, nan], 'true,true': [0.0011751170959781274, 0.00044397251800838976]}, {'': [0.008203513453428698, 1.2985064615498906e-18], 'true': [0.008203513453428698, nan], 'true,true': [0.008203513453428698, nan], 'true,true,true': [0.0009398121972628404, 0.0003389569469534731]}, {'': [0.006183028858474524, 0.005601997815112005], 'true': [1.4343253982734942e-16, 0.00017257016028318975], 'false': [0.005601997815112005, nan], 'false,true': [0.005601997815112005, nan], 'true,false': [0.00017257016028318723, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048752;  // std dev = 2.46e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.12544463852839213;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360679;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783645;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.092691276189261;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.09269127618926053;  // std dev = 1.76e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.08518475138839678;  // std dev = 1.05e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07877675473109148;  // std dev = 4.71e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527758;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333702;  // std dev = 8.69e-08, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367125;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1527438580936713;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420308;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080108;  // std dev = 9.42e-08, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   | else return -0.0641918400820262;  // std dev = 3.73e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.064191840082026;  // std dev = 1.14e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.99 seconds
Total inference time: 1.421 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.101 seconds
Refined model CLL: -0.064221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.219000000000001 seconds
Total inference time: 1.421 seconds
AUC ROC: 1.0
Total revision time: 12.219000000000001
Best scored revision CLL: -0.064221


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:21:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.219000000000001, 'Inference time': 1.421, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067825, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.823, 'Inference time': 1.798}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.72e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048727;  // std dev = 2.73e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4668783528385863;  // std dev = 3.572, 249.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=216 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06150157988844696;  // std dev = 4.208, 565.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=43 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4609796009595192;  // std dev = 0.786, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14847253389802684;  // std dev = 0.176, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10632922370754015;  // std dev = 1.26e-07, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.351391365171693;  // std dev = 0.750, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12796038694080678;  // std dev = 0.027, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0966401662079124;  // std dev = 1.30e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2766618797332468;  // std dev = 0.676, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11786450723258432;  // std dev = 0.157, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08852600822146836;  // std dev = 9.66e-08, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2252356874401706;  // std dev = 0.601, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10658673682452928;  // std dev = 0.127, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08163830942273353;  // std dev = 0.000, 501.000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18863015282782275;  // std dev = 0.033, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.0973281652141532;  // std dev = 0.019, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07572292120504273;  // std dev = 1.69e-07, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16161312696096938;  // std dev = 0.477, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return -0.08655522370956281;  // std dev = 0.132, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07059049682633314;  // std dev = 0.000, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12909183179185416;  // std dev = 1.38e-07, 216.000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | else if ( movie(E, B) )
%   | | then return -0.08629737304350969;  // std dev = 0.080, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04487282595842537;  // std dev = 1.679, 549.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067522
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.657 seconds
Total inference time: 1.651 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068688
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.424 seconds
Parameter learned model CLL: -0.068688


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 259], 'true,false,true': [6.72e-09, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.73e-07, 469, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 259], 'true,false,true,true': [0.0, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 458, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.572, 33, 216], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.208, 522, 43]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.786, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.176, 38, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.26e-07, 506, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.75, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.3e-07, 474, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.676, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.157, 47, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.66e-08, 463, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.601, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.127, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 501, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 259], 'true,true,false': [0.019, 43, 0], 'true,false': [0.0, 0, 0], 'false': [1.69e-07, 466, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.477, 0, 259], 'true,true,true,false': [0.132, 52, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 468, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.38e-07, 0, 216], 'true,false,true': [0.08, 52, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.679, 506, 43], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12211087233016515, 1.5907673188658958e-16], 'true': [4.499189523731908e-15, 4.6474452193611206e-17], 'true,false': [4.6474452193611206e-17, nan]}, {'': [0.08861277974983914, -1.299300308294943e-16], 'true': [-4.499189523731908e-15, -2.7755575615628914e-17], 'true,false': [-2.7755575615628914e-17, nan], 'true,false,true': [-2.7755575615628914e-17, nan]}, {'': [0.05125183195847373, 0.03134602384619731], 'true': [0.05125183195847373, nan], 'true,true': [0.05125183195847373, nan], 'true,true,true': [0.05125183195847373, nan]}, {'': [0.04362994419130272, 3.159527975217837e-17], 'true': [0.04362994419130272, nan], 'true,true': [0.002387707040689965, 0.0008197193509899383], 'true,true,true': [0.002387707040689965, nan], 'true,true,false': [0.0008197193509899383, nan]}, {'': [0.02339609327181359, 3.560208855338055e-17], 'true': [0.002171813221182625, 0.0007066736133848635], 'true,true': [0.002171813221182625, nan], 'true,true,true': [0.002171813221182625, nan], 'true,false': [0.0007066736133848635, nan]}, {'': [0.021810806141221013, 2.01422751767847e-17], 'true': [0.0017667688197339194, 0.0005223663287648604], 'true,true': [0.0017667688197339194, nan], 'true,false': [0.0005223663287648604, nan]}, {'': [0.013555558231831893, -2.836497947146108e-17], 'true': [0.0013942681812912077, 0.00042588157627725765], 'true,true': [0.0013942681812912077, nan], 'true,false': [0.00042588157627725765, nan]}, {'': [0.010979625761058752, 6.099079276910731e-17], 'true': [0.010979625761058752, nan], 'true,true': [0.0011013094140264953, 0.00035014831825465104]}, {'': [0.009364898459970867, -1.2051138814307254e-16], 'true': [0.009364898459970867, nan], 'true,true': [0.009364898459970867, nan], 'true,true,true': [0.0008802475031760634, 0.00033505009127592506]}, {'': [0.007278717613466773, 0.005136335123444448], 'true': [8.840664825718839e-17, 0.00012241292308345385], 'false': [0.005136335123444448, nan], 'false,true': [0.005136335123444448, nan], 'true,false': [0.0001224129230834517, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048718;  // std dev = 2.98e-07, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.1254446385283923;  // std dev = 0.000, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.11231637819360582;  // std dev = 0.000, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583094;  // std dev = 3.26e-07, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.41751358415830897;  // std dev = 4.34e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783545;  // std dev = 3.40e-07, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015033;  // std dev = 2.23e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.09269127618926079;  // std dev = 1.79e-07, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.255172242569488;  // std dev = 5.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839679;  // std dev = 1.38e-07, 447.000 (wgt'ed) examples reached here.  /* #neg=447 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 1.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109161;  // std dev = 2.00e-07, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527725;  // std dev = 1.69e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333763;  // std dev = 0.000, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367164;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15274385809367164;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420348;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 1.43e-07, 216.000 (wgt'ed) examples reached here.  /* #pos=216 */
%   | else return -0.06419184008202622;  // std dev = 7.45e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080116;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.06419184008202568;  // std dev = 1.98e-07, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.27 seconds
Total inference time: 1.533 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.42 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.770999999999999 seconds
Total inference time: 1.533 seconds
AUC ROC: 1.0
Total revision time: 13.770999999999999
Best scored revision CLL: -0.064223


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:21:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.770999999999999, 'Inference time': 1.533, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067522, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.657, 'Inference time': 1.651}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.90e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048832;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47551068479333897;  // std dev = 3.759, 301.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=265 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05253900932948921;  // std dev = 4.894, 659.000 (wgt'ed) examples reached here.  /* #neg=600 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46095242679300347;  // std dev = 0.912, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1504313149283516;  // std dev = 0.207, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10718388670500335;  // std dev = 7.88e-08, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3514459670773781;  // std dev = 0.868, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13055963745035082;  // std dev = 0.026, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09735031195839898;  // std dev = 0.000, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2767435244815232;  // std dev = 0.782, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1204474313125975;  // std dev = 0.156, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08912474718694348;  // std dev = 7.88e-08, 574.000 (wgt'ed) examples reached here.  /* #neg=574 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22531960267563944;  // std dev = 0.694, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10415379379226586;  // std dev = 0.156, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0821495080438978;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18870777667145325;  // std dev = 0.034, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.09850662104105876;  // std dev = 0.018, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07616417520038023;  // std dev = 1.40e-07, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16168234713814003;  // std dev = 0.550, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return -0.08400193417688977;  // std dev = 0.141, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07097503988539251;  // std dev = 3.65e-08, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12808646960817008;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( movie(E, B) )
%   | | then return -0.0858071620285581;  // std dev = 0.081, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0430050873202939;  // std dev = 1.949, 678.000 (wgt'ed) examples reached here.  /* #neg=619 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067966
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.007 seconds
Total inference time: 2.159 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06916
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.093 seconds
Parameter learned model CLL: -0.06916


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.87e-08, 0, 324], 'true,false,true': [7.9e-09, 52, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 593, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 324], 'true,false,true,true': [0.0, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 600, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.759, 36, 265], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.894, 600, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.912, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.207, 53, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 595, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.868, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 60, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 591, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.782, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.156, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 574, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.694, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.156, 52, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 608, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 324], 'true,true,false': [0.018, 54, 0], 'true,false': [0.0, 0, 0], 'false': [1.4e-07, 618, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.55, 0, 324], 'true,true,true,false': [0.141, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 606, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 265], 'true,false,true': [0.081, 49, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.949, 619, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11917157084654012, -2.606122175848597e-16], 'true': [3.333410365294297e-15, 5.551115123125783e-17], 'true,false': [5.551115123125783e-17, nan]}, {'': [0.07252058632405971, -2.279657943896988e-16], 'true': [-5.000115547941446e-15, -2.6433881538694202e-17], 'true,false': [-2.6433881538694202e-17, nan], 'true,false,true': [-2.6433881538694202e-17, nan]}, {'': [0.046941372133113335, 0.03633898808457633], 'true': [0.046941372133113335, nan], 'true,true': [0.046941372133113335, nan], 'true,true,true': [0.046941372133113335, nan]}, {'': [0.04747986123392765, 1.0449157878825003e-17], 'true': [0.04747986123392765, nan], 'true,true': [0.002565587671581787, 0.0008087956964037842], 'true,true,true': [0.002565587671581787, nan], 'true,true,false': [0.0008087956964037842, nan]}, {'': [0.03269728161279814, -4.80908789008528e-17], 'true': [0.0023244887266101622, 0.0006824295889732471], 'true,true': [0.0023244887266101622, nan], 'true,true,true': [0.0023244887266101622, nan], 'true,false': [0.0006824295889732471, nan]}, {'': [0.02023158900426778, 1.0831444142684454e-17], 'true': [0.0018856695951487868, 0.0004769296036149517], 'true,true': [0.0018856695951487868, nan], 'true,false': [0.0004769296036149517, nan]}, {'': [0.014280982754024693, -1.0225738384705389e-17], 'true': [0.0014850617857194539, 0.0004693044943148791], 'true,true': [0.0014850617857194539, nan], 'true,false': [0.0004693044943148791, nan]}, {'': [0.011152994961607226, 3.161800199579734e-17], 'true': [0.011152994961607226, nan], 'true,true': [0.0011712296283699075, 0.0003360638867213688]}, {'': [0.008340108094202917, 2.1984614349013e-18], 'true': [0.008340108094202917, nan], 'true,true': [0.008340108094202917, nan], 'true,true,true': [0.0009350264547622478, 0.00036148268556928807]}, {'': [0.006046442863626175, 0.005604292914322229], 'true': [-6.032910020604624e-17, 0.00013551438679239387], 'false': [0.005604292914322229, nan], 'false,true': [0.005604292914322229, nan], 'true,false': [0.000135514386792395, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048832;  // std dev = 0.000, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.1254446385283923;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360576;  // std dev = 0.000, 552.000 (wgt'ed) examples reached here.  /* #neg=552 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783515;  // std dev = 4.25e-07, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926153;  // std dev = 0.000, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109194;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527766;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.13517307514814117;  // std dev = 0.093, 209.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=174 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333699;  // std dev = 1.28e-07, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13386342087946254;  // std dev = 0.062, 164.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=150 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15824863440609352;  // std dev = 1.84e-07, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return -0.08296794358278145;  // std dev = 9.13e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420367;  // std dev = 0.000, 631.000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13749065239628952;  // std dev = 0.016, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.07454394262593042;  // std dev = 0.040, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13660045510412258;  // std dev = 0.006, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.07706956655686253;  // std dev = 0.001, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.06419184008202551;  // std dev = 2.38e-07, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064045
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.501 seconds
Total inference time: 1.446 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.637 seconds
Refined model CLL: -0.0653


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064045
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.238 seconds
Total inference time: 1.446 seconds
AUC ROC: 1.0
Total revision time: 15.238
Best scored revision CLL: -0.0653


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:21:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064045, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.238, 'Inference time': 1.446, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067966, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.007, 'Inference time': 2.159}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47772890012536656;  // std dev = 1.404, 43.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09660619431266768;  // std dev = 0.933, 85.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.44363530456476025;  // std dev = 0.197, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16944485340288465;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10303927059067713;  // std dev = 3.49e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33887898374126846;  // std dev = 0.189, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.146914166033909;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09389813846308506;  // std dev = 4.47e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26779137964089317;  // std dev = 0.172, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11900212572161857;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08620805410796537;  // std dev = 3.65e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2187990179756422;  // std dev = 0.154, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11661039115853745;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07965473827020991;  // std dev = 7.45e-09, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18380900868123307;  // std dev = 0.022, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.09435423189009366;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0740073352988911;  // std dev = 1.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15789128093310167;  // std dev = 0.124, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.09657330879357032;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06909277630116804;  // std dev = 2.58e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13398710636943748;  // std dev = 3.33e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( movie(E, B) )
%   | | then return -0.08846960602386972;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.057770858278361106;  // std dev = 0.391, 80.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.918 seconds
Total inference time: 1.736 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065399
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.014 seconds
Parameter learned model CLL: -0.065399


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [3.94e-08, 0, 40], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 40], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.404, 5, 38], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.933, 83, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.197, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [5.27e-09, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.49e-08, 61, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.189, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.47e-08, 83, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.172, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.047, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.65e-08, 72, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.154, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 72, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.022, 0, 40], 'true,true,false': [0.019, 4, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 69, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.124, 0, 40], 'true,true,true,false': [0.0, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 77, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [3.33e-08, 0, 38], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.391, 78, 2], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.023795359904820054, 7.216449660063518e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397557, -2.140188963132832e-17], 'true': [-8.881784197001252e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04580966190348929, 0.010242609919275544], 'true': [0.04580966190348929, nan], 'true,true': [0.04580966190348929, nan], 'true,true,true': [0.04580966190348929, nan]}, {'': [0.037980909125129615, 2.002041519815856e-17], 'true': [0.037980909125129615, nan], 'true,true': [0.0009654916442562112, 5.551115123125783e-18], 'true,true,true': [0.0009654916442562112, nan], 'true,true,false': [5.551115123125783e-18, nan]}, {'': [0.011549817842634006, 2.407712583524436e-17], 'true': [0.0008894523362662499, 0.0], 'true,true': [0.0008894523362662499, nan], 'true,true,true': [0.0008894523362662499, nan], 'true,false': [0.0, nan]}, {'': [0.015479999489720776, 1.850371707708594e-17], 'true': [0.0007372863719782186, 0.00043573483999947705], 'true,true': [0.0007372863719782186, nan], 'true,false': [0.00043573483999947705, nan]}, {'': [0.0056663487943805595, 7.709882115452476e-19], 'true': [0.000592548532397702, 0.0], 'true,true': [0.000592548532397702, nan], 'true,false': [0.0, nan]}, {'': [0.006858533714212144, 4.827056628805028e-18], 'true': [0.006858533714212144, nan], 'true,true': [0.0004755152622806402, 0.00034800150158011654]}, {'': [0.009314329834237812, 8.651088503572648e-18], 'true': [0.009314329834237812, nan], 'true,true': [0.009314329834237812, nan], 'true,true,true': [0.00038515789695810486, 0.0]}, {'': [0.003356048026964694, 0.0019154207256371347], 'true': [2.921639538487254e-17, 0.0], 'false': [0.0019154207256371347, nan], 'false,true': [0.0019154207256371347, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.34914842772580473;  // std dev = 0.178, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.335784466117189;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.1551194397814053;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.09250824395660344;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.26543243013405776;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.1351870035035444;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1.61e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839687;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518831750726256;  // std dev = 1.24e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.08518653444782973;  // std dev = 1.33e-05, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.2169798210991987;  // std dev = 3.73e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877670767721111;  // std dev = 3.31e-07, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07877673747798926;  // std dev = 2.41e-07, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(B) )
%   | | then return -0.07878986602576923;  // std dev = 2.11e-07, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07855313261695261;  // std dev = 0.000821, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1770964977452774;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.1823757247424487;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.12563812731369986;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324618494429777;  // std dev = 3.10e-07, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324619788582207;  // std dev = 2.58e-07, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.07297285824476311;  // std dev = 0.000717, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.11738162284948173;  // std dev = 0.090, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.1386291259825655;  // std dev = 0.067, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06842695097121824;  // std dev = 3.65e-07, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842695601222576;  // std dev = 2.25e-07, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.06846027316003916;  // std dev = 1.23e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1381641569180787;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.13927330752976008;  // std dev = 3.23e-09, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10262005990790517;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06419179286283919;  // std dev = 5.08e-07, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.06422592250675328;  // std dev = 1.16e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.051270897042631526;  // std dev = 0.216, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077747
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.108 seconds
Total inference time: 1.848 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.654 seconds
Refined model CLL: -0.065885


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.693999999999999 seconds
Total inference time: 1.736 seconds
AUC ROC: 1.0
Total revision time: 8.693999999999999
Best scored revision CLL: -0.065399


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:22:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069097, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.693999999999999, 'Inference time': 1.736, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069097, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.918, 'Inference time': 1.736}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004881;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839116;  // std dev = 6.99e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4990558378959316;  // std dev = 1.690, 83.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=76 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09290699403837681;  // std dev = 1.471, 172.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.440336641135009;  // std dev = 0.318, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17246745760398163;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10338166113029643;  // std dev = 6.66e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.336737528881087;  // std dev = 0.305, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1492231136326311;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09418412972214808;  // std dev = 3.65e-08, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2664098998587258;  // std dev = 0.277, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.13125240119690668;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08645026918421747;  // std dev = 9.19e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21787763776323857;  // std dev = 0.249, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11699673828799242;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07986234950133503;  // std dev = 6.14e-08, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18316941237739492;  // std dev = 0.025, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.09991309984011502;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07418715321441191;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.157430569578613;  // std dev = 0.201, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.09638152677774557;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06924995536310531;  // std dev = 2.98e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13254517845185387;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( movie(E, B) )
%   | | then return -0.08618139002058765;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05572356134625628;  // std dev = 0.619, 153.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.551 seconds
Total inference time: 1.962 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065759
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.434 seconds
Parameter learned model CLL: -0.065759


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.53e-07, 0, 81], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.99e-08, 140, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.69, 7, 76], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.471, 167, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.318, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [5.27e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 132, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.305, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.65e-08, 171, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.277, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.19e-08, 144, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.249, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.14e-08, 168, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.025, 0, 81], 'true,true,false': [0.015, 8, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 170, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.201, 0, 81], 'true,true,true,false': [3.73e-09, 7, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.98e-08, 165, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 76], 'true,false,true': [0.022, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.619, 148, 5], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.08180785254387087, -1.248093857748542e-16], 'true': [-7.894919286223335e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.052269324970010474, 3.489272363107635e-17], 'true': [7.894919286223335e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.03442673560846977, 0.012582588055728077], 'true': [0.03442673560846977, nan], 'true,true': [0.03442673560846977, nan], 'true,true,true': [0.03442673560846977, nan]}, {'': [0.031858809529333995, 3.364312195833808e-17], 'true': [0.031858809529333995, nan], 'true,true': [0.0012499551641516526, 3.469446951953614e-18], 'true,true,true': [0.0012499551641516526, nan], 'true,true,false': [3.469446951953614e-18, nan]}, {'': [0.016231426457033123, 7.791038769299344e-18], 'true': [0.0011470132343017788, 4.625929269271485e-18], 'true,true': [0.0011470132343017788, nan], 'true,true,true': [0.0011470132343017788, nan], 'true,false': [4.625929269271485e-18, nan]}, {'': [0.006361828031917506, 5.859510407743882e-17], 'true': [0.0009497618037567281, 2.3129646346357427e-18], 'true,true': [0.0009497618037567281, nan], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.006859666560181588, 2.2468799307890073e-17], 'true': [0.0007632860387803961, -2.7755575615628915e-18], 'true,true': [0.0007632860387803961, nan], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.007132594017946778, -3.657205257588751e-17], 'true': [0.007132594017946778, nan], 'true,true': [0.0006127118736472173, 0.00021390177849061644]}, {'': [0.005173721709234292, 5.382899513334092e-18], 'true': [0.005173721709234292, nan], 'true,true': [0.005173721709234292, nan], 'true,true,true': [0.0004964691232743201, 1.982541115402065e-18]}, {'': [0.00528981474985215, 0.002502021109194023], 'true': [-8.764918615461762e-18, 4.521547945782694e-05], 'false': [0.002502021109194023, nan], 'false,true': [0.002502021109194023, nan], 'true,false': [4.52154794578282e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048802;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839133;  // std dev = 4.21e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360636;  // std dev = 7.30e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783648;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926076;  // std dev = 7.15e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839679;  // std dev = 6.32e-08, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0787767547310915;  // std dev = 8.43e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333675;  // std dev = 1.00e-07, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13263741846295513;  // std dev = 0.064, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1527438580936709;  // std dev = 4.47e-08, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 6.58e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13484209497731528;  // std dev = 0.010, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return -0.06748922094061038;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else return 0.13541736195616966;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067989
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.136 seconds
Total inference time: 1.582 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063794
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.834 seconds
Refined model CLL: -0.063794


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067989
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.955 seconds
Total inference time: 1.582 seconds
AUC ROC: 1.0
Total revision time: 8.955
Best scored revision CLL: -0.063794


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:22:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067989, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.955, 'Inference time': 1.582, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069216, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.551, 'Inference time': 1.962}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5126347365901301;  // std dev = 1.827, 125.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=117 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09817055584318517;  // std dev = 1.477, 236.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43415063963828016;  // std dev = 0.332, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1744140989090566;  // std dev = 1.29e-08, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10289477864633656;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3323742093545074;  // std dev = 0.318, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13620613720873417;  // std dev = 0.026, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09377740378133137;  // std dev = 8.94e-08, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2633508488899595;  // std dev = 0.290, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.13055511085037347;  // std dev = 0.055, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08610576816416071;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21567125431505826;  // std dev = 0.260, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11964077595743004;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07956704156912238;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18152289178044173;  // std dev = 0.021, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10760160598887501;  // std dev = 1.86e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07393136072274939;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1561626836646987;  // std dev = 0.211, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return -0.09769707367282596;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06902635296018958;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13313846150433395;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else if ( movie(E, B) )
%   | | then return -0.08941687490306767;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.057590362319492126;  // std dev = 0.630, 202.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.999 seconds
Total inference time: 1.876 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.101 seconds
Parameter learned model CLL: -0.065433


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.14e-08, 0, 122], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 235, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 122], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 254, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.827, 8, 117], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.477, 231, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.332, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [1.29e-08, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.318, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.94e-08, 219, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.29, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.055, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 266, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.26, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 227, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.021, 0, 122], 'true,true,false': [1.86e-09, 14, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 230, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.211, 0, 122], 'true,true,true,false': [0.0, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 230, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 117], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.63, 197, 5], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.05775147928994478, -2.003125797621559e-16], 'true': [3.843919718046444e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.054159969457190836, -8.042560493347591e-17], 'true': [-1.3395477805313363e-15, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.02670522364919435, 0.009244818196599251], 'true': [0.02670522364919435, nan], 'true,true': [0.02670522364919435, nan], 'true,true,true': [0.02670522364919435, nan]}, {'': [0.028924872518483358, -8.279629336187608e-17], 'true': [0.028924872518483358, nan], 'true,true': [0.0009023156016994576, 1.5139404881252134e-17], 'true,true,true': [0.0009023156016994576, nan], 'true,true,false': [1.5139404881252134e-17, nan]}, {'': [0.019923903147640875, 3.650048300137501e-17], 'true': [0.0008287242058998793, 0.0007008130339914559], 'true,true': [0.0008287242058998793, nan], 'true,true,true': [0.0008287242058998793, nan], 'true,false': [0.0007008130339914559, nan]}, {'': [0.016534769116765893, -3.3390166154140044e-18], 'true': [0.0006889146040249634, 0.00018729075821126429], 'true,true': [0.0006889146040249634, nan], 'true,false': [0.00018729075821126429, nan]}, {'': [0.01028696798785856, -3.3257782235467244e-17], 'true': [0.0005561273559821618, -6.4051328343759035e-18], 'true,true': [0.0005561273559821618, nan], 'true,false': [-6.4051328343759035e-18, nan]}, {'': [0.008121452448289804, -2.9927751098591176e-17], 'true': [0.008121452448289804, nan], 'true,true': [0.0004482631885410268, 3.96508223080413e-18]}, {'': [0.005937620050405878, -4.7305154962289277e-17], 'true': [0.005937620050405878, nan], 'true,true': [0.005937620050405878, nan], 'true,true,true': [0.0003645239863653155, -2.135044278125301e-18]}, {'': [0.0022982798724247707, 0.0019639497589026876], 'true': [-3.7956342722227575e-17, -1.1564823173178713e-18], 'false': [0.0019639497589026876, nan], 'false,true': [0.0019639497589026876, nan], 'true,false': [-1.1564823173178713e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1418510649004885;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839177;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360671;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583093;  // std dev = 3.53e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2.19e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0930175358778519;  // std dev = 0.073, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08544938629881692;  // std dev = 0.068, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1.93e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07899129213830591;  // std dev = 0.064, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452781;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07319157084821286;  // std dev = 9.54e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367094;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.13192777941716544;  // std dev = 0.065, 85.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=77 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06888188507680476;  // std dev = 0.080, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1355673792926381;  // std dev = 0.013, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else return -0.07148317187992133;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B), actor(A) )
%   | then return -0.06411945116562254;  // std dev = 1.02e-07, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( actor(A) )
%   | | then return 0.13498068796161838;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.06411945116562288;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06898
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.217 seconds
Total inference time: 1.599 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064016
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.169 seconds
Refined model CLL: -0.064016


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06898
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.486 seconds
Total inference time: 1.599 seconds
AUC ROC: 1.0
Total revision time: 10.486
Best scored revision CLL: -0.064016


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:22:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06898, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.486, 'Inference time': 1.599, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069116, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.999, 'Inference time': 1.876}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1.98e-07, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839205;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4932564074495489;  // std dev = 2.543, 172.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=156 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09936962000917667;  // std dev = 1.749, 361.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4390067765590251;  // std dev = 0.381, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16672295094517506;  // std dev = 0.066, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10278414878914767;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3356834085142096;  // std dev = 0.365, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14921614088588248;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0936849460372596;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26559892269249535;  // std dev = 0.333, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.13124693366616144;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08602742551131119;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21724828618283448;  // std dev = 0.299, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11699234945163942;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07949986353722231;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18267144053870044;  // std dev = 0.021, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10543738122328583;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07387315491779256;  // std dev = 1.06e-07, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15702833795315155;  // std dev = 0.241, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.09083525394426317;  // std dev = 0.054, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06897545899106108;  // std dev = 9.31e-08, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13375987600815972;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( movie(E, B) )
%   | | then return -0.08615821933354954;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05826137309054507;  // std dev = 0.740, 311.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068976
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.363 seconds
Total inference time: 1.759 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065335
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.502 seconds
Parameter learned model CLL: -0.065335


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [8.02e-08, 0, 163], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.98e-07, 338, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 163], 'true,false,true,true': [7.45e-09, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 282, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.543, 16, 156], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.749, 354, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.381, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.066, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 309, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.365, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 311, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.333, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 306, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.299, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 291, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.021, 0, 163], 'true,true,false': [0.0, 16, 0], 'true,false': [0.0, 0, 0], 'false': [1.06e-07, 333, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.241, 0, 163], 'true,true,true,false': [0.054, 16, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-08, 324, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 156], 'true,false,true': [0.023, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.74, 304, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.039480968858137795, 1.1562085936924707e-16], 'true': [6.3643705166242106e-15, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.04883540547241815, -1.0393577251809976e-16], 'true': [-2.7898610483832155e-15, 4.270088556250602e-18], 'true,false': [4.270088556250602e-18, nan], 'true,false,true': [4.270088556250602e-18, nan]}, {'': [0.03761214345760356, 0.008476709401439925], 'true': [0.03761214345760356, nan], 'true,true': [0.03761214345760356, nan], 'true,true,true': [0.03761214345760356, nan]}, {'': [0.02756898356613676, -1.293463718009891e-16], 'true': [0.02756898356613676, nan], 'true,true': [0.0008888501132392295, 0.0003144746477805882], 'true,true,true': [0.0008888501132392295, nan], 'true,true,false': [0.0003144746477805882, nan]}, {'': [0.01577956360539667, -8.567637489068732e-17], 'true': [0.0008182156918779238, -9.25185853854297e-18], 'true,true': [0.0008182156918779238, nan], 'true,true,true': [0.0008182156918779238, nan], 'true,false': [-9.25185853854297e-18, nan]}, {'': [0.011402673750549304, -2.1769078914218755e-17], 'true': [0.0006795540040284896, -4.270088556250602e-18], 'true,true': [0.0006795540040284896, nan], 'true,false': [-4.270088556250602e-18, nan]}, {'': [0.010935598891073792, -6.791054927260408e-17], 'true': [0.0005475574831964994, 0.0], 'true,true': [0.0005475574831964994, nan], 'true,false': [0.0, nan]}, {'': [0.007157514630229132, 3.40068313849147e-17], 'true': [0.007157514630229132, nan], 'true,true': [0.00044050006722240123, 0.0]}, {'': [0.005342309382321191, 2.6727591333568582e-17], 'true': [0.005342309382321191, nan], 'true,true': [0.005342309382321191, nan], 'true,true,true': [0.00035757665154921797, 0.00017943211789281377]}, {'': [0.0029788572103530775, 0.0017620506535625119], 'true': [-4.839433697084016e-17, 4.615052866915502e-05], 'false': [0.0017620506535625119, nan], 'false,true': [0.0017620506535625119, nan], 'true,false': [4.615052866915502e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048804;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839205;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936069;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783662;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926044;  // std dev = 1.52e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.08538613461636287;  // std dev = 0.068, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07876214139301631;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07323354860653326;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367147;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06860789859343121;  // std dev = 0.057, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080108;  // std dev = 9.19e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.06418905884677276;  // std dev = 3.44e-05, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( director(B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.06417051727841637;  // std dev = 9.06e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06849
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.546 seconds
Total inference time: 1.47 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063668
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.62 seconds
Refined model CLL: -0.063668


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06849
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.030999999999999 seconds
Total inference time: 1.47 seconds
AUC ROC: 1.0
Total revision time: 13.030999999999999
Best scored revision CLL: -0.063668


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:22:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06849, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.030999999999999, 'Inference time': 1.47, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068976, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.363, 'Inference time': 1.759}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048732;  // std dev = 3.01e-07, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.504495365131815;  // std dev = 2.567, 210.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0960314314877555;  // std dev = 2.085, 410.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43723867795764804;  // std dev = 0.459, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1570560807148228;  // std dev = 0.107, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10309240354479972;  // std dev = 2.11e-07, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3345343721330791;  // std dev = 0.440, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.151889658718837;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09394252880157941;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.264855265048062;  // std dev = 0.401, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12144377510419001;  // std dev = 0.085, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08624565666194449;  // std dev = 1.86e-07, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2167504407693542;  // std dev = 0.360, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10984462057178054;  // std dev = 0.090, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07968697395256812;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.182324569270725;  // std dev = 0.023, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10880223610717128;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07403525945724974;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15677760337474844;  // std dev = 0.291, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return -0.09869257308476179;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06911718786920694;  // std dev = 1.55e-07, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13301051758733373;  // std dev = 1.65e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(E, B) )
%   | | then return -0.08661836050066687;  // std dev = 0.041, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.057892260690386124;  // std dev = 0.885, 414.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069304
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.817 seconds
Total inference time: 1.963 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065544
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.865 seconds
Parameter learned model CLL: -0.065544


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 204], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.01e-07, 401, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 204], 'true,false,true,true': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 401, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.567, 16, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.085, 400, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.459, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.107, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-07, 402, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.44, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 395, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.401, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.085, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.86e-07, 397, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.36, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.09, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 371, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.023, 0, 204], 'true,true,false': [0.0, 13, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 392, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.291, 0, 204], 'true,true,true,false': [0.0, 25, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.55e-07, 377, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.65e-07, 0, 194], 'true,false,true': [0.041, 21, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.885, 404, 10], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.07450693937180977, 2.259206952853186e-16], 'true': [5.712206307091002e-15, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.06500330913633937, -1.2846470908380865e-16], 'true': [-3.692035783851501e-15, -2.413528314402514e-18], 'true,false': [-2.413528314402514e-18, nan], 'true,false,true': [-2.413528314402514e-18, nan]}, {'': [0.03137787436735465, 0.010607979568495967], 'true': [0.03137787436735465, nan], 'true,true': [0.03137787436735465, nan], 'true,true,true': [0.03137787436735465, nan]}, {'': [0.020916353390895516, 1.1046995269902055e-16], 'true': [0.020916353390895516, nan], 'true,true': [0.0010349622936739575, 0.0008736235361131183], 'true,true,true': [0.0010349622936739575, nan], 'true,true,false': [0.0008736235361131183, nan]}, {'': [0.008508124191261793, -6.408375939608498e-17], 'true': [0.0009505039205166064, 7.93016446160826e-18], 'true,true': [0.0009505039205166064, nan], 'true,true,true': [0.0009505039205166064, nan], 'true,false': [7.93016446160826e-18, nan]}, {'': [0.009739423623578007, 8.725178430303497e-17], 'true': [0.0007888232496719558, 0.0005188912295886373], 'true,true': [0.0007888232496719558, nan], 'true,false': [0.0005188912295886373, nan]}, {'': [0.009288293206507323, -3.4713172737605974e-17], 'true': [0.0006355013832919756, 0.00040603696913671383], 'true,true': [0.0006355013832919756, nan], 'true,false': [0.00040603696913671383, nan]}, {'': [0.005253943885332057, -8.496604780294565e-17], 'true': [0.005253943885332057, nan], 'true,true': [0.0005112765301685437, 0.0]}, {'': [0.006716927435304012, 6.360959504483656e-17], 'true': [0.006716927435304012, nan], 'true,true': [0.006716927435304012, nan], 'true,true,true': [0.0004150790998262683, -4.440892098500626e-18]}, {'': [0.00425906129412348, 0.0018925793280769165], 'true': [1.3963629794254546e-16, 7.933676575887822e-05], 'false': [0.0018925793280769165, nan], 'false,true': [0.0018925793280769165, nan], 'true,false': [7.933676575887822e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048735;  // std dev = 3.01e-07, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839224;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360622;  // std dev = 0.000, 432.000 (wgt'ed) examples reached here.  /* #neg=432 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.4175135841583093;  // std dev = 3.58e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | | else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 1.35e-07, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.26e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926076;  // std dev = 1.66e-07, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948995;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07877675473109146;  // std dev = 8.16e-08, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527775;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420335;  // std dev = 0.000, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 8.69e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202619;  // std dev = 6.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( actor(B) )
%   | then return -0.06419184008202568;  // std dev = 1.75e-07, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09436725599000378;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066579
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.928 seconds
Total inference time: 1.65 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063595
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.243 seconds
Refined model CLL: -0.063595


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066579
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.853 seconds
Total inference time: 1.65 seconds
AUC ROC: 1.0
Total revision time: 12.853
Best scored revision CLL: -0.063595


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:23:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066579, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.853, 'Inference time': 1.65, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069304, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.817, 'Inference time': 1.963}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.16e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.49780757338939663;  // std dev = 1.427, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044086017542814535;  // std dev = 2.367, 137.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4597103649344987;  // std dev = 0.448, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16514561008472578;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10799549006322583;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35076602889584974;  // std dev = 0.425, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13248502404731077;  // std dev = 0.026, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09802385451164622;  // std dev = 1.49e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2763915056923756;  // std dev = 0.382, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11845923116350074;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08969202933804442;  // std dev = 4.34e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22514099021098813;  // std dev = 0.339, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11137130409217774;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08263340926552562;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1886209137429495;  // std dev = 0.037, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10085095170100207;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0765815358647026;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16164525860069676;  // std dev = 0.268, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.08182042331481329;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07133850718619764;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1259002048852036;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( movie(E, B) )
%   | | then return -0.08808482000690424;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04124842262946113;  // std dev = 0.943, 146.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068974
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.298 seconds
Total inference time: 1.779 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06935
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.946 seconds
Parameter learned model CLL: -0.06935


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 122, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.427, 5, 53], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.367, 123, 14]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.448, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.061, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.425, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 127, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.382, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.074, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.34e-08, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.339, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.059, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.037, 0, 67], 'true,true,false': [0.017, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.268, 0, 67], 'true,true,true,false': [0.071, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.98e-08, 0, 53], 'true,false,true': [0.033, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.943, 132, 14], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1043975069252067, 5.792467954566034e-17], 'true': [-9.544603913195376e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan]}, {'': [0.08647836286765904, -3.640075490574284e-18], 'true': [3.1815346377317917e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.03511804115993018, 0.04090085714914713], 'true': [0.03511804115993018, nan], 'true,true': [0.03511804115993018, nan], 'true,true,true': [0.03511804115993018, nan]}, {'': [0.04345180260368065, -4.8348422040127785e-17], 'true': [0.04345180260368065, nan], 'true,true': [0.002996863415807685, 0.0004082670273089876], 'true,true,true': [0.002996863415807685, nan], 'true,true,false': [0.0004082670273089876, nan]}, {'': [0.03415425263777764, 1.7483827159451284e-18], 'true': [0.002698451501399084, 0.000689913947712869], 'true,true': [0.002698451501399084, nan], 'true,true,true': [0.002698451501399084, nan], 'true,false': [0.000689913947712869, nan]}, {'': [0.01958775533820362, 1.6270509843644534e-17], 'true': [0.0021808578375711977, 0.0005545400923490151], 'true,true': [0.0021808578375711977, nan], 'true,false': [0.0005545400923490151, nan]}, {'': [0.014332895139722456, -2.2013042729636725e-17], 'true': [0.0017133325183162607, 0.00035000207261036697], 'true,true': [0.0017133325183162607, nan], 'true,false': [0.00035000207261036697, nan]}, {'': [0.010680685288088939, -2.8443730382958554e-17], 'true': [0.010680685288088939, nan], 'true,true': [0.0013489156890068295, 0.00029191330062375287]}, {'': [0.009030040309959127, -1.7578531223231644e-17], 'true': [0.009030040309959127, nan], 'true,true': [0.009030040309959127, nan], 'true,true,true': [0.0010754744398974384, 0.0003833857232782588]}, {'': [0.0065347927145121085, 0.0060961165930478855], 'true': [1.67580833905684e-17, 0.00010110721125462796], 'false': [0.0060961165930478855, nan], 'false,true': [0.0060961165930478855, nan], 'true,false': [0.00010110721125462922, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1418510649004877;  // std dev = 5.96e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360624;  // std dev = 8.56e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415831014;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.35096103112675286;  // std dev = 0.174, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783666;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3281555476048592;  // std dev = 0.060, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11554516303187744;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.092691276189261;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26025963558683396;  // std dev = 0.052, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10132072833462909;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.08518475138839679;  // std dev = 4.59e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21335371521551402;  // std dev = 0.046, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10808734292077649;  // std dev = 0.050, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109162;  // std dev = 5.77e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14843399444455926;  // std dev = 0.076, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.18456519484323522;  // std dev = 2.58e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.10399489633454188;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15437317638021086;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.0788752744334069;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.1204239824660859;  // std dev = 0.090, 40.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5.05e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13993175404494554;  // std dev = 0.027, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else return -0.07796292327472197;  // std dev = 0.067, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(B), female(A) )
%   | then return 0.11923085394992655;  // std dev = 0.056, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.06159966268738486;  // std dev = 0.300, 112.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06616
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.07 seconds
Total inference time: 1.18 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066517
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.293 seconds
Refined model CLL: -0.066517


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06616
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.607 seconds
Total inference time: 1.18 seconds
AUC ROC: 1.0
Total revision time: 7.607
Best scored revision CLL: -0.066517


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:23:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06616, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.607, 'Inference time': 1.18, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068974, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.298, 'Inference time': 1.779}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45778202533199214;  // std dev = 2.689, 130.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=111 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.057471004109257935;  // std dev = 3.068, 280.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46340476645036716;  // std dev = 0.559, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14902575763922;  // std dev = 0.113, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10671283055645403;  // std dev = 1.46e-07, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35304459877404376;  // std dev = 0.533, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1278103172070733;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09695901836645388;  // std dev = 2.11e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27776866694694097;  // std dev = 0.481, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11898018421748968;  // std dev = 0.102, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08879491915591943;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22599781789478895;  // std dev = 0.427, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10933567457426199;  // std dev = 0.079, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08186796252235563;  // std dev = 0.000, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18917506065561637;  // std dev = 0.033, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.085620279690847;  // std dev = 0.020, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07592119655969892;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16201683628343208;  // std dev = 0.339, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.0882624174844122;  // std dev = 0.083, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07076332347722886;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12933941769610027;  // std dev = 9.06e-08, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else if ( movie(E, B) )
%   | | then return -0.08469680175638743;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.045756527090777724;  // std dev = 1.222, 301.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068282
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.231 seconds
Total inference time: 1.43 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068615
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.55 seconds
Parameter learned model CLL: -0.068615


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 253, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 266, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.689, 19, 111], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.068, 257, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.559, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.113, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 259, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.533, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 244, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.481, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.102, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 243, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.427, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.079, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 255, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 134], 'true,true,false': [0.02, 22, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.339, 0, 134], 'true,true,true,false': [0.083, 23, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [9.06e-08, 0, 111], 'true,false,true': [0.044, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.222, 278, 23], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1043975069252125, -1.5095522548262997e-16], 'true': [4.772301956597688e-15, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.08067194524399665, -6.344131569286608e-17], 'true': [-1.908920782639075e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.055632717156274304, 0.033611298696617074], 'true': [0.055632717156274304, nan], 'true,true': [0.055632717156274304, nan], 'true,true,true': [0.055632717156274304, nan]}, {'': [0.03962669329107949, 8.230224738533979e-17], 'true': [0.03962669329107949, nan], 'true,true': [0.0023327664606645556, 0.0007459932492964204], 'true,true,true': [0.0023327664606645556, nan], 'true,true,false': [0.0007459932492964204, nan]}, {'': [0.021786988054168715, 1.820037745287142e-18], 'true': [0.0021218814962764795, 0.0006609999447959512], 'true,true': [0.0021218814962764795, nan], 'true,true,true': [0.0021218814962764795, nan], 'true,false': [0.0006609999447959512, nan]}, {'': [0.02121982137706972, -9.13763806275849e-18], 'true': [0.001723812647622755, 0.0004556251919117117], 'true,true': [0.001723812647622755, nan], 'true,false': [0.0004556251919117117, nan]}, {'': [0.013459991580355097, -3.047671047990626e-17], 'true': [0.001358223725397147, 0.00032494970891763493], 'true,true': [0.001358223725397147, nan], 'true,false': [0.00032494970891763493, nan]}, {'': [0.010124794561096988, -3.094064166988141e-17], 'true': [0.010124794561096988, nan], 'true,true': [0.001071302299890239, 0.0004055095703739522]}, {'': [0.008606117591783554, 0.0], 'true': [0.008606117591783554, nan], 'true,true': [0.008606117591783554, nan], 'true,true,true': [0.0008552236086969423, 0.0003003123348877112]}, {'': [0.004571474908539871, 0.004964561914973441], 'false': [0.004964561914973441, nan], 'false,true': [0.004964561914973441, nan], 'true': [7.401486830834377e-17, 0.0001361253799077103], 'true,false': [0.0001361253799077103, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.14185106490048843;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839188;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360674;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.09269127618926057;  // std dev = 5.96e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.0787767547310915;  // std dev = 7.74e-08, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333667;  // std dev = 1.24e-07, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367141;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.32e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801087;  // std dev = 7.15e-08, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.06419184008202618;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.437 seconds
Total inference time: 1.326 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.088 seconds
Refined model CLL: -0.064052


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.306000000000001 seconds
Total inference time: 1.326 seconds
AUC ROC: 1.0
Total revision time: 10.306000000000001
Best scored revision CLL: -0.064052


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:23:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.306000000000001, 'Inference time': 1.326, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068282, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.231, 'Inference time': 1.43}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.59e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004874;  // std dev = 2.83e-07, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47233852193510467;  // std dev = 3.061, 193.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=169 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06356962400551726;  // std dev = 3.693, 452.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.459588713881611;  // std dev = 0.700, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14366570779122537;  // std dev = 0.168, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10613287121599697;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3504459003274469;  // std dev = 0.667, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13191494784675561;  // std dev = 0.026, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09647688926447266;  // std dev = 0.000, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27602992026749684;  // std dev = 0.602, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11394218500321089;  // std dev = 0.126, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08838825455588857;  // std dev = 1.10e-07, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22480101319049536;  // std dev = 0.535, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10583002564842775;  // std dev = 0.127, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08152062882814815;  // std dev = 6.32e-08, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18831967296917762;  // std dev = 0.033, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10058171744277947;  // std dev = 0.018, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07562129128511695;  // std dev = 2.58e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16138331050745047;  // std dev = 0.425, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.0918689443496089;  // std dev = 0.098, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07050188955796674;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12892138845077025;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   | else if ( movie(E, B) )
%   | | then return -0.08509603703239188;  // std dev = 0.068, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04485939220133407;  // std dev = 1.477, 421.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068136
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.726 seconds
Total inference time: 1.612 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.847 seconds
Parameter learned model CLL: -0.068447


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [5.59e-09, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.83e-07, 400, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 403, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.061, 24, 169], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.693, 419, 33]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.7, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.168, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 389, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.667, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 393, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.602, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.126, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.1e-07, 336, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.535, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.127, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.32e-08, 384, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 202], 'true,true,false': [0.018, 27, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 349, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.425, 0, 202], 'true,true,true,false': [0.098, 36, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 348, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 169], 'true,false,true': [0.068, 32, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.477, 388, 33], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11534565013170803, 1.9984014443252818e-16], 'true': [5.768762805181012e-15, 2.5069552168955147e-17], 'true,false': [2.5069552168955147e-17, nan]}, {'': [0.07424604868299411, -1.2341933375485612e-16], 'true': [-3.728590593592605e-15, -4.11193712824132e-18], 'true,false': [-4.11193712824132e-18, nan], 'true,false,true': [-4.11193712824132e-18, nan]}, {'': [0.048542677241826995, 0.03017112401161283], 'true': [0.048542677241826995, nan], 'true,true': [0.048542677241826995, nan], 'true,true,true': [0.048542677241826995, nan]}, {'': [0.043204895520949776, -1.1187851559204662e-16], 'true': [0.043204895520949776, nan], 'true,true': [0.002423897382753862, 0.0009391425475885562], 'true,true,true': [0.002423897382753862, nan], 'true,true,false': [0.0009391425475885562, nan]}, {'': [0.029463074864698745, -6.779987936642178e-17], 'true': [0.002204476302730612, 0.0006793819368241388], 'true,true': [0.002204476302730612, nan], 'true,true,true': [0.002204476302730612, nan], 'true,false': [0.0006793819368241388, nan]}, {'': [0.01702422142493816, 3.568574007723718e-17], 'true': [0.0017945931574094348, 0.0006107308437756621], 'true,true': [0.0017945931574094348, nan], 'true,false': [0.0006107308437756621, nan]}, {'': [0.014761219993334003, 1.0408340855860843e-17], 'true': [0.0014174265039014694, 0.0004712106450874913], 'true,true': [0.0014174265039014694, nan], 'true,false': [0.0004712106450874913, nan]}, {'': [0.0097057735020016, 1.9086928790117305e-18], 'true': [0.0097057735020016, nan], 'true,true': [0.0011204742075755206, 0.00031325300650501565]}, {'': [0.009034619913202228, -4.8492499926156265e-17], 'true': [0.009034619913202228, nan], 'true,true': [0.009034619913202228, nan], 'true,true,true': [0.000896160705434974, 0.00026506448519046964]}, {'': [0.006153833770310319, 0.005179259101002673], 'true': [-5.518268288077701e-17, 0.000142402840585365], 'false': [0.005179259101002673, nan], 'false,true': [0.005179259101002673, nan], 'true,false': [0.00014240284058536674, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.14185106490048757;  // std dev = 2.23e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.12544463852839222;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.11231637819360664;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.34980359542185635;  // std dev = 0.175, 115.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=100 */
%   | | else return 0.3669807607060303;  // std dev = 0.154, 113.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.101596329487836;  // std dev = 2.00e-07, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3337097611110048;  // std dev = 0.027, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.13935510214417102;  // std dev = 0.006, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.09269127618926054;  // std dev = 1.84e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2640238342806359;  // std dev = 0.024, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12321075900126455;  // std dev = 0.005, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08518475138839678;  // std dev = 1.05e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21599186602832168;  // std dev = 0.021, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11066392624583862;  // std dev = 0.005, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109147;  // std dev = 2.11e-08, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, B), movie(D, A) )
%   | | | then return 0.18294544991412887;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | | | else return -0.09947798274719476;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.18039183887915186;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | | else return -0.10102737095657315;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.073246225763337;  // std dev = 9.77e-08, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15619330190521313;  // std dev = 0.014, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09122428208404662;  // std dev = 0.003, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442032;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13657525232658949;  // std dev = 0.011, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   | else return -0.08034502413896451;  // std dev = 0.048, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13730430782517175;  // std dev = 0.004, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.08432111886105559;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06419184008202602;  // std dev = 1.07e-07, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065043
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.833 seconds
Total inference time: 1.286 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065554
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.051 seconds
Refined model CLL: -0.065554


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065043
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.457 seconds
Total inference time: 1.286 seconds
AUC ROC: 1.0
Total revision time: 12.457
Best scored revision CLL: -0.065554


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:23:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065043, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.457, 'Inference time': 1.286, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068136, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.726, 'Inference time': 1.612}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 0.000, 535.000 (wgt'ed) examples reached here.  /* #neg=535 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4705813173888363;  // std dev = 3.529, 252.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=220 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0529398665201864;  // std dev = 4.461, 551.000 (wgt'ed) examples reached here.  /* #neg=502 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4619700646709406;  // std dev = 0.824, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14908475950623284;  // std dev = 0.176, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10714553251514103;  // std dev = 3.51e-07, 501.000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3521316778253541;  // std dev = 0.784, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1342039960082159;  // std dev = 0.024, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09731846229847461;  // std dev = 0.000, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27719799869628037;  // std dev = 0.706, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11451922939637127;  // std dev = 0.143, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08909790789050383;  // std dev = 0.000, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22562982870993986;  // std dev = 0.627, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10672829649432346;  // std dev = 0.137, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08212660307928162;  // std dev = 2.26e-07, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18892787790958648;  // std dev = 0.034, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09102914300064079;  // std dev = 0.021, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07614441189354157;  // std dev = 1.03e-07, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16184429407185746;  // std dev = 0.497, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.09158471291123468;  // std dev = 0.117, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07095782249325491;  // std dev = 0.000, 529.000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12831886282736346;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #pos=220 */
%   | else if ( movie(E, B) )
%   | | then return -0.08436431517385541;  // std dev = 0.081, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04277024798395942;  // std dev = 1.773, 556.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06862
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.6 seconds
Total inference time: 1.676 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068926
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.382 seconds
Parameter learned model CLL: -0.068926


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [6.45e-09, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 535, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 490, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.529, 32, 220], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.461, 502, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.824, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.176, 38, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.51e-07, 501, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.784, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 511, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.706, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.143, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 498, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.627, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.137, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.26e-07, 479, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 269], 'true,true,false': [0.021, 30, 0], 'true,false': [0.0, 0, 0], 'false': [1.03e-07, 471, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.497, 0, 269], 'true,true,true,false': [0.117, 52, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 529, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 220], 'true,false,true': [0.081, 45, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.773, 507, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11269257758088405, -8.300732894393693e-17], 'true': [4.226276495227362e-15, 4.163336342344337e-17], 'true,false': [4.163336342344337e-17, nan]}, {'': [0.08624729007683692, -1.1781958628675131e-16], 'true': [-4.5432472323694135e-15, -2.7755575615628914e-17], 'true,false': [-2.7755575615628914e-17, nan], 'true,false,true': [-2.7755575615628914e-17, nan]}, {'': [0.049421050693139235, 0.03611910631691586], 'true': [0.049421050693139235, nan], 'true,true': [0.049421050693139235, nan], 'true,true,true': [0.049421050693139235, nan]}, {'': [0.04280770488725748, 2.464207591583182e-16], 'true': [0.04280770488725748, nan], 'true,true': [0.002522805041001992, 0.0008117994279739419], 'true,true,true': [0.002522805041001992, nan], 'true,true,false': [0.0008117994279739419, nan]}, {'': [0.029685328319603042, -7.12628477645893e-17], 'true': [0.0022873721833456054, 0.0005822565703143016], 'true,true': [0.0022873721833456054, nan], 'true,true,true': [0.0022873721833456054, nan], 'true,false': [0.0005822565703143016, nan]}, {'': [0.017676653645329672, -1.721068624519319e-16], 'true': [0.0018554651907413985, 0.0005649353515883396], 'true,true': [0.0018554651907413985, nan], 'true,false': [0.0005649353515883396, nan]}, {'': [0.014873408812850021, 1.0661849505794823e-16], 'true': [0.0014608575574302975, 0.00041926668354389147], 'true,true': [0.0014608575574302975, nan], 'true,false': [0.00041926668354389147, nan]}, {'': [0.008153261680341244, 2.2628749546500007e-17], 'true': [0.008153261680341244, nan], 'true,true': [0.0011517715443417657, 0.0004211623853744073]}, {'': [0.00953154291256232, -7.807239417023786e-17], 'true': [0.00953154291256232, nan], 'true,true': [0.00953154291256232, nan], 'true,true,true': [0.0009192216250887958, 0.00026173605088663317]}, {'': [0.0064015951657577855, 0.005652929832349897], 'true': [-1.413011122250199e-17, 0.00014541651059348545], 'false': [0.005652929832349897, nan], 'false,true': [0.005652929832349897, nan], 'true,false': [0.00014541651059348423, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1418510649004872;  // std dev = 3.01e-07, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.12544463852839233;  // std dev = 0.000, 503.000 (wgt'ed) examples reached here.  /* #neg=503 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360596;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.4175135841583091;  // std dev = 4.00e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | | | else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783548;  // std dev = 3.38e-07, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015066;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.09269127618926108;  // std dev = 1.07e-07, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.42e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 1.67e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839679;  // std dev = 1.48e-07, 528.000 (wgt'ed) examples reached here.  /* #neg=528 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2.98e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109148;  // std dev = 2.26e-07, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452772;  // std dev = 1.88e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367166;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15274385809367166;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | | | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420357;  // std dev = 0.000, 542.000 (wgt'ed) examples reached here.  /* #neg=542 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 1.41e-07, 220.000 (wgt'ed) examples reached here.  /* #pos=220 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( actor(B) )
%   | then return -0.0641918400820254;  // std dev = 2.45e-07, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.1340070300080116;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.653 seconds
Total inference time: 1.486 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.799 seconds
Refined model CLL: -0.064058


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.434 seconds
Total inference time: 1.486 seconds
AUC ROC: 1.0
Total revision time: 15.434
Best scored revision CLL: -0.064058


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:24:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.434, 'Inference time': 1.486, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06862, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.6, 'Inference time': 1.676}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 7.21e-09, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048854;  // std dev = 0.000, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839238;  // std dev = 0.000, 663.000 (wgt'ed) examples reached here.  /* #neg=663 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4788168146512634;  // std dev = 3.769, 314.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=278 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05514179752386286;  // std dev = 4.904, 689.000 (wgt'ed) examples reached here.  /* #neg=630 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4594713648890094;  // std dev = 0.926, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15541017694819914;  // std dev = 0.191, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10693506612329136;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.350413537440835;  // std dev = 0.881, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13434120683120168;  // std dev = 0.024, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09714365719181291;  // std dev = 0.000, 667.000 (wgt'ed) examples reached here.  /* #neg=667 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2760371719660197;  // std dev = 0.794, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11336989696848175;  // std dev = 0.181, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08895057878377995;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2248235925245756;  // std dev = 0.705, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11163833741208117;  // std dev = 0.125, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08200085365681588;  // std dev = 1.15e-07, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1883469313648882;  // std dev = 0.034, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09404563011092872;  // std dev = 0.020, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07603589748405189;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16141085150146833;  // std dev = 0.560, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.092082814762319;  // std dev = 0.115, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0708632771009787;  // std dev = 0.000, 588.000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12820289290991538;  // std dev = 7.30e-08, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, B) )
%   | | then return -0.08467303224612857;  // std dev = 0.081, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.044453516508152324;  // std dev = 1.964, 727.000 (wgt'ed) examples reached here.  /* #neg=668 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.889 seconds
Total inference time: 1.459 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068695
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.79 seconds
Parameter learned model CLL: -0.068695


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [7.21e-09, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 612, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 663, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.769, 36, 278], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.904, 630, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.926, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.191, 53, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 598, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.881, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 667, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.794, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.181, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 637, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.705, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.125, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.15e-07, 619, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 337], 'true,true,false': [0.02, 57, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 595, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.56, 0, 337], 'true,true,true,false': [0.115, 54, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 588, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [7.3e-08, 0, 278], 'true,false,true': [0.081, 49, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.964, 668, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11082847861687867, -3.4540271877227093e-16], 'true': [3.204821834882351e-15, 5.437827059388522e-17], 'true,false': [5.437827059388522e-17, nan]}, {'': [0.08383120972478723, -3.3222963512161547e-16], 'true': [-5.144582419153248e-15, -3.561092720495785e-17], 'true,false': [-3.561092720495785e-17, nan], 'true,false,true': [-3.561092720495785e-17, nan]}, {'': [0.04525102252009717, 0.03490555228982026], 'true': [0.04525102252009717, nan], 'true,true': [0.04525102252009717, nan], 'true,true,true': [0.04525102252009717, nan]}, {'': [0.046688597232691344, -1.752592868304595e-16], 'true': [0.046688597232691344, nan], 'true,true': [0.0025431418815195783, 0.0006877569861913441], 'true,true,true': [0.0025431418815195783, nan], 'true,true,false': [0.0006877569861913441, nan]}, {'': [0.030041095486135573, -5.0600869488163055e-17], 'true': [0.002305361669448796, 0.0005989273527812118], 'true,true': [0.002305361669448796, nan], 'true,true,true': [0.002305361669448796, nan], 'true,false': [0.0005989273527812118, nan]}, {'': [0.019984235801200262, -1.2688263138573217e-16], 'true': [0.0018724017592686884, 0.000598238132811546], 'true,true': [0.0018724017592686884, nan], 'true,false': [0.000598238132811546, nan]}, {'': [0.013875814899191678, 2.1522901931343907e-17], 'true': [0.0014764419261209312, 0.000317294702171868], 'true,true': [0.0014764419261209312, nan], 'true,false': [0.000317294702171868, nan]}, {'': [0.010922947048795354, -3.657205257588751e-17], 'true': [0.010922947048795354, nan], 'true,true': [0.0011656989669953058, 0.00040177184442682874]}, {'': [0.008485607854171644, -5.5133524352133624e-17], 'true': [0.008485607854171644, nan], 'true,true': [0.008485607854171644, nan], 'true,true,true': [0.0009314599829371451, 0.00024469726470751463]}, {'': [0.005793110841235669, 0.005303165330899291], 'true': [1.916931841079407e-17, 0.00013448319809543618], 'false': [0.005303165330899291, nan], 'false,true': [0.005303165330899291, nan], 'true,false': [0.00013448319809542713, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048857;  // std dev = 0.000, 631.000 (wgt'ed) examples reached here.  /* #neg=631 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.12544463852839233;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.11231637819360586;  // std dev = 0.000, 562.000 (wgt'ed) examples reached here.  /* #neg=562 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.417513584158309;  // std dev = 4.54e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783519;  // std dev = 4.10e-07, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015133;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926155;  // std dev = 0.000, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 4.17e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253473;  // std dev = 2.86e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109175;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109219;  // std dev = 0.000, 643.000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527672;  // std dev = 2.98e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333685;  // std dev = 1.74e-07, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936717;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420361;  // std dev = 0.000, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801142;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801162;  // std dev = 2.98e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.06419184008202618;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.06419184008202544;  // std dev = 2.41e-07, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.82 seconds
Total inference time: 1.32 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.832 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 17.331 seconds
Total inference time: 1.32 seconds
AUC ROC: 1.0
Total revision time: 17.331
Best scored revision CLL: -0.064062


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:24:33
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 17.331, 'Inference time': 1.32, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068412, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.889, 'Inference time': 1.459}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.88e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4273176777167158;  // std dev = 2.246, 73.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07090969199578366;  // std dev = 1.829, 129.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46373248388688487;  // std dev = 0.329, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15209905017708414;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10543853905855857;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3529669787910808;  // std dev = 0.315, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12406963186159298;  // std dev = 0.025, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09589913794578692;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2775256687931758;  // std dev = 0.285, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11051928767652121;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08790054165957155;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2257108547304511;  // std dev = 0.254, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1070314508725828;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08110378042002543;  // std dev = 2.98e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18889265093564803;  // std dev = 0.028, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09133224769174936;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0752611439735009;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16175572198614255;  // std dev = 0.202, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.08213507572581853;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07018777291875966;  // std dev = 2.36e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13290379833608235;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else if ( movie(E, B) )
%   | | then return -0.08639994901315944;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.05078761452569386;  // std dev = 0.734, 147.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066963
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.129 seconds
Total inference time: 1.741 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.949 seconds
Parameter learned model CLL: -0.067838


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 117, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.246, 14, 59], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.829, 121, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.329, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.073, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 134, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.315, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 123, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.285, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.081, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.254, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.053, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-08, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.028, 0, 67], 'true,true,false': [0.019, 8, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 123, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.202, 0, 67], 'true,true,true,false': [0.047, 7, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.36e-08, 129, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 59], 'true,false,true': [0.023, 6, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.734, 139, 8], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.14946460440214057, 2.5480528434019987e-17], 'true': [-9.544603913195376e-16, -1.4802973661668754e-17], 'true,false': [-1.4802973661668754e-17, nan]}, {'': [0.08647836286765904, 5.3138879811118606e-17], 'true': [3.1815346377317917e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.06909947118940923, 0.025932019136010044], 'true': [0.06909947118940923, nan], 'true,true': [0.06909947118940923, nan], 'true,true,true': [0.06909947118940923, nan]}, {'': [0.047394936404108426, -7.456721807183888e-17], 'true': [0.047394936404108426, nan], 'true,true': [0.0016130012332516007, 0.0004838229550760157], 'true,true,true': [0.0016130012332516007, nan], 'true,true,false': [0.0004838229550760157, nan]}, {'': [0.040455569410886176, -1.0831444142684454e-17], 'true': [0.0014814090258305581, 0.0006025901686478055], 'true,true': [0.0014814090258305581, nan], 'true,true,true': [0.0014814090258305581, nan], 'true,false': [0.0006025901686478055, nan]}, {'': [0.02158970703697678, -1.865174681370263e-17], 'true': [0.00121162579356178, 0.0005053837738016406], 'true,true': [0.00121162579356178, nan], 'true,false': [0.0005053837738016406, nan]}, {'': [0.012440987762025915, 7.105427357601002e-18], 'true': [0.0009593466462785392, 0.0003092612602097601], 'true,true': [0.0009593466462785392, nan], 'true,false': [0.0003092612602097601, nan]}, {'': [0.008198681626689979, -7.220962761789637e-18], 'true': [0.008198681626689979, nan], 'true,true': [0.0007594955942492482, 0.0003519768441244131]}, {'': [0.005674904714163362, 4.303190017926963e-18], 'true': [0.005674904714163362, nan], 'true,true': [0.005674904714163362, nan], 'true,true,true': [0.0006080663524779183, 0.00031580886554177193]}, {'': [0.004037539937006385, 0.0036650427890751445], 'true': [-1.129040364025583e-17, 8.534086910086276e-05], 'false': [0.0036650427890751445, nan], 'false,true': [0.0036650427890751445, nan], 'true,false': [8.534086910086276e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839147;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1123163781936062;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0926912761892609;  // std dev = 6.50e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839682;  // std dev = 6.23e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07877675473109161;  // std dev = 5.96e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333711;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5.96e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.10569290570943442;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.06794073997799871;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.929 seconds
Total inference time: 1.296 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064328
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.389 seconds
Refined model CLL: -0.064328


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.396000000000001 seconds
Total inference time: 1.296 seconds
AUC ROC: 1.0
Total revision time: 7.396000000000001
Best scored revision CLL: -0.064328


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:24:45
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063895, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.396000000000001, 'Inference time': 1.296, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066963, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.129, 'Inference time': 1.741}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048818;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48233862886223317;  // std dev = 2.358, 128.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=114 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06674075942637823;  // std dev = 2.882, 293.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45573255349948644;  // std dev = 0.563, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15210117440264564;  // std dev = 0.144, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10583240530461518;  // std dev = 5.16e-08, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.347759994506239;  // std dev = 0.537, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13221454637758734;  // std dev = 0.026, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09622694529162602;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27419013239378204;  // std dev = 0.485, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12066539481865188;  // std dev = 0.100, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08817731524064966;  // std dev = 1.19e-07, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22350666223980972;  // std dev = 0.431, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10613471156172707;  // std dev = 0.097, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0813403779070131;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18737614068041236;  // std dev = 0.033, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10408026622293788;  // std dev = 0.014, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07546558810779884;  // std dev = 1.02e-07, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16067202306408782;  // std dev = 0.344, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09181538977468573;  // std dev = 0.071, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07036610948024183;  // std dev = 4.71e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12907092523761132;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else if ( movie(E, B) )
%   | | then return -0.08192733100102724;  // std dev = 0.058, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04534757272937055;  // std dev = 1.161, 266.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067403
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.347 seconds
Total inference time: 1.695 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068327
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.903 seconds
Parameter learned model CLL: -0.068327


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 266, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 237, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.358, 14, 114], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.882, 273, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.563, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.144, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 227, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.537, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.485, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.1, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.19e-07, 237, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.431, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.097, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 247, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 134], 'true,true,false': [0.014, 24, 0], 'true,false': [0.0, 0, 0], 'false': [1.02e-07, 231, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.344, 0, 134], 'true,true,true,false': [0.071, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 237, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 114], 'true,false,true': [0.058, 21, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.161, 246, 20], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.09528888888889364, -1.0350951507783414e-16], 'true': [4.772301956597688e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.11108816103391699, -4.87186474940997e-17], 'true': [-1.908920782639075e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.04342635161256406, 0.028352920405114442], 'true': [0.04342635161256406, nan], 'true,true': [0.04342635161256406, nan], 'true,true,true': [0.04342635161256406, nan]}, {'': [0.05107966470904807, 1.173804078898844e-17], 'true': [0.05107966470904807, nan], 'true,true': [0.0023626451923024153, 0.000832532942051567], 'true,true,true': [0.0023626451923024153, nan], 'true,true,false': [0.000832532942051567, nan]}, {'': [0.03074172532438195, -7.340317518182853e-18], 'true': [0.0021492332843146182, 0.0006977962015606009], 'true,true': [0.0021492332843146182, nan], 'true,true,true': [0.0021492332843146182, nan], 'true,false': [0.0006977962015606009, nan]}, {'': [0.019209868617217955, 5.996141230043039e-17], 'true': [0.0017536335785796767, 0.0005039231968229807], 'true,true': [0.0017536335785796767, nan], 'true,false': [0.0005039231968229807, nan]}, {'': [0.01354825081451997, -1.0787592142106784e-17], 'true': [0.0013887239804433614, 0.0004657797384408968], 'true,true': [0.0013887239804433614, nan], 'true,false': [0.0004657797384408968, nan]}, {'': [0.01190758339783797, 4.5177906629768273e-17], 'true': [0.01190758339783797, nan], 'true,true': [0.0011004248440721624, 0.0002040318963335471]}, {'': [0.008003979985390541, 9.368970671942249e-18], 'true': [0.008003979985390541, nan], 'true,true': [0.008003979985390541, nan], 'true,true,true': [0.0008819355737293198, 0.00025099086799944823]}, {'': [0.005872683759383433, 0.00506632112899904], 'true': [-1.0517902338554114e-16, 0.00015807730997835896], 'false': [0.00506632112899904, nan], 'false,true': [0.00506632112899904, nan], 'true,false': [0.00015807730997835766, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.14185106490048846;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.12544463852839183;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360667;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.09269127618926054;  // std dev = 6.66e-08, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.08518475138839678;  // std dev = 8.56e-08, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109147;  // std dev = 7.60e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633367;  // std dev = 1.18e-07, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1527438580936711;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.13210124673946957;  // std dev = 0.064, 75.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=68 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4.21e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13538326667721867;  // std dev = 0.013, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else return -0.07222871687725235;  // std dev = 0.027, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1229959816696758;  // std dev = 0.045, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.08297977979289461;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064206
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.243 seconds
Total inference time: 1.337 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06489
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.239 seconds
Refined model CLL: -0.06489


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064206
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.732 seconds
Total inference time: 1.337 seconds
AUC ROC: 1.0
Total revision time: 10.732
Best scored revision CLL: -0.06489


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:24:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064206, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.732, 'Inference time': 1.337, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067403, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.347, 'Inference time': 1.695}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.93e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1.66e-07, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4811794573085172;  // std dev = 2.953, 198.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=176 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07222456944432915;  // std dev = 3.301, 433.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=26 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4533516837587941;  // std dev = 0.654, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14722794458665078;  // std dev = 0.188, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10531458249587958;  // std dev = 2.09e-07, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3460196460375539;  // std dev = 0.625, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1405046724165742;  // std dev = 0.022, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09579593181604543;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27294490342609473;  // std dev = 0.565, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12659962863735305;  // std dev = 0.109, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08781337425817282;  // std dev = 2.01e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22259723887945412;  // std dev = 0.504, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10787878235750804;  // std dev = 0.100, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08102924491661757;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18669178870252326;  // std dev = 0.032, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10398803927398499;  // std dev = 0.013, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07519672175812563;  // std dev = 1.41e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1601418678015942;  // std dev = 0.402, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.08704853405021032;  // std dev = 0.105, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07013156514872322;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13004635857218244;  // std dev = 0.000, 176.000 (wgt'ed) examples reached here.  /* #pos=176 */
%   | else if ( movie(E, B) )
%   | | then return -0.0852952025596317;  // std dev = 0.055, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0483371264301597;  // std dev = 1.342, 412.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067025
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.811 seconds
Total inference time: 1.557 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067937
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.669 seconds
Parameter learned model CLL: -0.067937


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [4.93e-09, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.66e-07, 333, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 364, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.953, 22, 176], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.301, 407, 26]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.654, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.188, 37, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.09e-07, 369, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.625, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 365, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.565, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.109, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.01e-07, 354, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.504, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.1, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 391, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 202], 'true,true,false': [0.013, 30, 0], 'true,false': [0.0, 0, 0], 'false': [1.41e-07, 353, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.402, 0, 202], 'true,true,true,false': [0.105, 34, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 336, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 176], 'true,false,true': [0.055, 26, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.342, 386, 26], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1125891795481624, 8.268327630842006e-17], 'true': [5.768762805181012e-15, 2.590520390792032e-17], 'true,false': [2.590520390792032e-17, nan]}, {'': [0.08617052950824229, -9.516197353929913e-17], 'true': [-3.728590593592605e-15, -3.3643121958338078e-18], 'true,false': [-3.3643121958338078e-18, nan], 'true,false,true': [-3.3643121958338078e-18, nan]}, {'': [0.044029663344798034, 0.025161258592961103], 'true': [0.044029663344798034, nan], 'true,true': [0.044029663344798034, nan], 'true,true,true': [0.044029663344798034, nan]}, {'': [0.04913366769326804, 1.179423917758974e-16], 'true': [0.04913366769326804, nan], 'true,true': [0.002119153391647674, 0.0009515620409490298], 'true,true,true': [0.002119153391647674, nan], 'true,true,false': [0.0009515620409490298, nan]}, {'': [0.035411210472982756, -2.0683607034112507e-17], 'true': [0.0019325531805578983, 0.0004661577238151944], 'true,true': [0.0019325531805578983, nan], 'true,true,true': [0.0019325531805578983, nan], 'true,false': [0.0004661577238151944, nan]}, {'': [0.023393897600938893, 1.1415852569592006e-16], 'true': [0.0015817473703731042, 0.0002955112794950809], 'true,true': [0.0015817473703731042, nan], 'true,false': [0.0002955112794950809, nan]}, {'': [0.011865575632233895, 0.0], 'true': [0.0012562292448076921, 0.00040271151863920053], 'true,true': [0.0012562292448076921, nan], 'true,false': [0.00040271151863920053, nan]}, {'': [0.010403586489888223, 5.661193893272753e-17], 'true': [0.010403586489888223, nan], 'true,true': [0.0009978888539450808, 0.00016656837388041209]}, {'': [0.00826723987847504, -4.9563527885051634e-17], 'true': [0.00826723987847504, nan], 'true,true': [0.00826723987847504, nan], 'true,true,true': [0.0008013965438808505, 0.00032302609264647135]}, {'': [0.005215263054176884, 0.00437082925342958], 'true': [-8.074349270001139e-17, 0.00011526595588224737], 'false': [0.00437082925342958, nan], 'false,true': [0.00437082925342958, nan], 'true,false': [0.00011526595588224844, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048757;  // std dev = 2.21e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.1254446385283922;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.11231637819360683;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783609;  // std dev = 1.72e-07, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.09269127618926051;  // std dev = 2.01e-07, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2.17e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 1.07e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109147;  // std dev = 6.32e-08, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527814;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.14764441262661746;  // std dev = 0.081, 119.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333699;  // std dev = 1.00e-07, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1527438580936716;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | | | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1565944491123118;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | | else return -0.08392176452497281;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420333;  // std dev = 0.000, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13571098907271265;  // std dev = 0.020, 176.000 (wgt'ed) examples reached here.  /* #pos=176 */
%   | else return -0.06997726627052285;  // std dev = 0.040, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13458375461452585;  // std dev = 0.006, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.06756667202531592;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.0641918400820259;  // std dev = 1.41e-07, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064018
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.043 seconds
Total inference time: 1.393 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064673
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.311 seconds
Refined model CLL: -0.064673


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064018
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.834 seconds
Total inference time: 1.393 seconds
AUC ROC: 1.0
Total revision time: 12.834
Best scored revision CLL: -0.064673


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:25:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064018, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.834, 'Inference time': 1.393, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067025, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.811, 'Inference time': 1.557}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048718;  // std dev = 2.98e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.46718191401837256;  // std dev = 3.680, 265.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=230 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06573385622105614;  // std dev = 4.022, 559.000 (wgt'ed) examples reached here.  /* #neg=520 #pos=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4583027882075014;  // std dev = 0.765, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1487634788308212;  // std dev = 0.186, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10592772829995255;  // std dev = 0.000, 522.000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3494538411913402;  // std dev = 0.730, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.134066810151054;  // std dev = 0.024, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09630625216482948;  // std dev = 1.43e-07, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27529074881346427;  // std dev = 0.659, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12346596701679893;  // std dev = 0.112, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08824425468455692;  // std dev = 1.56e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22424431977787276;  // std dev = 0.587, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10448390980723471;  // std dev = 0.136, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08139758513652603;  // std dev = 1.88e-07, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1878905606305376;  // std dev = 0.032, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09738248485050337;  // std dev = 0.018, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07551500933776711;  // std dev = 0.000, 524.000 (wgt'ed) examples reached here.  /* #neg=524 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1610443841273403;  // std dev = 0.467, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.09096754886808335;  // std dev = 0.103, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07040921070798961;  // std dev = 1.58e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12999184085763107;  // std dev = 1.86e-07, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | else if ( movie(E, B) )
%   | | then return -0.0803651513397515;  // std dev = 0.081, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.045276637856114715;  // std dev = 1.613, 514.000 (wgt'ed) examples reached here.  /* #neg=475 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067446
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.627 seconds
Total inference time: 1.432 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.235 seconds
Parameter learned model CLL: -0.068419


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [6.45e-09, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-07, 469, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 497, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.68, 35, 230], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.022, 520, 39]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.765, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.186, 42, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 522, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.73, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 59, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.43e-07, 510, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.659, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.112, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.56e-07, 496, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.587, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.136, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.88e-07, 507, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 269], 'true,true,false': [0.018, 43, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 524, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.467, 0, 269], 'true,true,true,false': [0.103, 43, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-07, 478, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.86e-07, 0, 230], 'true,false,true': [0.081, 42, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.613, 475, 39], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10845738416323118, 1.893770617697495e-16], 'true': [4.226276495227362e-15, 4.0902953538821554e-17], 'true,false': [4.0902953538821554e-17, nan]}, {'': [0.08044971118992354, -1.3045679001631617e-16], 'true': [-4.5432472323694135e-15, -2.4980018054066023e-17], 'true,false': [-2.4980018054066023e-17, nan], 'true,false,true': [-2.4980018054066023e-17, nan]}, {'': [0.05110278032035343, 0.028932418044308492], 'true': [0.05110278032035343, nan], 'true,true': [0.05110278032035343, nan], 'true,true,true': [0.05110278032035343, nan]}, {'': [0.04503952207256552, -1.9907447338106256e-16], 'true': [0.04503952207256552, nan], 'true,true': [0.002174037638045174, 0.0008225420622778656], 'true,true,true': [0.002174037638045174, nan], 'true,true,false': [0.0008225420622778656, nan]}, {'': [0.03621978182025764, 4.005510520216251e-17], 'true': [0.001981500217802079, 0.0005850016616278799], 'true,true': [0.001981500217802079, nan], 'true,true,true': [0.001981500217802079, nan], 'true,false': [0.0005850016616278799, nan]}, {'': [0.017670625855229247, 4.924376318901904e-17], 'true': [0.0016167098624550525, 0.0003562365040336183], 'true,true': [0.0016167098624550525, nan], 'true,false': [0.0003562365040336183, nan]}, {'': [0.013788906761361837, 7.007324810257398e-17], 'true': [0.0012794740576200251, 0.0004402114769176243], 'true,true': [0.0012794740576200251, nan], 'true,false': [0.0004402114769176243, nan]}, {'': [0.010589189732243412, -3.3899939683210885e-18], 'true': [0.010589189732243412, nan], 'true,true': [0.0010131111681101093, 0.00033057640720031715]}, {'': [0.008279896521390806, 5.202718776486089e-17], 'true': [0.008279896521390806, nan], 'true,true': [0.008279896521390806, nan], 'true,true,true': [0.0008114089724370378, 0.00024433351950037263]}, {'': [0.005801781630997153, 0.005060621958867984], 'true': [1.5060416681871688e-16, 0.00015610927354167957], 'false': [0.005060621958867984, nan], 'false,true': [0.005060621958867984, nan], 'true,false': [0.00015610927354167957, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048757;  // std dev = 1.33e-07, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839227;  // std dev = 0.000, 439.000 (wgt'ed) examples reached here.  /* #neg=439 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.11231637819360604;  // std dev = 0.000, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10159632948783627;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783558;  // std dev = 3.05e-07, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.09269127618926092;  // std dev = 1.52e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.37e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.08518475138839679;  // std dev = 1.44e-07, 513.000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109176;  // std dev = 1.90e-07, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333763;  // std dev = 0.000, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420353;  // std dev = 0.000, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 9.88e-08, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080113;  // std dev = 2.11e-08, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06419184008202568;  // std dev = 1.96e-07, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.54 seconds
Total inference time: 1.311 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.248 seconds
Refined model CLL: -0.064083


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.650000000000002 seconds
Total inference time: 1.311 seconds
AUC ROC: 1.0
Total revision time: 14.650000000000002
Best scored revision CLL: -0.064083


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:25:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.650000000000002, 'Inference time': 1.311, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067446, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.627, 'Inference time': 1.432}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 8.12e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004886;  // std dev = 0.000, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4793533162762028;  // std dev = 3.823, 325.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=288 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06399073870755832;  // std dev = 4.501, 677.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45573631242806384;  // std dev = 0.874, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15441422760204013;  // std dev = 0.192, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10609292724386414;  // std dev = 0.000, 656.000 (wgt'ed) examples reached here.  /* #neg=656 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3477215160279609;  // std dev = 0.833, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13686391691123737;  // std dev = 0.023, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09644366806553745;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2741376493176274;  // std dev = 0.753, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11866314312833014;  // std dev = 0.157, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08836022226922781;  // std dev = 0.000, 648.000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22345335700660085;  // std dev = 0.670, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10971215166972531;  // std dev = 0.124, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08149667822607397;  // std dev = 1.25e-07, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18732672383207488;  // std dev = 0.032, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09633900710784747;  // std dev = 0.019, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07560060501267166;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16062770398956924;  // std dev = 0.534, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.09583795189681749;  // std dev = 0.075, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07048385219005392;  // std dev = 2.21e-07, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12943327320218148;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( movie(E, B) )
%   | | then return -0.08496024412522235;  // std dev = 0.085, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04557000038557699;  // std dev = 1.815, 654.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067469
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.085 seconds
Total inference time: 1.713 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068393
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.854 seconds
Parameter learned model CLL: -0.068393


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [8.12e-09, 61, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 628, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 609, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.823, 37, 288], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.501, 628, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.874, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.192, 50, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 656, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.833, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.023, 56, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 611, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.753, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.157, 48, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 648, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.67, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.124, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.25e-07, 595, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 337], 'true,true,false': [0.019, 60, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 637, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.534, 0, 337], 'true,true,true,false': [0.075, 44, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.21e-07, 595, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 288], 'true,false,true': [0.085, 61, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.815, 605, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12977576323830514, -3.762029612105626e-16], 'true': [3.204821834882351e-15, 6.188128333976282e-17], 'true,false': [6.188128333976282e-17, nan]}, {'': [0.0815015376882413, -2.479315785698215e-16], 'true': [-5.144582419153248e-15, -3.2653618371328135e-17], 'true,false': [-3.2653618371328135e-17, nan], 'true,false,true': [-3.2653618371328135e-17, nan]}, {'': [0.04497465976422903, 0.029930831574078533], 'true': [0.04497465976422903, nan], 'true,true': [0.04497465976422903, nan], 'true,true,true': [0.04497465976422903, nan]}, {'': [0.04395165777558532, -5.144935967775116e-17], 'true': [0.04395165777558532, nan], 'true,true': [0.0022646089796412527, 0.000737352021569948], 'true,true,true': [0.0022646089796412527, nan], 'true,true,false': [0.000737352021569948, nan]}, {'': [0.03053650173267468, -1.671694243298108e-16], 'true': [0.002060081854183305, 0.0005412763582371019], 'true,true': [0.002060081854183305, nan], 'true,true,true': [0.002060081854183305, nan], 'true,false': [0.0005412763582371019, nan]}, {'': [0.018373530798217356, -3.4266142735344336e-17], 'true': [0.001680878658638506, 0.0005138596782346405], 'true,true': [0.001680878658638506, nan], 'true,false': [0.0005138596782346405, nan]}, {'': [0.012359955232281474, 2.6122894697062506e-17], 'true': [0.0013311220116166876, 0.0003564155172476944], 'true,true': [0.0013311220116166876, nan], 'true,false': [0.0003564155172476944, nan]}, {'': [0.01127382933630181, -6.553278763878475e-17], 'true': [0.01127382933630181, nan], 'true,true': [0.0010548096000307786, 0.0003655555740101309]}, {'': [0.007481199774862623, 8.210052619076788e-17], 'true': [0.007481199774862623, nan], 'true,true': [0.007481199774862623, nan], 'true,true,true': [0.0008454083109709917, 0.00012671776975902135]}, {'': [0.006650195198740779, 0.00503934284849736], 'true': [-3.0839528461809902e-18, 0.00011718160472802439], 'false': [0.00503934284849736, nan], 'false,true': [0.00503934284849736, nan], 'true,false': [0.00011718160472802803, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048877;  // std dev = 0.000, 642.000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.12544463852839233;  // std dev = 0.000, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360592;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783621;  // std dev = 3.80e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783501;  // std dev = 4.57e-07, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926142;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 1.66e-07, 704.000 (wgt'ed) examples reached here.  /* #neg=704 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109216;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527764;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527764;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | | else return -0.07324622576333704;  // std dev = 9.13e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333682;  // std dev = 1.81e-07, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367144;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | | else return -0.06842697784420276;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420367;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080114;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( female(A), director(B) )
%   | then return 0.12499799045846392;  // std dev = 0.041, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | else return -0.06204084459267655;  // std dev = 0.522, 645.000 (wgt'ed) examples reached here.  /* #neg=638 #pos=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063982
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.026 seconds
Total inference time: 1.21 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064332
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.96 seconds
Refined model CLL: -0.064332


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063982
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 17.925 seconds
Total inference time: 1.21 seconds
AUC ROC: 1.0
Total revision time: 17.925
Best scored revision CLL: -0.064332


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:25:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063982, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 17.925, 'Inference time': 1.21, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067469, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.085, 'Inference time': 1.713}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4423739603718406;  // std dev = 2.018, 65.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0598555855911863;  // std dev = 2.126, 140.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4663538564165933;  // std dev = 0.377, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1434212244841242;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10648573292967839;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35502692704695316;  // std dev = 0.361, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.129699630802122;  // std dev = 0.024, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09677027765951977;  // std dev = 5.77e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27907693839154535;  // std dev = 0.325, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10674106025982137;  // std dev = 0.082, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08863575629958824;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22688702775192413;  // std dev = 0.288, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09506507676660648;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08173204721187664;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1898035146632284;  // std dev = 0.032, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.09985612292849387;  // std dev = 0.017, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07580386027230991;  // std dev = 1.05e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16247768006691685;  // std dev = 0.229, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.09054757398876699;  // std dev = 0.064, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07066105406136884;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13015123395147832;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else if ( movie(E, B) )
%   | | then return -0.08710082099643586;  // std dev = 0.040, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04164270157872649;  // std dev = 0.835, 120.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067445
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.232 seconds
Total inference time: 1.77 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069132
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.771 seconds
Parameter learned model CLL: -0.069132


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 65], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.66e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.19e-07, 0, 65], 'true,false,true,true': [7.45e-09, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.018, 11, 54], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.126, 129, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.377, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.093, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 132, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.361, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 119, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.325, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.082, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 132, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.288, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.072, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 117, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 65], 'true,true,false': [0.017, 13, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.229, 0, 65], 'true,true,true,false': [0.064, 16, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 119, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 54], 'true,false,true': [0.04, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.835, 109, 11], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.08777006172839415, 3.8616453030440226e-17], 'true': [-8.745141363201234e-16, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.10409176836137049, -5.9476233462061954e-18], 'true': [2.1862853408003084e-16, 3.96508223080413e-18], 'true,false': [3.96508223080413e-18, nan], 'true,false,true': [3.96508223080413e-18, nan]}, {'': [0.06267583497548818, 0.032275034918287246], 'true': [0.06267583497548818, nan], 'true,true': [0.06267583497548818, nan], 'true,true,true': [0.06267583497548818, nan]}, {'': [0.04801536637047668, -3.1960965860421176e-17], 'true': [0.04801536637047668, nan], 'true,true': [0.0021922478743110927, 0.0007795603064963181], 'true,true,true': [0.0021922478743110927, nan], 'true,true,false': [0.0007795603064963181, nan]}, {'': [0.0343960863140259, 2.7988815746852685e-17], 'true': [0.0019994258761286414, 0.0005795252666681123], 'true,true': [0.0019994258761286414, nan], 'true,true,true': [0.0019994258761286414, nan], 'true,false': [0.0005795252666681123, nan]}, {'': [0.021041219328409563, -1.850371707708594e-17], 'true': [0.0016247594650045207, 0.0005564462887261377], 'true,true': [0.0016247594650045207, nan], 'true,false': [0.0005564462887261377, nan]}, {'': [0.01399271368496101, -7.591268544445516e-18], 'true': [0.0012794918518841505, 0.00046557034596992166], 'true,true': [0.0012794918518841505, nan], 'true,false': [0.00046557034596992166, nan]}, {'': [0.012541145281999028, 9.329605248950895e-19], 'true': [0.012541145281999028, nan], 'true,true': [0.001008481761811808, 0.00028554150812838154]}, {'': [0.010844326361745349, -1.3994407873426343e-17], 'true': [0.010844326361745349, nan], 'true,true': [0.010844326361745349, nan], 'true,true,true': [0.0008045178316886841, 0.0002555466960102847]}, {'': [0.008345472000851709, 0.005808968357223001], 'true': [0.0, 0.00010120299699846458], 'false': [0.005808968357223001, nan], 'false,true': [0.005808968357223001, nan], 'true,false': [0.00010120299699846631, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048766;  // std dev = 8.43e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360625;  // std dev = 7.15e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.4175135841583102;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 2.58e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926107;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0851847513883968;  // std dev = 3.16e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109161;  // std dev = 5.77e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527747;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1770964977452775;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936707;  // std dev = 4.94e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801079;  // std dev = 5.05e-08, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), actor(A) )
%   | then return 0.11749045750050785;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.852 seconds
Total inference time: 1.463 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064519
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.369 seconds
Refined model CLL: -0.064519


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.224 seconds
Total inference time: 1.463 seconds
AUC ROC: 1.0
Total revision time: 7.224
Best scored revision CLL: -0.064519


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:26:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.224, 'Inference time': 1.463, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067445, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.232, 'Inference time': 1.77}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.89e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004884;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45685585749285734;  // std dev = 2.615, 122.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=104 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04802099601420922;  // std dev = 3.236, 270.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=26 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4667561985834036;  // std dev = 0.573, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1556181950576112;  // std dev = 0.119, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10761700819828258;  // std dev = 1.59e-07, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3554444276704256;  // std dev = 0.545, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12504350029382258;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09770985546192874;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27944500414326434;  // std dev = 0.490, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12378983958571545;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08942763992415696;  // std dev = 1.04e-07, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2271948655239926;  // std dev = 0.434, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10326015159955645;  // std dev = 0.079, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08240793381801445;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19005822703740757;  // std dev = 0.034, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.09147543059975152;  // std dev = 0.019, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07638710521197858;  // std dev = 9.42e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16268939805041346;  // std dev = 0.344, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return -0.08859472175703663;  // std dev = 0.083, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07116921376868561;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12830086458408602;  // std dev = 6.32e-08, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else if ( movie(E, B) )
%   | | then return -0.08664575065404378;  // std dev = 0.039, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.041623573987304506;  // std dev = 1.274, 276.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067835
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.737 seconds
Total inference time: 1.76 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069589
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.75 seconds
Parameter learned model CLL: -0.069589


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.66e-08, 0, 130], 'true,false,true': [5.89e-09, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 215, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 130], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 253, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.615, 18, 104], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.236, 244, 26]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.573, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.119, 27, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.59e-07, 229, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.545, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 243, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.49, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.062, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.04e-07, 241, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.434, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.079, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 223, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 130], 'true,true,false': [0.019, 15, 0], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 237, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.344, 0, 130], 'true,true,true,false': [0.083, 25, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [6.32e-08, 0, 104], 'true,false,true': [0.039, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.274, 250, 26], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1643367043426578, -2.3133949536375355e-16], 'true': [4.481884948640632e-15, 3.2653618371328135e-17], 'true,false': [3.2653618371328135e-17, nan]}, {'': [0.07942433610147928, -7.547761274131499e-17], 'true': [-1.7490282726402467e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0560694866324427, 0.03879502559158155], 'true': [0.0560694866324427, nan], 'true,true': [0.0560694866324427, nan], 'true,true,true': [0.0560694866324427, nan]}, {'': [0.057336498334910196, 1.105374889146444e-16], 'true': [0.057336498334910196, nan], 'true,true': [0.0025217757850234954, 0.000523662259069125], 'true,true,true': [0.0025217757850234954, nan], 'true,true,false': [0.000523662259069125, nan]}, {'': [0.028747428992201403, -2.1930331350620375e-17], 'true': [0.0022859540894497052, 0.0006608534632945778], 'true,true': [0.0022859540894497052, nan], 'true,true,true': [0.0022859540894497052, nan], 'true,false': [0.0006608534632945778, nan]}, {'': [0.015145702132540328, 4.514599851172836e-17], 'true': [0.0018490616376633867, 0.0002954350839157652], 'true,true': [0.0018490616376633867, nan], 'true,false': [0.0002954350839157652, nan]}, {'': [0.011471808097089913, -3.086718723173081e-17], 'true': [0.0014510995623338771, 0.00041403573525382044], 'true,true': [0.0014510995623338771, nan], 'true,false': [0.00041403573525382044, nan]}, {'': [0.008413011451712187, 3.7475882687768996e-17], 'true': [0.008413011451712187, nan], 'true,true': [0.0011407204054543754, 0.0003777679923897751]}, {'': [0.009347427093066579, -1.6935605460383745e-17], 'true': [0.009347427093066579, nan], 'true,true': [0.009347427093066579, nan], 'true,true,true': [0.0009081330843702909, 0.0002725162430442485]}, {'': [0.005351260128269499, 0.005876856284925152], 'false': [0.005876856284925152, nan], 'false,true': [0.005876856284925152, nan], 'true': [3.843079700625542e-17, 9.267654666962697e-05], 'true,false': [9.267654666962697e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048835;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839188;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.11231637819360661;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.330995265217286;  // std dev = 0.193, 90.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33175033080982436;  // std dev = 0.108, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12815463419144876;  // std dev = 0.078, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09269127618926058;  // std dev = 5.96e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26271512503531813;  // std dev = 0.094, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11349635623881521;  // std dev = 0.078, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.08518475138839678;  // std dev = 7.15e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21508657412656887;  // std dev = 0.082, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.0963675769992061;  // std dev = 0.101, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.07877675473109148;  // std dev = 6.99e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17363884137196609;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.06791120893540419;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.15561686923243215;  // std dev = 0.089, 84.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333674;  // std dev = 1.12e-07, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15809500360743498;  // std dev = 0.078, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.0969852256946286;  // std dev = 0.118, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.66e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13936650589246635;  // std dev = 0.059, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else return -0.06937348565991198;  // std dev = 0.083, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13341950848223746;  // std dev = 0.025, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.07885237723095893;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064114
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.636 seconds
Total inference time: 1.414 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066102
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.838 seconds
Refined model CLL: -0.066102


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064114
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.961000000000002 seconds
Total inference time: 1.414 seconds
AUC ROC: 1.0
Total revision time: 9.961000000000002
Best scored revision CLL: -0.066102


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:26:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064114, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.961000000000002, 'Inference time': 1.414, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067835, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.737, 'Inference time': 1.76}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.97e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 1.30e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839202;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4605043974652054;  // std dev = 3.153, 183.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=157 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04465785294636413;  // std dev = 3.902, 375.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.465227236107618;  // std dev = 0.695, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14677372068555908;  // std dev = 0.166, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10794041609668575;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.354364896345785;  // std dev = 0.661, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1295009614569159;  // std dev = 0.025, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09797817444691534;  // std dev = 1.23e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27869937380311943;  // std dev = 0.595, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12004652044199683;  // std dev = 0.125, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08965357421695573;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22666705184739397;  // std dev = 0.527, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10505326853888813;  // std dev = 0.130, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08260061989785372;  // std dev = 1.19e-07, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18967146530979095;  // std dev = 0.033, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.0966869363336603;  // std dev = 0.018, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07655326546459539;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16239647061500675;  // std dev = 0.417, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return -0.08454332612146329;  // std dev = 0.107, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07131389507804217;  // std dev = 1.28e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12840301867261744;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | else if ( movie(E, B) )
%   | | then return -0.08234213007535943;  // std dev = 0.072, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0405881907339822;  // std dev = 1.538, 385.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068061
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.451 seconds
Total inference time: 1.629 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069739
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.03 seconds
Parameter learned model CLL: -0.069739


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 195], 'true,false,true': [6.97e-09, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.3e-07, 322, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 195], 'true,false,true,true': [0.0, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 342, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.153, 26, 157], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.902, 337, 38]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.695, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.166, 35, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 353, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.661, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.23e-07, 371, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.595, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.125, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 374, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.527, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.13, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.19e-07, 318, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 195], 'true,true,false': [0.018, 31, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 377, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.417, 0, 195], 'true,true,true,false': [0.107, 35, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.28e-07, 351, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 157], 'true,false,true': [0.072, 34, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.538, 347, 38], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.15020745435129484, 5.2408043398454595e-17], 'true': [5.975846598187509e-15, 4.794144879063176e-17], 'true,false': [4.794144879063176e-17, nan]}, {'': [0.0883706468858349, -8.829843938539256e-17], 'true': [-3.643808901333847e-15, -1.3457248783335231e-17], 'true,false': [-1.3457248783335231e-17, nan], 'true,false,true': [-1.3457248783335231e-17, nan]}, {'': [0.054338946921565975, 0.040596758553129116], 'true': [0.054338946921565975, nan], 'true,true': [0.054338946921565975, nan], 'true,true,true': [0.054338946921565975, nan]}, {'': [0.050541452402000815, -1.3838473961333396e-16], 'true': [0.050541452402000815, nan], 'true,true': [0.0024757710570917097, 0.0007867959366742529], 'true,true,true': [0.0024757710570917097, nan], 'true,true,false': [0.0007867959366742529, nan]}, {'': [0.03557052946422091, 4.069820251995183e-17], 'true': [0.002242197678378014, 0.0006316200852501384], 'true,true': [0.002242197678378014, nan], 'true,true,true': [0.002242197678378014, nan], 'true,false': [0.0006316200852501384, nan]}, {'': [0.022515825005557318, -7.718127978677559e-17], 'true': [0.0018140099604465284, 0.00043132232423325384], 'true,true': [0.0018140099604465284, nan], 'true,false': [0.00043132232423325384, nan]}, {'': [0.017044088844912552, 4.468822237484907e-17], 'true': [0.0014243486884949128, 0.00041156158113623734], 'true,true': [0.0014243486884949128, nan], 'true,false': [0.00041156158113623734, nan]}, {'': [0.01071701290822701, -9.894825895863464e-17], 'true': [0.01071701290822701, nan], 'true,true': [0.0011203402991758055, 0.00032998831380764266]}, {'': [0.008673760808039986, 4.6812822690747343e-17], 'true': [0.008673760808039986, nan], 'true,true': [0.008673760808039986, nan], 'true,true,true': [0.0008923853370652761, 0.0003273283173089249]}, {'': [0.006525557061250973, 0.006143608685463499], 'true': [-4.8086092786312514e-17, 0.00015082992883163192], 'false': [0.006143608685463499, nan], 'false,true': [0.006143608685463499, nan], 'true,false': [0.00015082992883163926, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048746;  // std dev = 2.60e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.1254446385283921;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.11231637819360671;  // std dev = 0.000, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 1.37e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4.00e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.09269127618926053;  // std dev = 1.66e-07, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839678;  // std dev = 1.10e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.07877675473109148;  // std dev = 5.96e-08, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14675192519877855;  // std dev = 0.082, 99.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=87 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633369;  // std dev = 1.13e-07, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.154514419769535;  // std dev = 0.028, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.07475567474743526;  // std dev = 0.047, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442032;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13509277470218772;  // std dev = 0.021, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | else return -0.0682283228986578;  // std dev = 0.040, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13660917223494284;  // std dev = 0.009, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.0681547270586024;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06419184008202604;  // std dev = 1.05e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.791 seconds
Total inference time: 1.756 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06476
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.47 seconds
Refined model CLL: -0.06476


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.742 seconds
Total inference time: 1.756 seconds
AUC ROC: 1.0
Total revision time: 11.742
Best scored revision CLL: -0.06476


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:26:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063645, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.742, 'Inference time': 1.756, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068061, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.451, 'Inference time': 1.629}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048718;  // std dev = 2.95e-07, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4796209073203288;  // std dev = 3.267, 238.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=211 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0471441512373226;  // std dev = 4.440, 502.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46071752203747546;  // std dev = 0.826, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15420877764127477;  // std dev = 0.170, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10770124547898714;  // std dev = 1.93e-07, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3513063994398703;  // std dev = 0.785, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13476672011640076;  // std dev = 0.024, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09777975611570118;  // std dev = 0.000, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2766620837695887;  // std dev = 0.707, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1161536108909655;  // std dev = 0.152, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08948650765086173;  // std dev = 2.60e-07, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2252705949178582;  // std dev = 0.627, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10882677214149639;  // std dev = 0.137, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08245814516908868;  // std dev = 1.88e-07, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18867710208651303;  // std dev = 0.035, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.09940388076721242;  // std dev = 0.017, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07643040920393063;  // std dev = 1.48e-07, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16166245353095313;  // std dev = 0.497, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return -0.09184030429585648;  // std dev = 0.108, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07120692376257079;  // std dev = 1.99e-07, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.127690000386475;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else if ( movie(E, B) )
%   | | then return -0.08557376336916822;  // std dev = 0.075, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04084581779022886;  // std dev = 1.764, 510.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067923
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.469 seconds
Total inference time: 1.889 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069529
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.509 seconds
Parameter learned model CLL: -0.069529


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 260], 'true,false,true': [6.45e-09, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.95e-07, 466, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 260], 'true,false,true,true': [0.0, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 512, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.267, 27, 211], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.44, 453, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.826, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.17, 40, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.93e-07, 450, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.785, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 58, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 483, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.707, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.152, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.6e-07, 511, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.627, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.137, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.88e-07, 488, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 260], 'true,true,false': [0.017, 48, 0], 'true,false': [0.0, 0, 0], 'false': [1.48e-07, 465, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.497, 0, 260], 'true,true,true,false': [0.108, 49, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.99e-07, 459, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 211], 'true,false,true': [0.075, 49, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.764, 461, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11342155009452216, 1.8678430285539115e-16], 'true': [4.372570681600617e-15, 4.2700885562506023e-17], 'true,false': [4.2700885562506023e-17, nan]}, {'': [0.08978739259169462, -1.2836953722228372e-16], 'true': [-4.481884948640632e-15, -2.960594732333751e-17], 'true,false': [-2.960594732333751e-17, nan], 'true,false,true': [-2.960594732333751e-17, nan]}, {'': [0.044836603078216734, 0.039266956783630916], 'true': [0.044836603078216734, nan], 'true,true': [0.044836603078216734, nan], 'true,true,true': [0.044836603078216734, nan]}, {'': [0.04606407779085588, 8.289665250534503e-17], 'true': [0.04606407779085588, nan], 'true,true': [0.0026220245769882065, 0.0007209835159420863], 'true,true,true': [0.0026220245769882065, nan], 'true,true,false': [0.0007209835159420863, nan]}, {'': [0.03727848454626483, -1.0665496551264444e-16], 'true': [0.002370817709359175, 0.000586788848122665], 'true,true': [0.002370817709359175, nan], 'true,true,true': [0.002370817709359175, nan], 'true,false': [0.000586788848122665, nan]}, {'': [0.020205496723846972, 1.3209698610021431e-16], 'true': [0.0019206942519779237, 0.0005524814290404105], 'true,true': [0.0019206942519779237, nan], 'true,false': [0.0005524814290404105, nan]}, {'': [0.016225793853691294, 7.280150981148567e-17], 'true': [0.0015112740900362152, 0.00038221233330952705], 'true,true': [0.0015112740900362152, nan], 'true,false': [0.00038221233330952705, nan]}, {'': [0.011971134525330994, 4.679649738204961e-17], 'true': [0.011971134525330994, nan], 'true,true': [0.001191130200745949, 0.00030578014504166934]}, {'': [0.009412207098223112, 8.61088010384653e-17], 'true': [0.009412207098223112, nan], 'true,true': [0.009412207098223112, nan], 'true,true,true': [0.0009504543118705266, 0.0002383308984277775]}, {'': [0.006978016720940854, 0.006099534296105616], 'true': [-1.094437863137595e-16, 0.00011627906277028814], 'false': [0.006099534296105616, nan], 'false,true': [0.006099534296105616, nan], 'true,false': [0.00011627906277028928, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048727;  // std dev = 2.70e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1254446385283923;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360604;  // std dev = 0.000, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3511611891809829;  // std dev = 0.173, 133.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=116 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830897;  // std dev = 4.34e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783569;  // std dev = 2.84e-07, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3272363361762769;  // std dev = 0.117, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11189856633766146;  // std dev = 0.160, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926087;  // std dev = 1.63e-07, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2596335548272512;  // std dev = 0.102, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09512973643627597;  // std dev = 0.124, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839679;  // std dev = 1.43e-07, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21291276319036406;  // std dev = 0.089, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09081092477616465;  // std dev = 0.124, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.0787767547310917;  // std dev = 1.98e-07, 527.000 (wgt'ed) examples reached here.  /* #neg=527 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17941252728372922;  // std dev = 0.078, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.08142898697713889;  // std dev = 0.095, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633376;  // std dev = 0.000, 455.000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.11200574475452768;  // std dev = 0.100, 142.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=116 */
%   | | else return 0.1175951842189598;  // std dev = 0.078, 170.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=144 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442035;  // std dev = 0.000, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1393612408421083;  // std dev = 0.061, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else return -0.08215100774871606;  // std dev = 0.105, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.14310528037350667;  // std dev = 0.025, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.0841701695128992;  // std dev = 0.061, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.0641918400820257;  // std dev = 1.85e-07, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064329
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.328 seconds
Total inference time: 1.53 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066409
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.714 seconds
Refined model CLL: -0.066409


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064329
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.02 seconds
Total inference time: 1.53 seconds
AUC ROC: 1.0
Total revision time: 14.02
Best scored revision CLL: -0.066409


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:26:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064329, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.02, 'Inference time': 1.53, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067923, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.469, 'Inference time': 1.889}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.68e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048865;  // std dev = 0.000, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 555.000 (wgt'ed) examples reached here.  /* #neg=555 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4741024099279407;  // std dev = 3.806, 304.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=267 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.054385075132645705;  // std dev = 4.901, 680.000 (wgt'ed) examples reached here.  /* #neg=621 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46117156422976513;  // std dev = 0.913, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15061844087474474;  // std dev = 0.238, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10700735457778875;  // std dev = 2.13e-07, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35159432994608486;  // std dev = 0.869, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13682908549491654;  // std dev = 0.023, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09720370323373125;  // std dev = 1.88e-07, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27684262385543296;  // std dev = 0.783, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11238087535258473;  // std dev = 0.173, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08900119115133032;  // std dev = 0.000, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22538787406862004;  // std dev = 0.695, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09978001539934603;  // std dev = 0.163, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08204405595323783;  // std dev = 4.21e-08, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18875668640904728;  // std dev = 0.034, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.09671096645471187;  // std dev = 0.019, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0760731809949723;  // std dev = 1.37e-07, 569.000 (wgt'ed) examples reached here.  /* #neg=569 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16171868546709023;  // std dev = 0.552, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return -0.08886603889270737;  // std dev = 0.137, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0708957629976796;  // std dev = 1.32e-07, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1281745169009475;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( movie(E, B) )
%   | | then return -0.08509099197556812;  // std dev = 0.095, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04219161431985877;  // std dev = 1.947, 655.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067623
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.399 seconds
Total inference time: 1.761 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069246
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.266 seconds
Parameter learned model CLL: -0.069246


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.77e-08, 0, 326], 'true,false,true': [7.68e-09, 58, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 636, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 326], 'true,false,true,true': [0.0, 56, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 555, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.806, 37, 267], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.901, 621, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.913, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.238, 71, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.13e-07, 592, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.869, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.023, 60, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.88e-07, 636, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.783, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.173, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 623, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.695, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.163, 52, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.21e-08, 637, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 326], 'true,true,false': [0.019, 61, 0], 'true,false': [0.0, 0, 0], 'false': [1.37e-07, 569, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.552, 0, 326], 'true,true,true,false': [0.137, 59, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.32e-07, 590, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 267], 'true,false,true': [0.095, 61, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.947, 596, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12822808159722535, -3.966079735767855e-16], 'true': [3.400143152717044e-15, 6.125368411725002e-17], 'true,false': [6.125368411725002e-17, nan]}, {'': [0.08931164285219659, -1.6003214769371625e-16], 'true': [-5.056623150194578e-15, -3.766828119263924e-17], 'true,false': [-3.766828119263924e-17, nan], 'true,false,true': [-3.766828119263924e-17, nan]}, {'': [0.04765475212468937, 0.03532369962653634], 'true': [0.04765475212468937, nan], 'true,true': [0.04765475212468937, nan], 'true,true,true': [0.04765475212468937, nan]}, {'': [0.057209651698742627, 7.651537061605808e-17], 'true': [0.057209651698742627, nan], 'true,true': [0.002557469487850717, 0.0007988092761602618], 'true,true,true': [0.002557469487850717, nan], 'true,true,false': [0.0007988092761602618, nan]}, {'': [0.033356634393560305, 5.586027796856134e-17], 'true': [0.0023186018966425857, 0.0005206444398294948], 'true,true': [0.0023186018966425857, nan], 'true,true,true': [0.0023186018966425857, nan], 'true,false': [0.0005206444398294948, nan]}, {'': [0.019177256400701295, -3.56411885914978e-17], 'true': [0.0018815287531264253, 0.0005960710313756957], 'true,true': [0.0018815287531264253, nan], 'true,false': [0.0005960710313756957, nan]}, {'': [0.013893154409972132, 2.788629261224883e-18], 'true': [0.001482080458702728, 0.0005123242600708366], 'true,true': [0.001482080458702728, nan], 'true,false': [0.0005123242600708366, nan]}, {'': [0.011864728746471754, 3.2779871377333266e-17], 'true': [0.011864728746471754, nan], 'true,true': [0.0011690117663006455, 0.00037862259305390623]}, {'': [0.008987266880936467, 2.9355049464665155e-17], 'true': [0.008987266880936467, nan], 'true,true': [0.008987266880936467, nan], 'true,true,true': [0.0009333250739102717, 0.0003187819977104431]}, {'': [0.006912784315731103, 0.0057901072236828215], 'true': [-1.0644834992660677e-16, 0.00014677961433270164], 'false': [0.0057901072236828215, nan], 'false,true': [0.0057901072236828215, nan], 'true,false': [0.00014677961433270164, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.1418510649004883;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1254446385283923;  // std dev = 0.000, 589.000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.11231637819360571;  // std dev = 0.000, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1015963294878362;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878351;  // std dev = 4.37e-07, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.09269127618926115;  // std dev = 8.43e-08, 558.000 (wgt'ed) examples reached here.  /* #neg=558 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.08518475138839679;  // std dev = 1.49e-07, 553.000 (wgt'ed) examples reached here.  /* #neg=553 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109205;  // std dev = 1.21e-07, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333682;  // std dev = 1.85e-07, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420358;  // std dev = 0.000, 568.000 (wgt'ed) examples reached here.  /* #neg=568 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801129;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080114;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.0641918400820262;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06419184008202548;  // std dev = 2.43e-07, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.634 seconds
Total inference time: 1.537 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.014 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.313 seconds
Total inference time: 1.537 seconds
AUC ROC: 1.0
Total revision time: 16.313
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:27:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.313, 'Inference time': 1.537, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067623, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.399, 'Inference time': 1.761}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4568558574928572;  // std dev = 1.849, 61.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05020634889687229;  // std dev = 2.203, 129.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4652874821394968;  // std dev = 0.394, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16283254075342457;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10740731644291494;  // std dev = 5.58e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3543845202849605;  // std dev = 0.375, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13561383711680336;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09753581434455229;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2786998190944533;  // std dev = 0.338, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1143743354504091;  // std dev = 0.087, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08928104187689907;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22665985093462704;  // std dev = 0.299, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10504880724043487;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08228287270489155;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18966168210532786;  // std dev = 0.033, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.10111169917826031;  // std dev = 0.013, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07627923317172508;  // std dev = 4.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16238621595220454;  // std dev = 0.237, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.08724354229544172;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07107526509614635;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12880594532796927;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else if ( movie(E, B) )
%   | | then return -0.08742929049891034;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.040249573531330046;  // std dev = 0.866, 122.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068075
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.251 seconds
Total inference time: 1.831 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069413
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.781 seconds
Parameter learned model CLL: -0.069413


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 64], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [8.43e-08, 0, 64], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.849, 9, 52], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.203, 117, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.394, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.057, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 114, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.375, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.02, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 105, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.338, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.087, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 99, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.299, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.064, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 118, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 64], 'true,true,false': [0.013, 15, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.237, 0, 64], 'true,true,true,false': [0.054, 11, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 125, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 52], 'true,false,true': [0.022, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.866, 110, 12], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0987654320987646, 6.990293118010245e-17], 'true': [-8.881784197001252e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.07050730987310416, -5.742532885992189e-18], 'true': [1.1102230246251565e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05606948663244133, 0.03761214345760104], 'true': [0.05606948663244133, nan], 'true,true': [0.05606948663244133, nan], 'true,true,true': [0.05606948663244133, nan]}, {'': [0.065103854731245, 2.7268635692547703e-17], 'true': [0.065103854731245, nan], 'true,true': [0.002421666524091204, 0.00020479703265801827], 'true,true,true': [0.002421666524091204, nan], 'true,true,false': [0.00020479703265801827, nan]}, {'': [0.0319848748879175, -2.6433881538694202e-17], 'true': [0.0021977181288442837, 0.0004080090734047061], 'true,true': [0.0021977181288442837, nan], 'true,true,true': [0.0021977181288442837, nan], 'true,false': [0.0004080090734047061, nan]}, {'': [0.026241139006379744, -4.485749594445077e-18], 'true': [0.0017806029971549203, 0.0004774502663517713], 'true,true': [0.0017806029971549203, nan], 'true,false': [0.0004774502663517713, nan]}, {'': [0.01501908304209935, -1.3172137580298468e-17], 'true': [0.0013995610598965397, 0.0003671306095297104], 'true,true': [0.0013995610598965397, nan], 'true,false': [0.0003671306095297104, nan]}, {'': [0.013932174353705709, 2.41830757839143e-17], 'true': [0.013932174353705709, nan], 'true,true': [0.0011016775464843392, 0.00018010596952314773]}, {'': [0.008586618295222085, -1.2434497875801754e-17], 'true': [0.008586618295222085, nan], 'true,true': [0.008586618295222085, nan], 'true,true,true': [0.0008780239056055093, 0.00026114152359012335]}, {'': [0.0063330126776652874, 0.006149270463699737], 'true': [-2.348548705937831e-17, 4.856222924224246e-05], 'false': [0.006149270463699737, nan], 'false,true': [0.006149270463699737, nan], 'true,false': [4.856222924224246e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.1254446385283913;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.11231637819360621;  // std dev = 8.30e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415831014;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.33554886095102376;  // std dev = 0.189, 38.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3297681054994475;  // std dev = 0.072, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12011638540673983;  // std dev = 0.085, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926096;  // std dev = 4.94e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2613647484238455;  // std dev = 0.063, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10186876511306497;  // std dev = 0.082, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839683;  // std dev = 5.37e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21413594735075048;  // std dev = 0.055, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08667646149674287;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0787767547310916;  // std dev = 6.14e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1803095182828484;  // std dev = 0.048, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.08122110458253293;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15518244270337517;  // std dev = 0.043, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.08195449292800472;  // std dev = 0.058, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5.27e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1366519146587891;  // std dev = 0.034, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.0693741541299555;  // std dev = 0.049, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.13110051518286384;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.06387708471743796;  // std dev = 0.188, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064253
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.079 seconds
Total inference time: 1.623 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065561
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.412 seconds
Refined model CLL: -0.065561


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064253
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.523000000000001 seconds
Total inference time: 1.623 seconds
AUC ROC: 1.0
Total revision time: 7.523000000000001
Best scored revision CLL: -0.065561


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:27:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064253, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.523000000000001, 'Inference time': 1.623, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068075, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.251, 'Inference time': 1.831}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048774;  // std dev = 2.63e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839174;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.45387864887542045;  // std dev = 2.680, 125.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=106 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05880869616009573;  // std dev = 3.071, 287.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46510641832109184;  // std dev = 0.554, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14550842426426405;  // std dev = 0.144, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.106585381860422;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3542426611916157;  // std dev = 0.529, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12021319423621514;  // std dev = 0.027, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09685310359436997;  // std dev = 6.99e-08, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.278594634772497;  // std dev = 0.476, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1171121414832527;  // std dev = 0.099, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08870560807473514;  // std dev = 3.33e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22658167491991846;  // std dev = 0.423, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.100584336637446;  // std dev = 0.101, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08179170049663413;  // std dev = 6.50e-08, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18960237491741996;  // std dev = 0.033, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.10174042143947482;  // std dev = 0.016, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07585536234747671;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16234012909050008;  // std dev = 0.335, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.08944334921352536;  // std dev = 0.071, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07070594527794524;  // std dev = 8.16e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12920920885084225;  // std dev = 8.82e-08, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( movie(E, B) )
%   | | then return -0.08175157427951926;  // std dev = 0.057, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04461289681456686;  // std dev = 1.217, 285.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.107 seconds
Total inference time: 1.793 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068931
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.68 seconds
Parameter learned model CLL: -0.068931


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 129], 'true,false,true': [2.63e-09, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 257, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 129], 'true,false,true,true': [0.0, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 232, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.68, 19, 106], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.071, 264, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.554, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.144, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 215, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.529, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.99e-08, 264, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.476, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.099, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.33e-08, 247, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.423, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.101, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.5e-08, 203, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 129], 'true,true,false': [0.016, 16, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 253, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.335, 0, 129], 'true,true,true,false': [0.071, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 248, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [8.82e-08, 0, 106], 'true,false,true': [0.057, 20, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.217, 262, 23], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12040000000000456, -1.3478193917628359e-16], 'true': [4.40646657835721e-15, 5.28677630773884e-18], 'true,false': [5.28677630773884e-18, nan]}, {'': [0.08595193610080533, -4.785444071660157e-17], 'true': [-1.7625866313428842e-15, -2.64338815386942e-18], 'true,false': [-2.64338815386942e-18, nan], 'true,false,true': [-2.64338815386942e-18, nan]}, {'': [0.05746188080072054, 0.032863087724443844], 'true': [0.05746188080072054, nan], 'true,true': [0.05746188080072054, nan], 'true,true,true': [0.05746188080072054, nan]}, {'': [0.0541669139200031, -4.337615538070379e-17], 'true': [0.0541669139200031, nan], 'true,true': [0.002379958638785141, 0.0008020605335142176], 'true,true,true': [0.002379958638785141, nan], 'true,true,false': [0.0008020605335142176, nan]}, {'': [0.024104136660916414, 1.850371707708594e-17], 'true': [0.002165755530699459, 0.000713518807992506], 'true,true': [0.002165755530699459, nan], 'true,true,true': [0.002165755530699459, nan], 'true,false': [0.000713518807992506, nan]}, {'': [0.0191196923720926, 4.49483005921116e-18], 'true': [0.0017583458342655353, 0.0005122261378678854], 'true,true': [0.0017583458342655353, nan], 'true,false': [0.0005122261378678854, nan]}, {'': [0.01414521233047815, 2.0782499968352683e-17], 'true': [0.001384195335908532, 0.00048198148390734977], 'true,true': [0.001384195335908532, nan], 'true,false': [0.00048198148390734977, nan]}, {'': [0.00933119461355443, -3.8616453030440226e-17], 'true': [0.00933119461355443, nan], 'true,true': [0.0010908417818591748, 0.00025455225986931174]}, {'': [0.007610391593207698, 2.686023446673766e-17], 'true': [0.007610391593207698, nan], 'true,true': [0.007610391593207698, nan], 'true,true,true': [0.0008701584816977999, 0.0002831188709562057]}, {'': [0.005968494098915019, 0.005193221963489157], 'true': [7.331661483373675e-17, 0.0001612595373593942], 'false': [0.005193221963489157, nan], 'false,true': [0.005193221963489157, nan], 'true,false': [0.0001612595373593942, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048838;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839172;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.11231637819360686;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2.49e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926094;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.09269127618926055;  // std dev = 6.32e-08, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839682;  // std dev = 1.75e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839678;  // std dev = 7.30e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2.09e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109148;  // std dev = 7.60e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527814;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333677;  // std dev = 1.02e-07, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367141;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.83e-08, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801112;  // std dev = 4.21e-08, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.06419184008202618;  // std dev = 8.33e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 1.49e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.171 seconds
Total inference time: 1.516 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064275
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.578 seconds
Refined model CLL: -0.064275


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.536 seconds
Total inference time: 1.516 seconds
AUC ROC: 1.0
Total revision time: 9.536
Best scored revision CLL: -0.064275


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:27:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.536, 'Inference time': 1.516, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067645, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.107, 'Inference time': 1.793}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.89e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 2.09e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.49252570122252853;  // std dev = 2.542, 170.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=154 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04620916879361731;  // std dev = 4.008, 404.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4604738814829346;  // std dev = 0.754, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15332421840522625;  // std dev = 0.170, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10779113183241863;  // std dev = 1.74e-07, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35126787780500374;  // std dev = 0.716, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12078837568528246;  // std dev = 0.028, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.097854334888385;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2767166813608052;  // std dev = 0.644, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11453559473000927;  // std dev = 0.138, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08954930824032088;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22535843117675514;  // std dev = 0.571, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10563804329588636;  // std dev = 0.141, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08251170599216065;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18877229939573648;  // std dev = 0.036, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.09602901042872457;  // std dev = 0.021, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07647659808182156;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16175471881627762;  // std dev = 0.452, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.09468756703003636;  // std dev = 0.101, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07124714305611952;  // std dev = 8.16e-08, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12625422351566976;  // std dev = 1.41e-07, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( movie(E, B) )
%   | | then return -0.08655679895303066;  // std dev = 0.067, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.0401942051264484;  // std dev = 1.591, 403.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.688 seconds
Total inference time: 2.133 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.262 seconds
Parameter learned model CLL: -0.069651


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 194], 'true,false,true': [5.89e-09, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.09e-07, 348, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 194], 'true,false,true,true': [0.0, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 351, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.542, 16, 154], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.008, 364, 40]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.754, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.17, 35, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.74e-07, 346, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.716, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.028, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 326, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.644, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.138, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 347, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.571, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.141, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 323, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.036, 0, 194], 'true,true,false': [0.021, 27, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 379, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.452, 0, 194], 'true,true,true,false': [0.101, 39, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 350, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.41e-07, 0, 154], 'true,false,true': [0.067, 28, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.591, 363, 40], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12688519544475782, 1.2505960507271878e-16], 'true': [6.15315358802561e-15, 3.2653618371328135e-17], 'true,false': [3.2653618371328135e-17, nan]}, {'': [0.08480619231536606, -1.1133860531853422e-16], 'true': [-3.516087764586063e-15, -7.162729191130042e-18], 'true,false': [-7.162729191130042e-18, nan], 'true,false,true': [-7.162729191130042e-18, nan]}, {'': [0.03800872114622932, 0.03976848452535173], 'true': [0.03800872114622932, nan], 'true,true': [0.03800872114622932, nan], 'true,true,true': [0.03800872114622932, nan]}, {'': [0.05139275765246376, 8.727764817862503e-17], 'true': [0.05139275765246376, nan], 'true,true': [0.0029334416049887155, 0.0008293047891386931], 'true,true,true': [0.0029334416049887155, nan], 'true,true,false': [0.0008293047891386931, nan]}, {'': [0.03177673237861501, -1.1851460508268543e-16], 'true': [0.002644733845488, 0.0008075805714229914], 'true,true': [0.002644733845488, nan], 'true,true,true': [0.002644733845488, nan], 'true,false': [0.0008075805714229914, nan]}, {'': [0.01926355750165705, -4.351306378934331e-17], 'true': [0.0021385078883404433, 0.0006529398397025775], 'true,true': [0.0021385078883404433, nan], 'true,false': [0.0006529398397025775, nan]}, {'': [0.01649641677254877, -9.21175760370099e-17], 'true': [0.0016803594839222083, 0.0005225760124679343], 'true,true': [0.0016803594839222083, nan], 'true,false': [0.0005225760124679343, nan]}, {'': [0.00991421681621916, -2.812174415937072e-17], 'true': [0.00991421681621916, nan], 'true,true': [0.0013230260693917974, 0.00044131194012299877]}, {'': [0.010087369000459931, 1.9032394707859827e-17], 'true': [0.010087369000459931, nan], 'true,true': [0.010087369000459931, nan], 'true,true,true': [0.0010548381016480023, 0.0002632556823624721]}, {'': [0.0059198755186014055, 0.006279179996827825], 'false': [0.006279179996827825, nan], 'false,true': [0.006279179996827825, nan], 'true': [1.2976632755358972e-16, 0.0001581259381461709], 'true,false': [0.0001581259381461709, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.14185106490048757;  // std dev = 2.13e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1254446385283921;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360679;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.10159632948783634;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 1.53e-07, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.09269127618926055;  // std dev = 1.59e-07, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839679;  // std dev = 1.01e-07, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07877675473109147;  // std dev = 2.98e-08, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527758;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333693;  // std dev = 1.10e-07, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420317;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080108;  // std dev = 8.94e-08, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.0641918400820262;  // std dev = 5.27e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080111;  // std dev = 1.83e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06419184008202591;  // std dev = 1.37e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.755 seconds
Total inference time: 1.456 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.968 seconds
Refined model CLL: -0.064221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.673 seconds
Total inference time: 1.456 seconds
AUC ROC: 1.0
Total revision time: 11.673
Best scored revision CLL: -0.064221


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:27:56
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.673, 'Inference time': 1.456, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068414, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.688, 'Inference time': 2.133}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 6.45e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048743;  // std dev = 2.06e-07, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4837266497355649;  // std dev = 3.154, 233.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=208 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04854891833979702;  // std dev = 4.535, 534.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=51 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4610811592528821;  // std dev = 0.847, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14999745763613884;  // std dev = 0.171, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10756631936871497;  // std dev = 2.33e-07, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3516188681575994;  // std dev = 0.805, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1289234094551494;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09766778937412193;  // std dev = 2.15e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27691262201635924;  // std dev = 0.724, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11712736975234836;  // std dev = 0.170, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08939221042605945;  // std dev = 1.38e-07, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22546918921119724;  // std dev = 0.642, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.103856818543981;  // std dev = 0.151, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0823777119351874;  // std dev = 0.000, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18883600101462983;  // std dev = 0.035, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.10032765055661516;  // std dev = 0.018, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07636103915505286;  // std dev = 6.99e-08, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16179156684610296;  // std dev = 0.509, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return -0.09225838562686105;  // std dev = 0.097, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07114651364154008;  // std dev = 0.000, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12707652798417612;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #pos=208 */
%   | else if ( movie(E, B) )
%   | | then return -0.08465517588946564;  // std dev = 0.085, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04111147470995564;  // std dev = 1.800, 539.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068229
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.134 seconds
Total inference time: 1.757 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069466
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.622 seconds
Parameter learned model CLL: -0.069466


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 259], 'true,false,true': [6.45e-09, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.06e-07, 483, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 259], 'true,false,true,true': [0.0, 48, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 420, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.154, 25, 208], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.535, 483, 51]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.847, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.171, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.33e-07, 485, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.805, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.15e-07, 491, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.724, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.17, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.38e-07, 458, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.642, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.151, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 471, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 259], 'true,true,false': [0.018, 41, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 494, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.509, 0, 259], 'true,true,true,false': [0.097, 35, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 510, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 208], 'true,false,true': [0.085, 47, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.8, 488, 51], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11157591628972523, 8.826617835529194e-17], 'true': [4.499189523731908e-15, 4.0902953538821554e-17], 'true,false': [4.0902953538821554e-17, nan]}, {'': [0.09416584921820832, -1.2476792086263664e-16], 'true': [-4.499189523731908e-15, -3.0068540250264654e-17], 'true,false': [-3.0068540250264654e-17, nan], 'true,false,true': [-3.0068540250264654e-17, nan]}, {'': [0.042700395570070916, 0.03851014816054988], 'true': [0.042700395570070916, nan], 'true,true': [0.042700395570070916, nan], 'true,true,true': [0.042700395570070916, nan]}, {'': [0.04084963755409481, 1.1170903835403637e-16], 'true': [0.04084963755409481, nan], 'true,true': [0.0027674287750780666, 0.0008610615844069897], 'true,true,true': [0.0027674287750780666, nan], 'true,true,false': [0.0008610615844069897, nan]}, {'': [0.03136248114157109, 9.406370229003363e-17], 'true': [0.0025004744323192116, 0.0007408508183570219], 'true,true': [0.0025004744323192116, nan], 'true,true,true': [0.0025004744323192116, nan], 'true,false': [0.0007408508183570219, nan]}, {'': [0.02284939247484613, 4.1693965116927275e-17], 'true': [0.0020243064485373245, 0.0005800163620341548], 'true,true': [0.0020243064485373245, nan], 'true,false': [0.0005800163620341548, nan]}, {'': [0.015108698090017324, -1.3200103902125004e-17], 'true': [0.00159180832070607, 0.0005045744757181324], 'true,true': [0.00159180832070607, nan], 'true,false': [0.0005045744757181324, nan]}, {'': [0.01099398180875522, 9.888626130264552e-18], 'true': [0.01099398180875522, nan], 'true,true': [0.0012539411867478459, 0.00033438142382812854]}, {'': [0.007682090612961959, -6.704876305579376e-17], 'true': [0.007682090612961959, nan], 'true,true': [0.007682090612961959, nan], 'true,true,true': [0.001000129913294301, 0.00027071886178756983]}, {'': [0.006768095576670834, 0.006010992973287664], 'true': [-1.4945309946877107e-17, 0.00015304639565443185], 'false': [0.006010992973287664, nan], 'false,true': [0.006010992973287664, nan], 'true,false': [0.00015304639565443304, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.14185106490048732;  // std dev = 2.56e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.12544463852839227;  // std dev = 0.000, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.11231637819360608;  // std dev = 0.000, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.10159632948783628;  // std dev = 1.83e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783555;  // std dev = 3.15e-07, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.46e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.09269127618926087;  // std dev = 1.58e-07, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.08518475138839679;  // std dev = 1.37e-07, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.07877675473109147;  // std dev = 2.29e-07, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527722;  // std dev = 4.21e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333759;  // std dev = 0.000, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.06842697784420271;  // std dev = 7.45e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420343;  // std dev = 0.000, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 8.94e-08, 208.000 (wgt'ed) examples reached here.  /* #pos=208 */
%   | else return -0.0641918400820262;  // std dev = 5.27e-09, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(B) )
%   | then return -0.06419184008202543;  // std dev = 2.39e-07, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13400703000801137;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.557 seconds
Total inference time: 1.624 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.21 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.523 seconds
Total inference time: 1.624 seconds
AUC ROC: 1.0
Total revision time: 13.523
Best scored revision CLL: -0.064223


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:28:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.523, 'Inference time': 1.624, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068229, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.134, 'Inference time': 1.757}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 7.21e-09, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048832;  // std dev = 0.000, 588.000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 582.000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.46970975982965196;  // std dev = 3.893, 304.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=265 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05360805318398904;  // std dev = 4.898, 671.000 (wgt'ed) examples reached here.  /* #neg=612 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4621679522688426;  // std dev = 0.904, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14310377758966253;  // std dev = 0.215, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10708162697006392;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3522675511374476;  // std dev = 0.861, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12603489990195113;  // std dev = 0.027, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09726539058074948;  // std dev = 0.000, 563.000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2772897435840728;  // std dev = 0.775, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11694478986094785;  // std dev = 0.172, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08905318215847485;  // std dev = 1.79e-07, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2256935643562695;  // std dev = 0.688, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10977105550706821;  // std dev = 0.137, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08208843149609611;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18897384178999066;  // std dev = 0.034, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.09970473621246986;  // std dev = 0.018, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07611147434389268;  // std dev = 0.000, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16187862843280676;  // std dev = 0.546, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return -0.0906036669988316;  // std dev = 0.124, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07092912674111317;  // std dev = 9.42e-08, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12835264826484472;  // std dev = 2.38e-07, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( movie(E, B) )
%   | | then return -0.08286834636720214;  // std dev = 0.078, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04287224657990259;  // std dev = 1.946, 671.000 (wgt'ed) examples reached here.  /* #neg=612 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067936
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.945 seconds
Total inference time: 1.903 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069134
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.415 seconds
Parameter learned model CLL: -0.069134


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.87e-08, 0, 324], 'true,false,true': [7.21e-09, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 588, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 324], 'true,false,true,true': [0.0, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 582, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.893, 39, 265], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.898, 612, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.904, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.215, 51, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 597, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.861, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 563, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.775, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.172, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.79e-07, 630, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.688, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.137, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 617, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 324], 'true,true,false': [0.018, 54, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 571, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.546, 0, 324], 'true,true,true,false': [0.124, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 617, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.38e-07, 0, 265], 'true,false,true': [0.078, 38, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.946, 612, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11410992675862285, -2.5376526277146434e-16], 'true': [3.333410365294297e-15, 5.437827059388522e-17], 'true,false': [5.437827059388522e-17, nan]}, {'': [0.09082367930922605, -2.2280764480449877e-16], 'true': [-5.000115547941446e-15, -3.895519384649672e-17], 'true,false': [-3.895519384649672e-17, nan], 'true,false,true': [-3.895519384649672e-17, nan]}, {'': [0.04985442486169299, 0.03575187227739154], 'true': [0.04985442486169299, nan], 'true,true': [0.04985442486169299, nan], 'true,true,true': [0.04985442486169299, nan]}, {'': [0.045349049226826824, -4.611981743836496e-17], 'true': [0.045349049226826824, nan], 'true,true': [0.002520223804339095, 0.0009083167346827433], 'true,true,true': [0.002520223804339095, nan], 'true,true,false': [0.0009083167346827433, nan]}, {'': [0.031159810498047866, -1.1674103562665945e-16], 'true': [0.0022856199401007572, 0.0007394707339986702], 'true,true': [0.0022856199401007572, nan], 'true,true,true': [0.0022856199401007572, nan], 'true,false': [0.0007394707339986702, nan]}, {'': [0.020450218830836725, 5.075305255429287e-17], 'true': [0.001854185007017725, 0.0005603837472775027], 'true,true': [0.001854185007017725, nan], 'true,false': [0.0005603837472775027, nan]}, {'': [0.014160034329694432, -2.159266822609705e-17], 'true': [0.00145985732985745, 0.0003838204701849008], 'true,true': [0.00145985732985745, nan], 'true,false': [0.0003838204701849008, nan]}, {'': [0.01123620032013068, -7.777394218039626e-19], 'true': [0.01123620032013068, nan], 'true,true': [0.0011509610692748086, 0.00031736034167423116]}, {'': [0.008734215325562022, 1.4395112150731365e-17], 'true': [0.008734215325562022, nan], 'true,true': [0.008734215325562022, nan], 'true,true,true': [0.000918551154248766, 0.0002792017576087451]}, {'': [0.004913339318546657, 0.005643621802274069], 'false': [0.005643621802274069, nan], 'false,true': [0.005643621802274069, nan], 'true': [2.1450346739927553e-16, 0.0001583013863808377], 'true,false': [0.00015830138638083189, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1418510649004882;  // std dev = 0.000, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.12544463852839233;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360592;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.32624151142931684;  // std dev = 0.198, 182.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=150 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830947;  // std dev = 3.95e-07, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783505;  // std dev = 4.45e-07, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33006401800267526;  // std dev = 0.181, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11362928349597207;  // std dev = 0.147, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.09269127618926137;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2615713659731588;  // std dev = 0.158, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09768481292753459;  // std dev = 0.147, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839678;  // std dev = 1.46e-07, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2142844645716323;  // std dev = 0.138, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09086121357550735;  // std dev = 0.137, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109202;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18042001133782798;  // std dev = 0.121, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.0867200851978988;  // std dev = 0.127, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.073246225763337;  // std dev = 1.25e-07, 569.000 (wgt'ed) examples reached here.  /* #neg=569 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15526728953518523;  // std dev = 0.108, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07699207113983719;  // std dev = 0.103, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442036;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1351399508959698;  // std dev = 0.085, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.07190997247972798;  // std dev = 0.105, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( actor(B) )
%   | then return -0.06419184008202526;  // std dev = 2.47e-07, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13974584444305252;  // std dev = 0.032, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.06419184008202612;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06781761445541928;  // std dev = 0.056, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063634
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.996 seconds
Total inference time: 1.538 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065042
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.787 seconds
Refined model CLL: -0.065042


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063634
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.143 seconds
Total inference time: 1.538 seconds
AUC ROC: 1.0
Total revision time: 16.143
Best scored revision CLL: -0.065042


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:28:33
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063634, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.143, 'Inference time': 1.538, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067936, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.945, 'Inference time': 1.903}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5076748071077205;  // std dev = 1.114, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10386469699183548;  // std dev = 0.663, 79.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=1 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43294781970050594;  // std dev = 0.150, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17370105265908375;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10237035426713706;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33141880227198484;  // std dev = 0.144, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.15016315908899977;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09333898637260427;  // std dev = 3.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2626121286575138;  // std dev = 0.131, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1319890794575871;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08573418316595906;  // std dev = 2.11e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2150948202203166;  // std dev = 0.118, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11758778108021259;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07924833765111866;  // std dev = 3.65e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18106443997975763;  // std dev = 0.017, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.10592465898260273;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07365516677523855;  // std dev = 2.47e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15579067253400164;  // std dev = 0.096, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.08797378441540434;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06878481158837042;  // std dev = 2.11e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13421125607135811;  // std dev = 1.49e-08, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( movie(E, B) )
%   | | then return -0.0889145891038084;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.060783529149731716;  // std dev = 0.285, 77.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068801
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.818 seconds
Total inference time: 1.925 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065017
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.433 seconds
Parameter learned model CLL: -0.065017


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [3.94e-08, 0, 40], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 40], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 91, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.114, 3, 39], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.663, 78, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.15, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.144, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 64, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.131, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 85, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.118, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.65e-08, 83, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.017, 0, 40], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [2.47e-08, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.096, 0, 40], 'true,true,true,false': [0.037, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 75, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [1.49e-08, 0, 39], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.285, 76, 1], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0826446280991747, 7.401486830834377e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.09048810479413706, -1.4640303621430636e-17], 'true': [-8.881784197001252e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.02956838998856551, 0.0055716113806365585], 'true': [0.02956838998856551, nan], 'true,true': [0.02956838998856551, nan], 'true,true,true': [0.02956838998856551, nan]}, {'': [0.02440639304050221, -1.070094481566416e-17], 'true': [0.02440639304050221, nan], 'true,true': [0.0005608594253890375, 0.0], 'true,true,true': [0.0005608594253890375, nan], 'true,true,false': [0.0, nan]}, {'': [0.0060225669523567464, 2.42861286636753e-17], 'true': [0.0005165168454756008, 0.0], 'true,true': [0.0005165168454756008, nan], 'true,true,true': [0.0005165168454756008, nan], 'true,false': [0.0, nan]}, {'': [0.0041251884110570045, 5.224578939412501e-18], 'true': [0.00043051047631155194, 0.0], 'true,true': [0.00043051047631155194, nan], 'true,false': [0.0, nan]}, {'': [0.014325314705971464, 1.6051417223496238e-17], 'true': [0.0003483300463971606, -3.96508223080413e-18], 'true,true': [0.0003483300463971606, nan], 'true,false': [-3.96508223080413e-18, nan]}, {'': [0.004003189457825253, 7.93016446160826e-18], 'true': [0.004003189457825253, nan], 'true,true': [0.00028131355341997065, 0.0]}, {'': [0.006103263986036929, 5.921189464667502e-18], 'true': [0.006103263986036929, nan], 'true,true': [0.006103263986036929, nan], 'true,true,true': [0.00022913264009531698, 0.00027754988971297884]}, {'': [0.001213512855387608, 0.0010539441153042993], 'true': [5.693451408334136e-18, 0.0], 'false': [0.0010539441153042993, nan], 'false,true': [0.0010539441153042993, nan], 'true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839155;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 5.16e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.3958840044230538;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5.05e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3234317626395661;  // std dev = 0.015, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14384340225572628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926105;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25702876301091016;  // std dev = 0.013, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12771043036484825;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 1.49e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21106915280141844;  // std dev = 0.011, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11483670826357253;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109165;  // std dev = 4.47e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.16064492633598676;  // std dev = 0.064, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.16765774567844863;  // std dev = 0.056, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1252105822214066;  // std dev = 0.084, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0.1340330394345287;  // std dev = 0.075, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13889867508894188;  // std dev = 0.002, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else return -0.1107706560266969;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06346890647187722;  // std dev = 0.225, 88.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078644
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.587 seconds
Total inference time: 1.653 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066831
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.294 seconds
Refined model CLL: -0.066831


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068801
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.132 seconds
Total inference time: 1.925 seconds
AUC ROC: 1.0
Total revision time: 7.132
Best scored revision CLL: -0.065017


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:28:45
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068801, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.132, 'Inference time': 1.925, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068801, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.818, 'Inference time': 1.925}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004881;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839124;  // std dev = 5.58e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5231889516889395;  // std dev = 1.303, 83.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=79 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10335419275817141;  // std dev = 0.938, 149.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4291952489052684;  // std dev = 0.217, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17593906676581786;  // std dev = 1.29e-08, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1024172743639368;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.328871411705281;  // std dev = 0.208, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.15186526203798767;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0933782254206128;  // std dev = 1.49e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26088307227977237;  // std dev = 0.190, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.13332074941496733;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08576745080821445;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21388174729355972;  // std dev = 0.171, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11865470687716423;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07927687850128255;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18018064677229204;  // std dev = 0.017, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10160405382395582;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07367990650100971;  // std dev = 3.16e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15512431667998614;  // std dev = 0.139, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.08794947018562117;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06880645179912244;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13366352443310295;  // std dev = 2.11e-08, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else if ( movie(E, B) )
%   | | then return -0.09001596099182016;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.061070925025247295;  // std dev = 0.406, 167.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068904
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.32 seconds
Total inference time: 2.044 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.52 seconds
Parameter learned model CLL: -0.065001


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 154, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.53e-07, 0, 81], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 146, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.303, 4, 79], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.938, 147, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.217, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [1.29e-08, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 165, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.208, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 146, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.19, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 139, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.171, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 174, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.017, 0, 81], 'true,true,false': [0.015, 9, 0], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.139, 0, 81], 'true,true,true,false': [0.054, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 162, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.11e-08, 0, 79], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.406, 165, 2], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.08180785254387087, -1.2688263138573217e-16], 'true': [-7.894919286223335e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.06424978612186673, 2.1291948417468754e-17], 'true': [7.894919286223335e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02044896325615937, 0.005903576431765344], 'true': [0.02044896325615937, nan], 'true,true': [0.02044896325615937, nan], 'true,true,true': [0.02044896325615937, nan]}, {'': [0.04165949197055237, -3.364312195833808e-17], 'true': [0.04165949197055237, nan], 'true,true': [0.0005812633971415439, 1.3877787807814457e-17], 'true,true,true': [0.0005812633971415439, nan], 'true,true,false': [1.3877787807814457e-17, nan]}, {'': [0.017413112801218832, 1.5208534583906253e-18], 'true': [0.0005343787284640209, 3.96508223080413e-18], 'true,true': [0.0005343787284640209, nan], 'true,true,true': [0.0005343787284640209, nan], 'true,false': [3.96508223080413e-18, nan]}, {'': [0.004089238650483443, -6.3897728035980236e-18], 'true': [0.0004457098424668979, 0.0], 'true,true': [0.0004457098424668979, nan], 'true,false': [0.0, nan]}, {'': [0.0041564964367058295, -1.2761184191093753e-18], 'true': [0.00036113741516074637, 0.0], 'true,true': [0.00036113741516074637, nan], 'true,false': [0.0, nan]}, {'': [0.00743068819419444, 6.530723674265627e-18], 'true': [0.00743068819419444, nan], 'true,true': [0.0002920902722947834, 0.00021571375018594432]}, {'': [0.0055638706936123, -7.538551401775754e-18], 'true': [0.0055638706936123, nan], 'true,true': [0.0055638706936123, nan], 'true,true,true': [0.00023823420293703177, 0.00031821983462171664]}, {'': [0.004177638751535708, 0.0009851579232099926], 'true': [5.6213824031653495e-18, -3.469446951953614e-18], 'false': [0.0009851579232099926, nan], 'false,true': [0.0009851579232099926, nan], 'true,false': [-3.469446951953614e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004882;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839152;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 6.66e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3618946648390805;  // std dev = 0.161, 56.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783644;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3282647857296941;  // std dev = 0.054, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11032254399125958;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926074;  // std dev = 7.15e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2603290367802316;  // std dev = 0.047, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10539423652358204;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839679;  // std dev = 5.77e-08, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21339957307180268;  // std dev = 0.041, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10582125088868977;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109154;  // std dev = 6.99e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1797666494453041;  // std dev = 0.036, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10079232969310731;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633369;  // std dev = 5.67e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15476880145620872;  // std dev = 0.032, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.08506254603198628;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420262;  // std dev = 7.30e-08, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13568889320720376;  // std dev = 0.028, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.07585265439498963;  // std dev = 0.063, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06166570873689743;  // std dev = 0.275, 155.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068853
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.045 seconds
Total inference time: 1.652 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064333
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.728 seconds
Refined model CLL: -0.064333


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068853
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.613 seconds
Total inference time: 1.652 seconds
AUC ROC: 1.0
Total revision time: 8.613
Best scored revision CLL: -0.064333


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:28:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068853, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.613, 'Inference time': 1.652, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068904, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.32, 'Inference time': 2.044}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5133076767500696;  // std dev = 1.828, 127.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=119 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1042720069292707;  // std dev = 1.149, 249.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43154261756015366;  // std dev = 0.262, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.17451101936559582;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10233293234750816;  // std dev = 3.65e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.33046229806871835;  // std dev = 0.251, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.15077966891355546;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0933076886340349;  // std dev = 1.70e-07, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26196157490025535;  // std dev = 0.230, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.13247174379728274;  // std dev = 9.13e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0857076468844567;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21463761936581302;  // std dev = 0.207, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11073181790397658;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07922557067238331;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18073083002867205;  // std dev = 0.017, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10693079012047103;  // std dev = 1.86e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0736354311321218;  // std dev = 4.94e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15553878486300815;  // std dev = 0.168, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return -0.09243975725730175;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0687675478964954;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13402801082677132;  // std dev = 9.66e-08, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | else if ( movie(E, B) )
%   | | then return -0.08622459603891103;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.06083909972677935;  // std dev = 0.495, 240.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068859
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.941 seconds
Total inference time: 2.029 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06502
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.021 seconds
Parameter learned model CLL: -0.06502


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.14e-08, 0, 122], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 232, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 122], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 233, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.828, 8, 119], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.149, 246, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.262, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 226, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.251, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.7e-07, 230, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.23, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [9.13e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 247, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.207, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.047, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 225, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.017, 0, 122], 'true,true,false': [1.86e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.168, 0, 122], 'true,true,true,false': [0.04, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 239, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [9.66e-08, 0, 119], 'true,false,true': [0.023, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.495, 237, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.07001836547291496, -2.029028286383907e-16], 'true': [3.843919718046444e-15, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan]}, {'': [0.036635964283711464, -7.052060413928032e-17], 'true': [-1.3395477805313363e-15, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.02631297197473617, 0.005306376541154937], 'true': [0.02631297197473617, nan], 'true,true': [0.02631297197473617, nan], 'true,true,true': [0.02631297197473617, nan]}, {'': [0.024024807059125436, 5.894989511284017e-18], 'true': [0.024024807059125436, nan], 'true,true': [0.0005627082999180568, -1.2335811384723961e-17], 'true,true,true': [0.0005627082999180568, nan], 'true,true,false': [-1.2335811384723961e-17, nan]}, {'': [0.01530028160616699, 1.2550347234893073e-16], 'true': [0.0005179643625038076, 0.0], 'true,true': [0.0005179643625038076, nan], 'true,true,true': [0.0005179643625038076, nan], 'true,false': [0.0, nan]}, {'': [0.012199271728293362, -5.124106267500723e-17], 'true': [0.00043188221568180577, 7.569702440626067e-18], 'true,true': [0.00043188221568180577, nan], 'true,false': [7.569702440626067e-18, nan]}, {'': [0.005780666120273302, -1.6776703483224588e-17], 'true': [0.00034965677352997835, 0.00031475683271972983], 'true,true': [0.00034965677352997835, nan], 'true,false': [0.00031475683271972983, nan]}, {'': [0.005557632810761051, 9.92882379746075e-18], 'true': [0.005557632810761051, nan], 'true,true': [0.00028256204501133606, 3.0839528461809902e-18]}, {'': [0.004161087243486618, -2.3226423109312897e-17], 'true': [0.004161087243486618, nan], 'true,true': [0.004161087243486618, nan], 'true,true,true': [0.00023027956996093718, 0.00017674616262635453]}, {'': [0.0028675815610360914, 0.001020703910064856], 'true': [7.836868409118753e-17, 6.747075464105714e-05], 'false': [0.001020703910064856, nan], 'false,true': [0.001020703910064856, nan], 'true,false': [6.747075464105627e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048852;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1254446385283918;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360683;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583093;  // std dev = 3.53e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2.19e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09269127618926051;  // std dev = 6.66e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839678;  // std dev = 7.74e-08, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1.93e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109146;  // std dev = 7.88e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452781;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333663;  // std dev = 1.29e-07, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367094;  // std dev = 3.94e-08, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15274385809367116;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420262;  // std dev = 4.94e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801106;  // std dev = 5.16e-08, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.061639923299751084;  // std dev = 0.341, 233.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.174 seconds
Total inference time: 1.673 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063707
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.07 seconds
Refined model CLL: -0.063707


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.206 seconds
Total inference time: 1.673 seconds
AUC ROC: 1.0
Total revision time: 10.206
Best scored revision CLL: -0.063707


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:29:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065895, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.206, 'Inference time': 1.673, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068859, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.941, 'Inference time': 2.029}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 1.03e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283921;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4932564074495489;  // std dev = 2.543, 172.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=156 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09761895773895514;  // std dev = 1.747, 318.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.43898845671339626;  // std dev = 0.380, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16706161274640977;  // std dev = 0.066, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10294570641104958;  // std dev = 1.44e-07, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3356687488149287;  // std dev = 0.364, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14917315264579717;  // std dev = 4.56e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0938199610046438;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.26558747307047326;  // std dev = 0.332, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12671131280709927;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08614182463820536;  // std dev = 1.01e-07, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2172392580629933;  // std dev = 0.298, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11046009204782688;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07959795684851532;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18266418953277722;  // std dev = 0.021, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10150698581786674;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07395814488076269;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15702240181307947;  // std dev = 0.241, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.08974079487679473;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06904977085625681;  // std dev = 1.15e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1337675981652091;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( movie(E, B) )
%   | | then return -0.08627384403927889;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.058551152031931133;  // std dev = 0.740, 324.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069187
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.117 seconds
Total inference time: 1.71 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.547 seconds
Parameter learned model CLL: -0.065419


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [8.02e-08, 0, 163], 'true,false,true': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.03e-07, 301, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 163], 'true,false,true,true': [7.45e-09, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 345, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.543, 16, 156], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.747, 311, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.38, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.066, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.44e-07, 299, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.364, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [4.56e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 295, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.332, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.052, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.01e-07, 303, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.298, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.045, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 310, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.021, 0, 163], 'true,true,false': [0.014, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 338, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.241, 0, 163], 'true,true,true,false': [0.052, 11, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.15e-07, 322, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 156], 'true,false,true': [0.033, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.74, 317, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.06840779958678311, 3.540910643322758e-17], 'true': [6.3643705166242106e-15, -1.2810265668751807e-17], 'true,false': [-1.2810265668751807e-17, nan]}, {'': [0.04883540547241815, -9.782834767711524e-17], 'true': [-2.7898610483832155e-15, 4.270088556250602e-18], 'true,false': [4.270088556250602e-18, nan], 'true,false,true': [4.270088556250602e-18, nan]}, {'': [0.03761214345760356, 0.00959720089349588], 'true': [0.03761214345760356, nan], 'true,true': [0.03761214345760356, nan], 'true,true,true': [0.03761214345760356, nan]}, {'': [0.029177631984612352, 6.980666509348811e-17], 'true': [0.029177631984612352, nan], 'true,true': [0.0008837008038300072, 0.00029363210322889505], 'true,true,true': [0.0008837008038300072, nan], 'true,true,false': [0.00029363210322889505, nan]}, {'': [0.01787144011498022, -8.731245481797842e-17], 'true': [0.0008131710430804615, 1.9825411154020653e-17], 'true,true': [0.0008131710430804615, nan], 'true,true,true': [0.0008131710430804615, nan], 'true,false': [1.9825411154020653e-17, nan]}, {'': [0.010473562714507544, 3.3709742001819936e-17], 'true': [0.0006751809883523776, 0.00022293927745249686], 'true,true': [0.0006751809883523776, nan], 'true,false': [0.00022293927745249686, nan]}, {'': [0.004773273592041077, -7.807374818331746e-17], 'true': [0.0005439274624505733, 0.00029156716767725555], 'true,true': [0.0005439274624505733, nan], 'true,false': [0.00029156716767725555, nan]}, {'': [0.004429244870017612, -1.182486061730936e-17], 'true': [0.004429244870017612, nan], 'true,true': [0.0004375167701146623, 0.00019608022940743256]}, {'': [0.0039545522217345214, 4.13747711040431e-17], 'true': [0.0039545522217345214, nan], 'true,true': [0.0039545522217345214, nan], 'true,true,true': [0.0003551162846571839, 0.00024907214910264606]}, {'': [0.003880908341521744, 0.001690277518324707], 'true': [-9.109522253334617e-17, 7.133251534205409e-05], 'false': [0.001690277518324707, nan], 'false,true': [0.001690277518324707, nan], 'true,false': [7.133251534205131e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048793;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839205;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360678;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.09269127618926046;  // std dev = 1.33e-07, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 1.01e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07877675473109144;  // std dev = 5.58e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.16951035460865313;  // std dev = 0.349, 66.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=64 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527803;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.073246225763337;  // std dev = 9.31e-08, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15372819328731782;  // std dev = 4.21e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.08561816025643877;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.14010552461150705;  // std dev = 0.051, 105.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=99 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0686177333210743;  // std dev = 0.057, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1352136788424652;  // std dev = 0.004, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.0786205459834202;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.06418038211508305;  // std dev = 6.99e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | else if ( female(A) )
%   | | then return 0.13477501701393113;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.06434825475228158;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.453 seconds
Total inference time: 1.604 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064265
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.442 seconds
Refined model CLL: -0.064265


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.559 seconds
Total inference time: 1.604 seconds
AUC ROC: 1.0
Total revision time: 11.559
Best scored revision CLL: -0.064265


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:29:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070497, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.559, 'Inference time': 1.604, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069187, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.117, 'Inference time': 1.71}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048738;  // std dev = 2.86e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839222;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.5134346657597199;  // std dev = 2.331, 207.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09649451054100237;  // std dev = 2.086, 422.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4351619876129584;  // std dev = 0.467, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.16738134170159868;  // std dev = 0.096, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10304959310587673;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3331296597110322;  // std dev = 0.447, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14884133532444627;  // std dev = 0.013, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09390676276332505;  // std dev = 1.63e-07, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2639077134497185;  // std dev = 0.407, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1308529528501166;  // std dev = 0.055, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08621535985568653;  // std dev = 1.62e-07, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2160901181298373;  // std dev = 0.366, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11314435013889311;  // std dev = 0.067, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07966100144513555;  // std dev = 1.26e-07, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18184660196083569;  // std dev = 0.023, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10081107712534261;  // std dev = 0.016, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07401276088696922;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15641940145205557;  // std dev = 0.296, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return -0.09163334704466683;  // std dev = 0.078, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0690975194896249;  // std dev = 6.66e-08, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1326633480080312;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(E, B) )
%   | | then return -0.08897141448229876;  // std dev = 0.025, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.057266779143903705;  // std dev = 0.888, 382.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069314
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.887 seconds
Total inference time: 1.91 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065563
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.801 seconds
Parameter learned model CLL: -0.065563


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 204], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.86e-07, 391, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 204], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 374, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.331, 13, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.086, 412, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.467, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.096, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 400, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.447, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.013, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.63e-07, 379, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.407, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.055, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.62e-07, 396, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.366, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.067, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.26e-07, 392, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.023, 0, 204], 'true,true,false': [0.016, 20, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 360, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.296, 0, 204], 'true,true,true,false': [0.078, 25, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 405, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 194], 'true,false,true': [0.025, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.888, 372, 10], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.07450693937180977, 2.0898315757650005e-16], 'true': [5.712206307091002e-15, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.055642062424638476, -1.2349004765884094e-16], 'true': [-3.692035783851501e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026238849469656017, 0.010313657635880278], 'true': [0.026238849469656017, nan], 'true,true': [0.026238849469656017, nan], 'true,true,true': [0.026238849469656017, nan]}, {'': [0.030534621164587477, -5.10702591327572e-17], 'true': [0.030534621164587477, nan], 'true,true': [0.0010671947116699671, 0.00045984154193146054], 'true,true,true': [0.0010671947116699671, nan], 'true,true,false': [0.00045984154193146054, nan]}, {'': [0.021312387582859037, 7.03043603984268e-17], 'true': [0.0009792409852544032, 0.00017295937829826674], 'true,true': [0.0009792409852544032, nan], 'true,true,true': [0.0009792409852544032, nan], 'true,false': [0.00017295937829826674, nan]}, {'': [0.013937748235658671, 6.616480651806488e-17], 'true': [0.0008130474464374244, 0.0001435497672066389], 'true,true': [0.0008130474464374244, nan], 'true,false': [0.0001435497672066389, nan]}, {'': [0.00832234228228955, 4.0783702945413916e-17], 'true': [0.0006555651476716088, 0.000266435501219807], 'true,true': [0.0006555651476716088, nan], 'true,false': [0.000266435501219807, nan]}, {'': [0.007001594283201054, -2.2204460492503132e-17], 'true': [0.007001594283201054, nan], 'true,true': [0.0005278711101018133, 0.000271721704783387]}, {'': [0.006392410343027743, 1.0965165675310187e-17], 'true': [0.006392410343027743, nan], 'true,true': [0.006392410343027743, nan], 'true,true,true': [0.0004288837980977554, 0.00024188794746126007]}, {'': [0.003460445461894034, 0.002062369427555678], 'true': [0.0, 3.90048722921036e-05], 'false': [0.002062369427555678, nan], 'false,true': [0.002062369427555678, nan], 'true,false': [3.90048722921036e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.1418510649004874;  // std dev = 2.81e-07, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.12544463852839222;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1123163781936063;  // std dev = 0.000, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.39336893701197706;  // std dev = 0.109, 129.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=123 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783605;  // std dev = 1.85e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32389698137600764;  // std dev = 0.037, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11811260951255029;  // std dev = 0.102, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926085;  // std dev = 1.55e-07, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2573462118697103;  // std dev = 0.032, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11008289495302023;  // std dev = 0.100, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21129327216975832;  // std dev = 0.028, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10636361400889423;  // std dev = 0.073, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07877675473109144;  // std dev = 1.03e-07, 410.000 (wgt'ed) examples reached here.  /* #neg=410 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17822261276045723;  // std dev = 0.025, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.09523369247335889;  // std dev = 0.086, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333718;  // std dev = 4.71e-08, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15359803888659485;  // std dev = 0.022, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08332285359935819;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442034;  // std dev = 0.000, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13470320963690796;  // std dev = 0.019, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07674679106072359;  // std dev = 0.055, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(B) )
%   | then return -0.06419184008202568;  // std dev = 1.78e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
%   | else if ( female(A) )
%   | | then return 0.10575013964450226;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.09039597531850815;  // std dev = 0.203, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.864 seconds
Total inference time: 1.609 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064244
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.527 seconds
Refined model CLL: -0.064244


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.079 seconds
Total inference time: 1.609 seconds
AUC ROC: 1.0
Total revision time: 13.079
Best scored revision CLL: -0.064244


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:29:45
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068158, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.079, 'Inference time': 1.609, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069314, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.887, 'Inference time': 1.91}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.88e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4845515927375077;  // std dev = 1.670, 66.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07025761819739275;  // std dev = 1.828, 127.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45128451964848443;  // std dev = 0.366, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15186230268627224;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1055000593025676;  // std dev = 6.83e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34454680789550357;  // std dev = 0.349, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13418223670578733;  // std dev = 0.026, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09595035263191957;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27191161640131584;  // std dev = 0.316, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10907437294254545;  // std dev = 0.108, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08794379224552684;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2218539661126412;  // std dev = 0.282, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10955992885114041;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08114075955798768;  // std dev = 4.94e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1861391353933031;  // std dev = 0.031, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.09008409442334653;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07529310278008139;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.15971788663451614;  // std dev = 0.225, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.08329068974775017;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.070215654487412;  // std dev = 1.83e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1303771880613587;  // std dev = 2.98e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else if ( movie(E, B) )
%   | | then return -0.08560537159487547;  // std dev = 0.048, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04862210158651596;  // std dev = 0.747, 130.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067824
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.158 seconds
Total inference time: 1.607 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067849
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.975 seconds
Parameter learned model CLL: -0.067849


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.16e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 115, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.67, 7, 59], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.828, 119, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.366, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.078, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.83e-08, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.349, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.316, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.108, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 119, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.282, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.059, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.94e-08, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.031, 0, 67], 'true,true,false': [0.022, 13, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 140, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.225, 0, 67], 'true,true,true,false': [0.067, 11, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 125, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.98e-08, 0, 59], 'true,false,true': [0.048, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.747, 122, 8], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.14946460440214057, 2.1840452943445702e-17], 'true': [-9.544603913195376e-16, -1.4802973661668754e-17], 'true,false': [-1.4802973661668754e-17, nan]}, {'': [0.029283916123571885, 5.406303424261632e-17], 'true': [3.1815346377317917e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04226711225532156, 0.026312971974734096], 'true': [0.04226711225532156, nan], 'true,true': [0.04226711225532156, nan], 'true,true,true': [0.04226711225532156, nan]}, {'': [0.0330463612955877, 4.0197730201945323e-17], 'true': [0.0330463612955877, nan], 'true,true': [0.0019969404919991346, 0.0008597830446279431], 'true,true,true': [0.0019969404919991346, nan], 'true,true,false': [0.0008597830446279431, nan]}, {'': [0.0294203663484132, -7.340317518182853e-18], 'true': [0.0018205765087747478, 0.0006671467320782614], 'true,true': [0.0018205765087747478, nan], 'true,true,true': [0.0018205765087747478, nan], 'true,false': [0.0006671467320782614, nan]}, {'': [0.024758063022945153, -4.105026309538394e-17], 'true': [0.001491450817442526, 0.0006812243462217799], 'true,true': [0.001491450817442526, nan], 'true,false': [0.0006812243462217799, nan]}, {'': [0.011571481144973727, 1.9539925233402754e-17], 'true': [0.0011859295932892156, 0.000431057057940722], 'true,true': [0.0011859295932892156, nan], 'true,false': [0.000431057057940722, nan]}, {'': [0.011251397648950811, -2.4583509830985608e-17], 'true': [0.011251397648950811, nan], 'true,true': [0.0009431286611757456, 0.000477989246245948]}, {'': [0.007862718090110169, 2.6645352591003758e-18], 'true': [0.007862718090110169, nan], 'true,true': [0.007862718090110169, nan], 'true,true,true': [0.0007581878847248661, 0.00041060840873623845]}, {'': [0.006933465290186063, 0.004289514587925982], 'true': [1.5053871520341106e-17, 0.00017490447039978993], 'false': [0.004289514587925982, nan], 'false,true': [0.004289514587925982, nan], 'true,false': [0.000174904470399791, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048788;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360621;  // std dev = 8.43e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415831014;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.3628704353534526;  // std dev = 0.159, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.326811083579501;  // std dev = 0.049, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11625829264333691;  // std dev = 0.082, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.0926912761892609;  // std dev = 6.32e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2593394756317822;  // std dev = 0.043, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09628192513722128;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839682;  // std dev = 5.96e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21270292897822707;  // std dev = 0.037, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08825710119767277;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109158;  // std dev = 6.75e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1792573465439039;  // std dev = 0.033, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.10122073434884281;  // std dev = 0.048, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15438353159917376;  // std dev = 0.029, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.08784604867279097;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4.65e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13540222762866522;  // std dev = 0.025, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else return -0.07034485447434272;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1344410977213651;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07474243970161167;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065064
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.973 seconds
Total inference time: 1.2 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065033
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.437 seconds
Refined model CLL: -0.065033


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065064
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.543 seconds
Total inference time: 1.2 seconds
AUC ROC: 1.0
Total revision time: 7.543
Best scored revision CLL: -0.065033


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:29:56
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065064, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.543, 'Inference time': 1.2, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067824, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.158, 'Inference time': 1.607}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048774;  // std dev = 2.63e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.500186038817367;  // std dev = 2.022, 121.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=111 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050642865167029864;  // std dev = 3.051, 249.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.45447916029572544;  // std dev = 0.597, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1554542570893592;  // std dev = 0.125, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10736547436947651;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34701778326381677;  // std dev = 0.568, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14378246910817027;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09750107962157971;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27375989158526903;  // std dev = 0.512, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10992225446134347;  // std dev = 0.094, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08925177954708936;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2232509366859597;  // std dev = 0.455, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.09910493707675351;  // std dev = 0.104, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08225790592848627;  // std dev = 3.65e-08, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1872190914121932;  // std dev = 0.035, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10150385547512776;  // std dev = 0.018, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07625769539171882;  // std dev = 9.42e-08, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1605728408375435;  // std dev = 0.362, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09080400244778175;  // std dev = 0.085, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07105650529364725;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12740416082731262;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else if ( movie(E, B) )
%   | | then return -0.08836950514690152;  // std dev = 0.049, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.043523014601587265;  // std dev = 1.232, 271.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068699
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1 seconds
Total inference time: 1.456 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068902
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.647 seconds
Parameter learned model CLL: -0.068902


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [2.63e-09, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 225, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 253, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.022, 10, 111], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.051, 226, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.597, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.125, 19, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 243, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.568, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.02, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.512, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.094, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 237, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.455, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.104, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.65e-08, 256, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.035, 0, 134], 'true,true,false': [0.018, 22, 0], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 271, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.362, 0, 134], 'true,true,true,false': [0.085, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 111], 'true,false,true': [0.049, 20, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.232, 248, 23], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11712799167534296, -2.289526593004767e-16], 'true': [4.772301956597688e-15, 5.28677630773884e-18], 'true,false': [5.28677630773884e-18, nan]}, {'': [0.08926115588533495, -6.845643946305313e-17], 'true': [-1.908920782639075e-15, -2.413528314402514e-18], 'true,false': [-2.413528314402514e-18, nan], 'true,false,true': [-2.413528314402514e-18, nan]}, {'': [0.033798127103090235, 0.03737472257577739], 'true': [0.033798127103090235, nan], 'true,true': [0.033798127103090235, nan], 'true,true,true': [0.033798127103090235, nan]}, {'': [0.04289576532247095, -9.868649107779169e-17], 'true': [0.04289576532247095, nan], 'true,true': [0.0026624851230994846, 0.0008259039369571631], 'true,true,true': [0.0026624851230994846, nan], 'true,true,false': [0.0008259039369571631, nan]}, {'': [0.024011425813168764, -4.516161456102332e-17], 'true': [0.002405314686940834, 0.00039128729512556785], 'true,true': [0.002405314686940834, nan], 'true,true,true': [0.002405314686940834, nan], 'true,false': [0.00039128729512556785, nan]}, {'': [0.013708389778652774, -3.4665191486186324e-17], 'true': [0.0019541341522485186, 0.0006743982304232138], 'true,true': [0.0019541341522485186, nan], 'true,false': [0.0006743982304232138, nan]}, {'': [0.012723789686993078, 5.204170427930421e-18], 'true': [0.0015430868546071242, 0.0005681253822811933], 'true,true': [0.0015430868546071242, nan], 'true,false': [0.0005681253822811933, nan]}, {'': [0.01119435524337072, 3.27741114280489e-17], 'true': [0.01119435524337072, nan], 'true,true': [0.0012202755996026209, 0.0003406575681129499]}, {'': [0.00853937312925277, -3.763467880085276e-17], 'true': [0.00853937312925277, nan], 'true,true': [0.00853937312925277, nan], 'true,true,true': [0.0009765223618897582, 0.0003251472907784396]}, {'': [0.006041165725208135, 0.005596624212589571], 'true': [-2.0004018461714532e-18, 0.00011949414894812382], 'false': [0.005596624212589571, nan], 'false,true': [0.005596624212589571, nan], 'true,false': [0.00011949414894811966, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048827;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839177;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360683;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.4175135841583106;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.32481538529292714;  // std dev = 0.199, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3312787335447095;  // std dev = 0.119, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10216225769201245;  // std dev = 0.075, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.09269127618926054;  // std dev = 6.66e-08, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26239870827751194;  // std dev = 0.104, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11199245112622588;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839678;  // std dev = 8.02e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21486678833359732;  // std dev = 0.090, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09191967506198956;  // std dev = 0.071, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.0787767547310915;  // std dev = 7.60e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1808455833480305;  // std dev = 0.079, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.09331221864869134;  // std dev = 0.068, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633367;  // std dev = 1.28e-07, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15558911197182285;  // std dev = 0.070, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07683565863523857;  // std dev = 0.063, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.32e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13699887435471989;  // std dev = 0.057, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else return -0.07405331391112537;  // std dev = 0.066, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13251499462608646;  // std dev = 0.020, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.0761929323150825;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065003
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.334 seconds
Total inference time: 1.136 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06481
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.735 seconds
Refined model CLL: -0.06481


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065003
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.815999999999999 seconds
Total inference time: 1.136 seconds
AUC ROC: 1.0
Total revision time: 9.815999999999999
Best scored revision CLL: -0.06481


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:30:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065003, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.815999999999999, 'Inference time': 1.136, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068699, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.1, 'Inference time': 1.456}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.27e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 2.53e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.47058131738883635;  // std dev = 3.056, 189.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=165 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.052354571997548394;  // std dev = 3.875, 412.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46207548090349376;  // std dev = 0.715, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15461298658330017;  // std dev = 0.143, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10720153780668341;  // std dev = 2.17e-07, 417.000 (wgt'ed) examples reached here.  /* #neg=417 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35220671957069916;  // std dev = 0.680, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13422914558265414;  // std dev = 0.024, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09736496898723693;  // std dev = 1.81e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2772501877771417;  // std dev = 0.613, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11308056319330284;  // std dev = 0.129, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08913709803973985;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22566695533594924;  // std dev = 0.544, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1095052994724329;  // std dev = 0.105, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08216004808205125;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18895517463940245;  // std dev = 0.034, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09378685353549114;  // std dev = 0.020, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07617326931876851;  // std dev = 0.000, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16186501453419486;  // std dev = 0.431, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.08776707780994494;  // std dev = 0.095, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07098296231145355;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12828332112074745;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   | else if ( movie(E, B) )
%   | | then return -0.08405442045208296;  // std dev = 0.064, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04188812144175002;  // std dev = 1.537, 405.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068664
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.477 seconds
Total inference time: 1.483 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068966
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.387 seconds
Parameter learned model CLL: -0.068966


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [5.27e-09, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.53e-07, 376, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 29, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 384, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.056, 24, 165], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.875, 375, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.715, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.143, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.17e-07, 417, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.68, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.81e-07, 378, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.613, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.129, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 344, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.544, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.105, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 387, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 202], 'true,true,false': [0.02, 34, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 405, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.431, 0, 202], 'true,true,true,false': [0.095, 29, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 372, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 165], 'true,false,true': [0.064, 29, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.537, 368, 37], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.11805098984586705, 1.7007671866598143e-16], 'true': [5.768762805181012e-15, 2.7755575615628914e-17], 'true,false': [2.7755575615628914e-17, nan]}, {'': [0.07837085493189452, -1.1796119636642288e-16], 'true': [-3.728590593592605e-15, -5.742532885992189e-18], 'true,false': [-5.742532885992189e-18, nan], 'true,false,true': [-5.742532885992189e-18, nan]}, {'': [0.04942105069314039, 0.03644004934757106], 'true': [0.04942105069314039, nan], 'true,true': [0.04942105069314039, nan], 'true,true,true': [0.04942105069314039, nan]}, {'': [0.046145456962755765, 1.128859861968984e-16], 'true': [0.046145456962755765, nan], 'true,true': [0.0025280954445963013, 0.000655621596903477], 'true,true,true': [0.0025280954445963013, nan], 'true,true,false': [0.000655621596903477, nan]}, {'': [0.027379904869898174, 8.693809928281649e-17], 'true': [0.002291755609243385, 0.0005590256645017341], 'true,true': [0.002291755609243385, nan], 'true,true,true': [0.002291755609243385, nan], 'true,false': [0.0005590256645017341, nan]}, {'': [0.018422903236730303, -1.1618613048402802e-17], 'true': [0.001858669604633302, 0.0005704697890153499], 'true,true': [0.001858669604633302, nan], 'true,false': [0.0005704697890153499, nan]}, {'': [0.01457225138429987, -6.426097093437598e-17], 'true': [0.0014631416333013673, 0.0003458615616070658], 'true,true': [0.0014631416333013673, nan], 'true,false': [0.0003458615616070658, nan]}, {'': [0.01090090136224289, -9.320390824013659e-17], 'true': [0.01090090136224289, nan], 'true,true': [0.001153418862841559, 0.00038658025429564083]}, {'': [0.007684902609262659, -5.730183352904034e-17], 'true': [0.007684902609262659, nan], 'true,true': [0.007684902609262659, nan], 'true,true,true': [0.000920437558238279, 0.00030996259123185834]}, {'': [0.005753218101294168, 0.005831574098645679], 'false': [0.005831574098645679, nan], 'false,true': [0.005831574098645679, nan], 'true': [-6.190334440334207e-17, 0.00013958532274294493], 'true,false': [0.00013958532274294206, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048754;  // std dev = 2.29e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839124;  // std dev = 4.08e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.12544463852839222;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360679;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878361;  // std dev = 1.67e-07, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.0926912761892606;  // std dev = 1.91e-07, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.08518475138839678;  // std dev = 1.15e-07, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109147;  // std dev = 3.65e-08, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527794;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 8.43e-08, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442032;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801106;  // std dev = 1.28e-07, 165.000 (wgt'ed) examples reached here.  /* #pos=165 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080116;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.064191840082026;  // std dev = 1.13e-07, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.922 seconds
Total inference time: 1.292 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.121 seconds
Refined model CLL: -0.06406


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.907 seconds
Total inference time: 1.292 seconds
AUC ROC: 1.0
Total revision time: 11.907
Best scored revision CLL: -0.06406


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:30:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.907, 'Inference time': 1.292, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068664, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.477, 'Inference time': 1.483}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 5.89e-09, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004874;  // std dev = 2.15e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839133;  // std dev = 2.11e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4893898740051869;  // std dev = 3.169, 253.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=228 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06544138604885402;  // std dev = 4.122, 584.000 (wgt'ed) examples reached here.  /* #neg=543 #pos=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4546469690469386;  // std dev = 0.812, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1577308687260007;  // std dev = 0.164, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10595543047821766;  // std dev = 0.000, 508.000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3470494030624145;  // std dev = 0.774, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1315672076112595;  // std dev = 0.027, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09632929774598176;  // std dev = 2.56e-07, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27373086073822606;  // std dev = 0.699, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11601632837705292;  // std dev = 0.165, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0882637049303653;  // std dev = 1.48e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22320027364154063;  // std dev = 0.622, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10605639356046814;  // std dev = 0.153, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08141420642149284;  // std dev = 1.59e-07, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18716338621506495;  // std dev = 0.034, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09763192293323546;  // std dev = 0.020, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07552936759183021;  // std dev = 1.03e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1605186422613884;  // std dev = 0.496, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.08663194210331716;  // std dev = 0.134, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07042173217491425;  // std dev = 1.72e-07, 556.000 (wgt'ed) examples reached here.  /* #neg=556 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12860812982681316;  // std dev = 2.03e-07, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   | else if ( movie(E, B) )
%   | | then return -0.08396815400739262;  // std dev = 0.080, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.045133276928324355;  // std dev = 1.663, 539.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068101
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.52 seconds
Total inference time: 1.445 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.042 seconds
Parameter learned model CLL: -0.068338


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [5.89e-09, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.15e-07, 489, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [2.11e-08, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 479, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.169, 25, 228], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.122, 543, 41]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.812, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.164, 39, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 508, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.774, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.027, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.56e-07, 482, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.699, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.165, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.48e-07, 489, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.622, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.153, 48, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.59e-07, 495, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 269], 'true,true,false': [0.02, 35, 0], 'true,false': [0.0, 0, 0], 'false': [1.03e-07, 486, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.496, 0, 269], 'true,true,true,false': [0.134, 48, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.72e-07, 556, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [2.03e-07, 0, 228], 'true,false,true': [0.08, 38, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.663, 498, 41], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10187629847645842, 9.444842090880677e-17], 'true': [4.226276495227362e-15, 3.489272363107635e-17], 'true,false': [3.489272363107635e-17, nan]}, {'': [0.07588227240127389, -1.3165066346285782e-16], 'true': [-4.5432472323694135e-15, 1.200241107702872e-17], 'true,false': [1.200241107702872e-17, nan], 'true,false,true': [1.200241107702872e-17, nan]}, {'': [0.039698510299904594, 0.029100361816922684], 'true': [0.039698510299904594, nan], 'true,true': [0.039698510299904594, nan], 'true,true,true': [0.039698510299904594, nan]}, {'': [0.04370267198862732, -2.1854783949314106e-16], 'true': [0.04370267198862732, nan], 'true,true': [0.0024538460544214023, 0.0006917925176128944], 'true,true,true': [0.0024538460544214023, nan], 'true,true,false': [0.0006917925176128944, nan]}, {'': [0.026887859003789316, 1.363593424435877e-16], 'true': [0.0022292154403671, 0.0007256581078281853], 'true,true': [0.0022292154403671, nan], 'true,true,true': [0.0022292154403671, nan], 'true,false': [0.0007256581078281853, nan]}, {'': [0.020001172956560807, 4.449973677434165e-17], 'true': [0.0018182314461636716, 0.0006159522322789162], 'true,true': [0.0018182314461636716, nan], 'true,false': [0.0006159522322789162, nan]}, {'': [0.015225770313476274, 5.113754537667388e-17], 'true': [0.0014398665825422431, 0.0004897067647257544], 'true,true': [0.0014398665825422431, nan], 'true,false': [0.0004897067647257544, nan]}, {'': [0.009317769985840593, 2.1930331350620375e-17], 'true': [0.009317769985840593, nan], 'true,true': [0.0011410661306728775, 0.00039134598936255865]}, {'': [0.008681306987101706, 5.3514347230133445e-17], 'true': [0.008681306987101706, nan], 'true,true': [0.008681306987101706, nan], 'true,true,true': [0.0009146228405636049, 0.00037291120983473414]}, {'': [0.005557427390298287, 0.00513232603419224], 'true': [1.8114165138620975e-16, 0.0001688404902921904], 'false': [0.00513232603419224, nan], 'false,true': [0.00513232603419224, nan], 'true,false': [0.00016884049029219477, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048743;  // std dev = 1.98e-07, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.1254446385283923;  // std dev = 0.000, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1123163781936059;  // std dev = 0.000, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.33460019517316153;  // std dev = 0.190, 144.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=121 */
%   | | else return 0.3374223403386184;  // std dev = 0.188, 175.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=148 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783552;  // std dev = 3.25e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3386891300323365;  // std dev = 0.005, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.13664856544791237;  // std dev = 0.001, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926104;  // std dev = 1.19e-07, 484.000 (wgt'ed) examples reached here.  /* #neg=484 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26740466834640414;  // std dev = 0.005, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12130522759880513;  // std dev = 0.000886, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.08518475138839679;  // std dev = 1.44e-07, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21836243605702096;  // std dev = 0.004, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10893131644871702;  // std dev = 0.000934, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109172;  // std dev = 1.95e-07, 514.000 (wgt'ed) examples reached here.  /* #neg=514 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1833824070884098;  // std dev = 0.003, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.09886426903342942;  // std dev = 0.000761, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15770187698647584;  // std dev = 1.19e-07, 121.000 (wgt'ed) examples reached here.  /* #pos=121 */
%   | | | else return -0.09023563055649707;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.1401843213143781;  // std dev = 0.063, 159.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=148 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420353;  // std dev = 0.000, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1389518260948296;  // std dev = 0.013, 228.000 (wgt'ed) examples reached here.  /* #pos=228 */
%   | else return -0.08865953040339299;  // std dev = 0.105, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13816568658752384;  // std dev = 0.004, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.09180204826656657;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06419184008202562;  // std dev = 2.06e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.636 seconds
Total inference time: 1.168 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066214
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.511 seconds
Refined model CLL: -0.066214


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.709 seconds
Total inference time: 1.168 seconds
AUC ROC: 1.0
Total revision time: 14.709
Best scored revision CLL: -0.066214


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:30:43
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0659, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.709, 'Inference time': 1.168, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068101, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.52, 'Inference time': 1.445}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 7.68e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048885;  // std dev = 0.000, 661.000 (wgt'ed) examples reached here.  /* #neg=661 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.46773306728542197;  // std dev = 4.033, 320.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=278 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05908220781326397;  // std dev = 4.920, 740.000 (wgt'ed) examples reached here.  /* #neg=681 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46189071939346;  // std dev = 0.913, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1459087231110474;  // std dev = 0.209, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1065593395325508;  // std dev = 0.000, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35205804873380164;  // std dev = 0.871, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13505168550268407;  // std dev = 0.024, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09683145897355414;  // std dev = 0.000, 638.000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2771372664721719;  // std dev = 0.785, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11609566905805177;  // std dev = 0.163, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08868735479589923;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22558128012214404;  // std dev = 0.697, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10871937989503948;  // std dev = 0.131, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08177611285834509;  // std dev = 2.73e-07, 659.000 (wgt'ed) examples reached here.  /* #neg=659 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18888902932326784;  // std dev = 0.034, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.09605634094109071;  // std dev = 0.019, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07584190512519277;  // std dev = 1.53e-07, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1618128370113931;  // std dev = 0.553, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.0911776486296133;  // std dev = 0.131, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07069421580072519;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12867506731468106;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, B) )
%   | | then return -0.08557239697596589;  // std dev = 0.083, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04141919676952141;  // std dev = 1.947, 641.000 (wgt'ed) examples reached here.  /* #neg=582 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.31 seconds
Total inference time: 1.594 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068721
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.682 seconds
Parameter learned model CLL: -0.068721


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [7.68e-09, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 661, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 612, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [4.033, 42, 278], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.92, 681, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.913, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.209, 50, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 634, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.871, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 61, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 638, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.785, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.163, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 599, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.697, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.131, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.73e-07, 659, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.034, 0, 337], 'true,true,false': [0.019, 53, 0], 'true,false': [0.0, 0, 0], 'false': [1.53e-07, 627, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.553, 0, 337], 'true,true,true,false': [0.131, 68, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 585, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 278], 'true,false,true': [0.083, 58, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.947, 582, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.12062031445231457, -4.676037671038481e-16], 'true': [3.204821834882351e-15, 6.055761952500853e-17], 'true,false': [6.055761952500853e-17, nan]}, {'': [0.08383120972478723, -2.583264031153959e-16], 'true': [-5.144582419153248e-15, -3.561092720495785e-17], 'true,false': [-3.561092720495785e-17, nan], 'true,false,true': [-3.561092720495785e-17, nan]}, {'': [0.05083168736123125, 0.032709663834452424], 'true': [0.05083168736123125, nan], 'true,true': [0.05083168736123125, nan], 'true,true,true': [0.05083168736123125, nan]}, {'': [0.0438308922901954, -2.5356513243804837e-16], 'true': [0.0438308922901954, nan], 'true,true': [0.002476066289279744, 0.0008709603682543055], 'true,true,true': [0.002476066289279744, nan], 'true,true,false': [0.0008709603682543055, nan]}, {'': [0.03278402387336576, -1.3921291844829548e-17], 'true': [0.0022496364694970608, 0.0005645127384619999], 'true,true': [0.0022496364694970608, nan], 'true,true,true': [0.0022496364694970608, nan], 'true,false': [0.0005645127384619999, nan]}, {'': [0.018802294578520506, -9.637996207096517e-17], 'true': [0.001827665510055661, 0.000543499214191546], 'true,true': [0.001827665510055661, nan], 'true,false': [0.000543499214191546, nan]}, {'': [0.013122878408399569, 1.132124237554029e-16], 'true': [0.0014406033749833679, 0.0003738133620089259], 'true,true': [0.0014406033749833679, nan], 'true,false': [0.0003738133620089259, nan]}, {'': [0.01056610751265972, 3.753864134298775e-17], 'true': [0.01056610751265972, nan], 'true,true': [0.0011367687072452038, 0.0003626432487438201]}, {'': [0.009739800105984145, -1.3588370694557473e-16], 'true': [0.009739800105984145, nan], 'true,true': [0.009739800105984145, nan], 'true,true,true': [0.0009078400877961505, 0.0002521508946417316]}, {'': [0.006576435833416909, 0.005913978416112206], 'true': [-1.2779545607196047e-17, 0.00011955252214071742], 'false': [0.005913978416112206, nan], 'false,true': [0.005913978416112206, nan], 'true,false': [0.00011955252214070593, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048882;  // std dev = 0.000, 659.000 (wgt'ed) examples reached here.  /* #neg=659 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1254446385283923;  // std dev = 0.000, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360571;  // std dev = 0.000, 574.000 (wgt'ed) examples reached here.  /* #neg=574 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783501;  // std dev = 4.56e-07, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926164;  // std dev = 0.000, 653.000 (wgt'ed) examples reached here.  /* #neg=653 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.29e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109172;  // std dev = 2.24e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109222;  // std dev = 0.000, 660.000 (wgt'ed) examples reached here.  /* #neg=660 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333681;  // std dev = 1.87e-07, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420367;  // std dev = 0.000, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080114;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080114;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.0641918400820254;  // std dev = 2.42e-07, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.944 seconds
Total inference time: 1.311 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.203 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 17.139 seconds
Total inference time: 1.311 seconds
AUC ROC: 1.0
Total revision time: 17.139
Best scored revision CLL: -0.064062


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:31:04
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 17.139, 'Inference time': 1.311, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068436, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.31, 'Inference time': 1.594}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.02e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4614735408953615;  // std dev = 1.857, 64.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05705986937099465;  // std dev = 2.215, 145.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.46359558229534364;  // std dev = 0.405, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.13970699086889457;  // std dev = 0.100, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10675202839607692;  // std dev = 1.10e-07, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3532231191712328;  // std dev = 0.386, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.14316512523157038;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09699158928739196;  // std dev = 5.58e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27791890332677066;  // std dev = 0.347, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1205555938199705;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08882238121867991;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22612052226635526;  // std dev = 0.308, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11269742482145008;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08189141002478913;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18927522794746274;  // std dev = 0.033, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.0935139782290309;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0759414363205824;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16209940459174896;  // std dev = 0.245, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.08715852771718664;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07078096232861512;  // std dev = 3.16e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12883165905231575;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else if ( movie(E, B) )
%   | | then return -0.08269238745449149;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.03997948074323156;  // std dev = 0.872, 123.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068031
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.242 seconds
Total inference time: 1.61 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068991
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.923 seconds
Parameter learned model CLL: -0.068991


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 117, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [1.46e-07, 0, 67], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.02e-08, 126, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [1.857, 9, 55], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.215, 133, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.405, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.1, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.1e-07, 136, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.386, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.016, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 133, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.347, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.061, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.308, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.041, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 129, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 67], 'true,true,false': [0.019, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.245, 0, 67], 'true,true,true,false': [0.054, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 121, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 55], 'true,false,true': [0.04, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.872, 111, 12], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.08564645726807785, 2.6569439905559303e-17], 'true': [-9.544603913195376e-16, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan]}, {'': [0.06802545256557097, 5.1105504308142124e-17], 'true': [3.1815346377317917e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05387479711332965, 0.03384053958716861], 'true': [0.05387479711332965, nan], 'true,true': [0.05387479711332965, nan], 'true,true,true': [0.05387479711332965, nan]}, {'': [0.04631683274974827, 8.816476960258596e-17], 'true': [0.04631683274974827, nan], 'true,true': [0.0024428368087196033, 0.0009050246263206663], 'true,true,true': [0.0024428368087196033, nan], 'true,true,false': [0.0009050246263206663, nan]}, {'': [0.029810507679408356, 2.337311630789803e-17], 'true': [0.0022198167659823512, 0.0002670150442069863], 'true,true': [0.0022198167659823512, nan], 'true,true,true': [0.0022198167659823512, nan], 'true,false': [0.0002670150442069863, nan]}, {'': [0.018213660631636774, -2.3790493384824782e-17], 'true': [0.0018019260773315046, 0.00041110456450908], 'true,true': [0.0018019260773315046, nan], 'true,false': [0.00041110456450908, nan]}, {'': [0.012229343978772693, -9.467018039439319e-18], 'true': [0.0014188549721819296, 0.00021466560884661132], 'true,true': [0.0014188549721819296, nan], 'true,false': [0.00021466560884661132, nan]}, {'': [0.009377686824934684, -2.1807952269422717e-17], 'true': [0.009377686824934684, nan], 'true,true': [0.0011185456864493259, 0.00036276927203831514]}, {'': [0.007835616589373788, 8.25785720795571e-18], 'true': [0.007835616589373788, nan], 'true,true': [0.007835616589373788, nan], 'true,true,true': [0.0008925631667641568, 0.0002933261199747739]}, {'': [0.006602469537894708, 0.006176152600508401], 'true': [-2.0185873175002845e-18, 0.0001349341669205431], 'false': [0.006176152600508401, nan], 'false,true': [0.006176152600508401, nan], 'true,false': [0.00013493416692054194, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048774;  // std dev = 3.65e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839108;  // std dev = 7.88e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360624;  // std dev = 8.43e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926097;  // std dev = 4.83e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839682;  // std dev = 5.87e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109161;  // std dev = 6.23e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5.48e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 3.65e-08, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else return -0.0641918400820262;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( female(A) )
%   | | then return 0.09797087180982254;  // std dev = 0.076, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.054727481971996214;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063901
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.821 seconds
Total inference time: 1.339 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064381
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.404 seconds
Refined model CLL: -0.064381


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063901
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.39 seconds
Total inference time: 1.339 seconds
AUC ROC: 1.0
Total revision time: 7.39
Best scored revision CLL: -0.064381


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:31:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063901, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.39, 'Inference time': 1.339, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068031, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.242, 'Inference time': 1.61}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4712489167538566;  // std dev = 2.497, 127.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=111 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05325212917969271;  // std dev = 3.057, 260.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4604788188640067;  // std dev = 0.569, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15178416740225448;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10711566345749537;  // std dev = 0.000, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.35105632626117944;  // std dev = 0.542, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13002748555625335;  // std dev = 0.026, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09729365752500344;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2764400264974729;  // std dev = 0.488, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11815610530922675;  // std dev = 0.111, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0890770043301606;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22508377557586137;  // std dev = 0.434, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10535160863899486;  // std dev = 0.092, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08210876307656753;  // std dev = 7.60e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1885217842550791;  // std dev = 0.033, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10258379882751674;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07612901833606987;  // std dev = 6.50e-08, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.1615328534511203;  // std dev = 0.344, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09685760336016987;  // std dev = 0.037, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07094441155566723;  // std dev = 7.30e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12875802886580345;  // std dev = 5.16e-08, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else if ( movie(E, B) )
%   | | then return -0.08209328253692559;  // std dev = 0.056, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.042628620803310036;  // std dev = 1.218, 261.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068018
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.654 seconds
Total inference time: 1.537 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068904
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.592 seconds
Parameter learned model CLL: -0.068904


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 245, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [7.45e-09, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 235, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [2.497, 16, 111], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.057, 237, 23]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.569, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.091, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 258, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.542, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 240, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.488, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.111, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.434, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.092, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 134], 'true,true,false': [0.015, 13, 0], 'true,false': [0.0, 0, 0], 'false': [6.5e-08, 259, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.344, 0, 134], 'true,true,true,false': [0.037, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.3e-08, 237, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [5.16e-08, 0, 111], 'true,false,true': [0.056, 22, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.218, 238, 23], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10876158742364535, -1.740104659004327e-16], 'true': [4.772301956597688e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.061141850684104625, -5.2912756918305335e-17], 'true': [-1.908920782639075e-15, 3.96508223080413e-18], 'true,false': [3.96508223080413e-18, nan], 'true,false,true': [3.96508223080413e-18, nan]}, {'': [0.04908806536463133, 0.03594759853234302], 'true': [0.04908806536463133, nan], 'true,true': [0.04908806536463133, nan], 'true,true,true': [0.04908806536463133, nan]}, {'': [0.028570833247929528, -9.122762838005162e-17], 'true': [0.028570833247929528, nan], 'true,true': [0.0024166707965840605, 0.0007482282167486213], 'true,true,true': [0.0024166707965840605, nan], 'true,true,false': [0.0007482282167486213, nan]}, {'': [0.026173961483916347, -2.0354088784794535e-17], 'true': [0.002192398277639311, 0.0006693043913868953], 'true,true': [0.002192398277639311, nan], 'true,true,true': [0.002192398277639311, nan], 'true,false': [0.0006693043913868953, nan]}, {'': [0.021646395073577136, -2.8242515538710124e-17], 'true': [0.0017806141210221704, 0.0005091254147994925], 'true,true': [0.0017806141210221704, nan], 'true,false': [0.0005091254147994925, nan]}, {'': [0.013159604295322773, 2.4671622769447922e-17], 'true': [0.001403718617388713, 0.000441229108346426], 'true,true': [0.001403718617388713, nan], 'true,false': [0.000441229108346426, nan]}, {'': [0.007861270479597606, 1.6288986461681835e-17], 'true': [0.007861270479597606, nan], 'true,true': [0.0011079785956735026, 0.000223895982109545]}, {'': [0.006849822846727315, 2.2485529612661398e-17], 'true': [0.006849822846727315, nan], 'true,true': [0.006849822846727315, nan], 'true,true,true': [0.0008851214168308297, 9.023274619390416e-05]}, {'': [0.0061608032944947206, 0.00568329548065454], 'true': [2.400482215405744e-17, 0.00014058122210006257], 'false': [0.00568329548065454, nan], 'false,true': [0.00568329548065454, nan], 'true,false': [0.00014058122210005878, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1418510649004883;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839183;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360683;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.09269127618926053;  // std dev = 7.30e-08, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109147;  // std dev = 7.45e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333671;  // std dev = 1.26e-07, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367144;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1340070300080111;  // std dev = 4.71e-08, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else return -0.06419184008202619;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080112;  // std dev = 2.58e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06419184008202625;  // std dev = 2.11e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.173 seconds
Total inference time: 1.185 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.826 seconds
Refined model CLL: -0.064077


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.245000000000001 seconds
Total inference time: 1.185 seconds
AUC ROC: 1.0
Total revision time: 9.245000000000001
Best scored revision CLL: -0.064077


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:31:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.245000000000001, 'Inference time': 1.185, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068018, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.654, 'Inference time': 1.537}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.1418510649004877;  // std dev = 4.93e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1.63e-07, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.46281634358629786;  // std dev = 3.279, 202.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=174 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0668294710930787;  // std dev = 3.411, 411.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=28 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4584231237605762;  // std dev = 0.646, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.15743189931795382;  // std dev = 0.126, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10582401064394037;  // std dev = 1.33e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34949282863061737;  // std dev = 0.617, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.12830895928047972;  // std dev = 0.026, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09621996056335612;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27528951938939494;  // std dev = 0.558, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12318437963172275;  // std dev = 0.111, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08817141935131534;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2242262441043939;  // std dev = 0.497, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1028333804887197;  // std dev = 0.110, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08133533892444335;  // std dev = 5.16e-08, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18786644035858324;  // std dev = 0.031, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.09529585311610324;  // std dev = 0.019, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07546123472284914;  // std dev = 1.48e-07, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16101895282454518;  // std dev = 0.396, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.08947520526053881;  // std dev = 0.094, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07036231264154577;  // std dev = 0.000, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13047609458668316;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( movie(E, B) )
%   | | then return -0.08229411418032108;  // std dev = 0.057, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.048226248702995314;  // std dev = 1.376, 432.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067234
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.93 seconds
Total inference time: 1.608 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068135
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.225 seconds
Parameter learned model CLL: -0.068135


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true': [4.93e-09, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.63e-07, 329, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 350, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.279, 28, 174], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.411, 383, 28]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.646, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.126, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.33e-07, 384, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.617, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 359, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.558, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.111, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 364, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.497, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.11, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.16e-08, 397, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.031, 0, 202], 'true,true,false': [0.019, 27, 0], 'true,false': [0.0, 0, 0], 'false': [1.48e-07, 397, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.396, 0, 202], 'true,true,true,false': [0.094, 33, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 407, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 174], 'true,false,true': [0.057, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.376, 404, 28], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10691871455577107, 8.098891365046735e-17], 'true': [5.768762805181012e-15, 2.3790493384824782e-17], 'true,false': [2.3790493384824782e-17, nan]}, {'': [0.07632782825147176, -9.389314722544181e-17], 'true': [-3.728590593592605e-15, -5.9476233462061954e-18], 'true,false': [-5.9476233462061954e-18, nan], 'true,false,true': [-5.9476233462061954e-18, nan]}, {'': [0.05322858698008839, 0.0283017674582181], 'true': [0.05322858698008839, nan], 'true,true': [0.05322858698008839, nan], 'true,true,true': [0.05322858698008839, nan]}, {'': [0.045609509201522104, 4.625929269271486e-17], 'true': [0.045609509201522104, nan], 'true,true': [0.0020685840711893964, 0.000512187341036415], 'true,true,true': [0.0020685840711893964, nan], 'true,true,false': [0.000512187341036415, nan]}, {'': [0.02743302130194245, -1.0390945300112885e-16], 'true': [0.0018875410055206622, 0.0006655535596124343], 'true,true': [0.0018875410055206622, nan], 'true,true,true': [0.0018875410055206622, nan], 'true,false': [0.0006655535596124343, nan]}, {'': [0.022130015491264365, -6.466134099465198e-17], 'true': [0.0015412062779969204, 0.00033356489114709395], 'true,true': [0.0015412062779969204, nan], 'true,false': [0.00033356489114709395, nan]}, {'': [0.012254271359630064, 6.711675715618075e-18], 'true': [0.0012203684911268077, 0.00044816066685550486], 'true,true': [0.0012203684911268077, nan], 'true,false': [0.00044816066685550486, nan]}, {'': [0.009233640834343991, 5.481201834421428e-17], 'true': [0.009233640834343991, nan], 'true,true': [0.0009666959065800847, 0.00035539317153653]}, {'': [0.008277212456012518, -3.1642720112166627e-17], 'true': [0.008277212456012518, nan], 'true,true': [0.008277212456012518, nan], 'true,true,true': [0.0007744764374216927, 0.0002670541219866873]}, {'': [0.004685123011847753, 0.004379669153354848], 'true': [-7.911934198478127e-17, 0.00014340094643703266], 'false': [0.004379669153354848, nan], 'false,true': [0.004379669153354848, nan], 'true,false': [0.00014340094643702783, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048735;  // std dev = 3.01e-07, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.12544463852839222;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.11231637819360638;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783613;  // std dev = 1.65e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.09269127618926051;  // std dev = 1.91e-07, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2.17e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 1.05e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.0787767547310915;  // std dev = 4.21e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527794;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333756;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420325;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13400703000801104;  // std dev = 1.33e-07, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else return -0.06419184008202619;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1340070300080116;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06419184008202594;  // std dev = 1.28e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.625 seconds
Total inference time: 1.158 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.144 seconds
Refined model CLL: -0.064085


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.924000000000001 seconds
Total inference time: 1.158 seconds
AUC ROC: 1.0
Total revision time: 11.924000000000001
Best scored revision CLL: -0.064085


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:31:43
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.924000000000001, 'Inference time': 1.158, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067234, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.93, 'Inference time': 1.608}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048768;  // std dev = 7.21e-09, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048743;  // std dev = 2.06e-07, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.49227829675196244;  // std dev = 3.113, 254.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=230 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.058292250013823;  // std dev = 3.997, 482.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4527618944883404;  // std dev = 0.790, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.1620094586710856;  // std dev = 0.147, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1066345704057117;  // std dev = 2.21e-07, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.34569453104474723;  // std dev = 0.752, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.13725083952261927;  // std dev = 0.024, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09689398352216445;  // std dev = 0.000, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.27277333836683826;  // std dev = 0.679, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.11942907947055147;  // std dev = 0.140, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08874008117885834;  // std dev = 0.000, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.222507293702066;  // std dev = 0.605, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10548783480942527;  // std dev = 0.130, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08182113806671748;  // std dev = 0.000, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1866454858307499;  // std dev = 0.033, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10114319161885343;  // std dev = 0.017, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07588077567158961;  // std dev = 1.48e-07, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16011958527150205;  // std dev = 0.482, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.08880684109734345;  // std dev = 0.112, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07072809513861976;  // std dev = 2.28e-07, 529.000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12893560948508304;  // std dev = 7.30e-08, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | else if ( movie(E, B) )
%   | | then return -0.08342341441715914;  // std dev = 0.079, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.04630766698398329;  // std dev = 1.625, 537.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067655
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.547 seconds
Total inference time: 1.593 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068596
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.532 seconds
Parameter learned model CLL: -0.068596


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true': [7.21e-09, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.06e-07, 483, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 471, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.113, 24, 230], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.997, 443, 39]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.79, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.147, 41, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.21e-07, 511, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.752, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 512, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.679, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.14, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 464, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.605, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.13, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 506, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 269], 'true,true,false': [0.017, 43, 0], 'true,false': [0.0, 0, 0], 'false': [1.48e-07, 490, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.482, 0, 269], 'true,true,true,false': [0.112, 40, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.28e-07, 529, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [7.3e-08, 0, 230], 'true,false,true': [0.079, 42, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.625, 498, 39], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.1303449230647562, 8.826617835529194e-17], 'true': [4.226276495227362e-15, 5.437827059388522e-17], 'true,false': [5.437827059388522e-17, nan]}, {'': [0.08624729007683692, -1.3200103902125003e-16], 'true': [-4.5432472323694135e-15, -2.7755575615628914e-17], 'true,false': [-2.7755575615628914e-17, nan], 'true,false,true': [-2.7755575615628914e-17, nan]}, {'': [0.03814275349278786, 0.03315237555216575], 'true': [0.03814275349278786, nan], 'true,true': [0.03814275349278786, nan], 'true,true,true': [0.03814275349278786, nan]}, {'': [0.0454569868355674, 9.55965030988393e-17], 'true': [0.0454569868355674, nan], 'true,true': [0.0023191375553531, 0.00052566484292616], 'true,true,true': [0.0023191375553531, nan], 'true,true,false': [0.00052566484292616, nan]}, {'': [0.026709050582209876, -6.938893903907228e-18], 'true': [0.0021038569705893535, 0.0005609937262804418], 'true,true': [0.0021038569705893535, nan], 'true,true,true': [0.0021038569705893535, nan], 'true,false': [0.0005609937262804418, nan]}, {'': [0.01825103781468489, -1.6270509843644534e-17], 'true': [0.0017159459298263114, 0.0005192942896171641], 'true,true': [0.0017159459298263114, nan], 'true,false': [0.0005192942896171641, nan]}, {'': [0.012453768900945994, -9.47858392565351e-17], 'true': [0.001359509830052591, 0.0004697958923999114], 'true,true': [0.001359509830052591, nan], 'true,false': [0.0004697958923999114, nan]}, {'': [0.010809798528476676, 4.4408920985006264e-17], 'true': [0.010809798528476676, nan], 'true,true': [0.001078027482947606, 0.0002822397697400734]}, {'': [0.007776248229022311, 9.822010879481536e-17], 'true': [0.007776248229022311, nan], 'true,true': [0.007776248229022311, nan], 'true,true,true': [0.0008646002633034849, 0.00031399217278108157]}, {'': [0.005911029981842281, 0.004919982871696596], 'true': [2.3169871818264135e-17, 0.0001480088025743612], 'false': [0.004919982871696596, nan], 'false,true': [0.004919982871696596, nan], 'true,false': [0.00014800880257435724, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 503.000 (wgt'ed) examples reached here.  /* #neg=503 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1254446385283913;  // std dev = 2.58e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.12544463852839227;  // std dev = 0.000, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1123163781936061;  // std dev = 0.000, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783559;  // std dev = 3.07e-07, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.09269127618926112;  // std dev = 9.88e-08, 509.000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.37e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.08518475138839678;  // std dev = 1.30e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109161;  // std dev = 9.19e-08, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14410559619763103;  // std dev = 0.085, 129.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=112 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452782;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333763;  // std dev = 0.000, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15706239808301345;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | | else return -0.08365010448606086;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.12775280318543691;  // std dev = 0.070, 177.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=157 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420351;  // std dev = 0.000, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.13708536872166838;  // std dev = 0.003, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | else return -0.07411468715155353;  // std dev = 0.034, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1372912944626819;  // std dev = 0.001, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.07722609326977618;  // std dev = 0.000700, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06419184008202558;  // std dev = 2.18e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064271
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.351 seconds
Total inference time: 1.312 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065117
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.198 seconds
Refined model CLL: -0.065117


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064271
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.628 seconds
Total inference time: 1.312 seconds
AUC ROC: 1.0
Total revision time: 14.628
Best scored revision CLL: -0.065117


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:32:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064271, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.628, 'Inference time': 1.312, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067655, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.547, 'Inference time': 1.593}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;ta(D, A, E).;true;false
0;true,true,true;tempadvisedby(F, B).;false;false
0;true,false;tempadvisedby(G, B), publication(H, G).;true;true
0;true,false,true;ta(I, A, J).;false;false
0;true,false,false;publication(K, A), publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;false;true
1;true,false;publication(D, A).;true;true
1;true,false,true;publication(D, E), professor(E).;false;false
1;true,false,false;tempadvisedby(F, B), ta(G, F, H).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;ta(D, A, E), publication(F, B).;true;true
2;true,true;ta(D, G, E), publication(H, G).;true;true
2;true,true,true;publication(H, A).;false;false
2;true,true,false;ta(I, J, E), tempadvisedby(J, B).;false;false
2;true,false;publication(K, A), publication(K, B).;true;true
2;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
2;true,false,false;publication(N, A), publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(D, A).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;publication(D, E), tempadvisedby(F, E).;false;false
3;true,true,false;publication(D, G), professor(G).;false;false
3;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
3;true,false,true;ta(K, H, L).;false;false
3;true,false,false;publication(M, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;tempadvisedby(D, B), publication(E, D).;true;false
4;true,true,true;publication(E, B).;false;false
4;true,false;publication(F, B), publication(G, A).;true;true
4;true,false,true;tempadvisedby(H, B).;false;false
4;true,false,false;publication(I, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(E, C), ta(F, A, G).;false;false
5;true,true,false;publication(H, A), publication(I, B).;false;false
5;true,false;ta(J, A, K).;true;true
5;true,false,true;ta(J, L, K), publication(M, L).;false;false
5;true,false,false;publication(N, A).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;publication(C, D), ta(E, D, F).;false;true
6;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
6;true,false;projectmember(I, B).;true;true
6;true,false,true;ta(J, A, K).;false;false
6;true,false,false;publication(L, A).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;publication(D, B), ta(E, C, F).;true;true
7;true,true,true;ta(G, A, F).;false;false
7;true,true,false;projectmember(H, B).;false;false
7;true,false;publication(I, B).;true;true
7;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, A), publication(D, B).;true;true
8;true,true;publication(C, E), professor(E).;true;false
8;true,true,true;publication(D, A).;false;false
8;true,false;projectmember(F, B).;true;true
8;true,false,true;tempadvisedby(G, B), ta(H, G, I).;false;false
8;true,false,false;publication(J, B).;false;false
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true;student(A), publication(D, B).;false;true
9;true,false;ta(E, A, F), tempadvisedby(G, B).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;student(A), publication(I, B).;false;false
9;false;tempadvisedby(J, B), publication(K, J).;true;false
9;false,true;ta(L, J, M), publication(K, B).;false;true
9;false,true,false;publication(K, B), student(A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.14185106490048766;  // std dev = 8.12e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048852;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.48859815525229366;  // std dev = 3.583, 320.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=288 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0650382597946836;  // std dev = 4.505, 692.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.4538318719597471;  // std dev = 0.890, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.14804364506558224;  // std dev = 0.222, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1059936242422083;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.3464449668641767;  // std dev = 0.848, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then return -0.1367186957862677;  // std dev = 0.025, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09636106978623378;  // std dev = 2.53e-07, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2732929485358346;  // std dev = 0.767, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.12119478080804834;  // std dev = 0.182, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08829051910362087;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22287712079508806;  // std dev = 0.682, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.10783993813931915;  // std dev = 0.141, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08143711975178997;  // std dev = 1.84e-07, 648.000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18691811118790416;  // std dev = 0.033, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10160192485101448;  // std dev = 0.017, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0755491605883849;  // std dev = 0.000, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, E), director(E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.16032725871012993;  // std dev = 0.544, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.09008298746243501;  // std dev = 0.129, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07043899266296379;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.12899065110691132;  // std dev = 3.13e-07, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( movie(E, B) )
%   | | then return -0.0869255377353531;  // std dev = 0.074, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, G) )
%   | then if ( movie(F, B) )
%   | | then return -0.045554595178234236;  // std dev = 1.822, 658.000 (wgt'ed) examples reached here.  /* #neg=609 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067463
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.607 seconds
Total inference time: 1.61 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068425
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.83 seconds
Parameter learned model CLL: -0.068425


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true': [8.12e-09, 63, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 616, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 58, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 621, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, A)'}, {'true,true,true,true': [3.583, 32, 288], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.505, 643, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,true': 'movie(D, E)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,true,true': [0.89, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.222, 51, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 606, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)'}, {'true,true,true,true': [0.848, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.025, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.53e-07, 622, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.767, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.182, 64, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 622, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.682, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.141, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.84e-07, 648, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.033, 0, 337], 'true,true,false': [0.017, 53, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 640, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, E), director(E)', 'true,true,true': 'movie(D, A)'}, {'true,true,true,true': [0.544, 0, 337], 'true,true,true,false': [0.129, 55, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 586, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true': 'actor(A), movie(D, B)', 'true,false': 'movie(E, B)', 'false': 'movie(F, G)', 'false,true': 'movie(F, B)'}, {'true,true': [3.13e-07, 0, 288], 'true,false,true': [0.074, 48, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.822, 609, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.13269375000000302, -3.4027614780719085e-16], 'true': [3.204821834882351e-15, 6.344131569286608e-17], 'true,false': [6.344131569286608e-17, nan]}, {'': [0.08943198700621043, -2.6602445420969934e-16], 'true': [-5.144582419153248e-15, -4.0197730201945323e-17], 'true,false': [-4.0197730201945323e-17, nan], 'true,false,true': [-4.0197730201945323e-17, nan]}, {'': [0.040122030722945026, 0.02933156669831074], 'true': [0.040122030722945026, nan], 'true,true': [0.040122030722945026, nan], 'true,true,true': [0.040122030722945026, nan]}, {'': [0.043525181496258246, -1.0699178983186327e-16], 'true': [0.043525181496258246, nan], 'true,true': [0.0023502403044463895, 0.0009644750461342593], 'true,true,true': [0.0023502403044463895, nan], 'true,true,false': [0.0009644750461342593, nan]}, {'': [0.029344607689784724, 1.0281164986882478e-16], 'true': [0.002136005970558126, 0.0006279858231007874], 'true,true': [0.002136005970558126, nan], 'true,true,true': [0.002136005970558126, nan], 'true,false': [0.0006279858231007874, nan]}, {'': [0.02242063318700634, -7.568079782010713e-17], 'true': [0.0017435055883690087, 0.0005152625771936946], 'true,true': [0.0017435055883690087, nan], 'true,false': [0.0005152625771936946, nan]}, {'': [0.012446466740669423, 5.208453695772339e-17], 'true': [0.0013817405757261042, 0.0004495291550659919], 'true,true': [0.0013817405757261042, nan], 'true,false': [0.0004495291550659919, nan]}, {'': [0.010761646305630375, -7.979727989493313e-17], 'true': [0.010761646305630375, nan], 'true,true': [0.0010957438027942568, 0.0002910054821079682]}, {'': [0.008361773487502057, -5.607952479335261e-17], 'true': [0.008361773487502057, nan], 'true,true': [0.008361773487502057, nan], 'true,true,true': [0.0008788025393048866, 0.0003046222008738709]}, {'': [0.005725065150544944, 0.005047392479034094], 'true': [3.392348130799089e-16, 0.00011562696452571918], 'false': [0.005047392479034094, nan], 'false,true': [0.005047392479034094, nan], 'true,false': [0.0001156269645257238, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(D, A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;actor(A), movie(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048838;  // std dev = 0.000, 589.000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1254446385283923;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360593;  // std dev = 0.000, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783626;  // std dev = 2.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783505;  // std dev = 4.46e-07, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.09269127618926126;  // std dev = 0.000, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 1.58e-07, 659.000 (wgt'ed) examples reached here.  /* #neg=659 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109205;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333699;  // std dev = 1.28e-07, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15274385809367147;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.12702631903112782;  // std dev = 0.071, 215.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420362;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( actor(A), movie(D, B) )
%   | then return 0.1359213429048519;  // std dev = 0.025, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.07058677819596307;  // std dev = 0.046, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13443741417217217;  // std dev = 0.007, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.0705867781959631;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06419184008202546;  // std dev = 2.41e-07, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063999
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.944 seconds
Total inference time: 1.375 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064658
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.553 seconds
Refined model CLL: -0.064658


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063999
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.934 seconds
Total inference time: 1.375 seconds
AUC ROC: 1.0
Total revision time: 16.934
Best scored revision CLL: -0.064658


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:32:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063999, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.934, 'Inference time': 1.375, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067463, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.607, 'Inference time': 1.61}}


